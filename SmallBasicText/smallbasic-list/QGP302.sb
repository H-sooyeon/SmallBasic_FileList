GraphicsWindow.KeyDown = OnKeyDown
GraphicsWindow.KeyUp = OnKeyUp

Screen_Width = 800
Screen_Height = 600

Object_Radius = 100
Object_Corners = 10
Object_VY = 0
Object_Angle = 0
Limit = 0.3
Gravity = 0.5
Friction = 0.98
AirResistance = 0.98
Object_Rotation = Math.GetRandomNumber(20)-10
Ground = Screen_Height-50
Pi = Math.Pi
Object_Frozen = "False"

GraphicsWindow.Width = Screen_Width
GraphicsWindow.Height = Screen_Height
Shapes.AddLine(0, Ground, Screen_Width, Ground)
GraphicsWindow.PenWidth = 0.3
Shapes.AddLine(Screen_Width/2, 0, Screen_Width/2, Screen_Height)
Shapes.AddLine(0, Screen_Height/2, Screen_Width, Screen_Height/2)

TextWindow.Left = GraphicsWindow.Left + Screen_Width + 15
TextWindow.Top = GraphicsWindow.Top

GraphicsWindow.PenWidth = 1
GraphicsWindow.PenColor = "LightBlue"
Line = Shapes.AddLine(0, Screen_Height, 0, 0)

Object_Initialize()

Object_X = Screen_Width/2
Object_Y = Screen_Height/2

Object_Arrange_Corners()

Draw_Text()

GraphicsWindow.PenColor = "Green"

'Main loop:
While GraphicsWindow.LastKey <> "Escape"
  Time_Start = Clock.ElapsedMilliseconds
  
  Object_VY = Object_VY + Gravity
  Object_Y = Object_Y + Object_VY
  
  Object_Rotation = Object_Rotation * AirResistance
  Object_Angle = Object_Angle + Object_Rotation
  
  Controls()
  Object_Update()
  Object_Draw()
  
  If(Mouse.IsLeftButtonDown)Then
    Object_X = GraphicsWindow.MouseX
    Object_Y = GraphicsWindow.MouseY
    Object_VY = 0
    
    Object_Arrange_Corners()
  EndIf
  
  If(Object_Frozen = "True")Then
    TextWindow.WriteLine("Object_Frozen = True!")
  EndIf
  
  If(Math.Abs(Object_Rotation) >= Limit)Then
    Object_Frozen = "False"
  EndIf
  
  Time_Passed = Clock.ElapsedMilliseconds - Time_Start
  PerfectDelay = 15 - Time_Passed
  If PerfectDelay > 0 Then
    Program.Delay(PerfectDelay)
  EndIf
EndWhile
Program.End() 'This ends the program when escape is pressed

Sub OnKeyDown
  Key = GraphicsWindow.LastKey
  If (Key = "Left") Then
    Left = "True"
  ElseIf (Key = "Right") Then
    Right = "True"
  endif
EndSub

Sub OnKeyUp
  Key = GraphicsWindow.LastKey
  If (Key = "Left") Then
    Left = "False"
  ElseIf (Key = "Right") Then
    Right = "False"
  endif
EndSub

Sub Controls
  If(Left = "True")Then
    Object_Rotation = Object_Rotation - 0.5
  ElseIf(Right = "True")Then
    Object_Rotation = Object_Rotation + 0.5
  EndIf
EndSub


Sub Object_Arrange_Corners
  For i = 1 To Object_Corners
    Corner_X[i] = Object_X + Math.Cos(Object_Angle + Corner_Angle[i]) * Corner_Radius[i]
    Corner_Y[i] = Object_Y + Math.Sin(Object_Angle + Corner_Angle[i]) * Corner_Radius[i]
  EndFor
EndSub



Sub Object_Initialize
  GraphicsWindow.BrushColor = "Red"
  GraphicsWindow.PenWidth = 0
  
  For i = 1 To Object_Corners
    Corner[i] = Shapes.AddEllipse(5,5)
    Corner_Angle[i] = i*(360/Object_Corners)
    Corner_Radius[i] = Math.GetRandomNumber(Object_Radius-Object_Radius/3) + Object_Radius/3
  EndFor
  Corner[Object_Corners+1] = Shapes.AddEllipse(10, 10)
  GraphicsWindow.PenWidth = 1
  
  Xsum = 0
  Ysum = 0
  'Randomly add Corners in the right angle:
  For i = 1 To Object_Corners    
    Corner_X[i] = Object_Radius/2 + Math.Cos(Math.GetRadians(Corner_Angle[i])) * Corner_Radius[i]
    Corner_Y[i] = Object_Radius/2 + Math.Sin(Math.GetRadians(Corner_Angle[i])) * Corner_Radius[i]
    
    Xsum = Xsum + Corner_X[i]
    Ysum = Ysum + Corner_Y[i]
  EndFor
  
  'Get the Centroid of the Corners:
  Object_X = Xsum/Object_Corners
  Object_Y = Ysum/Object_Corners
  
  'Recalculate the radius for each Corner to keep the Objects X and Y as the centroid:
  For i = 1 To Object_Corners 'Is it possiblle that i made a mistake somewhere?!
    Xdist = Object_X - Corner_X[i]
    Ydist = Object_Y - Corner_Y[i]
    Corner_Radius[i] = Math.SquareRoot(Xdist*Xdist + Ydist*Ydist)
  EndFor
EndSub


Sub Object_Update 
  Object_Checkwalls()
  
  'Rotate Object corners
  For i = 1 To Object_Corners
    theta = Math.GetRadians(Object_Angle + Corner_Angle[i])
    Corner_X[i] = Object_X + Math.Cos(theta) * Corner_Radius[i]
    Corner_Y[i] = Object_Y + Math.Sin(theta) * Corner_Radius[i]
    
    Shapes.Move(Corner[i],Corner_X[i]-2.5,Corner_Y[i]-2.5)
  endfor
  
  'UPDATE Object
  Shapes.Move(Corner[Object_Corners+1], Object_X-5, Object_Y-5)
EndSub

Sub Object_Draw  
  Lasti = Object_Corners
  For i = 1 To Object_Corners
    Shapes.Remove(Corner_Line[i])
    Corner_Line[i] = Shapes.AddLine(Corner_X[i], Corner_Y[i], Corner_X[Lasti], Corner_Y[Lasti])
    Lasti = i
  EndFor
EndSub


Sub Object_Checkwalls  
  iLow_Old = iLow
  
  'Find lowest corner - we only want one on the ground at any point in time
  iLow = 1
  For i = 2 To Object_Corners
    If(Corner_Y[i] > Corner_Y[iLow])Then
      iLow = i
    EndIf
  EndFor
  
  'Check this corner for on the ground and find block centre - due to small rounding errors with the trig we need to to check for 'near'
  If (Corner_Y[iLow] > Ground Or Math.Abs(Corner_Y[iLow]-Ground) < 1) Then  'if under ground or distance to it <1 then:
    Corner_Y[iLow] = Ground
    Object_VY = 0
    
    theta = Math.GetRadians(Object_Angle+Corner_Angle[iLow] + 180)
    
    Object_X = Corner_X[iLow] + Math.Cos(theta) * Corner_Radius[iLow]
    Object_Y = Corner_Y[iLow] + Math.Sin(theta) * Corner_Radius[iLow]
    
    If(Object_Frozen = "False")Then
      
      If(iLow_Old = iLow)Then 'If just ONE corner is touching the ground:
        Object_Rotation = Object_Rotation * Friction
        Object_Rotation = Object_Rotation + (Object_X - Corner_X[iLow])*0.002
      ElseIf(iLow_Old <> iLow)Then  'If TWO Corners are touching the ground (this doesn't really happen, but it's almost the same):
        Object_Rotation = Object_Rotation * Friction/2
        TextWindow.WriteLine("TWO CORNERS Touching the Ground!")
        
        If(Math.Abs(Object_Rotation) < Limit)Then
          TextWindow.WriteLine("Object_Rotation < "+Limit+"!")
          Object_Rotation = 0
          Object_Frozen = "True"
        EndIf 
        
      EndIf
    EndIf
    
    Shapes.Move(Line, Corner_X[iLow], 0)
  EndIf
EndSub


Sub Draw_Text
  GraphicsWindow.BrushColor = "DeepSkyBlue"
  GraphicsWindow.DrawText(20, 20, "- Use the mouse to drag and drop the Object")
  GraphicsWindow.DrawText(20, 40, "- Use the arrow keys to rotate the Object")
  GraphicsWindow.DrawText(20, 60, "- The blue line marks the Corner that is touching the Ground")
EndSub
