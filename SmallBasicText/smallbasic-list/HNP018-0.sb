'Sensor Display - Display of live sensor data and pictures designed and programming by codingCat aka Matthew L. Parets
'
'No rights reserved ;-)
'Lines 10,26, and 32 must be uncommented to make use of this program

'Setup and configuration
path = Program.Directory

' The following line could be harmful and has been automatically commented.
' The following line could be harmful and has been automatically commented.
' ' newFileList = File.GetFiles(path)
newSize = Array.GetItemCount(newFileList)
ParseFileList()
oldFileList = newFileList
oldSize = newSize

BuildDisplay()

GraphicsWindow.PenColor = "black"
GraphicsWindow.BrushColor = "white"
GraphicsWindow.FillRectangle(15,110,640,480)
GraphicsWindow.DrawRectangle(15,110,640,480)

'Main program Loop
While "True"
' The following line could be harmful and has been automatically commented.
' The following line could be harmful and has been automatically commented.
' '   newFileList = File.GetFiles(path) 'Get a list of files in the curent folder
  newSize = Array.GetItemCount(newFileList)  
  ParseFileList() 'Check the folder for sensor and picture files
  
  If sensorReadingFile <> "" Then 'If the sensor file is present
' The following line could be harmful and has been automatically commented.
' The following line could be harmful and has been automatically commented.
' '     cont = File.ReadContents(sensorReadingFile)  'Read the file
    parseSensorFile()                            'Pull the info from the file
    SetSensorData()                              'Update the display
    file.DeleteFile(sensorReadingFile)           'Delete the sensor file
  EndIf
  
  If newSize > oldSize then 'Check to see if there are any new picture files
    For i = newsize To 1 Step -1
      found = "False"
      For j = 1 To oldsize
        If newFileList[i] = oldFileList[j] Then
          found = "True"
        EndIf
      EndFor
      If found = "False" Then 'display a new picture if it is found
        fileNam = newFileList[i]
        GraphicsWindow.FillRectangle(15,110,640,480)
        GraphicsWindow.DrawImage(fileNam,15,110)
        oldFileList = newFileList
        oldSize = newSize
        
        displaytxt = filenam
        displaylen = Text.GetLength(displaytxt)
        If displaylen > 100 then
          displaytxt = "..\" + Text.GetSubTextToEnd(displaytxt,100)
        EndIf
        Controls.SetTextBoxText(filebox,displaytxt)
        
        i = 0
      EndIf
    EndFor
  EndIf
  Program.Delay(500) 'wait half a second before trying again to reduce ware on the hard drive
EndWhile

'Search through the list of files read from the folder
'Take note of the presence of the sensor and picture files
Sub ParseFileList
  newfileArray = ""
  newfilecount = 0
  sensorReadingFile = ""
  For i = 1 To newsize
    trailing = text.GetLength(newFileList[i])-3
    trailingStr = Text.GetSubTextToEnd(newFileList[i],trailing)
    If trailingStr = ".jpg" Then
      newfilecount = newfilecount + 1
      newfileArray[newfilecount] = newFileList[i]
    endif
    sensorReadingFilename = "SensorReadings.txt"
    sensorCheckPos = text.GetLength(newFileList[i])-(text.GetLength(sensorReadingFilename) - 1)
    sensorCheckName = Text.GetSubTextToEnd(newFileList[i], sensorCheckPos)
    If sensorCheckName = sensorReadingFilename Then
      sensorReadingFile = newFileList[i]
    EndIf
    
  EndFor
  newFileList = newfileArray
  newSize = array.GetItemCount(newFileList)
EndSub

'pull apart the information from the sensor file and display it in the graphics window
Sub parseSensorFile
  work = cont
  
  If Text.GetSubText(work,1,3) = "(No" Then
    tim = "--------"
    gps = "(No GPS Data)"
    sig = "--------"
    alt = "--------"
    work = Text.GetSubTextToEnd(work, Text.GetIndexOf(work, ":")+2)
    
    pos = Text.GetIndexOf(work, "pres/")
    tm1 = Text.GetSubText(work,1, pos - 4)
    work = Text.GetSubTextToEnd(work, Text.GetIndexOf(work, "pres/")+0)    
  Else
    pos = Text.GetIndexOf(work, "-")
    tim = Text.GetSubText(work, 1, pos-2)
    work = Text.GetSubTextToEnd(work, Text.GetIndexOf(work, "-")+2)
    
    pos = Text.GetIndexOf(work, "-")
    gps = Text.GetSubText(work, 1, pos-2)
    work = Text.GetSubTextToEnd(work, Text.GetIndexOf(work, "-")+1)
    
    srt = Text.GetIndexOf(work, ": ")
    pos = Text.GetIndexOf(work, "-sig")
    alt = Text.GetSubText(work,srt + 2, pos - (srt + 3))
    work = Text.GetSubTextToEnd(work, Text.GetIndexOf(work, "-sig")+1)
    
    srt = Text.GetIndexOf(work, ": ")
    pos = Text.GetIndexOf(work, " - Temp")
    sig = Text.GetSubText(work,srt + 2, pos - (srt + 3))
    work = Text.GetSubTextToEnd(work, Text.GetIndexOf(work, "- Temp")+2)
    
    srt = Text.GetIndexOf(work, ": ")
    pos = Text.GetIndexOf(work, "pres/")
    tm1 = Text.GetSubText(work,srt + 2, pos - (srt + 4))
    work = Text.GetSubTextToEnd(work, Text.GetIndexOf(work, "pres/")+0)
  EndIf
  
  srt = Text.GetIndexOf(work, ": ")
  pos = Text.GetIndexOf(work, "hPa")
  prs = Text.GetSubText(work,srt + 2, pos - (srt + 3))
  work = Text.GetSubTextToEnd(work, Text.GetIndexOf(work, "hPa")+5)
  
  pos = Text.GetIndexOf(work, "-")
  tm2 = Text.GetSubText(work, 1, pos-2)
  work = Text.GetSubTextToEnd(work, Text.GetIndexOf(work, "-")+2)
  
  pos = Text.GetIndexOf(work, ":")
  hum = Text.GetSubTextToEnd(work, pos+2)
  
  sensordisp = tim
  sensordisp = sensordisp + "  " + gps
  sensordisp = sensordisp + "  " + alt
  sensordisp = sensordisp + "  " + sig
  sensordisp = sensordisp + "  " + tm1
  sensordisp = sensordisp + "  " + prs
  sensordisp = sensordisp + "  " + tm2
  sensordisp = sensordisp + "  " + hum
EndSub

'Initialize the graphics window, placing controls where needed
Sub BuildDisplay
  GraphicsWindow.Show()
  GraphicsWindow.Title = "Sensor Display"
  GraphicsWindow.Width = 670
  GraphicsWindow.Height = 600 '670
  GraphicsWindow.Top = 0
  GraphicsWindow.Left = 0
  GraphicsWindow.brushColor = "black"
  GraphicsWindow.BackgroundColor = "lightyellow"
  
  filebox = Controls.AddTextBox(10,75)
  Controls.SetTextBoxText(filebox, "Current Path: " + path)
  Controls.SetSize(filebox,650,25)
  
  databox = Controls.AddMultiLineTextBox(10,600)
  Controls.SetSize(databox,650,55)
  
  GraphicsWindow.DrawText(10,14, "Time:")
  timebox = Controls.AddTextBox(50,10)
  Controls.SetSize(timebox,70,25)
  
  GraphicsWindow.DrawText(140, 14, "GPS:")
  gpsbox = Controls.AddTextBox(175,10)
  Controls.SetSize(gpsbox,185,25)
  
  GraphicsWindow.DrawText(380, 14, "Altitude:")
  altbox = Controls.AddTextBox(440,10)
  Controls.SetSize(altbox,70,25)
  
  GraphicsWindow.DrawText(540, 14, "Signal:")
  sigbox = Controls.AddTextBox(590,10)
  Controls.SetSize(sigbox,70,25)
  
  GraphicsWindow.DrawText(10, 48, "Temperature- 1:")
  tm1box = Controls.AddTextBox(115,44)
  Controls.SetSize(tm1box,57,25)
  
  GraphicsWindow.DrawText(183, 48, "2:")
  tm2box = Controls.AddTextBox(203,44)
  Controls.SetSize(tm2box,57,25)
  
  GraphicsWindow.DrawText(272, 48, "Avg:")
  avgbox = Controls.AddTextBox(302,44)
  Controls.SetSize(avgbox,57,25)
  
  GraphicsWindow.DrawText(380, 48, "Pressure:")
  prsbox = Controls.AddTextBox(440,44)
  Controls.SetSize(prsbox,70,25)
  
  GraphicsWindow.DrawText(525, 48, "Humidity:")
  humbox = Controls.AddTextBox(590,44)
  Controls.SetSize(humbox,70,25)
EndSub

'Set the data read from the file into the graphics windows controls
Sub SetSensorData
  Controls.SetTextBoxText(timebox,tim)
  Controls.SetTextBoxText(gpsbox,gps)
  Controls.SetTextBoxText(altbox,alt)
  Controls.SetTextBoxText(sigbox,sig)
  Controls.SetTextBoxText(tm1box,tm1)
  Controls.SetTextBoxText(tm2box,tm2)
  Controls.SetTextBoxText(avgbox,Math.Round(( (tm1 + tm2) / 2 ) * 100) / 100)
  Controls.SetTextBoxText(prsbox,prs)
  Controls.SetTextBoxText(humbox,Math.round(hum*10000) / 10000)
  Controls.SetTextBoxText(databox,cont + Text.GetCharacter(10) + Text.GetCharacter(10) + sensordisp)
EndSub
  
