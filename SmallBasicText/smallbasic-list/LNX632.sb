' SmallBasic Version 1.2
' Program: gcd (Recursion), lcm   / ggT, kgV
' Changelog: 
' Author: Pappa Lapub
' Website: https://social.msdn.microsoft.com/Forums/en-US/b9ab0f8c-469e-41f5-85d4-f6bd070cdefc/challenge-of-the-month-december-2015
' ImportURL: http://smallbasic.com/program/?
' Extension: LitDev
' Comment: Write a program to find the GCF (Greatest Common Factor) of two numbers
'  http://rosettacode.org/wiki/Greatest_common_divisor#C.23
'  http://rosettacode.org/wiki/Least_common_multiple#C.23
'  http://rosettacode.org/wiki/Prime_decomposition#C.23
' ================================================================================
args = ""
TextWindow.Write("Give me a 'A' (eg: 2310) : ")
a = TextWindow.ReadNumber()
TextWindow.Write("Give me a 'B' (!0, eg: 2592) : ")
b = TextWindow.ReadNumber()

TextWindow.WriteLine(" --> gcd for ("+ a +";"+ b +") = "+ LDCall.Function2("gcdCalc", a,b))
return = ""
TextWindow.WriteLine(" --> lcm for ("+ a +";"+ b +") = "+ LDCall.Function2("lcmCalc", a,b))
return = ""
TextWindow.WriteLine("")

' ggT
Sub gcdCalc   ' b <> 0
  If args[2] = 0 Then   ' to exclude 0
    return = args[1]    ' to exclude 0
  Else                  ' to exclude 0
    'tmp = Math.Remainder(args[1], args[2])              ' Variant1
    'return = LDCall.Function2("gcdCalc", args[2], tmp)  ' Variant1 , or ..
    return = LDCall.Function2("gcdCalc", args[2], Math.Remainder(args[1], args[2])) ' Variant2
  EndIf                 ' to exclude 0
EndSub

' kgV
Sub lcmCalc   ' a,b <> 0
  return = args[1] * args[2] / LDCall.Function2("gcdCalc", args[1], args[2])
EndSub
  
