' Edit by Martin Menze 
'Mail-Adress: martmen@gmx.de
'06/2015
'Small Basic 1.1
'Used extentions from LitDev.


' * EVENT DEFINITIONS
GraphicsWindow.KeyUp = OnKeyUp
Controls.ButtonClicked = OnButtonClicked
LDControls.TreeViewItemChanged = OnTreeItemChanged
LDControls.ListBoxItemChanged = OnListBoxItemChanged 

' * INITIALISATIONS
Init()

' * MAIN Program
While ExitProgram = F
  CheckTreeView()
EndWhile 
Shapes.HideShape(SH[1]) 
Controls.HideControl(MenuView)
GraphicsWindow.Clear()
Program.End()

'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯��¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' **** Subroutines
'______________________________________________________________________________________________________
Sub CheckTreeView
  If OTIC = T Then 
    OTIC = F 
    LastTreeView = LDControls.LastTreeView   
    If LastTreeView = MenuView Then 
      MenuIndex = LDControls.TreeViewGetSelected(LastTreeView)
      If MenuIndex > 1 and MenuIndex < 11 Then 
        Controls.HideControl(MenuView)
        If MenuIndex = 2 Then            'New Database Definition
          NewDatabaseDefination()
        ElseIf MenuIndex = 3 Then        'Open a Database
          OpenDatabase()
        ElseIf MenuIndex = 4 Then        'New Table Definition
          
          NewTableDefinition()
          
        ElseIf MenuIndex = 5 Then        'Modify Table Definition           
          
          ModifyTableDefinition()
          
        ElseIf MenuIndex = 6 Then        'Show Database Table Definition
          ShowDatabaseTableDefinition()
        ElseIf MenuIndex = 7 Then       'Input Data to Database Table  
          InputDataToDatabaseTable() 
        ElseIf MenuIndex = 8 Then       'Show Data from Database Table   
          ShowDataFromDatabaseTable()
        ElseIf MenuIndex = 9 Then       'Customizing
          Customizing()
        ElseIf MenuIndex = 10 Then      'Exit program  
          ExitProgram = T 
        EndIf
        Controls.ShowControl(MenuView)  
      EndIf   
    EndIf 
  EndIf 
EndSub 'CheckTreeView

Sub NewDatabaseDefination
  If DatabaseIsOpen = T Then 
    datafile = ""
    Shapes.HideShape(SH[1]) 
    datafile = LDDialogs.SaveFile("*.*", DatabasePath)
    If datafile <> "" Then 
      CreationDatabase()
      ShowDatabaseShape()
    Else  
      GraphicsWindow.ShowMessage("No Database created.", "DATABASE INFORMATION")
    EndIf 
  Else 
    GraphicsWindow.ShowMessage("Please creation or open a database", "No database open")
  EndIf
EndSub 'NewDatabaseDefination

Sub OpenDatabase
  datafile = ""
  Shapes.HideShape(SH[1]) 
  datafile = LDDialogs.OpenFile("*.*", DatabasePath)
  If datafile <> "" Then 
    database = LDDataBase.ConnectSQLite(datafile)
    ShowDatabaseShape()
  Else  
    GraphicsWindow.ShowMessage("No Database found.", "DATABASE INFORMATION")
  EndIf  
EndSub 'OpenDatabase

Sub NewTableDefinition
  If DatabaseIsOpen = T Then
    InputTableName()
    Controls.ShowControl(EditListView)
    Controls.ShowControl(BT[1])
    Controls.ShowControl(BT[2])  
    Controls.ShowControl(BT[4])
    TableComplete = F 
    While TableComplete = F
      'OldFocusin = Focusin 
      'Focusin = LDFocus.GetFocus()
      
      'If OldFocusin <> Focusin Then 
      '  TextWindow.WriteLine(Focusin)
      'EndIf 
      If OBC = T Then
        OBC = F  
        LastButtonClicked = Controls.LastClickedButton 
        If LastButtonClicked = BT[1] Then 'Save
          CheckAllFieldFilled()
          
          
        ElseIf LastButtonClicked = BT[2] Then 'Back 
          MaxRow = LDControls.ListViewRowCount(EditListView)
          For i = 1 to MaxRow 
            Row = LDControls.ListViewGetRow(EditListView, i)
            For j = 1 to Array.GetItemCount(Row)
              TextWindow.Write(Row[j]+" | ")
            EndFor 
            TextWindow.WriteLine(" ")
          EndFor 
          
          
          
          'Row = LDControls.ListViewRowCount(EditListView)
          'TextWindow.WriteLine(Row)     
          
          
          
          
          
          
          
        ElseIf LastButtonClicked = BT[5] Then 'Delete Row
          
          
          
        EndIf 
      EndIf  
    EndWhile 
  Else 
    GraphicsWindow.ShowMessage("Please creation or open a database", "No database open")
  EndIf
EndSub 'NewTableDefinition

Sub InputTableName
  TableName = ""
  Controls.SetTextBoxText(TB[1], TableName) 
  Shapes.ShowShape(SH[2])
  Controls.ShowControl(TB[1]) 
  LDFocus.SetFocus(TB[1])
  FillListTable() 
  Controls.ShowControl(listView)
  Controls.ShowControl(BT[4])
  DataOK = F 
  While DataOK = F
    OBC = F
    While OBC = F
    EndWhile 
    TableName = Controls.GetTextBoxText(TB[1]) 
    CheckTableName()
  EndWhile 
  Controls.HideControl(TB[1]) 
  Shapes.SetText(SH[2], "Table: " + TableName)
  Controls.HideControl(listView)
  Controls.HideControl(BT[4]) 
EndSub 'InputTableName

Sub FillListTable
  FoundDatabaseDefinition = LDDataBase.Query(database, "SELECT * FROM sqlite_master WHERE type='table'", listView, T)
  MaxFound = Array.GetItemCount(FoundDatabaseDefinition)
  For i = 1 To MaxFound 
    ListTab[i] = FoundDatabaseDefinition[i]["name"]
  EndFor
EndSub 'FillListTable

Sub CheckTableName
  If TableName <> "" Then
    For i = 1 To MaxFound 
      If Text.ConvertToLowerCase(TableName) <> Text.ConvertToLowerCase(ListTab[i]) Then 
        DataOK = T
      Else
        DataOK = F
        i = MaxFound
        GraphicsWindow.ShowMessage("This table is definied in this database", "Table error")
        Controls.SetTextBoxText(TB[1], "")  
        LDFocus.SetFocus(TB[1])
      EndIf 
    EndFor 
  EndIf 
EndSub 'CheckTableName

Sub CheckAllFieldFilled
  
EndSub 'CheckAllFieldFilled

Sub ModifyTableDefinition
  If DatabaseIsOpen = T Then 
    '...    
  Else 
    GraphicsWindow.ShowMessage("Please creation or open a database", "No database open")
  EndIf  
EndSub 'ModifyTableDefinition

Sub ShowDatabaseTableDefinition
  If DatabaseIsOpen = T Then 
    FoundDatabaseDefinition = LDDataBase.Query(database, "SELECT * FROM sqlite_master WHERE type='table'", listView, F)
    Controls.ShowControl(listView)
    Controls.ShowControl(BT[3])
    OBC = F
    While OBC = F
    EndWhile 
    Controls.HideControl(listView)
    Controls.HideControl(BT[3])
  Else 
    GraphicsWindow.ShowMessage("Please creation or open a database", "No database open")
  EndIf
EndSub 'ShowDatabaseTableDefinition

Sub InputDataToDatabaseTable
  If DatabaseIsOpen = T Then 
    Fill_ListBoxWithTable()
    If LBTab <> "" Then 
      Select_ListBox_Table()
      EditTable()
    Else 
      GraphicsWindow.ShowMessage("No Table found.", "Database information")
      GoBack = T 
    EndIf 
  Else 
    GraphicsWindow.ShowMessage("Please creation or open a database", "No database open")
  EndIf  
EndSub 'InputDataToDatabaseTable

Sub ShowDataFromDatabaseTable
  If DatabaseIsOpen = T Then
    
  Else 
    GraphicsWindow.ShowMessage("Please creation or open a database", "No database open")
  EndIf   
EndSub 'ShowDataFromDatabaseTable

Sub Customizing
  GraphicsWindow.ShowMessage("Select the default database folder", "Default database folder")
  DatabasePath = LDDialogs.GetFolder(DatabasePath)
  CustomizingData[1] = DatabasePath 
  
' The following line could be harmful and has been automatically commented.
'   File.WriteContents(DataProgramFile, CustomizingData)
EndSub 'Customizing

'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'* Subroutines from Subroutines
'______________________________________________________________________________________________________

Sub CreationDatabase  
  database = LDDataBase.ConnectSQLite(datafile)
  command = "BEGIN TRANSACTION;"
  'command = command + "DROP TABLE IF EXISTS Tab;"
  command = command + "CREATE TABLE Database(Id INTEGER PRIMARY KEY, Databasefile TEXT, Table TEXT, Field TEXT, DataType TEXT);"
  command = command + "COMMIT;"
  LDDataBase.Command(database,command)
  LDDataBase.EditTable(database, "Tab", dataView)
EndSub 'CreationDatabase

Sub ShowDatabaseShape
  Shapes.SetText(SH[1], "Database: "  + database + "File: " + datafile)
  Shapes.ShowShape(SH[1])
  DatabaseIsOpen = T
EndSub 

Sub Fill_ListBoxWithTable
  FoundDatabaseDefinition = LDDataBase.Query(database, "SELECT * FROM sqlite_master WHERE type='table'", listView, T)
  For i = 1 To Array.GetItemCount(FoundDatabaseDefinition)
    LBTab[i + NumAdd] = FoundDatabaseDefinition[i]["name"]
  EndFor
EndSub 'Fill_ListBoxWithTable

Sub Select_ListBox_Table
  LDControls.ListBoxContent(ListBoxTab, LBTab)
  Controls.ShowControl(ListBoxTab)
  OLBIC = F
  While OLBIC = F
  EndWhile   
  Controls.HideControl(ListBoxTab)
  SelectListBoxIndex = LBTab[LDControls.ListBoxGetSelected(ListBoxTab)]
  selectTab = LBTab[SelectListBoxIndex]
EndSub 'Select_ListBox_Table

Sub EditTable
  LDDataBase.EditTable(database, selectTab, dataView)
  Controls.ShowControl(dataView)
  Controls.ShowControl(BT[1])
  Controls.ShowControl(BT[2])
  GoBack = F
  While GoBack = F 
    OBC = F 
    While OBC = F  
    EndWhile 
    OBC = F 
    LastButtonClicked = Controls.LastClickedButton 
    If LastButtonClicked = BT[1] Then       'Save
      LDDataBase.SaveTable(database, dataView)
    ElseIf LastButtonClicked = BT[2] Then   'Back
      GoBack = T 
    EndIf 
  EndWhile 
  GoBack = F 
  Controls.HideControl(dataView)
  Controls.HideControl(BT[1])
  Controls.HideControl(BT[1]) 
EndSub 'EditTable

'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'* Initialisations and Eventreactions
'______________________________________________________________________________________________________

Sub Init
  T = "True"
  F = "False"
  
  GraphicsWindow.FontName = "Consolas"
  GraphicsWindow.FontSize = 14
  GraphicsWindow.PenColor = "Gray"
  BackgroundColor = "LightGray"
  BrushColor = "SteelBlue"
  GraphicsWindow.BackgroundColor = BackgroundColor
  GraphicsWindow.BrushColor = BrushColor 
  GWW = Desktop.Width - 25
  GWH = Desktop.Height - 35
  GraphicsWindow.Top = 0
  GraphicsWindow.Left = 0
  GraphicsWindow.Width = GWW
  GraphicsWindow.Height = GWH 
  GraphicsWindow.Title = " Database Utilities "
  
  MenuPoint[1][0] = "Database and Table Definition"
  MenuPoint[2][1] = "New Database Definition"
  MenuPoint[3][1] = "Open a Database"
  MenuPoint[4][1] = "New Table Definition"
  MenuPoint[5][1] = "Modify Table Definition"
  MenuPoint[6][0] = "Show Database Table Definition"
  MenuPoint[7][0] = "Input Data to Database Table"
  MenuPoint[8][0] = "Show Data from Database Table"
  MenuPoint[9][0] = "Customizing"
  MenuPoint[10][0] = "Exit program"
  
  MenuView = LDControls.AddTreeView(MenuPoint, 300, 170)
  Controls.Move(MenuView, 5, 60)
  LDControls.TreeViewExpand(MenuView, 0, T, T)
  
  'Buttons
  BT[1] = Controls.AddButton("Save", 10, GWH - 35)
  Controls.HideControl(BT[1])
  BT[2] = Controls.AddButton("Back without save", 250, GWH - 35)
  Controls.HideControl(BT[2])
  BT[3] = Controls.AddButton(" Back ", 250, GWH - 35)
  Controls.HideControl(BT[3])
  BT[4] = Controls.AddButton("Continue", 250, GWH - 35)
  Controls.HideControl(BT[4])
  BT[5] = Controls.AddButton("Delete Row", 125, GWH - 35)
  Controls.HideControl(BT[5]) 
  
  'Shapes
  GraphicsWindow.FontBold = T 
  GraphicsWindow.FontSize = 20
  SH[1] = Shapes.AddText("Database file: ")
  Shapes.HideShape(SH[1]) 
  Shapes.Move(SH[1], 5, 5)
  SH[2] = Shapes.AddText("Table: ")
  Shapes.HideShape(SH[2])
  Shapes.Move(SH[2], 5, 30)
  GraphicsWindow.FontBold = F
  GraphicsWindow.FontSize = 14
  
  'TextBoxes
  TB[1] = Controls.AddTextBox(100, 30)
  Controls.HideControl(TB[1])
  
  'ListBox
  LBField[1] = "TEXT"
  LBField[2] = "NUM"
  LBField[3] = "INTEGER"
  LBField[4] = "REAL"
  LBField[5] = "NULL"
  LBField[6] = "BLOB"
  ListBoxField = LDControls.AddListBox(LBField,150,110)
  Controls.HideControl(ListBoxField) 
  Controls.Move(ListBoxField, 410, 90)
  
  LBTab[1] = "New Table"
  ListBoxTab = LDControls.AddListBox(LBTab, 200, 200)
  Controls.HideControl(ListBoxTab) 
  Controls.Move(ListBoxTab, 0, 30)
  
  'EditListView
  ColField = 1
  ColDatatype = 2
  
  'Head for LISTVIEW
  Head[ColField] = "             Field                   "
  Head[ColDatatype] = " Data Type  "
  
  EditListView = LDControls.AddListView(400, GWH - 120, Head)
  Controls.HideControl(EditListView)
  Controls.Move(EditListView, 5, 60)
  LDControls.ListViewColAlignment(EditListView, 1, "Right")  
  LDControls.ListViewEdit(EditListView, "True")
  For i = 1 to 15
    ListViewRow[ColField] = "                              " + i 
    Len = Text.GetLength(ListViewRow[ColField])
    start = Len - 30
    ListViewRow[ColField] = Text.GetSubTextToEnd(ListViewRow[ColField], start)    
    ListViewRow[ColDatatype] = "TEXT " + i + "         "
    ListViewRow[ColDatatype] = Text.GetSubText(ListViewRow[ColDatatype], 1, 12)
    LDControls.ListViewSetRow(EditListView, i, ListViewRow) 
  EndFor 
  'ListViewRows = LDControls.ListViewRowCount(ListView)
  'LDControls.ListViewColAlignment(EditListView, 1, "Left")   
  'LDControls.ListViewColAlignment(EditListView, 2, "Left")   
  ' LDControls.ListViewDeleteRow(ListView, 5)  
  'ListViewRow[ColField] = "License tag"
  'ListViewRow[ColDatatype] = "TEXT"
  'LDControls.ListViewSetRow(EditListView, 1, ListViewRow) 
  
  '  
  'ListView
  listView = LDDataBase.AddListView(GWW - 10, GWH - 180)
  Controls.HideControl(listView)
  Controls.Move(listView, 5, 130)
  
  'DataView  
  dataView = LDDataBase.AddDataView(GWW - 10, GWH - 60)
  Controls.HideControl(dataView)
  Controls.Move(dataView, 5, 30) 
  
  'Variables
  ExitProgram = F
  Back = ""
  DatabaseIsOpen = F
  DatabasePath = ""
  NumAdd = 0
  TableName = "Table"
  TableField = "Field"
  TableDataType = "Datatype"
  'Read ProgramData
' The following line could be harmful and has been automatically commented.
'   DataProgramFile = File.GetSettingsFilePath()+"\Database_Utilities_Data.sba"
' The following line could be harmful and has been automatically commented.
'   if LDFile.Exists(DataProgramFile) = T Then 
' The following line could be harmful and has been automatically commented.
'     CustomizingData = File.ReadContents(DataProgramFile)
    DatabasePath = CustomizingData[1]
  EndIf 
EndSub 'Init

Sub OnKeyUp
  OKU = T 
EndSub 

Sub OnButtonClicked
  OBC = T
EndSub 'OnButtonClicked

Sub OnTreeItemChanged
  OTIC = T
EndSub 'OnTreeItemChanged

Sub OnListBoxItemChanged
  OLBIC = T
EndSub 'OnListBoxItemChanged
  
