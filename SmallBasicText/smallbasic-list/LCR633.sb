args=0

GraphicsWindow.Title = "BrickDraw3D"

GraphicsWindow.PenWidth=0

Init()

GraphicsWindow.BrushColor="darkgray

GraphicsWindow.FillRectangle (0,gh/3 gw gh)

rx=1

For dt=1 to 6

  For x=1 to 20

    For y=1 To 20

      ca[dt][x][y]="x"

    EndFor 

  endfor

endfor

pdef()



For w=0 to 5

  dt=w+1

  caa=ca[dt]

  'TextWindow.WriteLine (caa)

  s1=1

  If w=0 Or w=5 Then

    s1=12

  EndIf 

  For qy=12 To s1 Step -1

    For qx=1 to 15

      

      If caa[qx][qy]="x" then

        'nixx

      elseIf caa[qx][qy]="K" then

        

        param="y="+qx*35+";z="+(13-qy)*35+";x="+w*35+";color=#aa0000;edge=30

        Drawramp ()

        

        s35=17

        param="x="+qx*s35+";z="+(13-qy)*s35+";y="+(w-15)*s35+";color=#aa0000;edge=15

        Drawramp1 ()

        

      s35=17

        param="x="+(qx+17)*s35+";z="+(13-qy)*s35+";y="+(w-15)*s35+";color=#aa0000;edge=15

        Drawramp1 ()  

      else

        param="y="+qx*35+";z="+(13-qy)*35+";x="+w*35+";color="+caa[qx][qy]+";edge=30

        DrawCube ()

        

        s35=17

        param="x="+qx*s35+";z="+(13-qy)*s35+";y="+(w-15)*s35+";color="+caa[qx][qy]+";edge=15

        DrawCube ()

           

        param="x="+(qx+17)*s35+";z="+(13-qy)*s35+";y="+(w-15)*s35+";color="+caa[qx][qy]+";edge=15

        DrawCube ()

      endif

    EndFor 

  endfor

endfor



Sub Do

  cmdd=ldtext.Split( args[1]," ")

  For f=1 To Array.GetItemCount (cmdd)

    cmd=cmdd[f]

    x = T_X

    y = T_Y   

    

    If Text.StartsWith(cmd, "R:") Then

      GetOperand()

      T_x=x + operand * size 

      t_y=y

      If df=1 then 

        dfll()

      EndIf

      

    elseIf Text.StartsWith(cmd, "R.") Then

      t_x=x + size

      t_y=y

      

    ElseIf Text.StartsWith(cmd, "L.") Then

      T_x=x -  size

      t_y= y

      

    elseIf Text.StartsWith(cmd, "L:") Then

      GetOperand()

      T_x=x - operand * size 

      t_y=y

      If df=1 then 

        dfll()

      EndIf

      

    ElseIf Text.StartsWith(cmd, "U.") Then

      t_x=x

      t_y= y - size

      

    ElseIf Text.StartsWith(cmd, "U:") Then

      GetOperand ()

      t_x=x

      t_y= y - operand * size

      If df=1 then 

        dfll()

      EndIf

      

    ElseIf Text.StartsWith(cmd, "D.") Then

      t_x=x

      t_y= y + size

      

    ElseIf Text.StartsWith(cmd, "D:") Then

      GetOperand ()

      t_x=x

      t_y= y + operand * size

      If df=1 then 

        dfll()

      EndIf

      

    ElseIf Text.StartsWith(cmd, "F") or Text.StartsWith(cmd, "K") Then

      If Text.IsSubText (cmd,"/") then

        c1=LDText.Split(cmd,"/")

        cmd=c1[1]

        GetOperand()

        GraphicsWindow.BrushColor = operand

        cmd=c1[2]

        GetOperand()

        op=operand 

        df=1

        For t=1 to op  

          LDCall.Function ("do",cm0+":1")

        EndFor 

        df=0

      else

        if Text.StartsWith(cmd, "K") Then

          ca[dt][x][y]="K"

        else

          GetOperand()

          If operand = "" Then

            operand = "Black"

          EndIf

          GraphicsWindow.BrushColor = operand

          

          dfll()

        endif

      EndIf 

    endif

  EndFor 

EndSub



Sub dfll

  ca[dt][x][y]=GraphicsWindow.BrushColor 

EndSub 



Sub GetOperand

  sp = ldText.Split(cmd, ":")

  cm0=sp[1]

  operand = sp[2]

EndSub



Sub Init

  size = 1

  gw = 1000

  gh = 800

  GraphicsWindow.Width = gw

  GraphicsWindow.Height = gh

  GraphicsWindow.BackgroundColor = LDColours.HSLtoRGB (220 1 0.8)

  

EndSub



Sub Conv3Dto2D

  cx = gw / 2 - Math.SquareRoot(1 / 2) * param["x"]

  cx = cx + Math.SquareRoot(1 / 2) * param["y"]

  cy = gh / 2 + Math.SquareRoot(1 / 6) * param["x"]

  cy = cy + Math.SquareRoot(1 / 6) * param["y"]

  cy = cy - Math.SquareRoot(2 / 3) * param["z"]

EndSub



Sub Color_RGBtoHSL

  rHue=LDColours.GetHue (sColor)

  rLightness=LDColours.GetLightness(sColor )

  rSaturation=LDColours.GetSaturation (sColor )

EndSub



Sub DrawCube

  Conv3Dto2D()

  edge = Math.SquareRoot(2 / 3) * param["edge"]

  x1 = math.Round (cx)

  y1 = math.Round (cy)

  sColor = param["color"]

  color[1] = sColor

  

  Color_RGBtoHSL ()

  savedLightness = rLightness

  rLightness = Math.Min(savedLightness * 1.2, 1)

  scolor=lDColours.HSLtoRGB (rHue,rSaturation ,rLightness   )

  

  color[2] = sColor

  

  rLightness = Math.Max(savedLightness * 0.8, 0)

  scolor=lDColours.HSLtoRGB (rHue,rSaturation ,rLightness  )

  color[3] = sColor

  GraphicsWindow.PenWidth =0

  

  x3=0

  x4=0

  y3=0

  y4=0

  For a = 60 To 420 Step 60

    x2 = math.Round (cx - edge * ldMath.Sin(a))

    y2 = math.Round (cy - edge * ldMath.Cos(a))

    If a>60 and math.Remainder ((a-60),120)=0 Then

      ppp=0

      ppp[1][1]=x1+50

      ppp[1][2]=y1-30 

      ppp[2][1]=x2+50

      ppp[2][2]=y2-30 

      ppp[3][1]=x3+50

      ppp[3][2]=y3-30 

      ppp[4][1]=x4+50

      ppp[4][2]=y4-30 

      

      of=1

      GraphicsWindow.PenColor =color[(a-60) / 120]

      po=LDShapes.AddPolygon (ppp) 

      

      LDShapes.BrushColour(po,color[(a-60)/120])

    EndIf

    x4 = x3

    y4 = y3

    x3 = x2

    y3 = y2

  EndFor

EndSub



Sub Drawramp

  Conv3Dto2D()

  edge = Math.SquareRoot(2 / 3) * param["edge"]

  x1 = math.Round (cx)

  y1 = math.Round (cy)

  

  color = param["color"]

  GraphicsWindow.PenWidth =0

  

  x3=0

  y3=0

  cc=1

  For a = 0 To 240 Step 60

    x2[cc] = math.Round (cx - edge * ldMath.Sin(a))

    y2[cc] = math.Round (cy - edge * ldMath.Cos(a))

    If a>0 then

      ppp=0

      ppp[1][1]=x1+50

      ppp[1][2]=y1-30 

      ppp[2][1]=x2[cc]+50

      ppp[2][2]=y2[cc]-30 

      ppp[3][1]=x3+50

      ppp[3][2]=y3-30 

      po=LDShapes.AddPolygon (ppp) 

      LDShapes.BrushColour (po,color)

    endif

    x3 = x2[cc]

    y3 = y2[cc]

    cc=cc+1

  EndFor

  

  ppp=0

  ppp[1][1]=x2[1]+50

  ppp[1][2]=y2[1]-30

  ppp[2][1]=x2[2]+50

  ppp[2][2]=y2[2]-30

  ppp[3][1]=x2[4]+50

  ppp[3][2]=y2[4]-30

  ppp[4][1]=x2[5]+50

  ppp[4][2]=y2[5]-30

  po=LDShapes.AddPolygon (ppp) 

  LDShapes.BrushColour (po,"red")

EndSub





Sub Drawramp1

  Conv3Dto2D()

  edge = Math.SquareRoot(2 / 3) * param["edge"]

  x1 = math.Round (cx)

  y1 = math.Round (cy)

  

  color = param["color"]

  GraphicsWindow.PenWidth =0

  

  x3=0

  y3=0

  cc=1

  For a = 120 To 360 Step 60

    x2[cc] = math.Round (cx - edge * ldMath.Sin(a))

    y2[cc] = math.Round (cy - edge * ldMath.Cos(a))

    If a>180 then

      ppp=0

      ppp[1][1]=x1+50

      ppp[1][2]=y1-30 

      ppp[2][1]=x2[cc]+50

      ppp[2][2]=y2[cc]-30 

      ppp[3][1]=x3+50

      ppp[3][2]=y3-30 

      po=LDShapes.AddPolygon (ppp) 

      LDShapes.BrushColour (po,color)

    endif

    x3 = x2[cc]

    y3 = y2[cc]

    cc=cc+1

  EndFor

  

  ppp=0

  ppp[1][1]=x2[1]+50

  ppp[1][2]=y2[1]-30

  ppp[2][1]=x2[2]+50

  ppp[2][2]=y2[2]-30

  ppp[3][1]=x2[4]+50

  ppp[3][2]=y2[4]-30

  ppp[4][1]=x2[5]+50

  ppp[4][2]=y2[5]-30

  po=LDShapes.AddPolygon (ppp) 

  LDShapes.BrushColour (po,"red")

  

EndSub







Sub pdef

  For dt=1 To 6

    T_X = 1

    T_Y = 1 

    LDCall.Function("do","R:5")

    For row = 1 To 5

      LDCall.Function ("do","F:Red D. L.")

    EndFor

    

    LDCall.Function ("do","R:6 U:4")

    For row = 1 To 4

      LDCall.Function ("do","K. D. R.")

      If row=2 and dt=3 Then

        txx=t_x

        tyy=t_y

        LDCall.Function ("do","F:Red/U:4")

        t_x=txx

        t_y=tyy

      endif

    EndFor

    

    LDCall.Function ("do","L:5 U:4")

    ll=1

    l1=0

    For row = 1 To 2

      LDCall.Function ("do","F:Beige/R:"+ll)

      ll=ll+2

      LDCall.Function ("do","D. R:"+l1)

      LDCall.Function ("do","F:Beige/L:"+ll)

      ll=ll+2

      LDCall.Function ("do","D. L:"+l1)

    EndFor

    

    LDCall.Function ("do","R.")

    For row = 1 To 3

      LDCall.Function ("do","F:Beige/R:7")

      LDCall.Function ("do","D. L.")

      LDCall.Function ("do","F:Beige/L:7")

      LDCall.Function ("do","D. R.")

    EndFor

    

    LDCall.Function ("do","R:1 U:6")

    For col = 1 To 3

      LDCall.Function ("do","F:Blue/D:2")

      LDCall.Function ("do","D.")

      If col=2 Then

        ' Draw door

        LDCall.Function ("do","F:Black/D:3")

        LDCall.Function ("do","R:2 U:6")    

      Else

        LDCall.Function ("do","F:Blue/D:2")

        If col<3 then

          LDCall.Function ("do","R:2 U:5")

        EndIf 

      EndIf 

    EndFor

    

    'Draw ground

    LDCall.Function ("do","L:7 D.")

    LDCall.Function ("do","F:DarkGreen/R:16")

    

    ' Draw tree

    LDCall.Function ("do","L:5 U:6")

    LDCall.Function ("do","F:Green/R:3")

    LDCall.Function ("do","D. L:4")

    LDCall.Function ("do","F:Green/R:5")

    LDCall.Function ("do","D. L.")

    LDCall.Function ("do","F:Green/L:5")

    LDCall.Function ("do","D. R.")

    LDCall.Function ("do","F:Green/R:5")

    LDCall.Function ("do","D. L:2")

    LDCall.Function ("do","F:Green/L:3")

    LDCall.Function ("do","R:2 Up")

    LDCall.Function ("do","F:SaddleBrown/D:3")

  endfor

EndSub


