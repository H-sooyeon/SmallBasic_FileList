Turtle.Angle=20
Turtle.Speed=9
Shapes.AddEllipse(5,5)
dbb=Controls.AddButton("draw",50,5)
args=0
GraphicsWindow.PenWidth=1
penn=0
indrw=0
GraphicsWindow.Width=900
GraphicsWindow.Height=900

GraphicsWindow.BackgroundColor="#0099aa
flmd=1
sld=LDControls.AddSlider (30,150,"V")
deffs()
'dd-------------min drw size
ri=1'------------rule index
akc=1
LDControls.SliderChanged=sllch
Controls.ButtonClicked=dbtt
GraphicsWindow.MouseMove =mddd
zlv=1
LDEvents.MouseWheel=mwww

While 1=1
  
  If akc=1 then
    t_x=0
    t_y=0
    fdrw()
    akc=0
    indrw=0
    
    pshw ()
    
  endif
  Program.Delay(1)
endwhile

Sub deffs
  dlw[1]=4'-----------recursion deepth
  sang[1]=0
  rule[1]="F++F++F"
  nwr[1]="F-F++F-F
  dd[1]=3
  aa[1]=60
  
  sang[2]=-90
  rule[2]="F-F-F-F
  nwr[2]="F+FF-FF-F-F+F+FF-F-F+F+FF+FF-F
  dlw[2]=2
  dd[2]=6
  aa[2]=90
  
  dlw[3]=4
  sang[3]=0
  rule[3]="-F"
  nwr[3]="F+F-F-F+F
  dd[3]=3
  aa[3]=90
  
  dlw[4]=3
  sang[4]=0
  rule[4]="F+F+F+F
  nwr[4]="F+F-F-F+F
  dd[4]=3
  aa[4]=90
  
  dlw[5]=2
  sang[5]=0
  rule[5]="F-F-F-F
  nwr[5]="FF-F-F-F-F-F+F
  dd[5]=10
  aa[5]=90
  
  dlw[6]=2
  sang[6]=0
  rule[6]="F-F-F-F
  nwr[6]="FF-F-F-F-FF
  dd[6]=10
  aa[6]=90
EndSub 



Sub dbtt
  If Controls.LastClickedButton=dbb Then 
    GraphicsWindow.Title="Redrw..."
    Program.Delay (777) 
    t_x=0
    t_y=0
    
    
    pmm=0
    mi=0
    Shapes.Remove(shpp)
    
    akc=1
  endif
EndSub 

Sub fdrw
  GraphicsWindow.Title="Wait..."
  Program.Delay(999)
  
  
  
  arrx=LDArray.Create(3000)
  arry=LDArray.Create(3000)
  pmm=0
  mi=0
  
  rulex=rule[ri]
  For x=1 To dlw[ri]
    rulex=LDText.Replace (rulex,"F",nwr[ri])
  EndFor 
  ll=Text.GetLength(rulex)
  
  t_Angle=sang[ri]
  For x=1 To ll
    c=text.GetSubText (rulex,x,1)
    If c="F" Then 
      LDCall.Function ("t_move", dd[ri])
    ElseIf c="+" Then
      t_Angle =t_Angle +aa[ri]
    ElseIf c="-" Then
      t_Angle =t_Angle -aa[ri]
      
    EndIf   
  endfor
  GraphicsWindow .Title ="Done nodes:"+ll
  indrw =0
EndSub 



Sub sllch
  amx= Array.GetItemCount (dd)-1
  ri= math.Round  (LDControls.SliderGetValue(sld)/100*amx)+1
  GraphicsWindow.Title="Model:"+ri
EndSub 


Sub mwww
  zlv=zlv+ LDEvents.LastMouseWheelDelta/10
  Shapes.Zoom(shpp,zlv,zlv)
  GraphicsWindow.Title="Zoom:"+zlv
EndSub 

Sub mddd
  Shapes.Move(shpp, GraphicsWindow.MouseX, GraphicsWindow.MouseY)
  If GraphicsWindow.MouseX<50 or GraphicsWindow.MouseY<50  Then
    Shapes.HideShape(shpp)
  Else
    Shapes.ShowShape (shpp)
    endif
endsub

sub t_Move
  ds=args[1]
  mm=LDMath.Convert2Cartesian  (t_x,t_y,ds, t_Angle-90 )
  
  If penn then
    
    GraphicsWindow.DrawLine (math.Round(t_x),math.Round(t_y),math.Round (mm[1]),math.Round (mm[2]))
    
  endif
  t_x= (mm[1])
  t_y= (mm[2])
  mi=mi+1
  If mi<5000 then
    LDArray.SetValue(arrx,mi,t_x)
    LDArray.SetValue(arry,mi,t_y)
    
    'pmm[mi][1]=t_x
    
    'pmm[mi][2]= t_y
  endif
EndSub

Sub pshw
  rc1= LDColours.HSLtoRGB(Math.GetRandomNumber(30),1,0.8)
  bcc= LDText.Split(Rc1+" Yellow Cyan"," ")
  bgp= LDShapes.BrushGradient (bcc,"DD")
  If flmd=1 then
    'LDShapes.BrushGradientPolygon(bgp,pmm)
    cc=LDArray.Count(arrx)
    pmm=0
    For t=1 To cc
      pmm[t][1]=LDArray.GetValue(arrx,t)
      pmm[t][2]=LDArray.GetValue(arry,t)
    EndFor 
    LDArray.Delete (arrx)
    LDArray.Delete (arry)
    shpp=LDShapes.AddPolygon(pmm)
    ldShapes.BrushGradientShape(shpp,bgp)
    LDShapes.PenWidth(shpp,1)
  endif
EndSub 
