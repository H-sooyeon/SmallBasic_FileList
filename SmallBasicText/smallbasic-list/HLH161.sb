

T_Angle =0

T_x=300

T_y=200

GraphicsWindow.Left =10

GraphicsWindow.Top =10

GraphicsWindow.Width =1000

GraphicsWindow.Height =800

GraphicsWindow.KeyDown =kkk

Timer.Interval=50

Timer.Tick=tyy

ff="l...r...r...l.....rr.r...l...l...l....l......rr...l...r.r...ll.r.l.r.l..l...r...r..r...l.l......................

pll="l...l...l...r...r...rr...."

aa=LDArray.Create(5000)

For x=1 to Text.GetLength (pll)

  LDArray.SetValue (aa x text.GetSubText(pll x 1))

endfor

qi=1

fi=Text.GetLength (pll)+1

for t=1 to 10

  For fx=1 to Text.GetLength (ff)

    LDArray.SetValue (aa fi text.GetSubText(ff fx 1))

    fi=fi+1

  endfor

endfor



dd=30

GraphicsWindow.BackgroundColor ="darkblue

GraphicsWindow.PenWidth=8

GraphicsWindow.Title ="Snake animation



Sub kkk

  lk= GraphicsWindow.LastKey 

  If lk="Left" Then

    T_Angle =T_Angle -90

  ElseIf lk="Right" then

    T_Angle =T_Angle +90

  EndIf 

EndSub



Sub tyy

 ' GraphicsWindow.Title =ii

  ii=ii+1

  If ii>350 Then 

    ii=1

    oo=0

    tc=0

    qq=0

    op=0

    dq=0

    qi=1

    GraphicsWindow.Clear ()

    T_Angle =0

    T_x=300

    T_y=200

  endif

  If LDArray.GetValue (aa ii)="r" then 

    T_Angle =T_Angle +90

  Elseif LDArray.GetValue (aa ii)="l" then

    T_Angle =T_Angle -90

  else

    

    ox=t_X

    oy=T_y

    v= 1+Math.Remainder(tc 2)

    GraphicsWindow.PenColor =LDColours.HSLtoRGB (tc*5 v/2 .6)

    T_Move()

    If T_Y>GraphicsWindow.Height Then

      T_y=0

      oy=0

    ElseIf T_y<0 then

      T_y= GraphicsWindow.Height

      oy=GraphicsWindow.Height 

    EndIf  

    If T_x<0 Then 

      T_x= GraphicsWindow.Width

      ox= T_X

    ElseIf T_X>GraphicsWindow.Width  then

      ox=0

      T_x=0

    EndIf 

    ss=Shapes.AddLine (ox oy T_X T_y)

    qq[qi]= ss

    qi=qi+1

    op[ss]=100

    tc=tc+1

    If tc>60 Then '----------trail length

      dq=dq+1

      For r=1 To dq

        oo=qq[r]

        op[oo]=op[oo]/1.3

        shapes.SetOpacity  (oo op[oo])

        If op[oo]<5 then

          Shapes.Remove (op[oo])

          

        endif

      endfor

    EndIf 

  endif

EndSub 



sub t_Move

  ds=dd

  mm=LDMath.Convert2Cartesian  (t_x,t_y,ds, t_Angle-90 )

  

  t_x= (mm[1])

  t_y= (mm[2])

  

  

EndSub


