' Sudoku Solver (25 line challenge), by Jason T. Jacques <jtjacques@gmail.com>

'sudoku = "  873 6 5  5  6 91 2   5  31   9 57  9 2 1 4  62 4   87  9   6 23 1  8  6 4 721  "
'sudoku = "78 9   5    48 1       78  4   92 8 1 5   2 7 7 13   4  73       6 54    4   6 29"
sudoku = "   15  7 1 6   82 3  86  4 9  4  567  47 83  732  6  4 4  81  9 17   2 8 5  37   "

crlf[9] = "                                                              "
For i = 1 To 81 ' generate grid
  grid[Math.Ceiling(i / 9)][Math.Remainder(i - 1, 9) + 1] = Text.GetSubText(sudoku, 1, 1)
  sudoku = Text.GetSubTextToEnd(sudoku, 2)
EndFor

For n = 1 To 6561 + 1 ' 81 x 81 (worst case, fill only one square on each check of the grid)
  If (grid[Math.Ceiling((Math.Remainder(n - 1, 81) + 1) / 9)][Math.Remainder((Math.Remainder(n - 1, 81) + 1) - 1, 9) + 1] * 1 = 0) Or (n = 6562) Then ' or n - cheat to display final grid
    position = Text.Append(Math.Ceiling((Math.Remainder(n - 1, 81) + 1) / 9), Math.Remainder((Math.Remainder(n - 1, 81) + 1) - 1, 9) + 1)
    FillPosition()
  EndIf
EndFor

Sub FillPosition
  possible = "123456789" ' default 'pencil marks'
  For i = 1 To 81 ' remove values present in row, column and grid
    If (((grid[(Math.Remainder(i - 1, 9) + 1)][Text.GetSubText(position, 2, 1)] = Math.Ceiling(i/9)) Or (grid[Text.GetSubText(position, 1, 1)][(Math.Remainder(i - 1, 9) + 1)] = Math.Ceiling(i/9)) Or (grid[Math.Ceiling((Math.Remainder(i - 1, 9) + 1)/3) + (Math.Ceiling(Text.GetSubText(position, 1, 1) / 3) - 1) * 3][Math.Remainder((Math.Remainder(i - 1, 9) + 1) - 1, 3) + 1 + (Math.Ceiling(Text.GetSubText(position, 2, 1) / 3) - 1) * 3] = Math.Ceiling(i/9))) And (Text.IsSubText(possible, Math.Ceiling(i/9)))) Then
      possible = Text.Append(Text.GetSubText(possible, 1, Text.GetIndexOf(possible, Math.Ceiling(i/9)) - 1), Text.GetSubTextToEnd(possible, Text.GetIndexOf(possible, Math.Ceiling(i/9)) + 1))
    EndIf
    TextWindow.Write(grid[Math.Ceiling(i / 9)][Math.Remainder(i - 1, 9) + 1] + " " + crlf[Math.Remainder(i - 1, 9) + 1])
  EndFor
  TextWindow.WriteLine("")
  If Text.GetLength(possible) = 1 Then ' if only one possible result, use
    grid[Text.GetSubText(position, 1, 1)][Text.GetSubText(position, 2, 1)] = possible
  EndIf
EndSub
