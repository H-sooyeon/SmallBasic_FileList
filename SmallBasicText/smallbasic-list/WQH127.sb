samples = 32

GraphicsWindow.Show()

GraphicsWindow.Title = "Motion Blur Test"

GraphicsWindow.CanResize = "False"

rectangle = Shapes.AddRectangle(100,100)

Timer.Tick = Update

Timer.Interval = 1000/60

Timer.Resume()



Sub Update

  prevx = x

  prevy = y

  Shapes.Move(rectangle,GraphicsWindow.MouseX - 50,GraphicsWindow.MouseY - 50)

  x = Shapes.GetLeft(rectangle)

  y = Shapes.GetTop(rectangle)

  prevxleft = prevx

  prevxright = prevx+100

  prevyleft = prevy

  prevyright = prevy+100

  xleft = x

  xright = x+100

  yleft = y

  yright = y+100

  xtoadd = (xleft-prevxleft)/samples

  ytoadd = (yleft-prevyleft)/samples

  If x > prevx And y > prevy Then

    For i = 1 To samples

      rectanglemb[i] = Shapes.AddRectangle(100,100)

      Shapes.SetOpacity(rectanglemb[i],20)

      Shapes.Move(rectanglemb[i],x-(xtoadd*i),y-(ytoadd*i))

    EndFor

  ElseIf x < prevx And y < prevy Then

    For i = 1 To samples

      rectanglemb[i] = Shapes.AddRectangle(100,100)

      Shapes.SetOpacity(rectanglemb[i],20)

      Shapes.Move(rectanglemb[i],prevx+(xtoadd*i),prevy+(ytoadd*i))

    EndFor

  ElseIf x > prevx And y < prevy Then

    For i = 1 To samples

      rectanglemb[i] = Shapes.AddRectangle(100,100)

      Shapes.SetOpacity(rectanglemb[i],20)

      Shapes.Move(rectanglemb[i],prevx+(xtoadd*i),prevy+(ytoadd*i))

    EndFor

  ElseIf x < prevx And y > prevy Then

    For i = 1 To samples

      rectanglemb[i] = Shapes.AddRectangle(100,100)

      Shapes.SetOpacity(rectanglemb[i],20)

      Shapes.Move(rectanglemb[i],x-(xtoadd*i),y-(ytoadd*i))

    EndFor

  EndIf

  For i = 1 To samples

    Shapes.Remove(rectanglemb[i])

  EndFor

EndSub


