''Brick Smasher Game
''Programmed by
''Amir Arshad
''Date : 2/1/2013
GameWidth = 750
GameHeight = 450
BrickWidth = 50
BrickHight = 20
BallWidth = 20
BallHeight = BallWidth
PaddleWidth = 120
PaddleHeight = 15
BrickRowNum = 12
BrickColNum = 6
GameRunning = "False"
Speed = 0.2
deltaX = Speed
deltaY = -Speed
Score = 0
Level = 1
Lives = 4
Hit = 0
BrickNum = 0
GraphicsWindow.Width = GameWidth
GraphicsWindow.Height = GameHeight
GraphicsWindow.BackgroundColor = "Gray"
GraphicsWindow.MouseMove = onMouseMove
GraphicsWindow.MouseDown = onClick
DrawBricks()
CreateBallAndPaddle()
Sub CreateBallAndPaddle
  Paddle = Shapes.AddRectangle(PaddleWidth,PaddleHeight)
  Shapes.Move(Paddle,GameWidth/2-PaddleWidth/2,GameHeight-PaddleHeight)
  Ball = Shapes.AddEllipse(BallWidth,BallHeight)
  Shapes.Move(Ball,GameWidth/2-BallWidth/2,GameHeight-PaddleHeight-BallHeight)
EndSub
Sub DrawBricks
  For Collumn = 0 To BrickColNum
    For Row = 0 To BrickRowNum
      Rand = Math.GetRandomNumber(2)
      If Rand = 2 Then
        Rand = 0
      EndIf
      If Rand = 1 Then
        GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()
        Bricks[Collumn][Row] = Shapes.AddRectangle(BrickWidth,BrickHight)
        Shapes.Animate(Bricks[Collumn][Row],(BrickWidth)*(Row+1),(BrickHight+10)*(Collumn+2),500)
        BrickNum = BrickNum + 1
      EndIf
    EndFor
  EndFor
EndSub
Sub onMouseMove
  PadX = GraphicsWindow.MouseX
  If PadX < PaddleWidth/2 Then
    PadX = PaddleWidth/2
  ElseIf  PadX > GameWidth - PaddleWidth/2 Then
    PadX =GameWidth - PaddleWidth/2
  EndIf
  PadPos = PadX - PaddleWidth/2
  Shapes.Move(Paddle,PadPos,GameHeight-PaddleHeight)
  If GameRunning = "False" Then
    Shapes.Move(Ball,(PadPos+PaddleWidth/2)-BallWidth/2,GameHeight-PaddleHeight-BallHeight)
    XPos = Shapes.GetLeft(Ball)
    YPos = Shapes.GetTop(Ball)
  EndIf
EndSub
Sub onClick
  XPos = Shapes.GetLeft(Ball)
  YPos = Shapes.GetTop(Ball)
  If GameRunning = "False" Then
    GameRunning = "True"
  Else
    GameRunning = "False"
  EndIf
  While GameRunning
    XPos = XPos + deltaX
    YPos = YPos + deltaY
    If XPos > GameWidth - BallWidth Or XPos < 0 Then
      deltaX = -deltaX
    EndIf
    If YPos <= 0 Then
      deltaY = -deltaY
    EndIf
    PaddleX = Shapes.GetLeft(Paddle)
    If YPos = GameHeight-BallHeight-PaddleHeight And XPos+BallWidth > PaddleX And XPos < paddleX + PaddleWidth Then
      deltaY = -deltaY
    EndIf
    If YPos > GameHeight - BallHeight Then
      GameRunning = "False"
      deltaX = Speed
      deltaY = -Speed
      Shapes.Move(Ball,(PadPos+PaddleWidth/2)-BallWidth/2,GameHeight-PaddleHeight-BallHeight)
      GraphicsWindow.Title = "You missed!"
      Lives = Lives - 1
      If Lives < 1 Then
        GraphicsWindow.ShowMessage("Game Over...!","Ooops!")
        Program.End()
      EndIf
      onMouseMove()
    EndIf
    Shapes.Move(Ball,XPos,YPos)
    'GraphicsWindow.SetPixel(XPos,YPos,"Red")
    CollisionCheck()
  EndWhile
EndSub
Sub CollisionCheck
  For Collumn = 0 To BrickColNum
    For Row = 0 To BrickRowNum
      BrickTop = Shapes.GetTop(Bricks[Collumn][Row])
      BrickLeft = Shapes.GetLeft(Bricks[Collumn][Row])
      If BrickLeft <> 0 And BrickTop <> 0 Then
        If XPos + BallWidth >= BrickLeft And XPos <= BrickLeft + BrickWidth And YPos < BrickTop + BrickHight And YPos + BallHeight > BrickTop Then
          deltaY = -deltaY
          Shapes.Remove(Bricks[Collumn][Row])
          Score = Score + Clock.Second
          Hit = Hit + 1
          If Hit = BrickNum Then
            Sound.PlayChime()
            deltaX = -Speed
            deltaY = -Speed
            Level = Level + 1
            BrickNum = 0
            Hit = 0
            Lives = Lives + 1
            GameRunning = "False"
            DrawBricks()
            onMouseMove()
          EndIf
        EndIf
      EndIf
    EndFor
  EndFor
  GraphicsWindow.Title = "Score - "+Score+" ---- Level - "+Level+" ------ Lives Remainig - "+Lives
EndSub
