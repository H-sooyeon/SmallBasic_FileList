Profiler_sub = "Main" ' for profile

Profiler_Init()       ' for profile

import()

Profiler_sub = "Main" ' for profile



Go:

screen = "false"

GraphicsWindow.Clear()

mapStack = "empty"

jackStack = "empty"

gregStack = "empty"

GraphicsWindow.Top = 0

GraphicsWindow.Left = 0

GraphicsWindow.Height = 400

GraphicsWindow.Width = 600



back1 =  ImgPath + "\Assets\"+ "gameOver" + tag

back =  ImgPath + "\Assets\"+ "loading" + tag



GraphicsWindow.DrawImage(back,0,0)

currentLevel = -1

Stack.PushValue(jackStack, 20)



generateStack()

Profiler_sub = "Main" ' for profile

Goto Menu



Start:

GG = 0

KillCount = 0



nextLevel()

Profiler_sub = "Main" ' for profile



Main:



If GG  = 2 Then

  For gL = startActive To stopActive

    collision()

  endFor

  Profiler_sub = "Main" ' for profile

  gL = 400

  collision()

  Profiler_sub = "Main" ' for profile

  GG = 0

endif

GG = GG +  1



If isDead = 1 Then

  Profiler_Dump()

  Goto Go

endif

MouseMove()



pathing()

moveSprites()

Profiler_sub = "Main" ' for profile

Program.Delay(32)

Goto Main



'Menu

Menu:

drawMenu()

Profiler_sub = "Main" ' for profile



menuDetect:

GraphicsWindow.PenColor = "Gray"  ' for debug

GraphicsWindow.DrawRectangle(70, 60, 200-70, 150-60)  ' for debug

If(GraphicsWindow.MouseX > 70 And GraphicsWindow.MouseX < 200 And GraphicsWindow.MouseY > 60 And GraphicsWindow.MouseY < 150) Then

  Shapes.SetOpacity(shape,99)

  If(Mouse.IsLeftButtonDown) Then

    isDead = 0

    GraphicsWindow.Clear()

    GraphicsWindow.Height = 600

    GraphicsWindow.Width = 600

    

    Goto Start

  EndIf

Else

  Shapes.SetOpacity(shape,100)

EndIf



GraphicsWindow.DrawRectangle(70, 260, 200-70, 350-260)  ' for debug

If(GraphicsWindow.MouseX > 70 And GraphicsWindow.MouseX < 200 And GraphicsWindow.MouseY > 260 And GraphicsWindow.MouseY < 350) Then

  Shapes.SetOpacity(shape1,99)

  If(Mouse.IsLeftButtonDown) Then

    Program.End()

  EndIf

Else

  Shapes.SetOpacity(shape1,100)

EndIf



Goto menuDetect

'End Menu



Sub death 'exectues death and clean up

  Profiler_Begin()        ' for profile

  Profiler_sub = "death"  ' for profile

  If( screen = "false") Then

    unloadMap()

    Shapes.AddImage(deathScreen)

    screen = "true"

    Program.Delay(1500)

  EndIf

  Profiler_End()  ' for profile

EndSub 'end death + clean



Sub drawMenu 'DrawMenu

  Profiler_Begin()          ' for profile

  Profiler_sub = "drawMenu" ' for profile

  GraphicsWindow.Clear()

  GraphicsWindow.BackgroundColor = "#060313"

  GraphicsWindow.DrawImage(menu,200,0)

  GraphicsWindow.BrushColor = "white"  

  GraphicsWindow.FillRectangle(40,50, 150, 75)

  GraphicsWindow.FillRectangle(40,200, 150, 75)

  shape = Shapes.AddImage(menu2)

  shape1 = Shapes.AddImage(menu3)

  Shapes.Move(shape, 40,50) 

  Shapes.Move(shape1, 40,200) 

  Profiler_End()  ' for profile

EndSub 'End Draw Menu



Sub nextLevel 'Load and Display Next Level

  Profiler_Begin()            ' for profile

  Profiler_sub = "nextLevel"  ' for profile

  currentLevel = currentLevel + 1

  'printMap()

  initStage()

  DisplayMap()

  xVel[400] = 0

  yVel[400] = 0

  Profiler_End()  ' for profile

EndSub' End Load and Display Next Level



Sub generateStack 'Generates a series of levels with increasing difficulty

  Profiler_Begin()                ' for profile

  Profiler_sub = "generateStack"  ' for profile

  numLevels = Stack.PopValue(jackStack)

  For iJ = 0 To numLevels

    Stack.PushValue(jackStack, iJ)

    generateMap()

    mapArray[iJ] = Stack.PopValue(mapStack) 

  EndFor

  Profiler_End()  ' for profile

EndSub 'End Generates a series of levels with increasing difficulty



Sub import'Import Assests

  Profiler_Begin()        ' for profile

  Profiler_sub = "import" ' for profile

  ImgPath = Program.Directory

  tag = ".png"

  

  image[0] = ImageList.LoadImage( ImgPath + "\Assets\"+ "floortile" + tag)

  image[1] = ImageList.LoadImage( ImgPath + "\Assets\"+ "wall" + tag )

  image[2] = ImageList.LoadImage( ImgPath + "\Assets\"+ "door" + tag)

  image[3] = ImageList.LoadImage( ImgPath + "\Assets\"+ "crate" + tag )

  image[4] = ImageList.LoadImage( ImgPath + "\Assets\"+ "peasantEnemy" + tag )

  image[5] = ImageList.LoadImage( ImgPath + "\Assets\"+ "rogueEnemy" + tag )

  image[6] = ImageList.LoadImage( ImgPath + "\Assets\"+ "knightEnemy" + tag )

  image[7] = ImageList.LoadImage( ImgPath + "\Assets\"+ "wizardEnemy" + tag )

  image[8] = ImageList.LoadImage( ImgPath + "\Assets\"+ "bossEnemy" + tag )

  image[9] = ImageList.LoadImage( ImgPath + "\Assets\"+ "pit" + tag )

  image[10] = ImageList.LoadImage( ImgPath + "\Assets\"+ "floor" + tag )

  image[11] = ImageList.LoadImage( ImgPath + "\Assets\"+ "wizard" + tag )

  image[12] = ImageList.LoadImage( ImgPath + "\Assets\"+ "0" + tag ) 

  image[13] = ImageList.LoadImage( ImgPath + "\Assets\"+ "S_Fire03" + tag ) 

  image[14] = ImageList.LoadImage( ImgPath + "\Assets\"+ "chicken" + tag ) 

  

  menu = ImageList.LoadImage(ImgPath + "\Assets\" + "menu" + ".png")

  menu2 = ImageList.LoadImage(ImgPath + "\Assets\" + "playbutt" + ".png")

  menu3 =  ImageList.LoadImage(ImgPath + "\Assets\" + "quitbutt" + ".png")

  deathScreen = ImageList.LoadImage(ImgPath + "\Assets\" + "gameOver" + ".png")

  Profiler_End()  ' for profile

EndSub'End Import Assets



Sub initStage 'Build Level

  Profiler_Begin()            ' for profile

  Profiler_sub = "initStage"  ' for profile

  moo = mapArray[currentLevel]

  

  lastIndex = 0

  doorI = 0

  For indexM = 0 To 9 'Start Super For

    

    For i = 0 To 399

      If ( indexM = 1) Then

        If moo[i] = 1 Then 'Load Wall Data

          sprites[1 + lastIndex] = image[1]

          health[1 + lastIndex] = -1

          speed[1 + lastIndex] = 0

          cordx[1 + lastIndex] = Math.Remainder(i, 20)*30

          cordy[1 + lastIndex] = Math.Floor(i/20)*30

          ID[1 + lastIndex] = 1

          lastIndex = lastIndex + 1

        EndIf 'End Load Wall Data

      EndIf

      If ( indexM = 2) Then

        If moo[i] = 2 Then 'Load Door Data

          sprites[1 + lastIndex] = image[2]

          health[1 + lastIndex] = -1

          speed[1 + lastIndex] = 0

          cordx[1 + lastIndex] = Math.Remainder(i, 20)*30

          cordy[1 + lastIndex] = Math.Floor(i/20)*30

          ID[1 + lastIndex] = 2

          door[1 + lastIndex] = doorI

          doorI = doorI + 1

          lastIndex = lastIndex + 1

        EndIf 'End Load Door Data

      EndIf

      If ( indexM = 3) Then

        If moo[i] = 3 Then 'Load Crate Data

          sprites[1 + lastIndex] = image[3]

          health[1 + lastIndex] = 1

          speed[1 + lastIndex] = 0

          cordx[1 + lastIndex] = Math.Remainder(i, 20)*30

          cordy[1 + lastIndex] = Math.Floor(i/20)*30

          ID[1 + lastIndex] = 3

          lastIndex = lastIndex + 1

        EndIf 'End Load Crate Data

      EndIf

      If ( indexM = 4) Then

        If moo[i] = 4 Then 'Load Peasant Data

          sprites[1 + lastIndex] = image[4]

          health[1 + lastIndex] = 1

          speed[1 + lastIndex] = 3

          stunTimer[1 + lastIndex] = 0

          cordx[1 + lastIndex] = Math.Remainder(i, 20)*30

          cordy[1 + lastIndex] = Math.Floor(i/20)*30

          ID[1 + lastIndex] = 4

          lastIndex = lastIndex + 1

          KillCount = KillCount + 1

        EndIf 'End Load Load Peasant Data

      EndIf

      If ( indexM = 5) Then

        If moo[i] = 5 Then 'Load Rogue Data

          sprites[1 + lastIndex] = image[5]

          health[1 + lastIndex] = 1

          speed[1 + lastIndex] = 4

          stunTimer[1 + lastIndex] = 0

          cordx[1 + lastIndex] = Math.Remainder(i, 20)*30

          cordy[1 + lastIndex] = Math.Floor(i/20)*30

          ID[1 + lastIndex] = 5

          lastIndex = lastIndex + 1

          KillCount = KillCount + 1

        EndIf 'End Load Rogue Data

      EndIf

      If ( indexM = 6) Then

        If moo[i] = 6 Then 'Load Knight Data

          sprites[1 + lastIndex] = image[6]

          health[1 + lastIndex] = 3

          speed[1 + lastIndex] = 2

          stunTimer[1 + lastIndex] = 0

          cordx[1 + lastIndex] = Math.Remainder(i, 20)*30

          cordy[1 + lastIndex] = Math.Floor(i/20)*30

          ID[1 + lastIndex] = 6

          lastIndex = lastIndex + 1

          KillCount = KillCount + 1

        EndIf 'End Load Wizard Data

      EndIf

      If ( indexM = 7) Then

        If moo[i] = 7 Then 'Load Wizard Data

          sprites[1 + lastIndex] = image[7]

          health[1 + lastIndex] = 1

          speed[1 + lastIndex] = 60

          stunTimer[1 + lastIndex] = 0

          cordx[1 + lastIndex] = Math.Remainder(i, 20)*30

          cordy[1 + lastIndex] = Math.Floor(i/20)*30

          ID[1 + lastIndex] = 7

          lastIndex = lastIndex + 1

          KillCount = KillCount + 1

        EndIf 'End Load Wizard Data

      EndIf

      If ( indexM = 8) Then

        If moo[i] = 8 Then 'Load Uber Data

          sprites[1 + lastIndex] = image[8]

          health[1 + lastIndex] = 2

          speed[1 + lastIndex] = 5

          stunTimer[1 + lastIndex] = 0

          cordx[1 + lastIndex] = Math.Remainder(i, 20)*30

          cordy[1 + lastIndex] = Math.Floor(i/20)*30

          ID[1 + lastIndex] = 8

          lastIndex = lastIndex + 1

          KillCount = KillCount + 1

        EndIf 'End Load Uber  Data

      EndIf

      If ( indexM = 4) Then

        If moo[i] = 9 Then 'Load Uber Data

          health[1 + lastIndex] = -1

          speed[1 + lastIndex] = 0

          cordx[1 + lastIndex] = Math.Remainder(i, 20)*30

          cordy[1 + lastIndex] = Math.Floor(i/20)*30

          ID[1 + lastIndex] = 9

          lastIndex = lastIndex + 1

        EndIf 'End Load Uber  Data

      EndIf

      

      If(lastIndex = 178) Then

        Goto breakM

      EndIf

      

    EndFor

    

    breakM:

  EndFor ' End Super For

  

  For indexX = 0 To 399

    If(ID[indexX] = 4 Or ID[indexX] = 5 Or ID[indexX] = 6 Or ID[indexX] = 7 Or ID[indexX] = 8) Then

      

      startActive = indexX

      

      Goto break1

    EndIf

  EndFor

  break1:

  For indexX = 399 To 0  Step -1

    If(ID[indexX] = 4 Or ID[indexX] = 5 Or ID[indexX] = 6 Or ID[indexX] = 7 Or ID[indexX] = 8) Then

      

      stopActive = indexX

      

      Goto break2

    EndIf

  EndFor

  break2:

  

  firestart = stopActive

  firecycle = 1

  fireRate = 0

  For i = 1 To 3

    sprites[1 + lastIndex] = image[13]

    health[1 + lastIndex] = 5

    speed[1 + lastIndex] = 5

    stunTimer[1 + lastIndex] = 0

    cordx[1 + lastIndex] = -20

    cordy[1 + lastIndex] = -20

    ID[1 + lastIndex] = 13

    lastIndex = lastIndex + 1

    stopActive = stopActive + 1

  EndFor

  

  health[400] = 1

  If(wizDoor = 1) Then

    cordx[400] = 33 + Math.Remainder(200 , 20)*30

    cordy[400] = Math.Floor(200 /20)*30

  ElseIf wizDoor = 2 Then

    cordx[400] = Math.Remainder(219, 20)*30 - 30

    cordy[400] = Math.Floor(219 /20)*30

  elseIf wizDoor = 3 Then

    cordx[400] = Math.Remainder(390 , 20)*30

    cordy[400] = Math.Floor(390 /20)*30 - 35

  Else

    cordx[400] = Math.Remainder(10, 20)*30

    cordy[400] = Math.Floor(25/20)*30

  EndIf

  

  ID[400] = 11  

  Profiler_End()  ' for profile

EndSub 'End Build Level



Sub DisplayMap 'Display Map

  Profiler_Begin()            ' for profile

  Profiler_sub = "DisplayMap" ' for profile

  

  displayTiles()

  displayInactive()

  displayActive()

  

  Profiler_End()  ' for profile

EndSub 'End Display  Map 



Sub displayTiles 'Display all floor tiles

  Profiler_Begin()              ' for profile

  Profiler_sub = "displayTiles" ' for profile

  For i = 0 To 399

    GraphicsWindow.DrawImage(image[0], Math.Remainder(i, 20)*30, Math.Floor(i/20)*30)

  EndFor

  

  For i = 0 To 399

    If(ID[i] = 3) Then

      GraphicsWindow.DrawImage(image[12], cordx[i], cordy[i])

    EndIf

  EndFor

  Profiler_End()  ' for profile

EndSub 'End Displays all floor tiles



Sub displayInactive 'Display all inactive tiles

  Profiler_Begin()                  ' for profile

  Profiler_sub = "displayInactive"  ' for profile

  For i = 0 To 400 

    If(ID[i] = 3 Or ID[i] = 2 Or ID[i] = 1 Or ID[i] = 9) Then

      sprites[i] = Shapes.AddImage(image[ID[i]])

      Shapes.Move(sprites[i], cordx[i], cordy[i])

    EndIf

  EndFor

  Profiler_End()  ' for profile

EndSub 'End Display all inactive tiles



Sub displayActive 'Display all active tiles

  Profiler_Begin()                ' for profile

  Profiler_sub = "displayActive"  ' for profile

  For i = 0 To 400 

    If(ID[i] = 4 Or ID[i] = 5 Or ID[i] = 6 Or ID[i] = 7 Or ID[i] = 8 Or ID[i] = 11 Or ID[i] = 13) Then

      sprites[i] = Shapes.AddImage(image[ID[i]])

      Shapes.Move(sprites[i], cordx[i], cordy[i])

    EndIf

  EndFor

  Profiler_End()  ' for profile

EndSub 'End Display all active tiles



Sub unloadMap 'Clear Stage data

  Profiler_Begin()            ' for profile

  Profiler_sub = "unloadMap"  ' for profile

  

  GraphicsWindow.Clear()

  For i = 0 To 400

    Shapes.Remove(sprites[i])

  EndFor

  sprites = "blank"

  health = "blank"

  speed = "blank"

  cordx = "blank"

  cordy = "blank"

  ID = "blank"

  

  Profiler_End()  ' for profile

EndSub 'End Clear Stage data



Sub generateMap 'Generate Map

  Profiler_Begin()              ' for profile

  Profiler_sub = "generateMap"  ' for profile

  

  diff = Stack.PopValue(mapStack)

  

  i = 0

  

  'Initializes Floor to 0, Walls to 1, Doors to 2

  For i = 0 To 399 

    map[i] = 0

    If (i < 20 Or i > 379 Or Math.Remainder(i,20) = 0 Or Math.Remainder(i,20) = 19) Then

      map[i] = 1

    EndIf

    If( i = 10 Or i = 200 Or i = 219 Or i = 390) Then

      map[i] = 2

    EndIf 

  EndFor

  

  blockCount = 15

  While( blockCount > 0)  'Places features in room

    theDice = Math.GetRandomNumber(4)- 1

    cord = Math.GetRandomNumber(400) - 1

    If( map[cord] <> 1 and map[cord] <> 2 and map[cord] <> 3 and map[cord] <> 9 and map[cord + 20] <> 2 and map[cord - 20] <> 2 and map[cord + 1] <> 2 and map[cord - 1] <> 2) Then 'Master Check

      

      If( theDice = 0) Then   'Make walls

        

        wallLength = Math.GetRandomNumber(5)

        theCoin = Math.GetRandomNumber(2)

        If( theCoin = 1) Then 'Make Horizontal Wall

          

          if (cord + wallLength < 400)Then

            For i1 = 0 To wallLength

              

              If( map[cord + i1] <> 1 and map[cord + i1] <> 2 and  map[cord + i1] <> 9 and map[cord + i1 + 20] <> 2 and map[cord + i1 - 20] <> 2) Then

                map[cord + i1] = 3

                blockCount = blockCount - 1

              EndIf

            EndFor

          EndIf

          

        Else'Make Vertical Wall

          

          if (cord + (20 * wallLength) < 400)THen

            For i1 = 0 To wallLength

              If( map[cord + (20 *i1) - 1] <> 2 and map[cord + (20 *i1) + 1] <> 2 and map[cord + (20 *i1)] <> 1 and map[cord + (20 *i1)] <> 2 and map[cord + (20 *i1)] <> 3 and map[cord + (20 *i1)] <> 9) Then

                map[cord + (20 *i1)] = 3

                blockCount = blockCount - 1

              EndIf

            EndFor

          EndIf

        EndIf'End Make Vertical Wall && End Horizontal Wall

        

      EndIf 'End Wall

      If(map[cord] <> 1 and map[cord] <> 2 and map[cord + 1] <> 2 and map[cord - 1] <> 2 and map[cord + 20] <> 2 and map[cord - 20] <> 2)Then'Next to door check

        If(theDice = 1 Or theDice = 2) then  'Make Block

          map[cord] = 3

          blockCount = blockCount - 1

        EndIf 'End Make Block

        

        if(theDice = 3) then 'Make Pit

          map[cord] = 9

          blockCount = blockCount - 1

        EndIf 'End Make Pit

        

      EndIf ' End Next to door check

      

    EndIf 'End MasterCheck

    

  EndWhile'End feature generator

  

  seed = diff + Math.GetRandomNumber(5)

  While(seed > 0)'Mob Generation

    mob = Math.GetRandomNumber(106 + (5 * diff))

    cord = Math.GetRandomNumber(400) - 1

    if(map[cord] <> 1 and map[cord] <> 2 and map[cord]<> 3 and map[cord] <> 9 And map[cord + 1] <> 2 and map[cord - 1] <> 2 and map[cord + 20] <> 2 and map[cord - 20] <> 2 And map[cord + 2] <> 2 and map[cord - 2] <> 2 and map[cord + 40] <> 2 and map[cord - 40] <> 2) Then 'Master Check

      

      If(cord < 30)Then

        cord = cord + 80

      EndIf

      

      If(cord > 370)Then

        cord = cord - 80

      EndIf

      

      If(Math.Remainder(cord, 20) < 4)Then

        cord = cord + 10

      EndIf

      

      If(Math.Remainder(cord, 20) > 16)Then

        cord = cord - 10

      EndIf

      

      ' Spawn Peasant

      if (mob < 41) Then

        map[cord] = 4

        seed = seed - 1

      EndIf

      

      'Spawn Rogue

      if (40 < mob and mob < 76)  Then        

        map[cord] = 5

        seed = seed - 2

      EndIf

      

      ' Spawn Knight

      if (75 < mob and mob < 91 ) Then

        map[cord] = 6

        seed = seed - 3

      EndIf

      

      ' Spawn Wizard

      if (90 < mob and mob <= 100 + (2.5 * diff))  Then        

        map[cord] = 7

        seed = seed - 4

      EndIf

      ' Spawn UberBoss

      if (100 + (2.5 * diff) < mob and mob <= 105 + (2.5 * diff)) Then

        map[cord] = 8

        seed = seed - 9

      EndIf

      

    endIF 'End Master Check

    

  EndWhile 'End Mob Generation

  

  Stack.PushValue(mapStack, map)

  

  Profiler_End()  ' for profile

EndSub 'End Generate Map



sub MouseMove

  Profiler_Begin()            ' for profile

  Profiler_sub = "MouseMove"  ' for profile

  

  GVX = GraphicsWindow.MouseX - cordx[400]

  GVY = GraphicsWindow.MouseY - cordy[400]

  Gmag = Math.SquareRoot(GVX * GVX + GVY * GVY)

  

  If Mouse.IsLeftButtonDown Then

    xVel[400] = 1.5 * (GVX / Gmag)

    yVel[400] = 1.5 * (GVY / Gmag)

  ElseIf Mouse.IsRightButtonDown Then 

    xVel[400] = -1.5 * (GVX / Gmag)

    yVel[400] = -1.5 * (GVY / Gmag)

  Else

    xVel[400] = 0

    yVel[400] = 0

  EndIf

  

  cordx[400] = cordx[400] + 2 * xVel[400]

  cordy[400] = cordy[400] + 2 * yVel[400]

  

  Shapes.Move(sprites[400], cordx[400], cordy[400])

  

  If(GraphicsWindow.MouseX >= cordx[400]) Then 'start rot

    Shapes.Rotate(sprites[400], Math.ArcTan(( cordy[400] - GraphicsWindow.MouseY) / (cordx[400] - GraphicsWindow.MouseX + 10)) * (180 / Math.Pi) +180)

  else

    Shapes.Rotate(sprites[400], Math.ArcTan(( cordy[400] - GraphicsWindow.MouseY) / (cordx[400] - GraphicsWindow.MouseX + 10)) * (180 / Math.Pi) )

  endif

  

  fireRate = fireRate + 1

  

  If GraphicsWindow.LastKey = "Space" And fireRate > 30 Then 'Fireball

    If gi = 0 Then

      cordx[firestart + firecycle] = cordx[400] 

      cordy[firestart + firecycle] = cordy[400]

      xVel[firestart + firecycle] = 8 * (GVX / Gmag)

      yVel[firestart + firecycle] = 8 * (GVY / Gmag)

      firecycle = firecycle + 1

      fireRate = 0

      If firecycle = 4 Then

        firecycle = 1

      EndIf

      gi = 1 

    EndIf

    

  EndIf

  

  GraphicsWindow.KeyDown = setiToZero

  

  Profiler_End()  ' for profile

EndSub 



Sub setiToZero ' needed evil

  Profiler_Begin()            ' for profile

  Profiler_sub = "setiToZero" ' for profile

  gi = 0

  Profiler_End()  ' for profile

EndSub ' EndMovement





Sub collision

  Profiler_Begin()            ' for profile

  Profiler_sub = "collision"  ' for profile

  

  'Only check each pair once

  For gj = 1 To startActive - 1 ' start collision For

    

    If (cordx[gL] < cordx[gj] + 30 And cordx[gL] + 30 > cordx[gj] And cordy[gL] < cordy[gj] + 30 And cordy[gL] + 30 > cordy[gj]) Then 'start box if

      

      If ID[gL] >= 4 and ID[gL] <= 8 Then ' mob collisions

        If ID[gj] = 1 Then 'Wall collide

        EndIf

        If ID[gj] = 2 Then ' Door collide

        EndIf

        If ID[gj] = 3 Then 'Create collide

          cordx[gj] = -90

          cordy[gj] = -90

          

          Shapes.Move(sprites[gj], cordx[gj], cordy[gj])

          

          xVel[gL] = 0

          yVel[gL] = 0

          

          stunTimer[gL]  = 30

          

        EndIf

        If ID[gj] = 9 Then 'Pit collide

          

          stunTimer[gL] = 1

          

        EndIf

        

      EndIf

      

      if ID[gL] = 11 Then 'Player collisions

        If ID[gj] = 1 Then 'Wall collide

          GVX = cordx[gj] - cordx[400]

          GVY = cordy[gj] - cordy[400]

          Gmag = Math.SquareRoot(GVX * GVX + GVY * GVY)

          cordx[400] = cordx[400] - 3 * (GVX/Gmag)

          cordy[400] = cordy[400] - 3 * (GVY/Gmag)

        EndIf

        If ID[gj] = 2 Then ' Door collide

          If(KillCount <= 0) Then

            

            KillCount = 0

            wizDoor = door[gj]

            unloadMap()

            nextLevel()

          Else

            GVX = cordx[gj] - cordx[400]

            GVY = cordy[gj] - cordy[400]

            Gmag = Math.SquareRoot(GVX * GVX + GVY * GVY)

            cordx[400] = cordx[400] - 3 * (GVX/Gmag)

            cordy[400] = cordy[400] - 3 * (GVY/Gmag)

            

          EndIf

        EndIf

        If ID[gj] = 3 Then 'Create collide

          GVX = cordx[gj] - cordx[400]

          GVY = cordy[gj] - cordy[400]

          Gmag = Math.SquareRoot(GVX * GVX + GVY * GVY)

          cordx[400] = cordx[400] - 3 * (GVX/Gmag)

          cordy[400] = cordy[400] - 3 * (GVY/Gmag)

        EndIf

        

      EndIf 'endplayer collision 

      

      If ID[gL] = 13 Then 'fireball collision

        If ID[gj] = 1 Then 'Wall collide

          cordx[gL] = -31

          cordy[gL] = -31

          xVel[gL] = 0

          yVel[gL] = 0

        EndIf

        If ID[gj] = 2 Then ' Door collide

          cordx[gL] = -31

          cordy[gL] = -31

          xVel[gL] = 0

          yVel[gL] = 0

          

        EndIf

        If ID[gj] = 3 Then 'Create collide

          cordx[gL] = -31

          cordy[gL] = -31

          xVel[gL] = 0

          yVel[gL] = 0

          

          cordx[gj] = -90

          cordy[gj] = -90

          

          Shapes.Move(sprites[gj], cordx[gj], cordy[gj])

          

        EndIf

      EndIf 'end fireball collision

      

    EndIf 'end box if

  EndFor 'end collision For

  

  If ID[gL] = 13 Then 'start fire enemy collision

    for gj = startActive To firestart

      If (cordx[gL] < cordx[gj] + 30 And cordx[gL] + 30 > cordx[gj] And cordy[gL] < cordy[gj] + 30 And cordy[gL] + 30 > cordy[gj]) Then 'start box if

        health[gj] = health[gj] - 1

        cordx[gL] = -31

        cordy[gL] = -31

        xVel[gL] = 0

        yVel[gL] = 0

        If health[gj] < 1 Then

          KillCount = KillCount - 1

          chicken = Shapes.AddImage(image[14])

          Shapes.Move(chicken, cordx[gj] + 15, cordy[gj] + 15)

          cordx[gj] = -350

          cordy[gj] = -350

        EndIf

        

      EndIf

    EndFor

  EndIf 

  

  If gL <> 400 And ID[gL] <> 13 Then 'check if not wizard

    If (cordx[gL] < cordx[400] + 30 And cordx[gL] + 30 > cordx[400] And cordy[gL] < cordy[400] + 30 And cordy[gL] + 30 > cordy[400]) Then 'std bb collision

      

      death()

      isDead = 1 

      KillCount = 0

      

    EndIf

  EndIf

  

  Profiler_End()  ' for profile

EndSub



Sub pathing 'Determines 

  Profiler_Begin()          ' for profile

  Profiler_sub = "pathing"  ' for profile

  For i = startActive To firestart

    If health[i] >= 1  Then

      

      GVX = cordx[400] - cordx[i]

      GVY = cordy[400] - cordy[i]

      Gmag = Math.SquareRoot(GVX * GVX + GVY * GVY)

      xVel[i] = speed[i] * (GVX / Gmag)

      yVel[i] = speed[i] * (GVY / Gmag)

      If(stunTimer[i] > 0) Then

        xVel[i] = xVel[i] / 3

        yVel[i] = yVel[i] / 3

        If ID[i] = 7  Then

          xVel[i] = xVel[i] / 27

          yVel[i] = yVel[i] / 27

        Endif

      EndIf

      If cordx[400] >= cordx[i] Then 'start rot

        Shapes.Rotate(sprites[i], Math.ArcTan(( cordy[i] - cordy[400]) / (cordx[i] - cordx[400] + 10)) * (180 / Math.Pi) - 180)

      else

        Shapes.Rotate(sprites[i], Math.ArcTan(( cordy[i] - cordy[400]) / (cordx[i] - cordx[400] + 10)) * (180 / Math.Pi) )

      endif    

      

      If ID[i] = 7 And stunTimer[i] = 0  Then

        stunTimer[i] = 60

      EndIf

      

    Else

      

      xVel[i] = 0

      yVel[i] = 0

      

    EndIf

    

  EndFor

  

  Profiler_End()  ' for profile

EndSub



Sub moveSprites

  Profiler_Begin()              ' for profile

  Profiler_sub = "moveSprites"  ' for profile

  For i = startActive To stopActive   

    cordx[i] = cordx[i] + xVel[i]

    cordy[i] = cordy[i] + yVel[i]

    

    Shapes.Move(sprites[i], cordx[i], cordy[i])

    

    If(stunTimer[i] > 0)Then

      stunTimer[i] = stunTimer[i] - 1

    EndIf

    

  EndFor

  Profiler_End()  ' for profile

EndSub



Sub Profiler_Init ' for profile

  Timer.Interval = 50

  Timer.Tick = Profiler_OnTick

EndSub



Sub Profiler_OnTick ' for profile

  profile[Profiler_sub] = profile[Profiler_sub] + 1

EndSub



Sub Profiler_Begin

  Stack.PushValue("local", Profiler_sub)

EndSub



Sub Profiler_End

  Profiler_sub = Stack.PopValue("local")

EndSub



Sub Profiler_Dump ' for profile

  nProfile = Array.GetItemCount(profile)

  index = Array.GetAllIndices(profile)

  For iProfile = 1 To nProfile

    TextWindow.WriteLine(index[iProfile] + " : " + profile[index[iProfile]])

  EndFor

  TextWindow.WriteLine("")

EndSub


