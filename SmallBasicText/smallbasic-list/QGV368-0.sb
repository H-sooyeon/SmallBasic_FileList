GraphicsWindow.BackgroundColor="teal
GraphicsWindow.Title = "Small Basic Logo"
gw = 598
gh = 428
GraphicsWindow.Width = gw
GraphicsWindow.Height = gh
While "True"
  DrawLogo()
  Program.Delay(1500)
  GraphicsWindow.Clear()
  
EndWhile

Sub DrawLogo
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Black"
  mask = Shapes.AddRectangle(gw , gh)
  Shapes.SetOpacity(mask, 0)
  
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.FillEllipse(120, 150, 100, 100)
  param = "x=120;y=150;size=50;color=Orange
  AddSquare()
  param = "x=170;y=200;size=50;color=Red
  AddSquare()
  param = "x=170;y=150;size=50;color=Lime
  AddSquare()
  param = "x=120;y=200;size=50;color=Blue
  AddSquare()
  GraphicsWindow.BrushColor = "White"
  n = 8       ' octagon
  x1 = 170    ' center
  y1 = 200
  r = 32      ' circumradius
  x2 = x1     ' top vertex
  y2 = y1 - r
  RegularPolygon()
  GraphicsWindow.BrushColor = "DimGray"
  r = 28      ' circumradius
  y2 = y1 - r
  RegularPolygon()
  Program.Delay(500)
  GraphicsWindow.BrushColor = "White"
  r = 21      ' circumradius
  y2 = y1 - r
  RegularPolygon()
  GraphicsWindow.PenColor = "DimGray"
  GraphicsWindow.PenWidth = 6
  GraphicsWindow.DrawLine(x1 - 24, y1, x1 + 24, y1)
  GraphicsWindow.PenWidth = 16
  GraphicsWindow.DrawLine(x1, y1 - 24, x1, y1 + 24)
  Program.Delay(500)
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 4
  GraphicsWindow.DrawLine(x1 - 15, y1 - 5, x1, y1 - 5)
  GraphicsWindow.DrawLine(x1 - 28, y1 + 5, x1 - 15, y1 + 5)
  GraphicsWindow.DrawLine(x1, y1 - 50, x1, y1 + 50)
  GraphicsWindow.DrawLine(x1 - 50, y1, x1 - 30, y1)
  GraphicsWindow.DrawLine(x1 + 30, y1, x1 + 50, y1)
  r2 = 30
  r3 = 52
  r4 = 440
  For a = 0 To 315 Step 45
    _a = Math.GetRadians(a)
    x2 = x1 + r2 * Math.Sin(_a)
    y2 = y1 + r2 * Math.Cos(_a)
    x3 = x1 + r3 * Math.Sin(_a)
    y3 = y1 + r3 * Math.Cos(_a)
    x4 = x1 + r4 * Math.Sin(_a)
    y4 = y1 + r4 * Math.Cos(_a)
    If Math.Remainder(a, 90) <> 0 Then
      GraphicsWindow.DrawLine(x2, y2, x3, y3)
    EndIf
    light[a] = Shapes.AddLine(x1, y1, x4, y4)
  EndFor
  GraphicsWindow.FontBold = "False"
  GraphicsWindow.BrushColor = "darkblue
  GraphicsWindow.FontName = "Segoe UI Semibold"
  GraphicsWindow.FontSize = 21
  GraphicsWindow.DrawText(230, 160, "Microsoft")
  GraphicsWindow.FontName = "Segoe UI  
  GraphicsWindow.FontSize = 20
  GraphicsWindow.FontItalic="true
  GraphicsWindow.BrushColor = "white
  GraphicsWindow.DrawText(230, 230, "Every Kid Can Code")
  
  GraphicsWindow.FontItalic="false
  GraphicsWindow.FontName = "Segoe Print"
  GraphicsWindow.FontSize = 40
  GraphicsWindow.BrushColor = "darkblue
  GraphicsWindow.DrawText(232, 172, "Small Basic")
  GraphicsWindow.BrushColor = "#F4501F"
  GraphicsWindow.DrawText(230, 170, "Small Basic")
  GraphicsWindow.PenWidth = 3
  GraphicsWindow.PenColor = "#FCB901"
  args=0
  
  For op = 80 To 0 Step -1
    Shapes.SetOpacity(mask, op)
    Program.Delay(10)
  EndFor
  For op = 100 To 0 Step -1
    For a = 0 To 315 Step 45
      Shapes.SetOpacity(light[a], op)
    EndFor
    Program.Delay(5)
  EndFor
  LDCall.Function5  ("tline" 230, 227, 460-230, 90 500)
  
  LDCall.Function5  ("tline" 0 0, 30, 180 500)
  LDCall.Function5  ("tline" 0 0, 460-230+6, 270 500)
  Turtle.Turn(-45)
  For x=1 To 263
    If x>74 Then
      Turtle.PenUp ()
      Turtle.Speed=10
    EndIf 
    
    Turtle.Turn (3.8)
    Turtle.Move (5.25)
  EndFor
  Turtle.Speed=8
  Turtle.Angle=90
  Turtle.PenDown() 
  Turtle.Move(120)
  For r=1 To 3 
    Turtle.TurnRight ()
    Turtle.Move(10)
    Turtle.TurnLeft ()
    Turtle.Move(10)
  EndFor
  Turtle.Move(90)
  Turtle.Hide ()
EndSub

Sub tline
  LDShapes.ResetTurtle ()
  Turtle.Angle=args[4]
  Turtle.PenUp ()
  Turtle.speed=9
  If args[1]+args[2]<>0 then
    Turtle.x=args[1] 
    Turtle.Y=args[2]
  endif
  Turtle.PenDown() 
  Turtle.Move (args[3])
  Program.Delay (args[5])
EndSub 

Sub AddSquare
  width = param["size"]
  x = param["x"]
  y = param["y"]
  addColor = param["color"]
  GraphicsWindow.PenWidth =2
  GraphicsWindow.PenColor ="teal
  GraphicsWindow.DrawRectangle (x y width width ) 
  LDGraphicsWindow.FloodFill (x+width/2 y+ width/2 addColor )  
EndSub

Sub GetLine
  ' param x, y - left end position of the line
  ' param width - of the line
  ' return seg - segment array for the line
  seg = ""
  iSeg = 0
  For _x = x To x + width - 1
    color = GraphicsWindow.GetPixel(_x, y)
    If seg[iSeg]["color"] <> color Then
      iSeg = iSeg + 1
      seg[iSeg]["color"] = color
      seg[iSeg]["x"] = _x
      seg[iSeg]["y"] = y
      seg[iSeg]["width"] = 1
    Else
      seg[iSeg]["width"] = seg[iSeg]["width"] + 1
    EndIf
  EndFor
EndSub

Sub AddLine
  ' param seg - segment array for a line
  ' param subColor - color to subtract
  nSeg = Array.GetItemCount(seg)
  index = Array.GetAllIndices(seg)
  color2 = addColor
  For iSeg = 1 To nSeg
    color1 = seg[iSeg]["color"]
    
    GraphicsWindow.BrushColor = color2
    GraphicsWindow.FillRectangle(seg[iSeg]["x"], seg[iSeg]["y"], seg[iSeg]["width"], 1)
  EndFor
EndSub

Sub RegularPolygon
  '  GraphicsWindow.PenWidth=0
  
  'pp=LDShapes.AddRegularPolygon (n r)
  '  ldShapes.centre (pp x1 y1)
  
  For i = 1 To n
    a = 2 * Math.Pi * i / n
    x3 = x1 + r * Math.Sin(a)
    y3 = y1 - r * Math.Cos(a)
    GraphicsWindow.FillTriangle(x1, y1, x2, y2, x3, y3) ' fill
    'GraphicsWindow.DrawLine(x2, y2, x3, y3)             ' draw
    x2 = x3
    y2 = y3
  EndFor
EndSub

