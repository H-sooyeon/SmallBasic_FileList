'Graph Paper and cartician geometry equations



'Note Good use of MoveTo property





'====================================



Timer.Tick = OnTick



GH = Desktop.Height

GW = Desktop.Width

GraphicsWindow.Width = GW

GraphicsWindow.Height = GH

GraphicsWindow.Left = 0

GraphicsWindow.Top = 0

GraphicsWindow.CanResize = "False"

Timer.Interval = 1000



'Gp GarphPaper

GpH = 0.9*GH

GpW = GpH

GpL = (GW - GpW)/2

GpT = (GH - GpH)/2

DrawNumbers()



GraphicsWindow.DrawRectangle(GpL,GpT,GpW,GpH)

GraphicsWindow.BrushColor = GraphicsWindow.BackgroundColor

FxnChngCord_Parameter["X"] = 0

FxnChngCord_Parameter["Y"] = 0

FxnChngCord_Return["XT"] = 0

FxnChngCord_Return["YT"] = 0









Sub OnTick

  GraphicsWindow.FillRectangle(GpL,GpT,GpW,GpH) 

    

  DrawOrigin()

  DrawAxis()

  TimeSec = Clock.Second

  TimeMin = Clock.Minute

  TimeHrs = Clock.Hour



  DrawSecondArm()

  DrawMinuteArm()

  DrawHoursArm()

EndSub







Sub DrawOrigin

  'Draw Origin

  FxnChngCord_Parameter["X"] = 0

  FxnChngCord_Parameter["Y"] = 0

  FxnChngCord()

  OrginX = FxnChngCord_Return["XT"] 'X Value

  OrginY = FxnChngCord_Return["YT"] 'Y Value

  GraphicsWindow.FillEllipse(OrginX - 10,OrginY - 10, 20, 20)

EndSub



Sub DrawAxis

  GraphicsWindow.PenWidth = 1

  'Draw Y  axis

  FxnChngCord_Parameter["X"] = 0

  FxnChngCord_Parameter["Y"] = GpH/2

  FxnChngCord()

  TX1 = FxnChngCord_Return["XT"] 'X Value

  TY1 = FxnChngCord_Return["YT"] 'Y Value

  FxnChngCord_Parameter["X"] = 0

  FxnChngCord_Parameter["Y"] = -GpH/2

  FxnChngCord()

  TX2 = FxnChngCord_Return["XT"] 'X Value

  TY2 = FxnChngCord_Return["YT"] 'Y Value

  GraphicsWindow.DrawLine(TX1,TY1,TX2,TY2)



  'Draw X  axis

  FxnChngCord_Parameter["X"] = GpW/2

  FxnChngCord_Parameter["Y"] = 0

  FxnChngCord()

  TX1 = FxnChngCord_Return["XT"] 'X Value

  TY1 = FxnChngCord_Return["YT"] 'Y Value

  FxnChngCord_Parameter["X"] = -GpW/2

  FxnChngCord_Parameter["Y"] = 0

  FxnChngCord()

  TX2 = FxnChngCord_Return["XT"] 'X Value

  TY2 = FxnChngCord_Return["YT"] 'Y Value

  GraphicsWindow.DrawLine(TX1,TY1,TX2,TY2)

EndSub





Sub DrawSecondArm

  GraphicsWindow.PenColor = "Red"

  GraphicsWindow.PenWidth = 2

  Angle = -(6*TimeSec-90)

  TimeSecX = 250*Math.Cos(Math.GetRadians(Angle))

  TimeSecY = 250*Math.Sin(Math.GetRadians(Angle))

  FxnChngCord_Parameter["X"] = TimeSecX

  FxnChngCord_Parameter["Y"] = TimeSecY

  FxnChngCord()

  TimeSecX = FxnChngCord_Return["XT"]

  TimeSecY = FxnChngCord_Return["YT"]

  GraphicsWindow.DrawLine(OrginX,OrginY,TimeSecX,TimeSecY)

EndSub



Sub DrawMinuteArm

  GraphicsWindow.PenColor = "DarkBlue"

  GraphicsWindow.PenWidth = 4

  Angle = -(6*(TimeMin + TimeSec/60) -  90)

  TimeMinX = 220*Math.Cos(Math.GetRadians(Angle))

  TimeMinY = 220*Math.Sin(Math.GetRadians(Angle))

  FxnChngCord_Parameter["X"] = TimeMinX

  FxnChngCord_Parameter["Y"] = TimeMinY

  FxnChngCord()

  TimeMinX = FxnChngCord_Return["XT"]

  TimeMinY = FxnChngCord_Return["YT"]

  GraphicsWindow.DrawLine(OrginX,OrginY,TimeMinX,TimeMinY)

EndSub



Sub DrawHoursArm

  GraphicsWindow.PenColor = "DarkBlue"

  GraphicsWindow.PenWidth = 6

  If TimeHrs > 12 Then

    TimeHrs = TimeHrs - 12

  EndIf

  Angle = -(30*(TimeHrs + TimeMin/60) -  90)

  TimeHrsX = 170*Math.Cos(Math.GetRadians(Angle))

  TimeHrsY = 170*Math.Sin(Math.GetRadians(Angle))

  FxnChngCord_Parameter["X"] = TimeHrsX

  FxnChngCord_Parameter["Y"] = TimeHrsY

  FxnChngCord()

  TimeHrsX = FxnChngCord_Return["XT"]

  TimeHrsY = FxnChngCord_Return["YT"]

  GraphicsWindow.DrawLine(OrginX,OrginY,TimeHrsX,TimeHrsY)

EndSub







Sub DrawNumbers

  GraphicsWindow.FontSize = 36

  For I = 1 To 12

    Angle = 30*I

    Angle = -(Angle - 90)

    lblNumber = Shapes.AddText(I)

    NumberX[I] = 260*Math.Cos(Math.GetRadians(Angle)) 

    NumberY[I] = 260*Math.Sin(Math.GetRadians(Angle)) 

    FxnChngCord_Parameter["X"] = NumberX[I]

    FxnChngCord_Parameter["Y"] = NumberY[I]

    FxnChngCord()

    NumberX[I] = FxnChngCord_Return["XT"]

    NumberY[I] = FxnChngCord_Return["YT"]

    Shapes.Move(lblNumber, NumberX[I]-20, NumberY[I]-20)  

  EndFor

EndSub





Sub FxnChngCord

  tempX = FxnChngCord_Parameter["X"]

  TempY = FxnChngCord_Parameter["Y"]

  

  FxnChngCord_Return["XT"] = tempX + (GpL + GpW/2)

  FxnChngCord_Return["YT"] = (GpT + GpH/2) - tempY

    

EndSub

  


