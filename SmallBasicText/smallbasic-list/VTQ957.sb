' this program uses sb-logger for logging (but you don't need it to run the program)
' http://gallery.technet.microsoft.com/sb-logger-A-Small-Basic-afcc91ad

' can have any value but -1, 0 and 1
NOT_DEFINED = 123

' create an ascii table for fast character to number translation
For i = 0 To 255
  ascii[Text.GetCharacter(i)] = i
EndFor


'--------------------------------------------------------------
' TEST
'--------------------------------------------------------------
N = 1000                         ' number of comparisions
SHOW_OUTPUT = "False" ' show output (slows down)

' this is done before the clock starts to run, because the test
' should only measure the speed of the TextComparision routine
' and not how fast you can read from a file
LoadWords()
TextWindow.WriteLine("start test...")
start = Clock.ElapsedMilliseconds

For i = 1 To N*2 Step 2
  text_a = words[i]
  text_b = words[i+1]
  'LOG ""
  'LOG "compare " + text_a + " and " + text_b
  TextCompare()
EndFor

end = Clock.ElapsedMilliseconds
TextWindow.WriteLine(N + " comparisions of two words took " + (end-start) + " ms")
'--------------------------------------------------------------



Sub TextCompare
  index = 1
  length = Math.Min(Text.GetLength(text_a), Text.GetLength(text_b))
  relation = NOT_DEFINED
  
  While (relation = NOT_DEFINED And index <= length)
    a = ascii[Text.GetSubText(text_a, index, 1)]
    b =  ascii[Text.GetSubText(text_b, index, 1)]
    'LOG "  index = " + index + ", " + Text.GetSubText(text_a, index, 1) + " = " + a + ", " + Text.GetSubText(text_b, index, 1) + " = " + b
    
    If a < b Then
      'LOG "  " + Text.GetSubText(text_a, index, 1) + " < " + Text.GetSubText(text_b, index, 1)
      relation = -1 
    ElseIf a > b Then
      'LOG "  " + Text.GetSubText(text_a, index, 1) + " > " + Text.GetSubText(text_b, index, 1)
      relation = 1
    Else
      'LOG "  " + Text.GetSubText(text_a, index, 1) + " = " + Text.GetSubText(text_b, index, 1)
    EndIf
    
    index = index + 1
  EndWhile
  
  ' if the two words are the same but one is shorter than the other
  ' [shorter word]  <   [longer word]
  If index > length And relation = NOT_DEFINED then
    If Text.GetLength(text_a) < Text.GetLength(text_b) Then
      relation = -1
    ElseIf Text.GetLength(text_b) < Text.GetLength(text_a) Then
      relation = 1
    Else
      relation = 0
    EndIf
  EndIf
  
  ' output result
  If SHOW_OUTPUT then
    If relation = -1 Then
      TextWindow.WriteLine(text_a + " < " + text_b)
    ElseIf relation = 1 Then
      TextWindow.WriteLine(text_b + " < " + text_a)
    Else
      TextWindow.WriteLine(text_a + " = " + text_b)
    EndIf
  EndIf
EndSub

' load the needed words from a file
Sub LoadWords
  TextWindow.WriteLine("load words...")
  
  For i = 1 To N*2 Step 2
' The following line could be harmful and has been automatically commented.
'     words[i] = File.ReadLine(Program.Directory + "\words.ard", Math.GetRandomNumber(N))
' The following line could be harmful and has been automatically commented.
'     words[i+1] = File.ReadLine(Program.Directory + "\words.ard", Math.GetRandomNumber(N))
  EndFor
EndSub
