'Solve the following equation, finding the number of positive integer solutions for x,y,z
'1000+x+y+z = xyz
'First we make guess for x and y, then solve for z
'Transformed to solve for z=(1000+x+y)/(x*y-1)
'Finally we check the value for z calculated is an integer

'By symetry we find the solutions with y>=x only
'If x <> y then there are 2 ways to swap the x and y values
'If x = y then swaping the x and y values gives the same result

'Is there a solution with x=y=1?
'1000+1+1+z = z (not possible), therefore no

'There is a maximum value for z, since xyz rises faster than x+y+z for all x or y > 1 (remember x=y=1 is not possible)
'As x or y increase, z decreases, therefore as x or y decrease z increases
'z is max when x,y are min, this is x,y = 1,2 or 2,1 and z = (1000+1+2)/(1*2-1) = 1000+3 = 1003
'By symmetry this is true for x and y (max value is 1003)

'Since z decreases when x or y increases, if we calculate a value for z < 1, then we can end the testing for the current x

'The second largest value for z has x,y = 3,1 : z = 1004/2 = 502
'We don't need to consider any values for x between the largest and second largest

'param = 1000 'The code should work for any positive integer value of param
i = 0
For param = 1 To 1000
  cpu = Clock.ElapsedMilliseconds
  calcResult()
  cpu = Clock.ElapsedMilliseconds - cpu
  
  i = i+1
  resultParam[i] = param
  resultCount[i] = count
  TextWindow.WriteLine("Total solutions for "+resultParam[i]+" = "+resultCount[i]+" calculated in "+Math.Floor(0.5+cpu)+" ms")
EndFor

Sub calcResult
  'Find the largest and second largest values - could go further 3rd, 4th 5th etc largest values
  maxVal = param+3
  maxVal2 = (param+4)/2
  count = 0
  For x = 1 To maxVal2 'Do upto second largest value
    calcForX()
  EndFor
  'Now do the largest possible value
  x = maxVal
  calcForX()
EndSub

Sub calcForX
  'Dont allow x=y=1 (not possible) Do this by setting the lower limit on the y loop, (not an If inside the loop) to be most efficient
  For y = Math.Max(2,x) To maxVal
    z = (param+x+y)/(x*y-1)
    If (z < 1) Then
      Goto endCalc 'There cannot be any more solutions for the current x (and increasing y) if z < 1 
    ElseIf (z = Math.Floor(z)) Then 'An integer solution
      If (x = y) Then
        'TextWindow.WriteLine(x+","+y+","+z)
        count = count+1 'Don't double count equal x,y these since they are not distinct solutions
      Else
        'TextWindow.WriteLine(x+","+y+","+z)
        'TextWindow.WriteLine(y+","+x+","+z)
        count = count+2 'Double count distinct x,y since we can swap them
      EndIf
    EndIf
  EndFor
  endCalc:
EndSub
