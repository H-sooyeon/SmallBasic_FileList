
'Subroutines - System
'********************
'ButtonDown
Controls.ButtonClicked = ButtonClicked
Sub ButtonClicked
  LastBtn = Controls.LastClickedButton
  If LastBtn = SmShape[9] Then
    SprayColors = 1
    Shapes.HideShape(SmShape[17])
    Shapes.Move(SmShape[22], dDownPosX + 98, 98)
  ElseIf LastBtn = SmShape[10] Then
    SprayColors = 2
    Shapes.ShowShape(SmShape[17])
    Shapes.Move(SmShape[22], dDownPosX + 98, 133)
  ElseIf LastBtn = SmShape[11] Then
    SpraySpeed = 10
    xSpraySpeedIndi = dDownPosX + 93
    Shapes.Move(SmShape[21], xSpraySpeedIndi, 298)
  ElseIf LastBtn = SmShape[12] Then
    SpraySpeed = 1
    xSpraySpeedIndi = dDownPosX + 188
    Shapes.Move(SmShape[21], xSpraySpeedIndi, 298)
  ElseIf LastBtn = SmShape[24][1] Then
    Controls.Move(SmShape[23], dDownPosX + 10, 65)
    DdSpraySizeIndiTop = 65
    SpraySize = 10
  ElseIf LastBtn = SmShape[24][2] Then
    Controls.Move(SmShape[23], dDownPosX + 10, 115)
    DdSpraySizeIndiTop = 115
    SpraySize = 15
  ElseIf LastBtn = SmShape[24][3] Then
    Controls.Move(SmShape[23], dDownPosX + 10, 165)
    DdSpraySizeIndiTop = 165
    SpraySize = 20
  ElseIf LastBtn = SmShape[24][4] Then
    Controls.Move(SmShape[23], dDownPosX + 10, 215)
    DdSpraySizeIndiTop = 215
    SpraySize = 25
  ElseIf LastBtn = SmShape[24][5] Then
    Controls.Move(SmShape[23], dDownPosX + 10, 265)
    DdSpraySizeIndiTop = 265
    SpraySize = 30
  ElseIf LastBtn = SmShape[25][1] Then
    Shapes.Move(SmShape[20], dDownPosX + 91, 218)
    DdDotSizeIndiLeft = dDownPosX + 91
    SprayDotSize = 1
  ElseIf LastBtn = SmShape[25][2] Then
    Shapes.Move(SmShape[20], dDownPosX + 129, 218)
    DdDotSizeIndiLeft = dDownPosX + 129
    SprayDotSize = 2
  ElseIf LastBtn = SmShape[25][3] Then
    Shapes.Move(SmShape[20], dDownPosX + 167, 218)
    DdDotSizeIndiLeft = dDownPosX + 167
    SprayDotSize = 3
  ElseIf LastBtn = SmShape[25][4] Then
    Shapes.Move(SmShape[20], dDownPosX + 205, 218)
    DdDotSizeIndiLeft = dDownPosX + 205
    SprayDotSize = 4
  ElseIf LastBtn = SmShape[25][5] Then
    Shapes.Move(SmShape[20], dDownPosX + 243, 218)
    DdDotSizeIndiLeft = dDownPosX + 243
    SprayDotSize = 5
  ElseIf LastBtn = TmShape[5] Then
    Controls.SetTextBoxText(TmShape[4], "")
  ElseIf LastBtn = TmShape[19] Then
    If OldTxtFontBold = "False" Then
      OldTxtFontBold = "True"
      Shapes.ShowShape(TmShape[21])
    Else
      OldTxtFontBold = "False"
      Shapes.HideShape(TmShape[21])
    EndIf
  ElseIf LastBtn = TmShape[20] Then
    If OldTxtFontItalic = "False" Then
      OldTxtFontItalic = "True"
      Shapes.ShowShape(TmShape[22])
    Else
      OldTxtFontItalic = "False"
      Shapes.HideShape(TmShape[22])
    EndIf
  ElseIf LastBtn = TmShape[18] Then
    OldTxtSolid = "True"
    OldTxtTransparent = "False"
    Shapes.ShowShape(TmShape[23])
    Shapes.HideShape(TmShape[24])
  ElseIf LastBtn = TmShape[25] Then
    ffn=LDDialogs.Font("")
    Controls.SetTextBoxText (TmShape [9],ffn[1])
    Controls.SetTextBoxText (TmShape [13] ,ffn[2])
    
  ElseIf LastBtn = TmShape[14] Then
    OldTxtTransparent = "True"
    OldTxtSolid = "False"
    Shapes.ShowShape(TmShape[24])
    Shapes.HideShape(TmShape[23])
  ElseIf LastBtn = ShMShape[23][1] Then
    If BackgroundShapes = "Transparent" Then
      GraphicsWindow.ShowMessage("The thickness of the border can't be 0 when the background of the shape is transparent.", "Information")
    Else
      xIndiPenWidthSh = 451.5
      PenWidthShapes = 0
      Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
      UpdateShapesDialog()
    EndIf
  ElseIf LastBtn = ShMShape[23][2] Then
    xIndiPenWidthSh = 493.5
    PenWidthShapes = 1
    Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
    UpdateShapesDialog()
  ElseIf LastBtn = ShMShape[23][3] Then
    xIndiPenWidthSh = 535.5
    PenWidthShapes = 2
    Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
    UpdateShapesDialog()
  ElseIf LastBtn = ShMShape[23][4] Then
    xIndiPenWidthSh = 577.5
    PenWidthShapes = 3
    Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
    UpdateShapesDialog()
  ElseIf LastBtn = ShMShape[23][5] Then
    xIndiPenWidthSh = 619.5
    PenWidthShapes = 4
    Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
    UpdateShapesDialog()
  ElseIf LastBtn = ShMShape[15] Then
    BackgroundShapes = "Solid"
    UpdateShapesDialog()
  ElseIf LastBtn = ShMShape[16] Then
    If PenWidthShapes = 0 Then
      GraphicsWindow.ShowMessage("The background of the shape can't be transparent when the thickness of the border is 0.", "Information")
    Else
      BackgroundShapes = "Transparent"
      UpdateShapesDialog()
    EndIf
  ElseIf LastBtn = MmShape[5] Then
    AddHorizontalMirror()
  ElseIf LastBtn = MmShape[6] Then
    AddVerticalMirror()
  ElseIf LastBtn = MmShape[9] Then
    RemoveMirrors()
  ElseIf LastBtn = VpmShape[4] Then
    CloseVerifyPaste()
    Paste()
  ElseIf LastBtn = VpmShape[5] Then
    CloseVerifyPaste()
    ReAddIndiSelect()
    LoadSelectLoadingMenu()
    ShowSelectActionMenu()
  ElseIf LastBtn = PmShape[22] Then
    ParticleBorders = "True"
    Shapes.ShowShape(PmShape[42])
    Shapes.Move(PmShape[41], 613, 353)
    xIndiPatternBorder = 613
  ElseIf LastBtn = PmShape[23] Then
    ParticleBorders = "False"
    Shapes.HideShape(PmShape[42])
    Shapes.Move(PmShape[41], 763, 353)
    xIndiPatternBorder = 763
  ElseIf LastBtn = PmShape[43] And ParticleBorders = "True" Then
    xIndiPatternBorderThickness = dDownPosX + 10
    Shapes.Move(PmShape[42], xIndiPatternBorderThickness, 416)
    PatternBorderThickness = 1
  ElseIf LastBtn = PmShape[44] And ParticleBorders = "True" Then
    xIndiPatternBorderThickness = dDownPosX + 52
    Shapes.Move(PmShape[42], xIndiPatternBorderThickness, 416)
    PatternBorderThickness = 2
  ElseIf LastBtn = PmShape[45] And ParticleBorders = "True" Then
    xIndiPatternBorderThickness = dDownPosX + 94
    Shapes.Move(PmShape[42], xIndiPatternBorderThickness, 416)
    PatternBorderThickness = 3
  ElseIf LastBtn = PmShape[46] And ParticleBorders = "True" Then
    xIndiPatternBorderThickness = dDownPosX + 136
    Shapes.Move(PmShape[42], xIndiPatternBorderThickness, 416)
    PatternBorderThickness = 4
  ElseIf LastBtn = PmShape[47] And ParticleBorders = "True" Then
    xIndiPatternBorderThickness = dDownPosX + 178
    Shapes.Move(PmShape[42], xIndiPatternBorderThickness, 416)
    PatternBorderThickness = 5
  ElseIf LastBtn = PmShape[48] And ParticleBorders = "True" Then
    xIndiPatternBorderThickness = dDownPosX + 220
    Shapes.Move(PmShape[42], xIndiPatternBorderThickness, 416)
    PatternBorderThickness = 6
  ElseIf LastBtn = PmShape[49] And ParticleBorders = "True" Then
    xIndiPatternBorderThickness = dDownPosX + 262
    Shapes.Move(PmShape[42], xIndiPatternBorderThickness, 416)
    PatternBorderThickness = 7
  ElseIf LastBtn = PmShape[50] Then
    xIndiPattern = 613
    yIndiPattern = 83
    Shapes.Move(PmShape[40], xIndiPattern, yIndiPattern)
    CurrentPattern = "Lines"
    Shapes.SetText(PmShape[71], CurrentPattern)
  ElseIf LastBtn = PmShape[51] Then
    xIndiPattern = 673
    yIndiPattern = 83
    Shapes.Move(PmShape[40], xIndiPattern, yIndiPattern)
    CurrentPattern = "Squares"
    Shapes.SetText(PmShape[71], CurrentPattern)
  ElseIf LastBtn = PmShape[52] Then
    xIndiPattern = 733
    yIndiPattern = 83
    Shapes.Move(PmShape[40], xIndiPattern, yIndiPattern)
    CurrentPattern = "Circles"
    Shapes.SetText(PmShape[71], CurrentPattern)
  ElseIf LastBtn = PmShape[53] Then
    xIndiPattern = 793
    yIndiPattern = 83
    Shapes.Move(PmShape[40], xIndiPattern, yIndiPattern)
    CurrentPattern = "Triangles"
    Shapes.SetText(PmShape[71], CurrentPattern)
  ElseIf LastBtn = PmShape[54] Then
    xIndiPattern = 853
    yIndiPattern = 83
    Shapes.Move(PmShape[40], xIndiPattern, yIndiPattern)
    CurrentPattern = "Rhombuses"
    Shapes.SetText(PmShape[71], CurrentPattern)
  ElseIf LastBtn = PmShape[55] Then
    xIndiPattern = 613
    yIndiPattern = 143
    Shapes.Move(PmShape[40], xIndiPattern, yIndiPattern)
    CurrentPattern = "Cubes"
    Shapes.SetText(PmShape[71], CurrentPattern)
  ElseIf LastBtn = PmShape[56] Then
    xIndiPattern = 673
    yIndiPattern = 143
    Shapes.Move(PmShape[40], xIndiPattern, yIndiPattern)
    CurrentPattern = "Spheres"
    Shapes.SetText(PmShape[71], CurrentPattern)
  ElseIf LastBtn = PmShape[57] Then
    xIndiPattern = 733
    yIndiPattern = 143
    Shapes.Move(PmShape[40], xIndiPattern, yIndiPattern)
    CurrentPattern = "Pyramids"
    Shapes.SetText(PmShape[71], CurrentPattern)
  ElseIf LastBtn = PmShape[58] Then
    xIndiPattern = 793
    yIndiPattern = 143
    Shapes.Move(PmShape[40], xIndiPattern, yIndiPattern)
    CurrentPattern = "Ellipses"
    Shapes.SetText(PmShape[71], CurrentPattern)
  ElseIf LastBtn = PmShape[59] Then
    xIndiPattern = 853
    yIndiPattern = 143
    Shapes.Move(PmShape[40], xIndiPattern, yIndiPattern)
    CurrentPattern = "Crosses"
    Shapes.SetText(PmShape[71], CurrentPattern)
  ElseIf LastBtn = PmShape[60] Then
    DrawFullscreen = "True"
    ClosePatternMenu()
    DrawPattern()
    DrawFullscreen = "False"
  ElseIf LastBtn = PmShape[74] Then
    PatternRandomClrs = "True"
    xIndiPatRandClrs = 613
    Shapes.Move(PmShape[76], xIndiPatRandClrs, 493)
  ElseIf LastBtn = PmShape[75] Then
    PatternRandomClrs = "False"
    xIndiPatRandClrs = 763
    Shapes.Move(PmShape[76], xIndiPatRandClrs, 493)
  EndIf
EndSub

'MouseDown
GraphicsWindow.MouseDown = MouseDown
Sub MouseDown
  xDown = GraphicsWindow.MouseX
  yDown = GraphicsWindow.MouseY
  If CurrentMenu = "MainPaint" Then
    If yDown > 0 And yDown < 50 Then
      If xDown > 0 And xDown < 50 Then
        Sound.PlayClick()
        dDownPosX = 0
        BrushColor =LDDialogs.Colour() 
      ElseIf xDown > 55 And xDown < 105 Then
        Sound.PlayClick()
        CurrentTool = "Pencil"
        AddTool()
        If Mouse.IsRightButtonDown Then
          dDownPosX = 57
          DropDownTool = "Pencil"
          ShowDropDown()
        EndIf
      ElseIf  xDown > 110 and xDown < 160 then
        Sound.PlayClick()
        CurrentTool = "Brush"
        AddTool()
        If Mouse.IsRightButtonDown Then
          dDownPosX = 112
          DropDownTool = "Brush"
          ShowDropDown()
        EndIf
      ElseIf  xDown > 165 and xDown < 215 then
        Sound.PlayClick()
        CurrentTool = "Eraser"
        AddTool()
        If Mouse.IsRightButtonDown Then
          dDownPosX = 167
          DropDownTool = "Eraser"
          ShowDropDown()
        EndIf
      ElseIf xDown > 220 And xDown < 270 Then
        If Mouse.IsLeftButtonDown = "True" Then
          LoadColorPicker()
          Sound.PlayClick()
          Mouse.HideCursor()
          CurrentTool = "ColorPicker"
          CurrentMenu = "ColorPicker"
          AddTool()
        EndIf
      ElseIf xDown > 275 And xDown < 325 Then
        Sound.PlayClick()
        CurrentTool = "Spray"
        If Mouse.IsRightButtonDown Then
          dDownPosX = 285
          LoadSprayMenu()
        EndIf
      ElseIf xDown > 330 And xDown < 380 Then
        Sound.PlayClick()
        CurrentTool = "Text"
        AddTool()
        If Mouse.IsRightButtonDown = "True" Then
          dDownPosX = 330
          RemoveAllIndicatorIcons()
          LoadTextMenu()
        EndIf
      ElseIf xDown > 385 And xDown < 435 Then
        Sound.PlayClick()
        CurrentTool = "Fill"
        AddTool()
        RemoveAllIndicatorIcons()
      ElseIf xDown > 440 And xDown < 490 Then
        Sound.PlayClick()
        CurrentTool = "Shapes"
        AddTool()
        If Mouse.IsRightButtonDown = "True" Then
          dDownPosX = 440
          LoadShapesMenu()
        EndIf
      ElseIf xDown > 495 And xDown < 545 Then
        Sound.PlayClick()
        dDownPosX = 495
        CurrentTool = "Mirror"
        LoadMirrorMenu()
      ElseIf xDown > 605 And xDown < 655 Then
        Sound.PlayClick()
        CurrentTool = "Pattern"
        AddTool()
        If Mouse.IsRightButtonDown = "True" Then
          dDownPosX = 605
          LoadPatternsMenu()
        EndIf
      EndIf
    Else
      CanDraw = "True"
      Draw()
    EndIf
    If yDown > 50 Then
      If CurrentTool = "Select" And CanAddIndiSelect = "True" Then
        GraphicsWindow.PenColor = "Black"
        GraphicsWindow.BrushColor = "SkyBlue"
        IndiSelect = Shapes.AddRectangle(0, 0)
        Shapes.Move(IndiSelect, xDown, yDown)
        Shapes.SetOpacity(IndiSelect, 30)
        CanMoveIndiSelect = "True"
      ElseIf CurrentTool = "Pattern" Then
        GraphicsWindow.PenWidth = 1
        GraphicsWindow.PenColor = "Black"
        GraphicsWindow.BrushColor = "White"
        IndiDrawPat = Shapes.AddRectangle(0, 0)
        Shapes.Move(IndiDrawPat, xDown, yDown)
        Shapes.SetOpacity(IndiDrawPat, 50)
        CanResizeIndiDrawPat = "True"
      ElseIf CurrentTool = "Text" Then
        GraphicsWindow.PenWidth = 2
        GraphicsWindow.PenColor = "Black"
        TxtIndi["LineH"] = Shapes.AddLine(xDown, yDown, xDown + 50, yDown)
        TxtIndi["LineV"] = Shapes.AddLine(xDown, yDown, xDown, yDown + 50)
        TxtIndi["LineH2"] = Shapes.AddLine(0, 0, 50, 0)
        TxtIndi["LineV2"] = Shapes.AddLine(0, 0, 0, 50)
        CanMoveTxtIndies = "True"
		
      ElseIf CurrentTool = "Shapes" Then
        GraphicsWindow.PenColor = BrushColor
        GraphicsWindow.BrushColor = SecondColor
        GraphicsWindow.PenWidth = PenWidthShapes
        If CurrentShape = "Rectangle" Or CurrentShape = "Triangle" Then
          IndiDraw["Rec"] = Shapes.AddRectangle(0, 0)
          Shapes.Move(IndiDraw["Rec"], xDown, yDown)
        ElseIf CurrentShape = "Ellipse" Then
          IndiDraw["El"] = Shapes.AddEllipse(0, 0)
          Shapes.Move(IndiDraw["El"], xDown, yDown)  
        ElseIf CurrentShape = "Line" Then
          GraphicsWindow.PenWidth = 1
          IndiDraw["Line1"] = Shapes.AddEllipse(10, 10)
          IndiDraw["Line2"] = Shapes.AddEllipse(10, 10)
          Shapes.Move(IndiDraw["Line1"], xDown - 5, yDown - 5)
          Shapes.Move(IndiDraw["Line2"], xDown, yDown)
          Shapes.SetOpacity(IndiDraw["Line1"], 50)
          Shapes.SetOpacity(IndiDraw["Line2"], 50)
        EndIf
      EndIf
    EndIf
    
  ElseIf CurrentMenu = "ColorPicker" Then
    If Mouse.IsLeftButtonDown = "True" Then
      xCpBorder = Shapes.GetLeft(CpShape[1])
      yCpBorder = Shapes.GetTop(CpShape[1])
      xCloseCp = Shapes.GetLeft(CpShape[5])
      yCloseCp = Shapes.GetTop(CpShape[5])
      If xDown > xCpBorder And xDown < xCpBorder + 130 And yDown > yCpBorder And yDown < yCpBorder + 155 Then
        If xDown > xCloseCp And xDown < xCloseCp + 32 And yDown > yCloseCp And yDown < yCloseCp + 32 Then
          RemoveAllSubMenus()
        Else  
          CanMoveCp = "True"
        EndIf
      EndIf
      If CanGetPixel = "True" Then
        PixelPicked = GraphicsWindow.GetPixel(xDown, yDown)
        GraphicsWindow.PenColor = ClrBorderDark
        GraphicsWindow.BrushColor = PixelPicked
        Shapes.Remove(CpShape[4])
        CpShape[4] = Shapes.AddRectangle(110, 60)
        Shapes.Move(CpShape[4], CpLeft + 10, CpTop + 85)
        Shapes.SetText(CpShape[3], PixelPicked)
        BrushColor = PixelPicked
        GraphicsWindow.PenColor = PixelPicked
      EndIf
    ElseIf Mouse.IsRightButtonDown = "True" Then
      PixelPicked = GraphicsWindow.GetPixel(xDown, yDown)
      GraphicsWindow.PenColor = ClrBorderDark
      GraphicsWindow.BrushColor = PixelPicked
      Shapes.Remove(CpShape[4])
      CpShape[4] = Shapes.AddRectangle(110, 60)
      Shapes.Move(CpShape[4], CpLeft + 10, CpTop + 85)
      Shapes.SetText(CpShape[3], PixelPicked)
      GraphicsWindow.PenColor = PixelPicked
      SecondColor = PixelPicked
    EndIf
  ElseIf CurrentMenu = "SprayMenu" Then
    xCloseSm = Shapes.GetLeft(SmShape[18])
    yCloseSm = Shapes.GetTop(SmShape[18])
    If xDown > xCloseSm And xDown < xCloseSm + 32 And yDown > yCloseSm And yDown < yCloseSm + 32 Then
      Sound.PlayClick()
      CloseSprayMenu()
    EndIf
  ElseIf CurrentMenu = "TextMenu" Then
    If xDown > xCloseTm And xDown < xCloseTm + 32 And yDown > yCloseTm And yDown < yCloseTm + 32 Then
      Sound.PlayClick()
      TxtBody = Controls.GetTextBoxText(TmShape[4])
      TxtName = Controls.GetTextBoxText(TmShape[9])
      TxtSize = Controls.GetTextBoxText(TmShape[13])
      If TxtBody = "" Or TxtName = "" Or TxtSize = "" Then
        GraphicsWindow.ShowMessage("Please enter all the data in order to proceed.", "Information")
      Else
        If TxtSize < 8 Then
          TxtSize = 8
        EndIf
        OldTxtBody = TxtBody
        OldTxtName = TxtName
        OldTxtSize = TxtSize
        RemoveAllSubMenus()
      EndIf
    EndIf
  ElseIf CurrentMenu = "ShapesMenu" Then
    xCloseShM = Shapes.GetLeft(ShMShape[0])
    yCloseShM = Shapes.GetTop(ShMShape[0])
    If xDown > xCloseShM And xDown < xCloseShM + 32 And yDown > yCloseShM And yDown < yCloseShM + 32 Then
      Sound.PlayClick()
      CanCloseIndiSelect = "True"
      RemoveAllSubMenus()
    EndIf
    If xDown > dDownPosX + 10 And xDown < dDownPosX + 110 And yDown > 85 And yDown < 165 Then
      CurrentShape = "Line"
      UpdateShapesDialog()
    ElseIf xDown > dDownPosX + 120 And xDown < dDownPosX + 220 And yDown > 85 And yDown < 165 Then
      CurrentShape = "Rectangle"
      UpdateShapesDialog()
    ElseIf xDown > dDownPosX + 10 And xDown < dDownPosX + 110 And yDown > 175 And yDown < 255 Then
      CurrentShape = "Ellipse"
      UpdateShapesDialog()
    ElseIf xDown > dDownPosX + 120 And xDown < dDownPosX + 220 And yDown > 175 And yDown < 255 Then
      CurrentShape = "Triangle"
      UpdateShapesDialog()
    EndIf
  ElseIf CurrentMenu = "MirrorMenu" Then
    xCloseMm = Shapes.GetLeft(MmShape[12])
    yCloseMm = Shapes.GetTop(MmShape[12])
    If xDown > xCloseMm And xDown < xCloseMm + 32 And yDown > yCloseMm And yDown < yCloseMm + 32 Then
      Sound.PlayClick()
      RemoveAllSubMenus()
    EndIf
  ElseIf CurrentMenu = "PastingMenu" Then
    If CanPaste = "True" Then
      xIndiPaste = xDown - (AreaWidth / 2)
      yIndiPaste = yDown - (AreaHeight / 2)
      LoadVerifyPaste()
      CanPaste = "False"
    EndIf
  ElseIf CurrentMenu = "PatternsMenu" Then
    xClosePm = Shapes.GetLeft(PmShape[0])
    yClosePm = Shapes.GetTop(PmShape[0])
    If xDown > xClosePm And xDown < xClosePm + 32 And yDown > yClosePm And yDown < yClosePm + 32 Then
      Sound.PlayClick()
      ClosePatternMenu()
    EndIf
  EndIf
  If DropDownTool = "Pencil" Then
    If xDown > dDownPosX And xDown < dDownPosX + 47 Then
      If yDown > 50 And yDown < 97 Then
        PencilSize = 1.5
        RemoveAllSubMenus()
      ElseIf yDown > 97 And yDown < 144 Then
        PencilSize = 2.5
        RemoveAllSubMenus()
      ElseIf yDown > 144 And yDown < 191 Then
        PencilSize = 3.5
        RemoveAllSubMenus()
      ElseIf yDown > 191 And yDown < 238 Then
        PencilSize = 4.5
        RemoveAllSubMenus()
      ElseIf yDown > 238 And yDown < 285 Then
        PencilSize = 5.5
        RemoveAllSubMenus()
      EndIf
    EndIf 
  ElseIf DropDownTool = "Brush" Then
    If xDown > dDownPosX And xDown < dDownPosX + 47 Then
      If yDown > 50 And yDown < 97 Then
        BrushSize = 6
        RemoveAllSubMenus()
      ElseIf yDown > 97 And yDown < 144 Then
        BrushSize = 10
        RemoveAllSubMenus()
      ElseIf yDown > 144 And yDown < 191 Then
        BrushSize = 14
        RemoveAllSubMenus()
      ElseIf yDown > 191 And yDown < 238 Then
        BrushSize = 18
        RemoveAllSubMenus()
      ElseIf yDown > 238 And yDown < 285 Then
        BrushSize = 22
        RemoveAllSubMenus()
      EndIf
    EndIf
  ElseIf DropDownTool = "Eraser" Then
    If xDown > dDownPosX And xDown < dDownPosX + 47 Then
      If yDown > 50 And yDown < 97 Then
        EraserSize = 10
        RemoveAllSubMenus()
      ElseIf yDown > 97 And yDown < 144 Then
        EraserSize = 15
        RemoveAllSubMenus()
      ElseIf yDown > 144 And yDown < 191 Then
        EraserSize = 20
        RemoveAllSubMenus()
      ElseIf yDown > 191 And yDown < 238 Then
        EraserSize = 25
        RemoveAllSubMenus()
      ElseIf yDown > 238 And yDown < 285 Then
        EraserSize = 30
        RemoveAllSubMenus()
      EndIf
    EndIf
  ElseIf DropDownTool = "Spray" Then
    If xDown > dDownPosX And xDown < dDownPosX + 47 Then
      If yDown > 50 And yDown < 97 Then
        SpraySize = 10
        RemoveAllSubMenus()
      ElseIf yDown > 97 And yDown < 144 Then
        SpraySize = 15
        RemoveAllSubMenus()
      ElseIf yDown > 144 And yDown < 191 Then
        SpraySize = 20
        RemoveAllSubMenus()
      ElseIf yDown > 191 And yDown < 238 Then
        SpraySize = 25
        RemoveAllSubMenus()
      ElseIf yDown > 238 And yDown < 285 Then
        SpraySize = 30
        RemoveAllSubMenus()
      EndIf
    EndIf    
  EndIf
  If CurrentMenu = "SelectAction" Then
    xCloseSm = Shapes.GetLeft(SlmShape[12])
    yCloseSm = Shapes.GetTop(SlmShape[12])
    If xDown > xCloseSm And xDown < xCloseSm + 32 And yDown > yCloseSm And yDown < yCloseSm + 32 Then
      Sound.PlayClick()
      CanCloseIndiSelect = "True"
      CloseSelectLoadingMenu()
      CanClickSelectTool = "True"
    ElseIf xDown > (wWidth2 - 323) / 2 And xDown < (wWidth2 - 323) / 2 + 54 And yDown > wHeight2 / 2 + 8 And yDown < wHeight2 / 2 + 8 + 54 Then
      CurrentAction = "Cut"
      PerformAction()
    ElseIf xDown > (wWidth2 - 200) / 2 And xDown < (wWidth2 - 200) / 2 + 54 And yDown > wHeight2 / 2 + 8 And yDown < wHeight2 / 2 + 8 + 54 Then
      CurrentAction = "Copy"
      PerformAction()
    ElseIf xDown > (wWidth2 - 65) / 2 And xDown < (wWidth2 - 65) / 2 + 54 And yDown > wHeight2 / 2 + 8 And yDown < wHeight2 / 2 + 8 + 54 Then
      CurrentAction = "Paste"
      PerformAction()
    ElseIf xDown > wWidth2 / 2 + 35 And xDown < wWidth2 / 2 + 89 And yDown > wHeight2 / 2 + 8 And yDown < wHeight2 / 2 + 8 + 54 Then
      CurrentAction = "FlipHorizontal"
      PerformAction()
    ElseIf xDown > wWidth2 / 2 + 100 And xDown < wWidth2 / 2 + 154 And yDown > wHeight2 / 2 + 8 And yDown < wHeight2 / 2 + 8 + 54 Then
      CurrentAction = "FlipVertical"
      PerformAction()
    EndIf
  EndIf
EndSub

'MouseMove
GraphicsWindow.MouseMove = MouseMove
Sub MouseMove
  xMove = GraphicsWindow.MouseX
  yMove = GraphicsWindow.MouseY
  If CurrentMenu = "MainPaint" Then
    Draw()
    If yMove < 50 Then
      Shapes.ShowShape(ToolIndicator)
      If xMove > 0 And xMove < 50 Then
        Shapes.Move(ToolIndicator, 2, 0)
      ElseIf xMove > 55 And xMove < 105 Then
        Shapes.Move(ToolIndicator, 57, 0)
      ElseIf  xMove > 110 and xMove < 160 Then
        Shapes.Move(ToolIndicator, 112, 0)
      ElseIf  xMove > 165 and xMove < 215 Then
        Shapes.Move(ToolIndicator, 167, 0)
      ElseIf xMove > 220 And xMove < 270 Then
        Shapes.Move(ToolIndicator, 222, 0)
      ElseIf xMove > 275 And xMove < 325 Then
        Shapes.Move(ToolIndicator, 277, 0)
      ElseIf xMove > 330 And xMove < 380 Then
        Shapes.Move(ToolIndicator, 332, 0)
      ElseIf xMove > 385 And xMove < 435 Then
        Shapes.Move(ToolIndicator, 387, 0)
      ElseIf xMove > 440 And xMove < 490 Then
        Shapes.Move(ToolIndicator, 442, 0)
      ElseIf xMove > 495 And xMove < 545 Then
        Shapes.Move(ToolIndicator, 497, 0)
      ElseIf xMove > 550 And xMove < 600 Then
        Shapes.Move(ToolIndicator, 552, 0)
      ElseIf xMove > 605 And xMove < 655 Then
        Shapes.Move(ToolIndicator, 607, 0)
      EndIf
    Else
      Shapes.HideShape(ToolIndicator)
      If CurrentTool = "Select" Then
        If xMove > xDown And yMove > yDown And CanMoveIndiSelect = "True" Then
          Controls.SetSize(IndiSelect, xMove - xDown, yMove - yDown)
        EndIf
      ElseIf CurrentTool = "Text" Then
        If xMove > xDown And yMove > yDown And CanMoveTxtIndies = "True" Then
          Shapes.Move(TxtIndi["LineH2"], xMoveNew - 50, yMoveNew)
          Shapes.Move(TxtIndi["LineV2"], xMoveNew, yMoveNew - 50)
        EndIf
      ElseIf CurrentTool = "Shapes" Then
        If xMove > xDown And yMove > yDown Then
          Controls.SetSize(IndiDraw["Rec"], xMove - xDown, yMove - yDown)
          Controls.SetSize(IndiDraw["El"], xMove - xDown, yMove - yDown)
        EndIf
        Shapes.Move(IndiDraw["Line2"], xMove - 5, yMove - 5)
      ElseIf CurrentTool = "Pattern" Then
        If xMove > xDown And yMove > yDown And CanResizeIndiDrawPat = "True" Then
          Controls.SetSize(IndiDrawPat, xMove - xDown, yMove - yDown)
        EndIf
      EndIf
    EndIf
    
  ElseIf CurrentMenu = "ColorPicker" Then
    If yMove > 50 Then
      Mouse.HideCursor()
      CanGetPixel = "True"
      If xMove > CpLeft And xMove < CpLeft + 130 And yMove > CpTop And yMove < CpTop + 205 Then
        CanGetPixel = "False"
        RemoveAllIndicatorIcons()
        Mouse.ShowCursor()
        ToolAdded = "False"
      Else
        If ToolAdded = "False" Then
          AddTool()
          ToolAdded = "True"
        EndIf
      EndIf
    Else
      CanGetPixel = "False"
    EndIf
    If CanMoveCp = "True" Then
      Mouse.ShowCursor()
      CpLeft = xMove - 62
      CpTop = yMove - 60
      MoveColorPicker()
    EndIf
  ElseIf CurrentMenu = "SelectAction" Then
    If xMove > (wWidth2 - 323) / 2 And xMove < (wWidth2 - 323) / 2 + 54 And yMove > wHeight2 / 2 + 8 And yMove < wHeight2 / 2 + 8 + 54 Then
      Shapes.Move(SlmShape[13], Math.Round((wWidth2 - 323) / 2), Math.Round(wHeight2 / 2 + 8))
      Shapes.SetText(SlmShape[3], "Select an action for the selected area - Cut")
    ElseIf xMove > (wWidth2 - 200) / 2 And xMove < (wWidth2 - 200) / 2 + 54 And yMove > wHeight2 / 2 + 8 And yMove < wHeight2 / 2 + 8 + 54 Then
      Shapes.Move(SlmShape[13], Math.Round((wWidth2 - 200) / 2), Math.Round(wHeight2 / 2 + 8))
      Shapes.SetText(SlmShape[3], "Select an action for the selected area - Copy")
    ElseIf xMove > (wWidth2 - 65) / 2 And xMove < (wWidth2 - 65) / 2 + 54 And yMove > wHeight2 / 2 + 8 And yMove < wHeight2 / 2 + 8 + 54 Then
      Shapes.Move(SlmShape[13], Math.Round((wWidth2 - 65) / 2), Math.Round(wHeight2 / 2 + 8))
      Shapes.SetText(SlmShape[3], "Select an action for the selected area - Paste")
    ElseIf xMove > wWidth2 / 2 + 35 And xMove < wWidth2 / 2 + 89 And yMove > wHeight2 / 2 + 8 And yMove < wHeight2 / 2 + 8 + 54 Then
      Shapes.Move(SlmShape[13], Math.Round(wWidth2 / 2 + 35), Math.Round(wHeight2 / 2 + 10))
      Shapes.SetText(SlmShape[3], "Select an action for the selected area - Horizontal flip")
    ElseIf xMove > wWidth2 / 2 + 100 And xMove < wWidth2 / 2 + 154 And yMove > wHeight2 / 2 + 8 And yMove < wHeight2 / 2 + 8 + 54 Then
      Shapes.Move(SlmShape[13], Math.Round(wWidth2 / 2 + 100), Math.Round(wHeight2 / 2 + 10))
      Shapes.SetText(SlmShape[3], "Select an action for the selected area - Vertical flip")
    Else
      Shapes.SetText(SlmShape[3], "Select an action for the selected area")
    EndIf
  EndIf
  If DropDownTool = "None" Then
  Else
    If xMove > dDownPosX And xMove < dDownPosX + 47 Then
      If yMove > 50 And yMove < 97 Then
        Shapes.Move(SizeIndicator, dDownPosX - 1.15, 48)
      ElseIf yMove > 97 And yMove < 144 Then
        Shapes.Move(SizeIndicator, dDownPosX - 1.15, 95)
      ElseIf yMove > 144 And yMove < 191 Then
        Shapes.Move(SizeIndicator, dDownPosX - 1.15, 142)
      ElseIf yMove > 191 And yMove < 238 Then
        Shapes.Move(SizeIndicator, dDownPosX - 1.15, 189)
      ElseIf yMove > 238 And yMove < 285 Then
        Shapes.Move(SizeIndicator, dDownPosX - 1.15, 236)
      EndIf
    EndIf
  EndIf
  If CurrentMenu = "PastingMenu" Then
    If CanPaste = "True" Then
      Shapes.Move(IndiPaste, xMove, yMove)
    EndIf
  EndIf
  Shapes.Move(tindicator["Pencil"], xMove - 2, yMove - 38)
  Shapes.Move(tindicator["Brush"], xMove - 3, yMove - 33)
  Shapes.Move(tindicator["Eraser"], xMove - EraserSize / 2, yMove - EraserSize / 2)
  Shapes.Move(tindicator["ClrPck"], xMove, yMove - 29)
  xMoveNew = GraphicsWindow.MouseX
  yMoveNew = GraphicsWindow.MouseY
EndSub
'
GraphicsWindow.MouseUp = MouseUp
Sub MouseUp
  xUp = GraphicsWindow.MouseX
  yUp = GraphicsWindow.MouseY
  CanDraw = "False"
  If CurrentMenu = "MainPaint" And yDown < 50 And CanClickSelectTool = "True" Then
    If xDown > 550 And xDown < 600 Then
      Sound.PlayClick()
      PreSelectTool = CurrentTool
      CurrentTool = "Select"
      CanAddSelectLm = "True"
      CanClickSelectTool = "False"
    EndIf
  EndIf
  If CurrentMenu = "ColorPicker" Then
    CanMoveCp = "False"
  ElseIf CurrentMenu = "MainPaint" Then
    If yUp > 50 Then
      If CurrentTool = "Select" Then
        AreaLeft = xDown
        AreaTop = yDown
        AreaWidth = xUp - xDown
        AreaHeight = yUp - yDown
        CanMoveIndiSelect = "False"
        CanAddIndiSelect = "False"
        LoadSelectLoadingMenu()
        ShowSelectActionMenu()
      ElseIf CurrentTool = "Text" Then
        If xDown >= xUp Or yDown >= yUp Then
          CanMoveTxtIndies = "False"
        Else
          If OldTxtFontBold = "True" Then
            GraphicsWindow.FontBold = "True"
          Else
            GraphicsWindow.FontBold = "False"
          EndIf
          If OldTxtFontItalic = "True" Then
            GraphicsWindow.FontItalic = "True"
          Else
            GraphicsWindow.FontItalic = "False"
          EndIf
          GraphicsWindow.BrushColor = BrushColor
          GraphicsWindow.FontName = TxtName
          GraphicsWindow.FontSize = TxtSize
          If OldTxtTransparent = "True" Then
            GraphicsWindow.DrawBoundText(xDown, yDown, xUp - xDown, TxtBody)
          ElseIf OldTxtSolid = "True" Then
            GraphicsWindow.BrushColor = SecondColor
            GraphicsWindow.FillRectangle(xDown, yDown, xUp - xDown, yUp - yDown)
            GraphicsWindow.BrushColor = BrushColor
            GraphicsWindow.DrawBoundText(xDown, yDown, xUp - xDown, TxtBody)
          EndIf
          CanMoveTxtIndies = "False"
        EndIf
      EndIf
    EndIf
  EndIf
  If CurrentMenu = "MainPaint" Then
    If yUp > 50 And yDown > 50 Then
      If CurrentTool = "Pattern" Then
        CanResizeIndiDrawPat = "False"
        Shapes.Remove(IndiDrawPat)
        DrawPattern()
      ElseIf CurrentTool = "Shapes" Then
        GraphicsWindow.PenWidth = PenWidthShapes
        GraphicsWindow.PenColor = BrushColor
        GraphicsWindow.BrushColor = SecondColor
        If CurrentShape = "Line" Then
          If PenWidthShapes = 0 Then
            GraphicsWindow.PenWidth = 1
          Else
            GraphicsWindow.PenWidth = PenWidthShapes + 1
          EndIf
          GraphicsWindow.DrawLine(xDown, yDown, xUp, yUp)
        EndIf
        If CurrentTool = "Shapes" And xDown < xUp And yDown < yUp Then
          GraphicsWindow.PenWidth = PenWidthShapes
          GraphicsWindow.PenColor = BrushColor
          GraphicsWindow.BrushColor = SecondColor
          If CurrentShape = "Rectangle" Then
            If BackgroundShapes = "Solid" Then
              GraphicsWindow.FillRectangle(xDown, yDown, xUp - xDown, yUp - yDown)
              GraphicsWindow.DrawRectangle(xDown, yDown, xUp - xDown, yUp - yDown)
            ElseIf BackgroundShapes = "Transparent" Then
              GraphicsWindow.DrawRectangle(xDown, yDown, xUp - xDown, yUp - yDown)
            EndIf
          ElseIf CurrentShape = "Ellipse" Then
            If BackgroundShapes = "Solid" Then
              GraphicsWindow.FillEllipse(xDown, yDown, xUp - xDown, yUp - yDown)
              GraphicsWindow.DrawEllipse(xDown, yDown, xUp - xDown, yUp - yDown)
            ElseIf BackgroundShapes = "Transparent" Then
              GraphicsWindow.DrawEllipse(xDown, yDown, xUp - xDown, yUp - yDown)
            EndIf
          ElseIf CurrentShape = "Triangle" Then
            TriangleWidth = xUp - xDown
            If BackgroundShapes = "Solid" Then
              GraphicsWindow.FillTriangle(xDown + (TriangleWidth / 2), yDown, xDown, yUp, xUp, yUp)
              GraphicsWindow.DrawTriangle(xDown + (TriangleWidth / 2), yDown, xDown, yUp, xUp, yUp)
            ElseIf BackgroundShapes = "Transparent" Then
              GraphicsWindow.DrawTriangle(xDown + (TriangleWidth / 2), yDown, xDown, yUp, xUp, yUp)
            EndIf
          EndIf
        EndIf
      EndIf
    EndIf
  EndIf
  fx=ldtext.Split ("LineH LineH2 LineV LineV2 Rec Line1 Line2 El"," ")
  For f=1 To 4
    Shapes.Remove (TxtIndi[fx[f]])
	Shapes.Remove (IndiDraw[fx[f]])
  endfor
  GraphicsWindow.FontBold = "False"
  GraphicsWindow.FontItalic = "False"
  GraphicsWindow.FontName = "Microsoft Sans Serif"
  GraphicsWindow.FontSize = 12
  GraphicsWindow.PenWidth = 1
EndSub
'
GraphicsWindow.KeyDown = KeyDown
Sub KeyDown
  LastKey = GraphicsWindow.LastKey
  If LastKey = "Escape" Then
    If CurrentMenu = "SelectLoadingMenu" Or CurrentMenu = "SelectAction" Or CurrentMenu = "PastingMenu" Or CurrentMenu = "VerifyPasteMenu" Or CurrentMenu = "hFlipMenu" Or CurrentMenu = "vFlipMenu" Then
    Else
      RemoveAllSubMenus()
    EndIf
  ElseIf LastKey = "Delete" Then
    GraphicsWindow.BrushColor = "White"
    GraphicsWindow.FillRectangle(0, 0, dWidth, dHeight)
    Sound.PlayClick()
  EndIf
  
EndSub

'Timer
Timer.Interval = SpraySpeed
Timer.Tick = SprayCanvas
Sub SprayCanvas
  If CurrentMenu = "MainPaint" And CurrentTool = "Spray" And CanDraw = "True" Then
    If SprayColors = 1 Then
      xSpot = Math.GetRandomNumber(SpraySize)
      ySpot = Math.GetRandomNumber(SpraySize)
      GraphicsWindow.BrushColor = BrushColor
      GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
      If MirrorAdded = "True" Then
        If CurrentMirror = "Horizontal" Then
          If xDown < (dWidth / 2) Then
            GraphicsWindow.FillEllipse(dWidth - xMove + xSpot - SpraySize / 2 + 14, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
          ElseIf xDown > (dWidth / 2) Then
            xPosSprayOne = xMove - (dWidth / 2)
            GraphicsWindow.FillEllipse((dWidth / 2) - xPosSprayOne + xSpot - SpraySize / 2 + 14, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
          EndIf
        ElseIf CurrentMirror = "Vertical" Then
          yPosVSeparator = dHeight / 2
          If yDown < yPosVSeparator Then
            GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, dHeight - yMove + ySpot - SpraySize / 2 - 8, SprayDotSize, SprayDotSize)
          ElseIf yDown > yPosVSeparator Then
            yPosSprayOne = yMove - (dHeight / 2)
            GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, (dHeight / 2) - yPosSprayOne + ySpot - SpraySize / 2 - 7, SprayDotSize, SprayDotSize)
          EndIf
        EndIf
      EndIf
    ElseIf SprayColors = 2 Then
      xSpot = Math.GetRandomNumber(SpraySize)
      ySpot = Math.GetRandomNumber(SpraySize)
      xSpot2 = Math.GetRandomNumber(SpraySize)
      ySpot2 = Math.GetRandomNumber(SpraySize)
      GraphicsWindow.BrushColor = BrushColor
      GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
      GraphicsWindow.BrushColor = SecondColor
      GraphicsWindow.FillEllipse(xMove + xSpot2 - SpraySize / 2 - 16, yMove + ySpot2 - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
      If MirrorAdded = "True" Then
        If CurrentMirror = "Horizontal" Then
          If xDown < (dWidth / 2) Then
            GraphicsWindow.BrushColor = BrushColor
            GraphicsWindow.FillEllipse(dWidth - xMove + xSpot - SpraySize / 2 + 14, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
            GraphicsWindow.BrushColor = SecondColor
            GraphicsWindow.FillEllipse(dWidth - xMove + xSpot2 - SpraySize / 2 + 14, yMove + ySpot2 - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
          ElseIf xDown > (dWidth / 2) Then
            xPosSprayOne = xMove - (dWidth / 2)
            GraphicsWindow.BrushColor = BrushColor
            GraphicsWindow.FillEllipse((dWidth / 2) - xPosSprayOne + xSpot - SpraySize / 2 + 14, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
            GraphicsWindow.BrushColor = SecondColor
            GraphicsWindow.FillEllipse((dWidth / 2) - xPosSprayOne + xSpot2 - SpraySize / 2 + 14, yMove + ySpot2 - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
          EndIf
        ElseIf CurrentMirror = "Vertical" Then
          yPosVSeparator = dHeight / 2
          If yDown < yPosVSeparator Then
            GraphicsWindow.BrushColor = BrushColor
            GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, dHeight - yMove + ySpot - SpraySize / 2 - 8, SprayDotSize, SprayDotSize)
            GraphicsWindow.BrushColor = SecondColor
            GraphicsWindow.FillEllipse(xMove + xSpot2 - SpraySize / 2 - 16, dHeight - yMove + ySpot2 - SpraySize / 2 - 8, SprayDotSize, SprayDotSize)
          ElseIf yDown > yPosVSeparator Then
            yPosSprayOne = yMove - (dHeight / 2)
            GraphicsWindow.BrushColor = BrushColor
            GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, (dHeight / 2) - yPosSprayOne + ySpot - SpraySize / 2 - 7, SprayDotSize, SprayDotSize)
            GraphicsWindow.BrushColor = SecondColor
            GraphicsWindow.FillEllipse(xMove + xSpot2 - SpraySize / 2 - 16, (dHeight / 2) - yPosSprayOne + ySpot2 - SpraySize / 2 - 7, SprayDotSize, SprayDotSize)
          EndIf
        EndIf
      EndIf
    EndIf
  EndIf
EndSub
