'SBJump - A cheap knock off of Doodle Jump written in SmallBasic

'Original Concept and Programming by Zock - Import Code: PGR013

'Current version by codingCat aka Matthew L. Parets

'As the game progresses the platforms get smaller. 

'After a round at 15 pixels they reset to fifty and the game speeds up.

'Controls = Left, Right and Up keys



'Initial Setup

lineCnt = 7

linesize = 50

start = "True"

multiplier = 2

delay = 13



'Setup the window

GraphicsWindow.Width = 700

GraphicsWindow.Height = 400

GraphicsWindow.Title = "SBJump"

GraphicsWindow.Width = (20*10) + (linesize + 10)

GraphicsWindow.BackgroundColor = "blue"

GraphicsWindow.Top = Desktop.Height / 2 - GraphicsWindow.Height / 2

GraphicsWindow.left = Desktop.Width / 2 - GraphicsWindow.Width / 2

GraphicsWindow.BrushColor = "black"

GraphicsWindow.fillRectangle(0,GraphicsWindow.Height-3,GraphicsWindow.Width,3)



x = GraphicsWindow.Width / 2



'Top of the main Program Loop

top:

gameOver = "False"

GraphicsWindow.PenWidth = 1

GraphicsWindow.BrushColor = "red"

ball = Shapes.AddEllipse(10,10)

GraphicsWindow.PenWidth = 2

dy = -3.2



'First platform copied from top platform after first level

If start = "False" then

  lastx = linex[1]

endif



'Randomly generate the platforms. 

platlevl = 75

For ii = 1 to lineCnt

  linex[ii] = (Math.GetRandomNumber(20) * 10)

  liney[ii] = platlevl + ((Math.GetRandomNumber(2) * 10) - 10)

  platlevl = platlevl + 50

endfor

If start = "False" then

  linex[lineCnt] = lastx

endif

For i = 1 to lineCnt

  GraphicsWindow.DrawLine(linex[i],liney[i],linex[i]+linesize,liney[i])

endfor



'Start at the bottom

y = GraphicsWindow.Height - 1



'Main game loop

Sound.PlayChimes()

While y > -5 And gameOver <> "True"

  Program.Delay(delay)

  key = GraphicsWindow.LastKey

  

  'Update the location of the ball

  x = x + dx

  y = y + dy

  Shapes.Move(ball, x,y)

  

  'Check for bottom of window, bounce if new game, otherwise game over

  dy = dy + 0.05

  If (y > GraphicsWindow.height) Then

    If (start = "True") then

      dY = -3.2

      Sound.PlayClick()

    Else

      'Sound.PlayBellRing()

      gameOver = "True"

    EndIf

  EndIf

  

  'Check to see if a bounce at a platform has occured

  If dy > 0 Then

    For ii = 1 To lineCnt

      If (x+5 > linex[ii] and x < linex[ii]+(linesize-5)) and (y+5 > liney[ii]-(dy/2) And y+5 < liney[ii]+(dy/2)) then

        dy = -3.2

        Sound.PlayClick()

        score = score + 400

        start = "False"

      EndIf

    EndFor

  EndIf

  

  'Check for changes based on user controls

  If (key = "Right") Then

    dx = 1

  EndIf

  If (key = "Left") Then

    dx = -1

  EndIf

  If (key = "Up") Then

    dx = 0

  EndIf

  

  'Wrap past the edges

  If x > GraphicsWindow.Width Then 

    x = 0

  EndIf

  If x < 0 Then 

    x = GraphicsWindow.Width

  EndIf

  

  'Update the score

  If Math.Remainder(score,100) = 0 then

    GraphicsWindow.Title = "Score = " + score

  EndIf

  score = score - 1

  If score < 0 Then

    score = 0 

  EndIf

endwhile



'If game loop exited with GameOver

if y > GraphicsWindow.Height then

  'Scroll the credits

  GraphicsWindow.BrushColor = "white"

  GraphicsWindow.FontSize = 30

  goSh = Shapes.AddText("Game Over")

  stSh = Shapes.AddText("Score")

  scSh = Shapes.AddText(score)

  GraphicsWindow.FontSize = 15

  tiSh = Shapes.AddText("SBJump")

  idSh = Shapes.AddText("Idea by Zock")

  ptSh = Shapes.AddText("Programming by")

  nmSh = Shapes.AddText("codingCat and Zock")

  cpSh = Shapes.AddText("Product Parets Programming")

  riSh = Shapes.AddText("No Rights Reserved  ;-)")

  cnSh = Shapes.AddText("Press <Enter> for New Game")

  goy = -50

  

  While GraphicsWindow.LastKey <> "Return"

    goy = goy + 1

    If goy > GraphicsWindow.Height + 550 Then

      goy = -50

    EndIf

    Shapes.Move(tiSh, 25, goy - 525)

    Shapes.Move(idSh, 25, goy - 500)

    Shapes.Move(ptSh, 25, goy - 475)

    Shapes.Move(nmSh, 25, goy - 450)

    Shapes.Move(cpSh, 25, goy - 425)

    Shapes.Move(riSh, 25, goy - 400)

    Shapes.Move(cnSh, 25, goy - 375)

    Shapes.Move(goSh, 50, goy - 100)

    Shapes.Move(stSh, 50, goy - 50)

    Shapes.Move(scSh, 50, goy)

    Program.Delay(15)

  EndWhile

else

  'Set up for next level

  score = score * multiplier

  'Shrink the platform size

  If linesize > 15 then

    linesize = linesize - 5

  Else

    'Speed the game up

    linesize = 50

    If delay > 1 then

      delay = delay - 2

    endif

  endif

  'Continue with next level

  GraphicsWindow.Clear()

  Goto top

endif



'reset a bunch of stuff for a new game

linesize = 50

GraphicsWindow.Clear()

GraphicsWindow.BrushColor = "black"

GraphicsWindow.fillRectangle(0,GraphicsWindow.Height-3,GraphicsWindow.Width,3)

delay = 13

start = "True"

score = 0

GraphicsWindow.Title = "SBJump"

x = GraphicsWindow.Width / 2

dx = 0



Goto top




