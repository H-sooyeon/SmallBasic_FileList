GraphicsWindow.Hide()

gw = 1000

gh = 580

GraphicsWindow.Width = gw

GraphicsWindow.Height = gh

GraphicsWindow.CanResize = "false"

GraphicsWindow.Title = "Moving Soccerball"

GraphicsWindow.Top = 4

GraphicsWindow.Left = (Desktop.Width - gw) / 2



sceneryImage = ImageList.LoadImage(Program.Directory + "/Grass Scenery.jpg")

soccerballImage = ImageList.LoadImage(Program.Directory + "/football2.png")



GraphicsWindow.DrawResizedImage(sceneryImage, 0, 0, gw, gh)

ball = Shapes.AddImage(soccerballImage)

radius = (ImageList.GetWidthOfImage(soccerballImage)) / 2



GraphicsWindow.Show()



x = 1

y = 1

displaceX = 0 ' Start stationary

displaceY = 0

spin = 1



dt = 1 'Frame updtate time

slope = Math.Arctan(1/5) ' 1 in 5 slope

gravity = 0.001 ' Gravity acceleration down



While "true"   

  'Bounce by reversing slope angle, Xvelocity and spin

  If x < 0 Or x > gw - radius * 2 Then

    spin = -spin 'This is just the direction of spin

    slope = -slope

    displaceX = -displaceX

  EndIf

  'Update acceleration depending on slope

  Acceleration = gravity*Math.Sin(slope)*dt 'In direction of slope

  accX = Acceleration*Math.Cos(slope)

  accY = Acceleration*Math.Sin(slope)

  'Update velocity

  displaceX = displaceX + accX*dt

  displaceY = displaceY + accY*dt

  Velocity = Math.SquareRoot(displaceX*displaceX + displaceY*displaceY)*dt ' total velocity in direction moving (speed)

  'Update position

  x = x + displaceX*dt 

  y = y + displaceY*dt

  Distance = Velocity*dt 'Distance travelled down slope in this step

  'Update angle

  angle = angle + spin*360*Distance/(2*Math.pi*radius) ' Fraction of a full rotation in degrees

  

  'Do the redraws

  Shapes.Rotate(ball, angle)

  Shapes.Move(ball, x, y)

  Program.Delay(2)

EndWhile










