
AddBike()
LDPhysics.SetPosition(Bike,300,100,0)
LDPhysics.DoTimestep()

GraphicsWindow.MouseDown = Mouse
GraphicsWindow.MouseUp = MouseUp


While 1 = 1
  Program.Delay(10)
  LDPhysics.DoTimestep()
  
  If Mouse.IsLeftButtonDown Then
    '  GraphicsWindow.ShowMessage(GraphicsWindow.MouseX + ", " + GraphicsWindow.MouseY,"")
  EndIf
  
  Pos = LDPhysics.GetPosition(FrontWheel)
  PosA = LDPhysics.GetPosition(DistAncor)
  
  Distx = Math.Abs(Pos[1]-PosA[1])
  Disty = Math.Abs(Pos[2]-PosA[2])
  OldDist = Dist
  Dist = Math.SquareRoot((Distx*Distx)+(Disty*Disty))
  
  pjs = Dist - OldDist
  pjt = Dist-260
  
  If (pjt * 100) + (pjs * 10) < 0 Then
    Sine = 1
  Else
    Sine = -1
  EndIf
  LDPhysics.SetJointMotor(FrontWheelJoint,1000*Sine,Math.abs((pjt * 100) + (pjs * 10))*2)
  
  rja = LDPhysics.GetAngle(Spar) - LDPhysics.GetAngle(Bike)+14
  rjs = LDPhysics.GetRotation(Spar) - LDPhysics.GetRotation(Bike)
  If (rja * 5000) + (rjs * 100) < 0 Then
    Sine = 1
  Else
    Sine = -1
  EndIf
  LDPhysics.SetJointMotor(rearsparjoint,1000*Sine,Math.abs((rja * 5000) + (rjs * 1000)))
EndWhile


'==============================================================================
'==============================================================================
'==============================================================================
'==============================================================================

Sub AddBike
  GraphicsWindow.BrushColor = "#939393"
  GraphicsWindow.PenColor = "#D3D3D3"
  
  FrontWheel = Shapes.AddEllipse(100,100)
  LDShapes.Centre(FrontWheel,248,134)
  LDPhysics.AddMovingShape(FrontWheel,0.5,0.5,0.5)
  
  Point = "1=1\=105\;2\=133\;;2=1\=121\;2\=86\;;3=1\=208\;2\=49\;;4=1\=219\;2\=64\;;5=1\=185\;2\=123\;;"
  For i = 1 To Array.GetItemCount(Point)
    Points[i][1] = Point[i][1]
    Points[i][2] = Point[i][2]
  EndFor
  Bike = LDShapes.AddPolygon(Points)
  Points = ""
  Point = "1=1\=30\;2\=46\;;2=1\=116\;2\=95\;;3=1\=217\;2\=61\;;4=1\=199\;2\=25\;;"
  For i = 1 To Array.GetItemCount(Point)
    Points[i][1] = Point[i][1]
    Points[i][2] = Point[i][2]
  EndFor
  Bike2 = LDShapes.AddPolygon(Points)
  Points = ""
  Point = "1=1\=206\;2\=63\;;2=1\=248\;2\=141\;;3=1\=256\;2\=139\;;4=1\=191\;2\=8\;;5=1\=180\;2\=8\;;"
  For i = 1 To Array.GetItemCount(Point)
    Points[i][1] = Point[i][1]
    Points[i][2] = Point[i][2]
  EndFor
  Bike3 = LDShapes.AddPolygon(Points)
  Points = ""
  Point = "1=1\=215\;2\=56\;;2=1\=272\;2\=59\;;3=1\=273\;2\=65\;;4=1\=216\;2\=64\;;"
  For i = 1 To Array.GetItemCount(Point)
    Points[i][1] = Point[i][1]
    Points[i][2] = Point[i][2]
  EndFor
  Bike4 = LDShapes.AddPolygon(Points)
  
  LDPhysics.AddMovingShape(Bike,0.5,0.5,0.5)
  LDPhysics.AddMovingShape(Bike2,0.5,0.5,0.5)
  LDPhysics.AddMovingShape(Bike3,0.5,0.5,0.5)
  LDPhysics.AddMovingShape(Bike4,0.5,0.5,0.5)
  
  LDPhysics.GroupShapes(Bike2,Bike)
  LDPhysics.GroupShapes(Bike3,Bike)
  LDPhysics.GroupShapes(Bike4,Bike)
  
  LDPhysics.SetGroup(Bike,1,"1=0")
  LDPhysics.SetGroup(Bike2,2,"1=0")
  LDPhysics.SetGroup(Bike3,3,"1=0")
  LDPhysics.SetGroup(Bike4,4,"1=0")
  
  DistAncor = LDPhysics.AddMovingAnchor(193,26)
  LDPhysics.GroupShapes(DistAncor,Bike)
  
  RearWheel = Shapes.AddEllipse(100,100)
  LDShapes.Centre(RearWheel,49,141)
  LDPhysics.AddMovingShape(RearWheel,0.5,0.5,0.5)
  
  
  GraphicsWindow.BrushColor = "#545454"
  
  Points = ""
  Point = "1=1\=43\;2\=138\;;2=1\=81\;2\=116\;;3=1\=123\;2\=108\;;4=1\=130\;2\=117\;;5=1\=130\;2\=123\;;6=1\=116\;2\=130\;;7=1\=45\;2\=148\;;"
  For i = 1 To Array.GetItemCount(Point)
    Points[i][1] = Point[i][1]
    Points[i][2] = Point[i][2]
  EndFor
  Spar = LDShapes.AddPolygon(Points)
  LDPhysics.AddMovingShape(Spar,0.5,0.5,0.5)
  SparAncor = LDPhysics.AddMovingAnchor(122,119)
  LDPhysics.GroupShapes(Bike,SparAncor)
  Param[1] = -Math.GetRadians(2)
  Param[2] = Math.GetRadians(30)
  Param2[1] = LDMath.Cos(60)
  Param2[2] = LDMath.Sin(60)
  Param2[3] = -15
  Param2[4] = 10
  rearsparjoint = LDPhysics.AttachShapesWithJoint(SparAncor,Spar,"Revolute","False",Param)
  FrontWheelJoint = LDPhysics.AttachShapesWithJoint(Bike,FrontWheel,"Prismatic_V","False",Param2)
  LDPhysics.AttachShapesWithRotation(RearWheel,Spar)
  
  
EndSub


Sub Mouse
  Shape = LDShapes.GetAllShapesAt(GraphicsWindow.MouseX,GraphicsWindow.MouseY)
  MJoint = LDPhysics.AttachShapesWithJoint(Shape[1],Shape[1],"Mouse","False","")
EndSub

Sub MouseUp
  LDPhysics.DetachJoint(MJoint)
EndSub
