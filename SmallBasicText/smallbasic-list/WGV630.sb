GraphicsWindow.Title = "Pirate Ship

GraphicsWindow.BackgroundColor = "SkyBlue"

gw = 598

gh = 428

GraphicsWindow.Width = gw

GraphicsWindow.Height = gh

Shapes_Init()

scale = 1

angle = 0

Shapes_Add()

cx = 260

cy = -20

h = 350

a = 20

w2 = h * 2 * ldMath.Sin(a)

w1 = 30 * ldMath.Sin(a) 

GraphicsWindow.PenWidth = 8

GraphicsWindow.PenColor = "#000000"

GraphicsWindow.DrawEllipse(shX + cx - 15, shY + cy - 15, 30, 30)

GraphicsWindow.PenWidth = 16

For i = 1 To 2

  GraphicsWindow.DrawLine (shx+cx+(i - 1.5) * w1, shy+cy+15, shx+cx+(i - 1.5) * w2, h +shy+cy)

EndFor

GraphicsWindow.PenWidth = 0

GraphicsWindow.BrushColor = "#999999"

y = 430 - 50

GraphicsWindow.fillRectangle (0 y gw, 50)





While 1=1

  LDGraphicsWindow.Reposition ( 1 1 0 0 aa)

  Program.Delay (33)

  aa=math.Abs(LDMath.Sin(bb)*35)-17

  bb=bb+1

endwhile



Sub Shapes_Init

  shX = 52 ' x offset

  shY = 78 ' y offset

  sh = "func=el&119^243<95>58({rc&163^244<245>57({tr&100^239*1=21%1~x2~y2=43*3=43%3=43@180({tr&78^222*1=22%1~x2~y2=18*3=45%3=18@180({tr&161^222*1=13%1~x2~y2=22*3=26%3=22({tr&99^222*1=22%1~x2~y2=18*3=45%3=18({rc&120^222<54>30({tr&326^207*1=14%1~x2~y2=38*3=28%3=38({tr&399^208*1=14%1~x2~y2=38*3=28%3=38@180({rc&341^208<72>37({rc&359^172<72>37({tr&345^173*1=14%1~x2~y2=38*3=28%3=38({tr&417^172*1=14%1~x2~y2=38*3=28%3=38@180({ln*~y=188*1=93%1=39*2~y2~pc=#5F300C$4{ln&255^5*1~y1~x2=3%2=240[#3B1E07$4{ln&140^45*1~y1~x2~y2=177[#3B1E07$4{rc&169^258<17>17[bk[`pw=2{rc&209^258<17>17[bk[`pw=2{rc&251^258<17>17[bk[`pw=2{rc&293^258<17>17[bk[`pw=2{rc&335^258<17>17[bk[`pw=2{el&171^260<12>12[bk[#939393$2{el&211^259<12>12[bk[#939393$2{el&253^260<12>12[bk[#939393$2{el&295^259<12>12[bk[#939393$2{el&337^259<12>12[bk[#939393$2{ln&102^175*1~y1~x2=71%2~pc=#3B1E07$4{ln&103^97*1~y1~x2=71%2~pc=#3B1E07$4{ln&212^221*1~y1~x2=71%2~pc=#3B1E07$4{ln&210^132*1~y1~x2=71%2~pc=#3B1E07$4{ln&219^84*1~y1~x2=71%2~pc=#3B1E07$4{ln&220^32*1~y1~x2=71%2~pc=#3B1E07$4{ln&335^71*1~y1~x2=71%2~pc=#3B1E07$4{tr&54^112*1=24%1~x2~y2=89*3=48%3=89@33[#E4E4A9p0{tr&341^100*1=28%1~x2~y2=105*3=56%3=105@244[#E4E4A9p0{ln&336^152*1~y1~x2=71%2~pc=#3B1E07$4{ln&372^35*1~y1~x2=1%2=137[#3B1E07$4{rc&239^105<36>18({tr&229^105*1=8%1~x2~y2=18*3=17%3=18@179({tr&266^105*1=8%1~x2~y2=18*3=17%3=18@179({tr&95^101*1=7%1~x2~y2=22*3=15%3=22[bwp0{tr&155^103*1=7%1~x2~y2=22*3=15%3=22@180[bwp0{rc&101^103<61>19[bwp0{rc&95^122<68>28[bwp0{tr&156^148*1=7%1~x2~y2=21*3=15%3=21[bwp0{tr&95^150*1=7%1~x2~y2=21*3=15%3=21@179[bwp0{rc&102^150<62>19[bwp0{tr&201^137*1=8%1~x2~y2=31*3=17%3=31[bwp0{tr&262^186*1=8%1~x2~y2=31*3=17%3=31[bwp0{tr&261^137*1=8%1~x2~y2=31*3=17%3=31@180[bwp0{tr&202^187*1=8%1~x2~y2=31*3=17%3=31@180[bwp0{rc&210^137<60>31[bwp0{rc&210^186<60>31[bwp0{rc&202^163<67>27[bwp0{tr&214^38*1=7%1~x2~y2=11*3=14%3=11[bwp0{tr&273^69*1=7%1~x2~y2=11*3=14%3=11[bwp0{tr&274^38*1=7%1~x2~y2=11*3=14%3=11@180[bwp0{tr&213^70*1=7%1~x2~y2=11*3=14%3=11@180[bwp0{rc&222^38<60>10[bwp0{rc&221^70<60>10[bwp0{rc&214^48<67>25[bwp0{tr&229%~x1=8%1~x2~y2=30*3=17%3=30@269[bkp0{tr&114^41*1=8%1~x2~y2=30*3=17%3=30@269[bkp0{tr&346^33*1=8%1~x2~y2=30*3=17%3=30@269[bkp0{rc&350^216<10>24[bk[`pw=2{rc&371^216<10>24[bk[`pw=2{rc&392^216<10>24[bk[`pw=2{rc&366^182<10>24[bk[`pw=2{rc&389^182<10>24[bk[`pw=2{rc&411^182<10>24[bk[`pw=2{tr&329^77*1=6%1~x2~y2=22*3=13%3=22[bwp0{tr&390^124*1=6%1~x2~y2=22*3=13%3=22[bwp0{tr&328^127*1=6%1~x2~y2=22*3=13%3=22@181[bwp0{tr&389^78*1=6%1~x2~y2=22*3=13%3=22@181[bwp0{rc&336^78<61>21[bwp0{rc&334^126<61>21[bwp0{rc&328^99<67>28[bwp0{el&222^151<29>22[bkp0{ln&217^173*1~y1~x2=38%2=27[bk$4{ln&220^174*1=35%1~x2~y2=26[bk$4{rc&226^169<5>8[bk[bk$4{rc&233^171<5>8[bk[bk$4{rc&240^170<5>8[bk[bk$4{el&227^155<7>12[bwp0{el&238^155<7>12[bwp0{el&209^171<9>10[bkp0{el&214^165<9>10[bkp0{el&250^166<9>10[bkp0{el&254^169<9>10[bkp0{el&254^192<9>10[bkp0{el&249^198<9>10[bkp0{el&213^193<9>10[bkp0{el&218^198<9>10[bkp0

  sh=LDText.Replace (sh "(" "[#5F300Cp0")

  

  sh=LDText.Replace (sh "{" "!func=")

  sh=LDText.Replace (sh "ln" "line")

  sh=LDText.Replace (sh "el" "ell")

  sh=LDText.Replace (sh "rc" "rect")

  sh=LDText.Replace (sh "tr" "tri")

  sh=LDText.Replace (sh "p0" ";pw=0")

  sh=LDText.Replace (sh "<" ";width=")

  sh=LDText.Replace (sh ">" ";height=") 

  sh=LDText.Replace (sh "@" ";angle=")

  sh=LDText.Replace (sh "bw" "#EEEEC8")

  sh=LDText.Replace (sh "bk" "black")

  sh=LDText.Replace (sh "~" "=0;")

  sh=LDText.Replace (sh "`" "#CEA75F;")

  sh=LDText.Replace (sh "&" ";x=")

  sh=LDText.Replace (sh "^" ";y=")

  sh=LDText.Replace (sh "[" ";bc=")

  sh=LDText.Replace (sh "]" ";pc=")

  sh=LDText.Replace (sh "$" ";pw=")

  sh=LDText.Replace (sh "*" ";x")

  sh=LDText.Replace (sh "%" ";y")

  

  shape=LDText.Split (sh "!")

EndSub



Sub Shapes_Add

  Stack.PushValue("local", i)

  Stack.PushValue("local", x)

  Stack.PushValue("local", y)

  Shapes_CalcWidthAndHeight()

  s = scale

  For i = 1 To 93

    shp = shape[i]

    GraphicsWindow.PenWidth = shp["pw"] * s

    If shp["pw"] > 0 Then

      GraphicsWindow.PenColor = shp["pc"]

    EndIf

    If Text.IsSubText("rect|ell|tri|text", shp["func"]) Then

      GraphicsWindow.BrushColor = shp["bc"]

    EndIf

    If shp["func"] = "rect" Then

      shp["obj"] = Shapes.AddRectangle(shp["width"] * s, shp["height"] * s)

    ElseIf shp["func"] = "ell" Then

      shp["obj"] = Shapes.AddEllipse(shp["width"] * s, shp["height"] * s)

    ElseIf shp["func"] = "tri" Then

      shp["obj"] = Shapes.AddTriangle(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s, shp["x3"] * s, shp["y3"] * s)

    ElseIf shp["func"] = "line" Then

      shp["obj"] = Shapes.AddLine(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s)

    EndIf

    x = shp["x"]

    y = shp["y"]

    shp["rx"] = x

    shp["ry"] = y

    

    Shapes.Move(shp["obj"], shX + x * s, shY + y * s)

    If Text.IsSubText("rect|ell|tri|text", shp["func"]) And (shp["angle"] <> 0) And (shp["angle"] <> "") Then

      Shapes.Rotate(shp["obj"], shp["angle"])

    EndIf

    shape[i] = shp

  EndFor

  shAngle = 0

  y = Stack.PopValue("local")

  x = Stack.PopValue("local")

  i = Stack.PopValue("local")

EndSub



Sub Shapes_CalcWidthAndHeight

  For i = 1 To 93

    shp = shape[i]

    If shp["func"] = "tri" Or shp["func"] = "line" Then

      xmin = shp["x1"]

      xmax = shp["x1"]

      ymin = shp["y1"]

      ymax = shp["y1"]

      If shp["x2"] < xmin Then

        xmin = shp["x2"]

      EndIf

      If xmax < shp["x2"] Then

        xmax = shp["x2"]

      EndIf

      If shp["y2"] < ymin Then

        ymin = shp["y2"]

      EndIf

      If ymax < shp["y2"] Then

        ymax = shp["y2"]

      EndIf

      If shp["func"] = "tri" Then

        If shp["x3"] < xmin Then

          xmin = shp["x3"]

        EndIf

        If xmax < shp["x3"] Then

          xmax = shp["x3"]

        EndIf

        If shp["y3"] < ymin Then

          ymin = shp["y3"]

        EndIf

        If ymax < shp["y3"] Then

          ymax = shp["y3"]

        EndIf

      EndIf

      shp["width"] = xmax - xmin

      shp["height"] = ymax - ymin

    EndIf

    If i = 1 Then

      shWidth = shp["x"] + shp["width"]

      shHeight = shp["y"] + shp["height"]

    Else

      If shWidth < shp["x"] + shp["width"] Then

        shWidth = shp["x"] + shp["width"]

      EndIf

      If shHeight < shp["y"] + shp["height"] Then

        shHeight = shp["y"] + shp["height"]

      EndIf

    EndIf

    shape[i] = shp

  EndFor  

EndSub


