gw=900

gh=900

GraphicsWindow.Left =50

GraphicsWindow.Top=20

san=60

a100=150

inmm=0

nl= SPSpecialChars.NewLine

wt="Spattializer"+nl+nl

wt=wt+"Use mousewheel to adjust params, as spacing, hue and tranparency."+nl+nl+"Drag small red rectangle to adjust position."+nl+nl

wt=wt+"Rightclick to select params to adjust."+nl

wt=wt+"Have fun and enjoy!"

LDDialogs.Wait(wt,"")

LDUtilities.ShowNoShapeErrors="False

LDUtilities.ShowErrors="false

nln=SPSpecialChars.NewLine

GraphicsWindow.Width =gw

GraphicsWindow.Height = gh

GraphicsWindow.CanResize = "True

GraphicsWindow.Title = "MouseDraw

LDEvents.MouseWheel=mww

CanMoveShape = "No"

ClickedOnce = "No"

zmx=4

f3=4

sy=1

n=1

pi=1

bsx=0

bsy=0

bsx0=100

bsy0=100

lk="Zoom



GraphicsWindow.PenColor = "Black"

GraphicsWindow.PenWidth = 1

GraphicsWindow.BackgroundColor="Gray

GraphicsWindow.BrushColor = "Black"

LDDialogs.AddRightClickMenu (LDText.Split("Zoom Hue Transp"," "),"")

LDDialogs.RightClickMenu=rmenu

menu["File"] = "Main"

menu["Exit"] = "File"

menu["Help"] = "Main"

menu["About"] = "Help"

LDControls.AddMenu(gw,25,menu,"","") 

LDControls.MenuClicked=mcc  

GraphicsWindow.KeyDown=kkk



yc=0

For zz=0 to (f3-1)*a100 step a100

  

  for zx=0 to (f3-1)*a100 step a100

    

    for zy=0 To (f3-1)*a100 Step a100

      sllw=0.2+zx/a100*0.1+zy/a100*0.1  

      param="z="+zz+";x="+zx+";y="+zy+";color="+(30+yc)+";edge=90;"

      grr="#aa0000 #dd0000 #440000

      DrawCube()

    EndFor

  endfor

  yc=yc+60

endfor



lsf=0.2

lsy=0.2

trr=90

GraphicsWindow.BrushColor = "Crimson"

lsh = Shapes.AddRectangle(100, 100)

Shapes.Move(lsh, 280, 311)

GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(23, 167, 117)

Shapes.Zoom (lsh,lsf,lsf)

domww ()



GraphicsWindow.MouseMove = MouseMove

GraphicsWindow.MouseDown = MouseDown

GraphicsWindow.MouseUp = MouseUp

Program.Delay(1233)

LDDialogs.EndWait ()



While 1=1

  if hlp=1 Then

    hlp=0

    LDDialogs.Wait(wt,"Green")

    Program.Delay(6333)

    LDDialogs.EndWait () 

  endif

  

endwhile



Sub mcc'----------------------------------------------------subs---------------------------------------------

  lmi= LDControls.LastMenuItem 

  If lmi="Exit" Then

    Program.End()

  ElseIf lmi="About" Then

    hlp=1

  endif

endsub



Sub MouseMove

  xm = GraphicsWindow.MouseX

  ym = GraphicsWindow.MouseY

  LMRecX = Shapes.GetLeft(lsh)

  LMRecY = Shapes.GetTop(lsh)

  

  If xm > LMRecX And xm < LMRecX + 100 And ym > LMRecY And ym < LMRecY + 100 Then

    Shapes.SetOpacity(lsh, 50)

    lss=1

  Else

    Shapes.SetOpacity(lsh, trr)

  EndIf

  

  If CanMoveShape = "Yes1" Then

    Shapes.Move(lsh, xm - 50, ym - 50)

  EndIf

EndSub



Sub MouseDown

  xm = GraphicsWindow.MouseX

  ym = GraphicsWindow.MouseY

  For qy=1 To 1

    If xm > LMRecX And xm < LMRecX + 100 And ym > LMRecY And ym < LMRecY + 100 Then

      CanMoveShape = "Yes1"

    endif

  EndFor 

EndSub



Sub MouseUp

  CanMoveShape = "No"

  domww()

EndSub



Sub kkk

  lk= GraphicsWindow.LastKey

  'GraphicsWindow.Title=lk

EndSub 



Sub domww

  lx=shapes.GetLeft(lsh)-100

  ly= Shapes.GetTop (lsh)

  lx0=lx-ldfastShapes.GetLeft (fsh[1])

  ly0=ly-ldfastShapes.Gettop (fsh[1])

  

  For i=1 To f3*f3*3*f3

    lx2=ldfastShapes.GetLeft (fsh[i])

    ly2=ldfastShapes.Gettop (fsh[i])

    ldfastShapes.Move ( fsh[i],lx2+lx0,ly2+ly0)

  endfor

  LDFastShapes.Update ()

EndSub 



sub rmenu'------------------------rightmousepopup------------------------------

  mk= LDDialogs.LastRightClickMenuItem 

  If mk=1 Then

    lk="F1"

  elseIf mk=2 Then

    lk="F2"

  elseIf mk=3 Then

    lk="F3"

    

  Else

    lk="Zoom

  EndIf  

  

EndSub 



Sub mww'-------------------------mousewheel----------------

  

  If lk="F3" Then

    trq=trq+LDEvents.LastMouseWheelDelta*5

    If trq<10 Then 

      trq=10

    ElseIf trq>100 Then

      trq=100

    endif

    For i=1 To f3*f3*f3*3

      LDFastShapes.SetOpacity(fsh[i],trq)

    endfor

    

    LDFastShapes.Update ()

    

  elseIf lk="F2" Then

    hh=hh+LDEvents.LastMouseWheelDelta*5

    hh=math.Remainder(hh,360)

    For i=1 to f3*f3*f3*3 step 3

      LDShapes.BrushColour (psh[i],LDColours.HSLtoRGB(hh+i*2,0.5,0.8))

     LDShapes.BrushColour (psh[i+1],LDColours.HSLtoRGB(hh+i*2,0.5,0.6))

      LDShapes.BrushColour (psh[i+2],LDColours.HSLtoRGB(hh+i*2,0.4,0.5))

 



endfor

  ElseIf inmm=0 then

    inmm=1

    

    a100=a100+LDEvents.LastMouseWheelDelta*5 

    If a100<5 then

      a100=5

    endif

    lx=shapes.GetLeft(lsh)-100

    ly= Shapes.GetTop (lsh)

    GraphicsWindow.Title =a100

    pi=1

    For ppz=0 to (f3-1)*a100 step a100

      for ppx=0 to (f3-1)*a100 step a100

        

        for ppy=0 To (f3-1)*a100 Step a100

          Conv3Dto2D() 

          For t=1 to 3

            LDFastShapes.Move(fsh[pi], x+lx,y+ly)

            pi=pi+1

          endfor

        EndFor

      endfor

    endfor 

    LDFastShapes.Update()

    inmm=0

  endif

  

EndSub 



Sub DrawCube

  ppx1= param["x"]

  ppy1= param["y"]

  ppz1= param["z"]

  ppx=bsx0

  ppy=bsy0

  ppz=0

  Conv3Dto2D()

  edge = Math.SquareRoot(2 / 3) * param["edge"]

  x1 = ppx

  y1 = ppy

  cci= param["color"]

  

  cw=1

  clw[1]=LDColours.HSLtoRGB(cci,0.5,sllw)

  clw[2]=LDColours.HSLtoRGB(cci,0.5,sllw*1.2)

  clw[3]=LDColours.HSLtoRGB(cci,0.5,sllw*1.2)

  

  For a = san To 360+san Step 60

    _a = Math.GetRadians(a)

    x2 = bsx0 - edge * Math.Sin(_a)

    y2 = bsy0 - edge/(n) * Math.Cos(_a)

    

    If a>san Then

      If a=360 then 

        cc=1

      Else 

        cc=math.Remainder (a,360)  / 60

      endif

      

      If math.Remainder (a/60-1,2)=0 then

        plly[1][1]=x1+50

        plly[1][2]=y1-30

        plly[2][1]=x2+50

        plly[2][2]=y2-30

        plly[3][1]=x3+50

        plly[3][2]=y3-30

        plly[4][1]=ox3+50

        plly[4][2]=oy3-30 

        psh[pi]=ldShapes  .AddPolygon (plly)

        fsh[pi]=LDfastShapes.ShapeIndex (psh[pi])

        

        ppx=ppx1

        ppy=ppy1

        ppz=ppz1

        Conv3Dto2D() 

        

        LDFastShapes.Move(fsh[pi], x,y)

        LDShapes.BrushColour(psh[pi], clw[cw])

        cw=cw+1

        pi=pi+1 

      endif

    EndIf

    

    ox3=x3

    oy3=y3

    x3 = x2

    y3 = y2

  EndFor

endsub



Sub Conv3Dto2D

  x = bsx - Math.SquareRoot(1 / 2) *ppx

  x = x + Math.SquareRoot(1 / 2) * ppy

  y = bsy + Math.SquareRoot(1 / 6) * ppx

  y = y + Math.SquareRoot(1 / 6) * ppy

  y = y - Math.SquareRoot(2 / 3) * ppz

EndSub


