'This program finds all permutations of a set with different items (unfortunately I
'haven't found a way to do it with repeated items yet.

'It uses a simple algorithm to keep adding one to a number in any numerical system and
'then check if all the items are different


'set number of items
n=4
'set delay between steps
d=150
'find n^n (all possibilities of a set with n items that vary from 1 to n)
b=Math.Power(n, n)
'set all items to 1
For i = 1 To n
  a[i]=1
EndFor

'main loop with b processes
For i = 1 To b
  'set "to print" variable to true in each process
  tp="true"
  'check if any of the items are equal. if not, it's a permutation
  For j = 1 To n
    For k = 1 To n
      If j <> k And a[j] = a[k] Then
        tp="false"
      EndIf
    EndFor
  EndFor
  'print permutation if all items are different
  If tp = "true" Then
    TextWindow.Write("(")
    For l = 1 To n
      If l <> n Then
        TextWindow.Write(a[l] + ",")
      Else
        TextWindow.WriteLine(a[l] + ")")
      EndIf
    EndFor
    Program.Delay(d)
    Add()
  Else
    m=n
    Add()
  EndIf
EndFor

'adds one to the set as if the number system has n digits
Sub Add
  'if the last item is at the maximum value set it to one and keep going to the anterior item
  If a[m]=n Then
    a[m]=1
    'if anterior item is also at the maximum value, repeat subroutine
    If a[m-1]=n Then
      m=m-1
      add()
    'set item to itself plus 1
    Else
      a[m-1]=a[m-1]+1
    EndIf
  'set item to itself plus 1
  Else
    a[m]=a[m]+1
  EndIf
EndSub
