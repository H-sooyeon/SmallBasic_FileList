' SmallBasic Version 1.2
' Program: TWWidth(Height)
' Changelog: 
' Author: Pappa Lapub
' Website: https://social.msdn.microsoft.com/Forums/en-US/24906a34-5afb-405b-b0b9-1acaf8917e6e/textwindow-right-margin
' ImportURL: http://smallbasic.com/program/?LJZ753
' Extension: LitDev
' Comment: 
'  
' Variables: 
' ToDo: 
' ================================================================================
lf = Text.GetCharacter(10)
qu = Text.GetCharacter(34)
CSExt()
LDInline.IncludeCS(cs, "","")

wh = LDInline.Call("SBTW.GetWindowSize", "")
TextWindow.WriteLine("Width:  "+ wh[1])
TextWindow.WriteLine("Height: "+ wh[2])

w = LDInline.Get("SBTW.Width")
TextWindow.WriteLine("Columns: "+ w)
h = LDInline.Get("SBTW.Height")
TextWindow.WriteLine("Lines:   "+ h)

TextWindow.WriteLine("Top:  "+ TextWindow.Top)
TextWindow.WriteLine("Left: "+ TextWindow.Left)
TextWindow.WriteLine("Right Margin: "+ (TextWindow.Left + wh[1]) +lf)

'' set right margin to Desktop.Width
TextWindow.Write("Set TW right margin to Desktop.Width? [y|n] ")
ans = Text.ConvertToLowerCase(TextWindow.Read())
If ans = "y" Then
  TextWindow.Left = Desktop.Width - wh[1]
EndIf
TextWindow.WriteLine(lf+lf)
TextWindow.Pause()
Program.End()


Sub CSExt
  cs = "using System;"+ lf
  cs = cs +"using System.Diagnostics;"+ lf
  cs = cs +"using System.Runtime.InteropServices;"+ lf
  cs = cs +"using Microsoft.SmallBasic.Library;"+ lf
  cs = cs + "[SmallBasicType]"+ lf
  cs = cs + "public static class SBTW {"+ lf
  cs = cs + " [DllImport("+ qu +"user32.dll"+ qu +", SetLastError=true)]"+ lf
  cs = cs + " static extern bool GetWindowRect(IntPtr hwnd, out RECT lpRect);"+ lf
  cs = cs +"  [StructLayout(LayoutKind.Sequential)]"+ lf
  cs = cs +"  public struct RECT {"+ lf
  cs = cs +"    public int Left; public int Top;"+ lf
  cs = cs +"    public int Right; public int Bottom; }"+ lf
  cs = cs + " public static Primitive GetWindowSize() {"+ lf  ' get TW size as array "1=width;2=height;"
  cs = cs +"    TextWindow.Show();"+ lf
  cs = cs +"    Process twProc = Process.GetCurrentProcess();"+ lf
  cs = cs +"    RECT rct;"+ lf
  cs = cs +"    GetWindowRect(twProc.MainWindowHandle, out rct);"+ lf
  cs = cs +"    Primitive size = new Primitive();"+ lf
  cs = cs +"    size[1] = rct.Right - rct.Left + 1;"+ lf
  cs = cs +"    size[2] = rct.Bottom - rct.Top + 1;"+ lf
  cs = cs +"    return size; }"+ lf
  cs = cs +"  public static Primitive Width {"+ lf    ' get/set TW width [Columns] (Default: 90)
  cs = cs +"    get {"+ lf
  cs = cs +"      TextWindow.Show();"+ lf
  cs = cs +"      return Console.WindowWidth; }"+ lf
  cs = cs +"    set {"+ lf
  cs = cs +"      TextWindow.Show();"+ lf
  cs = cs +"      int cw = (String.IsNullOrEmpty(value)) ? 90 : (int)value;"+ lf
  cs = cs +"      cw = System.Math.Min(System.Math.Max(1, cw), Console.LargestWindowWidth);"+ lf
  cs = cs +"      Console.WindowWidth = cw; } }"+ lf
  cs = cs +"  public static Primitive Height {"+ lf   ' get/set TW height [Lines] (Default: 30)
  cs = cs +"    get {"+ lf
  cs = cs +"      TextWindow.Show();"+ lf
  cs = cs +"      return Console.WindowHeight; }"+ lf
  cs = cs +"    set {"+ lf
  cs = cs +"      TextWindow.Show();"+ lf
  cs = cs +"      int ch = (String.IsNullOrEmpty(value)) ? 30 : (int)value;"+ lf
  cs = cs +"      ch = System.Math.Min(System.Math.Max(1, ch), Console.LargestWindowHeight);"+ lf
  cs = cs +"      Console.WindowHeight = ch; } } }"+ lf
  
  TextWindow.Left = 10
  'TextWindow.WriteLine(cs)
' The following line could be harmful and has been automatically commented.
'   'File.WriteContents(Program.Directory +"\TWWidth.cs", cs)
EndSub

