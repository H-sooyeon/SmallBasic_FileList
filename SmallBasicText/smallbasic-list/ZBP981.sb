GUI() 
init()
mainmenu()
  GraphicsWindow.KeyDown = walking
  GraphicsWindow.KeyUp = standing
sub GUI ' all things static
  
  GraphicsWindow.Title= "NARUTO RPG"
  GraphicsWindow.BackgroundColor = "SkyBlue"
  GraphicsWindow.Width = 600
  GraphicsWindow.Height=400
  GraphicsWindow.CanResize = "False"
  
EndSub

Sub mainmenu
  
  GraphicsWindow.BackgroundColor = "Black"
  GraphicsWindow.BrushColor = "Black"  
  newgame=Controls.AddButton("New Game", 250, 100)
  loadgame = Controls.AddButton("Load Game", 250, 200)
   GraphicsWindow.BrushColor = "White" 
  GraphicsWindow.DrawBoundText(0, 300, 600, " New game deletes and makes a new profile, Load game loads from recent saved Status, when you click please wait")
  
  Controls.ButtonClicked = getgamestat
  
  notanswer = "True"
  While notanswer
    If gamestat = newgame Then
      determine()
      notanswer = "False"
      
    ElseIf gamestat = loadgame then
      
      loadstats()
      notanswer = "False"
      TextWindow.WriteLine("You clicked load game")
    EndIf
    endwhile
While "True"      
   If part = 1 Then 
    origins()
  ElseIf part = 2 then
  mission1()
  endif
 
Program.Delay(250)
    
  endwhile
  
   endsub
  sub origins
  GraphicsWindow.Clear()
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.DrawBoundText(200, 200, 100, "Taking you to the training ground...")
  Program.Delay(3000)
  GraphicsWindow.Clear()
  
  createtrainingfield()
  createplayer()
  createkakashi()
EndSub

Sub createkakashi
  
  kakashihead = Shapes.AddEllipse(20, 20)
  kakashi["x"] = 100
  kakashi["y"] = 220
  Shapes.Move(kakashihead,kakashi["x"], kakashi["y"])
  GraphicsWindow.BrushColor = "Black"
  kakashileftarm = Shapes.addRectangle(10, 30)
  GraphicsWindow.BrushColor = "Black"
  kakashitorso = Shapes.AddRectangle(10, 30)
  GraphicsWindow.BrushColor = "White"
  kakashirightarm = Shapes.AddRectangle(10, 30)
  Shapes.Move(kakashileftarm, kakashi["x"]+5, kakashi["y"] +20)
  Shapes.Move(kakashitorso, Kakashi["x"]+5, kakashi["y"] +20)
  Shapes.Move(kakashirightarm, kakashi["x"]+5, kakashi["y"] +20)
  GraphicsWindow.BrushColor = "Blue"
  kakashileftleg = Shapes.AddRectangle(10, 30)
  GraphicsWindow.BrushColor = "Blue"
  kakashirightleg = Shapes.AddRectangle(10, 30)
  Shapes.Move(kakashirightleg,kakashi["x"]+5, kakashi["y"] +50 )
  Shapes.Move(kakashileftleg,kakashi["x"]+5, kakashi["y"] +50 )
  
  movable = "False"
  
  
  
  intro[1] = Shapes.AddText("Welcome Shinobi. I am Kakashi. Today we will learn about actions.")
  intro[2] = Shapes.AddText("Press the [Punch] button to attack")
  For i = 1 To 2 Step 1
  Shapes.Move(intro[i], 150, 200 +(10*i))
  EndFor
  punch = Controls.AddButton("Punch", 0, 350)
  Controls.ButtonClicked = action ' this will now be for everything that has to do with attacks
  notacted = "True"
  
  While notacted 
    If getaction = punch Then
      playerpunch()
      getaction = ""
      notacted = "False"
    EndIf
  
 Program.Delay(250)
endwhile 
headpoint["x"] = 40
standing()
For i = 1 To 2 Step 1
  Shapes.Remove(intro[i])
endfor
intro[1] = Shapes.AddText("Good, ur a master already. Press the mold chakra to increase flow.")
intro[2] = Shapes.AddText("Press the [Mold] button to attack")
mold = Controls.AddButton("Mold Chakra", 100, 350)

  For i = 1 To 2 Step 1
  Shapes.Move(intro[i], 150, 200 +(10*i))
EndFor
notacted = "True"
  While notacted 
    If getaction = mold Then
      playermold()
      getaction = ""
      notacted = "False"
    EndIf
  
 Program.Delay(250)
endwhile 
  For i = 1 To 2 Step 1
  Shapes.Remove(intro[i])
endfor
intro[1] = Shapes.AddText("Great. With Chakra flow you will be able to increase your attack strength ")
intro[2] = Shapes.AddText("You are now ready to begin your mission and learn new moves.")
intro[3] = Shapes.AddText("Your first mission is to... go to the market and buy a scroll.")
intro[4] = Shapes.AddText("Press A or D to move left or right. The market is to the right.")
part  = 2
savestats()
EndSub
Sub mission1
  GraphicsWindow.Clear()
  createtrainingfield()
  createplayer()
 
  For i = 1 To 3 Step 1
  Shapes.Move(intro[i], 150, 200 +(10*i))
EndFor
movable= "True"
GraphicsWindow.KeyDown = walking
onmap = "True"
While onmap
If headpoint["x"] > 560 Then 
  onmap = "False"
  Program.Delay(1000)
  
  loadtown()
  headpoint["x"] = 0
  standing()
EndIf
EndWhile
notoverstore = "True"
While notoverstore
  If 
  

EndSub


Sub action 
  getaction = Controls.LastClickedButton
  
EndSub
Sub getgamestat
  gamestat = Controls.LastClickedButton 
endsub
'=======================================================FIELD CREATIONS==================================================
Sub createtrainingfield
  
  GraphicsWindow.BackgroundColor = "Skyblue"
  
  GraphicsWindow.BrushColor="#66a500"
  GraphicsWindow.fillRectangle(0,300, 700, 120) ' this is ground
  GraphicsWindow.BrushColor="#ae3b00"
  GraphicsWindow.FillRectangle(350, 250, 10, 50) ' this is log
  ground["y"]= 250
endsub


Sub loadtown
  GraphicsWindow.Clear()
  GraphicsWindow.BackgroundColor = "Black"
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.DrawBoundText(300, 200, 50, "Taking you to Town")
 
  Program.Delay(1000)
  GraphicsWindow.Clear()
  GraphicsWindow.BackgroundColor = "Skyblue"
  GraphicsWindow.BrushColor="Brown"
  GraphicsWindow.fillRectangle(0,300, 700, 120)
  'create the town 
  
  createplayer()
  
  
  EndSub
'============================Everything Character Action================================================
Sub playerpunch
  headpoint["x"] = 330
 Shapes.Move(head,headpoint["x"], headpoint["y"])
  
  angle["left"] = 45 ' angle change for arms and legs
  angle["right"] = 90
  displacementx["left"] = angle["left"]/5 ' horizontal chage for arms and legs
  displacementx["right"] = angle["right"]/5
  displacementy["left"] = math.Abs(angle["left"]/9) ' vertical change for arms and legs
  displacementy["right"] = math.Abs(angle["right"]/9)
  'displacementforhead = (angle/100) ' vertical change for entire body
  direction = direction
  
  
  Shapes.Rotate(leftarm, angle["left"])
  Shapes.Rotate(rightarm, -angle["right"])
  Shapes.Rotate(leftleg, 0)
  Shapes.Rotate(rightleg, angle["left"])
  If facing = 1 then
    Shapes.Move(eye, headpoint["x"] + 13, headpoint["y"] + 7)
  else 
    Shapes.Move(eye, headpoint["x"] + 2, headpoint["y"] + 7)
  EndIf
  Shapes.Move(leftarm,  headpoint["x"]+5-displacementx["left"], headpoint["y"] +20 - displacementy["left"] )
  
  Shapes.Move(torso, headpoint["x"]+5, headpoint["y"] +20)
  Shapes.Move(rightarm,  headpoint["x"]+5+displacementx["right"], headpoint["y"] +20  - displacementy["right"])
  
  Shapes.Move(rightleg,headpoint["x"]+5-displacementx["left"], headpoint["y"] +50 - displacementy["left"] )
  Shapes.Move(leftleg,headpoint["x"]+5, headpoint["y"] +50)
  
  
  Program.Delay(250)
EndSub
Sub playermold 'molding chakra animation
  tripoint["x"] = 6
 
    xpoint[1] = tripoint["x"] 
    ypoint[1] = 0
  
  xpoint[2] = xpoint[1] + 6
  ypoint[2] = ypoint[1] + 6
  xpoint[3] = xpoint[1] - 6
  ypoint[3] = ypoint[2]
    For i = 1 To 6
    tri[i] = Shapes.AddTriangle(xpoint[1], ypoint[1], xpoint[2], ypoint[2], xpoint[3], ypoint[3]) 
  endfor
  For i = 1 to 6
    xmove[i] = (headpoint["x"]-30) + (Math.GetRandomNumber(100)*0.5)
   ymove[i] =  300 - (Math.GetRandomNumber(100)*0.5)
    Shapes.Move(tri[i], xmove[i], ymove[i])   
  endfor
  For i = 1 To 6 
    Shapes.Animate(tri[i], xmove[i], ymove[i] - 80, 1000)
  endfor
  Program.Delay(1000)
  For i = 1 To 6
    Shapes.Remove(tri[i])
    endfor
  
  EndSub
Sub createplayer ' recreates player after every teleport
  GraphicsWindow.BrushColor = "LightSalmon"
  head = Shapes.AddEllipse(20, 20)
  headpoint["x"] = 40
  headpoint["y"] = 220
  eyepointy = headpoint["y"] + 7
  eyepointx = headpoint["x"] + 13
  eye = Shapes.AddEllipse(5, 5)
  facing = 1
  Shapes.Move(eye, eyepointx, eyepointy)
  Shapes.Move(head,headpoint["x"], headpoint["y"])
  GraphicsWindow.BrushColor = "LightSalmon"
  leftarm = Shapes.addRectangle(10, 30)
  GraphicsWindow.BrushColor = "Green"
  torso = Shapes.AddRectangle(10, 30)
  GraphicsWindow.BrushColor = "Red"
  rightarm = Shapes.AddRectangle(10, 30)
  Shapes.Move(leftarm,  headpoint["x"]+5, headpoint["y"] +20)
  Shapes.Move(torso, headpoint["x"]+5, headpoint["y"] +20)
  Shapes.Move(rightarm,  headpoint["x"]+5, headpoint["y"] +20)
  GraphicsWindow.BrushColor = "Blue"
  leftleg = Shapes.AddRectangle(10, 30)
  GraphicsWindow.BrushColor = "Blue"
  rightleg = Shapes.AddRectangle(10, 30)
  Shapes.Move(rightleg,headpoint["x"]+5, headpoint["y"] +50 )
  Shapes.Move(leftleg,headpoint["x"]+5, headpoint["y"] +50 )
  direction = -1 
  
endsub
Sub walking
  keypressed = GraphicsWindow.LastKey
  If movable = "True" then ' when text is going its to prevent walling or when there is a fight. 
  If keypressed = "D" Then
    If headpoint["x"] > 580 Then ' this checks to see if you ran into a wall. for the game teleport this doesnt matter.
      
    Else
      headpoint["x"] = headpoint["x"] +3
      facing = 1 
      move()  
      
    EndIf 
  ElseIf keypressed = "A" then
    If headpoint["x"] < 0 Then
      
    Else
      
      headpoint["x"] = headpoint["x"] -3
      facing = -1 
      move()
      
    EndIf
  endif
  EndIf
   endsub


sub move
  moving = "True"
  Shapes.Move(head,headpoint["x"], headpoint["y"])
  
  angle = angle + (deltaarm*7) ' angle change for arms and legs
  displacementx = angle/5 ' horizontal chage for arms and legs
  displacementy = math.Abs(angle/9) ' vertical change for arms and legs
  displacementforhead = (angle/100) ' vertical change for entire body
  direction = direction
  
  If direction = -1 Then
    deltaarm = 1
    If angle > 60 Then
      direction = 1 
    EndIf
  ElseIf direction = 1 then
    deltaarm = -1
    If angle < -60 then
      direction = -1
    EndIf
  EndIf
  Shapes.Rotate(leftarm, angle)
  Shapes.Rotate(rightarm, -angle)
  Shapes.Rotate(leftleg, -angle)
  Shapes.Rotate(rightleg, angle)
  If facing = 1 then
    Shapes.Move(eye, headpoint["x"] + 13, headpoint["y"] + 7)
  else 
    Shapes.Move(eye, headpoint["x"] + 2, headpoint["y"] + 7)
  EndIf
  Shapes.Move(leftarm,  headpoint["x"]+5-displacementx, headpoint["y"] +20 - displacementy )
  
  Shapes.Move(torso, headpoint["x"]+5, headpoint["y"] +20)
  Shapes.Move(rightarm,  headpoint["x"]+5+displacementx, headpoint["y"] +20  - displacementy)
  
  Shapes.Move(rightleg,headpoint["x"]+5-displacementx, headpoint["y"] +50 - displacementy)
  Shapes.Move(leftleg,headpoint["x"]+5+displacementx, headpoint["y"] +50 - displacementy)
  
  Program.Delay(10) 
endsub

Sub standing
  headpoint["x"] = headpoint["x"]
  angle = 0 
  Shapes.Rotate(leftarm, angle)
  Shapes.Rotate(rightarm, angle)
  Shapes.Rotate(leftleg, angle)
  Shapes.Rotate(rightleg, angle)
   If facing = 1 then
    Shapes.Move(eye, headpoint["x"] + 13, headpoint["y"] + 7)
  else 
    Shapes.Move(eye, headpoint["x"] + 2, headpoint["y"] + 7)
  EndIf
  Shapes.Move(head,headpoint["x"], headpoint["y"])
  Shapes.Move(torso, headpoint["x"]+5, headpoint["y"] +20)
  Shapes.Move(leftarm,  headpoint["x"]+5, headpoint["y"] +20)
  Shapes.Move(rightarm,  headpoint["x"]+5, headpoint["y"] +20)
  Shapes.Move(rightleg,headpoint["x"]+5, headpoint["y"] +50 )
  Shapes.Move(leftleg,headpoint["x"]+5, headpoint["y"] +50 )
endsub
'==============================================================================================
Sub createstatsshow
  
  
endsub





'==============================Getting Chakra Type===============================================
sub determine
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.Clear()
  
  For i = 1 To 20 Step 1
    
    element = Math.GetRandomNumber(5)
    
    If element = 1 Then
      chakratype = "Fire"
    ElseIf element = 2 then
      chakratype= "Water" 
    ElseIf element = 3 then
      chakratype = "Wind"
    ElseIf element = 4 then
      chakratype = "Earth"
    ElseIf element = 5 then
      chakratype = "Lightning" 
    EndIf
    
    GraphicsWindow.DrawBoundText(250, 100, 100,chakratype)
    
    Program.Delay(100)
    GraphicsWindow.Clear()
  EndFor
  
  GraphicsWindow.DrawBoundText(250, 100, 100,"Your new chakra is " + chakratype)
  
  Program.Delay(4000)
  part = 1
  newstats()  
  savestats()
  
endsub
'============================SAVING AND GETTING SAVED INFORMATION============================
Sub savestats
  
  path = Program.Directory + "\Narutosaved\"
  Savedname = "Naruto Saved Progress"
  ext = ".txt"
  filesave["playerhealth"] = playerhealth
  filesave["chakra"] = chakra
  filesave["chakraflow"] = chakraflow
  filesave["attack"] = attack
  filesave["speed"] = speed
  filesave["rank"] = rank
  filesave["Element"] = chakratype
  filesave["part"]=part
' The following line could be harmful and has been automatically commented.
'   File.CreateDirectory(path)
' The following line could be harmful and has been automatically commented.
'   File.WriteContents(path+savedname+ext, filesave)
  filesave = ""
' The following line could be harmful and has been automatically commented.
'   filesave = File.ReadContents(path + Savedname + EXT) 
  
EndSub

Sub loadstats
  
' The following line could be harmful and has been automatically commented.
'   filesave = File.ReadContents(PATH+Savedname+EXT)
  playerhealth = filesave["playerhealth"]
  chakra = filesave["chakra"]
  chakraflow = filesave["chakraflow"] 
  attack = filesave["attack"] 
  speed = filesave["speed"]
  rank = filesave["rank"]
  chakratype = filesave["Element"] 
  part = filesave["part"]
EndSub

Sub init 
  
  path = Program.Directory + "\Narutosaved\"
  Savedname = "Naruto Saved Progress"
  ext = ".txt"
  
endsub

Sub newstats
  
  playerhealth = 20
  chakra = 4 
  chakraflow = 1
  attack = 1
  jutsuattack = 1
  speed = 5
  rank = "Academy" ' for jutsu learning
  'gg = genkai ' not yet implemented.
  chakratype = chakratype
  part = 1
EndSub
