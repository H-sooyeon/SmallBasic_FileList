' SmallBasic Version 1.0 / 1.1

' Program: NoSleep  (Simulate activity to prevent system from hibernation)

' Changelog: 14.x, 15.4

' Author: Pappa Lapub

' Website: https://social.msdn.microsoft.com/Forums/en-US/3b975ffc-cbfd-407c-ab95-74912e57c65d/challenge-of-the-month-april-2015

' ImportURL: http://smallbasic.com/program/?

' Extension: Picollino Ext

' Comment: 

'  Variant A .. per TimerTick event

'  Variant B .. per While "True" mainloop with delay

'  

' Variables: define 'mins' (< minutes until hibernation) and 'tbh' (your Taskbar height)

' ToDo: 

' ================================================================================

mins = 1              ' simulate activity every x minutes

tbh = 60              ' Taskbar Height



wait = mins * 60000   ' [ms]

gw = 116              ' smallest GW.Width; NOT reachable between GW.Hide() and GW.Show()  (-> 132)

gh = 100



gw2 = gw/2

gh2 = gh/2

gl = Desktop.Width -gw-14       ' GW sits above tray (right bottom of screen)

gt = Desktop.Height - tbh -gh-36

mx = gl + gw2 + 7

my = gt + gh2 + 29



GraphicsWindow.Left = gl

GraphicsWindow.Top = gt

GraphicsWindow.Width = gw

GraphicsWindow.Height = gh

GraphicsWindow.BackgroundColor = "Lime"



GraphicsWindow.BrushColor = "Red"

GraphicsWindow.PenWidth = 0

rect = Shapes.AddRectangle(gw2,gh2)



GraphicsWindow.BrushColor = "Black"

GraphicsWindow.FontSize = 62  '72

shpCounter = Shapes.AddText(counts)

Shapes.Move(shpCounter, 0,12)



rectX = "1=0;2=58;3=58;4=0;"  ' 2 and 3   = gw2

rectY = "1=0;2=0;3=50;4=50;"  ' 3 and 4   = gh2



Timer.Interval = wait     '' A

Timer.Tick = OnTimerTick  '' A

OnTimerTick()             '' A





' //////////  Timer EVENT or MainLoop  \\\\\\\\\\

Sub OnTimerTick           '' A

'While "True"        '' B

  n = Math.Remainder(n, 4) + 1  ' 1,2,3,4; 1,2,3,4; ...

  Shapes.Move(rect, rectX[n],rectY[n])

  

  If (Mouse.MouseX > gl+7) And (Mouse.MouseX < gl+7+gw) And (Mouse.MouseY > gt+36) And (Mouse.MouseY < gt+29+gh) Then

  Else                ' if cursor was found outside of GW, move it back into  (and reset counter)

    Mouse.MouseX = mx

    Mouse.MouseY = my

    counts = 0                ' set back after, cursor been outside

  EndIf

  MouseControl.LeftClick()    ' will NOT work without

  

  Shapes.SetText(shpCounter, counts) ' * mins)   '' to show minutes and not # of cycles

  counts = counts + 1

  

  'Program.Delay(wait)     '' B

'EndWhile                '' B

EndSub                    '' A

  


