'Rotating 3D solid cube

'I owe the maths to this page: http://codentronix.com/2011/05/24/rotating-wireframe-cube-using-vb-net-and-gdi/



'show window'

speed=50

size=0.5

center=250

GraphicsWindow.Show()

GraphicsWindow.Height=500

GraphicsWindow.Width=500

GraphicsWindow.PenWidth=0





'define cube corners, based on distance from centre point

point3d[1]["x"]=-100

point3d[1]["y"]=-100

point3d[1]["z"]=100

point3d[2]["x"]=100

point3d[2]["y"]=-100

point3d[2]["z"]=100

point3d[3]["x"]=-100

point3d[3]["y"]=100

point3d[3]["z"]=100

point3d[4]["x"]=100

point3d[4]["y"]=100

point3d[4]["z"]=100

point3d[5]["x"]=-100

point3d[5]["y"]=-100

point3d[5]["z"]=-100

point3d[6]["x"]=100

point3d[6]["y"]=-100

point3d[6]["z"]=-100

point3d[7]["x"]=-100

point3d[7]["y"]=100

point3d[7]["z"]=-100

point3d[8]["x"]=100

point3d[8]["y"]=100

point3d[8]["z"]=-100

'define triangles between end points

tri[1][1]=1

tri[1][2]=2

tri[1][3]=3

tri[2][1]=2

tri[2][2]=3

tri[2][3]=4

tri[3][1]=1

tri[3][2]=5

tri[3][3]=6

tri[4][1]=1

tri[4][2]=6

tri[4][3]=2

tri[5][1]=1

tri[5][2]=5

tri[5][3]=7

tri[6][1]=1

tri[6][2]=7

tri[6][3]=3

tri[7][1]=2

tri[7][2]=6

tri[7][3]=8

tri[8][1]=2

tri[8][2]=4

tri[8][3]=8

tri[9][1]=3

tri[9][2]=4

tri[9][3]=7

tri[10][1]=7

tri[10][2]=4

tri[10][3]=8

tri[11][1]=5

tri[11][2]=6

tri[11][3]=7

tri[12][1]=6

tri[12][2]=7

tri[12][3]=8



tricolour[1]="blue"

tricolour[2]="blue"

tricolour[3]="red"

tricolour[4]="red"

tricolour[5]="green"

tricolour[6]="green"

tricolour[7]="yellow"

tricolour[8]="yellow"

tricolour[9]="orange"

tricolour[10]="orange"

tricolour[11]="pink"

tricolour[12]="pink"



factor=600



For i = 1 to 1000

  Program.Delay(20)

  For pointno = 1 to 8

    rotatez()

    rotatey()

    rotatex()

  endfor  

  convert3dto2d()

  DetectTriangleDistance()

  draw2d()

EndFor  



Sub convert3dto2d

  For points = 1 To 8

    point2d[points]["x"] = point3d[points]["x"] + point3d[points]["x"] *(point3d[points]["z"]/factor)

    point2d[points]["y"] = point3d[points]["y"]  + point3d[points]["y"] *(point3d[points]["z"]/factor)

  EndFor

EndSub



Sub rotatez

  rad =  1 * Math.Pi/180

  cosa = Math.Cos(rad)

  sina = Math.Sin(rad)

  newx= point3d[pointno]["x"] * cosa - point3d[pointno]["y"] * sina

  newy = point3d[pointno]["x"] * sina + point3d[pointno]["y"] * cosa

  point3d[pointno]["x"] = (newx)

  point3d[pointno]["y"] = (newy)

EndSub



Sub rotatey

  rad =  1 * Math.Pi/180

  cosa = Math.Cos(rad)

  sina = Math.Sin(rad)

  newz= point3d[pointno]["z"] * cosa - point3d[pointno]["x"] * sina

  newx = point3d[pointno]["z"] * sina + point3d[pointno]["x"] * cosa

  point3d[pointno]["x"] = (newx)

  point3d[pointno]["z"] = (newz)

EndSub



Sub rotatex

  rad =  1 * Math.Pi/180

  cosa = Math.Cos(rad)

  sina = Math.Sin(rad)

  newy = point3d[pointno]["y"] * cosa - point3d[pointno]["z"] * sina

  newz = point3d[pointno]["y"] * sina + point3d[pointno]["z"] * cosa

  point3d[pointno]["y"] = newy

  point3d[pointno]["z"] = newz

EndSub



Sub DetectTriangleDistance

  'take average of the z values for each of the three points on each triangle

  For triangles=1 To 12

    tridist[triangles] = (point3d[tri[triangles][1]]["z"] + point3d[tri[triangles][2]]["z"] + point3d[tri[triangles][3]]["z"])/3

    sorttriangles[triangles] = triangles

  EndFor

  'TextWindow.Write("distances of triangles are: ")

  'For i = 1 To 12

    'TextWindow.Write(tridist[i] + ", ")

  'EndFor

  

  'bubble sort triangles into distance order - furthest  first

  done=0

  swapper = 0

  While done=0

    moves=0

    'go through and compare each pair

    For i = 1 To 11

      If tridist[sorttriangles[i]] > tridist[sorttriangles[i+1]] Then

        swapper = sorttriangles[i]

        sorttriangles[i] = sorttriangles[i+1]

        sorttriangles[i+1] = swapper

        moves=1

       EndIf

    EndFor

    If moves=0 Then

       done=1

    EndIf

  EndWhile

  'TextWindow.Write("new order is ")

  'for i = 1 to 12

    'TextWindow.write(sorttriangles[i] + ", ")

 'EndFor

  

endsub



Sub draw2d

  GraphicsWindow.Clear()

  For triangles = 1 To 12

      GraphicsWindow.BrushColor = tricolour[sorttriangles[triangles]]

      GraphicsWindow.filltriangle(center+point2d[tri[sorttriangles[triangles]][1]]["x"]*size,center+point2d[tri[sorttriangles[triangles]][1]]["y"]*size,center+point2d[tri[sorttriangles[triangles]][2]]["x"]*size,center+point2d[tri[sorttriangles[triangles]][2]]["y"]*size,center+point2d[tri[sorttriangles[triangles]][3]]["x"]*size,center+point2d[tri[sorttriangles[triangles]][3]]["y"]*size)

      'Program.Delay(speed)

  endfor

  'speedchoice = TextWindow.Read()  

  'if speedchoice = "" Then

  '  speed=50

  'Else

  '  speed=200

  'EndIf

  

EndSub


