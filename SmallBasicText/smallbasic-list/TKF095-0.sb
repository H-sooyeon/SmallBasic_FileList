Initialise()
'Main Loop
StartTime = LDDateTime.Now()

While ("True")
  start = Clock.ElapsedMilliseconds
  UpdateGamePlay()
  UpdateFrame()
  delay = 20 - (Clock.ElapsedMilliseconds - start)
  If (delay > 0) Then
    Program.Delay(delay)
    PastTime = Math.Ceiling(LDDateTime.Subtract(LDDateTime.Now(), StartTime)*100000)
    texttitle = "QUIX: "+ PastTime
    GraphicsWindow.Title = texttitle 
  EndIf
EndWhile

'------------------------------------------------
'SUBROUTINES
'------------------------------------------------

Sub Initialise
  f = "False"
  t = "True"
  'GraphicsWindow
  GraphicsWindow.Title = "QUIX: 0"
  gw = 780
  gh = 600
  GraphicsWindow.Top = 10
  GraphicsWindow.Left = 10
  GraphicsWindow.Width = gw
  GraphicsWindow.Height = gh
  'Register events
  GraphicsWindow.KeyDown = OnKeyDown
  GraphicsWindow.KeyUp = OnKeyUp
  'Event flags
  keyLeft = f
  keyRight = f
  keyUp = f
  keyDown = f
  GraphicsWindow.BackgroundColor = "White"
  GraphicsWindow.PenWidth = 3
  'Sprites
  size = 40
  sizehalf = 20
  s = 20
  exp = size 
  eyp = size 
  GraphicsWindow.PenColor = "Red"
  enemyPosX = 250 + Math.GetRandomNumber(gw-200)
  enemyPosY = 250 + Math.GetRandomNumber(gh-200)
  enemyVelX = Math.GetRandomNumber(5) - 3
  enemyVelY = Math.GetRandomNumber(5) - 3
  For i = 1 To s Step 2
    px = Math.GetRandomNumber(size*2)
    py = Math.GetRandomNumber(size*2)
    ex[i] = exp+px
    ey[i] = eyp+py
    ex[i+1] = exp-px
    ey[i+1] = eyp-py
    enemy[i] = Shapes.AddLine(exp, eyp, ex[i], ey[i])
    Shapes.Move(enemy[i], enemyPosX-sizehalf, enemyPosY-sizehalf) 
    enemy[i+1] = Shapes.AddLine(exp, eyp, ex[i+1], ey[i+1])
    Shapes.Move(enemy[i+1], enemyPosX-sizehalf, enemyPosY-sizehalf) 
  EndFor 
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.FillRectangle(20, 20, GraphicsWindow.Width - 40, GraphicsWindow.Height - 40)
  GraphicsWindow.BrushColor = "#AACCCCCC"
  player = Shapes.AddEllipse(size, size)
  playerSpeed = 4
  playerPosX = 20
  playerPosY = 20
  OldplayerPosX = playerPosX '+sizehalf
  OldplayerPosY = playerPosY '+sizehalf
  GraphicsWindow.PenWidth = 7
EndSub

Sub UpdateGamePlay
  'Keep track of previous changes for closed region detection
  If (keyLeft) Then
    If (turnDir <> "Left") Then
      If (turnDir <> "Right") Then
        turnX = playerPosX
        turnDirLast = turnDir
      EndIf
      turnDir = "Left"
    EndIf
    If (playerPosX > sizehalf) Then
      playerPosX = playerPosX-playerSpeed
    EndIf
  EndIf
  If (keyRight) Then
    If (turnDir <> "Right") Then
      If (turnDir <> "Left") Then
        turnX = playerPosX
        turnDirLast = turnDir
      EndIf
      turnDir = "Right"
    EndIf
    If (playerPosX < gw-sizehalf) Then
      playerPosX = playerPosX+playerSpeed
    EndIf
  EndIf
  If (keyUp) Then
    If (turnDir <> "Up") Then
      If (turnDir <> "Down") Then
        turnY = playerPosY
        turnDirLast = turnDir
      EndIf
      turnDir = "Up"
    EndIf
    If (playerPosY > sizehalf) Then
      playerPosY = playerPosY-playerSpeed
    EndIf
  EndIf
  If (keyDown) Then
    If (turnDir <> "Down") Then
      If (turnDir <> "Up") Then
        turnY = playerPosY
        turnDirLast = turnDir
      EndIf
      turnDir = "Down"
    EndIf
    If (playerPosY < gh-sizehalf) Then
      playerPosY = playerPosY+playerSpeed
    EndIf
  EndIf
  'Enemy movement
  enemyPosX = enemyPosX + enemyVelX
  enemyPosY = enemyPosY + enemyVelY
  ec = GraphicsWindow.GetPixel(enemyPosX, enemyPosY)
  If ec = "#00FFFF" Then 
    npr = Math.GetRandomNumber(3)
    If npr = 1 Then
      enemyVelX = enemyVelX*-1
      enemyVelY = enemyVelY*-1
    ElseIf npr = 2 Then
      enemyVelX = enemyVelX*-1
    ElseIf npr = 3 Then
      enemyVelY = enemyVelY*-1
    EndIf 
  Else 
    If (enemyPosX < sizehalf) Then
      enemyVelX = -enemyVelX
      enemyPosX = sizehalf
    ElseIf (enemyPosX > gw-size/2) Then
      enemyVelX = -enemyVelX
      enemyPosX = gw-sizehalf
    EndIf
    If (enemyPosY < sizehalf) Then
      enemyVelY = -enemyVelY
      enemyPosY = sizehalf
    ElseIf (enemyPosY > gh-sizehalf) Then
      enemyVelY = -enemyVelY
      enemyPosY = gh-sizehalf
    EndIf
  EndIf 
  'Check for collisions
  Collision()
EndSub

Sub UpdateFrame
  For i = 1 to s 
    Shapes.Move(enemy[i], enemyPosX-sizehalf, enemyPosY-sizehalf)  
    Shapes.Rotate(enemy[i], Math.GetRandomNumber(30))
    r = Math.GetRandomNumber(200)-Math.GetRandomNumber(100)
    rz = Math.GetRandomNumber(r)/100
    Shapes.Zoom(enemy[i],rz, rz)
  EndFor 
  Shapes.Move(player, playerPosX-sizehalf, playerPosY-sizehalf)
  GraphicsWindow.PenColor = "#00FFFF"
  FloodFill() 'just before we draw the line so we can detect that a region will be closed when it is drawn
  GraphicsWindow.DrawLine(OldplayerPosX, OldplayerPosY, playerPosX, playerPosY)
  GraphicsWindow.BrushColor = "White"
  OldplayerPosX = playerPosX 
  OldplayerPosY = playerPosY 
  random = Math.GetRandomNumber(100) 
  If random < 3 Then 
    enemyVelX = Math.GetRandomNumber(5) - 3
    enemyVelY = Math.GetRandomNumber(5) - 3
  EndIf 
EndSub

Sub FloodFill
  'Detect closed regions
  pixel = GraphicsWindow.GetPixel(playerPosX,playerPosY)
  If (openRegion And pixel = GraphicsWindow.PenColor) Then 'A closed region is found
    openRegion = "False" 'Closed until we next move into an open region
    If (playerPosX <> OldplayerPosX Or playerPosY <> OldplayerPosY) Then 'We are moving
      If (turnDir = "Left" Or turnDir = "Right") Then
        If (turnDirLast = "Up") Then ' fill down
          fillY = playerPosY+5
          For i = 1 To 10
            fillX = turnX + i/11*(playerPosX-turnX)
            LDGraphicsWindow.FloodFill(fillX,fillY,GraphicsWindow.PenColor)
          EndFor
        ElseIf (turnDirLast = "Down") Then ' fill up
          fillY = playerPosY-5
          For i = 1 To 10
            fillX = turnX + i/11*(playerPosX-turnX)
            LDGraphicsWindow.FloodFill(fillX,fillY,GraphicsWindow.PenColor)
          EndFor
        EndIf
      ElseIf (turnDir = "Up" Or turnDir = "Down") Then
        If (turnDirLast = "Right") Then ' fill left
          fillX = playerPosX-5
          For i = 1 To 10
            fillY = turnY + i/11*(playerPosY-turnY)
            LDGraphicsWindow.FloodFill(fillX,fillY,GraphicsWindow.PenColor)
          EndFor
        ElseIf (turnDirLast = "Left") Then ' fill right
          fillX = playerPosX+5
          For i = 1 To 10
            fillY = turnY + i/11*(playerPosY-turnY)
            LDGraphicsWindow.FloodFill(fillX,fillY,GraphicsWindow.PenColor)
          EndFor
        EndIf
      EndIf
    EndIf
  ElseIf (pixel <> GraphicsWindow.PenColor) Then
    openRegion = "True"
  EndIf
EndSub

Sub Collision
  For i = 1 To s
    if LDShapes.Overlap(player, enemy[i]) = t Then 
      Program.Delay(2000)
      GraphicsWindow.Clear()
      Initialise()
      StartTime = LDDateTime.Now()
    EndIf  
  EndFor 
EndSub

'------------------------------------------------
'EVENT SUBROUTINES
'------------------------------------------------

Sub OnKeyDown
  lastKey = GraphicsWindow.LastKey
  If (lastKey = "Left") Then
    keyLeft = "True"
  ElseIf (lastKey = "Right") Then
    keyRight = "True"
  ElseIf (lastKey = "Up") Then
    keyUp = "True"
  ElseIf (lastKey = "Down") Then
    keyDown = "True"
  EndIf 
EndSub

Sub OnKeyUp
  lastKey = GraphicsWindow.LastKey
  If (lastKey = "Left") Then
    keyLeft = "False"
  ElseIf (lastKey = "Right") Then
    keyRight = "False"
  ElseIf (lastKey = "Up") Then
    keyUp = "False"
  ElseIf (lastKey = "Down") Then
    keyDown = "False"
  EndIf 
EndSub

