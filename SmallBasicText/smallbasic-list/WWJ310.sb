'Variables

wWidth = 750

wHeight = 500

dWidth = Desktop.Width

dHeight = Desktop.Height

MaxImages = 9

LsLbSize = 0

CurrentMenu = "LoadingMenu"

FadeAdded = "False"

StarFlashed = "True"

PositionsLoaded = "False"



'Colors

ClrBasicDark = GraphicsWindow.GetColorFromRGB(50, 50, 50)

ClrBackDark = GraphicsWindow.GetColorFromRGB(100, 100, 100)

ClrBorderDark = GraphicsWindow.GetColorFromRGB(150, 150, 150)

ClrTextDark = GraphicsWindow.GetColorFromRGB(200, 200, 200)

ClrLightDark = GraphicsWindow.GetColorFromRGB(230, 230, 230)



'Window

GraphicsWindow.Hide()

GraphicsWindow.Width = wWidth

GraphicsWindow.Height = wHeight

GraphicsWindow.Left = (dWidth - wWidth) / 2

GraphicsWindow.Top = (dHeight - wHeight - 70) / 2

GraphicsWindow.Title = "Graphics Challenges"

GraphicsWindow.CanResize = "False"

GraphicsWindow.FontBold = "False"

GraphicsWindow.FontName = "Microsoft Sans Serif"

GraphicsWindow.PenWidth = 1



'Main

LoadLoadingScreen()

GraphicsWindow.Show()

LoadImages()

Program.Delay(1000)

GraphicsWindow.Clear()

LoadMainMenu()



'Subroutines - Custom

'********************

'LoadImages

Sub LoadImages

  Load_ImgSmallStar = ImageList.LoadImage("http://hazeron.com/images/GoldFlare.png")

  UpdateLsLb()

  Load_ImgBigStar = ImageList.LoadImage("https://www.wpclipart.com/holiday/Christmas/star/christmas_star_T.png")

  UpdateLsLb()

  Load_ImgGraphics = ImageList.LoadImage("http://www.wallcoo.net/cartoon/fwa_graphic_design_05_1920+1600/wallpapers/1600x1200/Wallcoo_com_acne_fwa.jpg")

  UpdateLsLb()

  Load_ImgExit = ImageList.LoadImage("https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Crystal_Clear_action_exit.png/40px-Crystal_Clear_action_exit.png")

  UpdateLsLb()

  Load_ImgHome = ImageList.LoadImage("http://images.toolboxforteachers.com/gallery/tony/home.png")

  UpdateLsLb()

  Load_ImgLight = ImageList.LoadImage("http://cursomiriadax.neocities.org/paralax/assets/images/light-orange.png")

  UpdateLsLb()

  Load_ImgCherry = ImageList.LoadImage("http://salemwiki.info/images/d/d2/Cherry_icon.png")

  UpdateLsLb()

  Load_ImgApple = ImageList.LoadImage("http://vignette2.wikia.nocookie.net/chefville/images/e/eb/Ingredient-Apple.png/revision/latest/scale-to-width-down/40?cb=20121106034221")

  UpdateLsLb()

  Load_ImgBanana = ImageList.LoadImage("http://www.paradoxwiki.com/images/6/69/Banana.png")

  UpdateLsLb()

EndSub



'LoadLoadingScreen

Sub LoadLoadingScreen

  GraphicsWindow.BackgroundColor = ClrBasicDark

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.BrushColor = ClrBackDark

  LsShape[1] = Shapes.AddRectangle(400, 8)

  Shapes.Move(LsShape[1], (wWidth - 400) / 2, wHeight - 130)

  LsShape[3] = Shapes.AddRectangle(250, 30)

  Shapes.Move(LsShape[3], (wWidth - 250) / 2, wHeight - 195)

  GraphicsWindow.PenColor = "Cyan"

  GraphicsWindow.BrushColor = "DarkTurquoise"

  LsShape[2] = Shapes.AddRectangle(0, 6)

  Shapes.Move(LsShape[2], (wWidth - 398) / 2, wHeight - 129)

  GraphicsWindow.BrushColor = ClrTextDark

  LsShape[4] = Shapes.AddText("Loading...")

  Shapes.Move(LsShape[4], (wWidth - 50) / 2, wHeight - 188)

  Load_ImgResources = "http://www.design.ddarsow.com/images/recover.png"

  GraphicsWindow.DrawResizedImage(Load_ImgResources, (wWidth - 200) / 2, 80, 200, 190)  

EndSub



'UpdateLsLb

Sub UpdateLsLb

  LsLbSize = LsLbSize + (398 / MaxImages)

  Controls.SetSize(LsShape[2], LsLbSize, 6)

EndSub



'LoadMainMenu

Sub LoadMainMenu

  GraphicsWindow.DrawResizedImage(Load_ImgGraphics, 0, 0, wWidth, wHeight)

  GraphicsWindow.PenColor = "Black"

  GraphicsWindow.BrushColor = ClrBasicDark

  MmShape[1] = Shapes.AddRectangle(350, 40)

  Shapes.Move(MmShape[1], (wWidth - 350) / 2, 90)

  GraphicsWindow.BrushColor = ClrTextDark

  MmShape[2] = Shapes.AddText("Select a program")

  Shapes.Move(MmShape[2], (wWidth - 100) / 2, 103)

  GraphicsWindow.BrushColor = ClrBasicDark

  MmShape[3] = Shapes.AddRectangle(280, 190)

  Shapes.Move(MmShape[3], (wWidth - 280) / 2, 130)

  Shapes.SetOpacity(MmShape[3], 60)

  GraphicsWindow.BrushColor = "Black"

  MmShape[4] = Controls.AddButton("Flash an object", (wWidth - 200) / 2, 150)

  Controls.SetSize(MmShape[4], 200, 30)

  MmShape[5] = Controls.AddButton("Randomly positioned shapes", (wWidth - 200) / 2, 190)

  Controls.SetSize(MmShape[5], 200, 30)

  MmShape[6] = Controls.AddButton("Move objects", (wWidth - 200) / 2, 230)

  Controls.SetSize(MmShape[6], 200, 30)

  MmShape[7] = Controls.AddButton("Move triangles and lines", (wWidth - 200) / 2, 270)

  Controls.SetSize(MmShape[7], 200, 30)

  MmShape[8] = Shapes.AddRectangle(wWidth, wHeight)

  Shapes.SetOpacity(MmShape[8], 0)

  Shapes.HideShape(MmShape[8])

  MmShape[9] = Shapes.AddImage(Load_ImgExit)

  Shapes.Move(MmShape[9], (wWidth - 40) / 2, wHeight - 70)

  CurrentMenu = "MainMenu"

EndSub



'LoadHomeBtn

Sub LoadHomeBtn

  GraphicsWindow.BrushColor = "Black"

  BtnHome = Controls.AddButton("Home", 10, 10)

  Controls.SetSize(BtnHome, 80, 23)

EndSub



'LoadFlashAnObject

Sub LoadFlashAnObject

  GraphicsWindow.Clear()

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.BrushColor = ClrBasicDark

  FoShape[1] = Shapes.AddRectangle(300, 300)

  Shapes.Move(FoShape[1], (wWidth - 300) / 2, (wHeight - 300) / 2)

  Shapes.SetOpacity(FoShape[1], 50)

  FoShape[2] = Shapes.AddImage(Load_ImgBigStar)

  Shapes.Zoom(FoShape[2], 0.38, 0.35)

  Shapes.Move(FoShape[2], -50, -200)

  Shapes.SetOpacity(FoShape[2], 30)

  FoShape[3] = Shapes.AddImage(Load_ImgLight)

  Shapes.Move(FoShape[3], (wWidth - 395)  / 2, (wHeight - 430) / 2)

  Shapes.SetOpacity(FoShape[3], 0)

  Shapes.Zoom(FoShape[3], 0, 0)

  LoadHomeBtn()

  CurrentMenu = "FlashAnObject"

EndSub



'FlashStar

Sub FlashStar

  StarFlashed = "True"

  Shapes.HideShape(FoShape[1])

  For Times = 0 To 100 Step 0.03

    Shapes.SetOpacity(FoShape[2], Times + 5)

  EndFor

  For Times = 0 To 100 Step 0.05

    Shapes.SetOpacity(FoShape[3], Times)

    Shapes.Zoom(FoShape[3], (Times / 10) / 6, (Times / 10) / 6)

    Shapes.Rotate(FoShape[3], Times)

  EndFor

  Shapes.SetOpacity(FoShape[3], 0)

  Shapes.Zoom(FoShape[3], 0, 0)

  Shapes.SetOpacity(FoShape[2], 5)

  Shapes.ShowShape(FoShape[1])

  Shapes.Zoom(FoShape[2], 0.38, 0.35)

EndSub



'LoadRandomlyPositionedShapes

Sub LoadRandomlyPositionedShapes

  GraphicsWindow.Clear()

  For Times = 1 To 15

    xRandomNumber = Math.GetRandomNumber(wWidth - 32)

    yRandomNumber = Math.GetRandomNumber(wHeight - 32)

    RandomRotation = Math.GetRandomNumber(360)

    ImgCherry[Times] = Shapes.AddImage(Load_ImgCherry)

    Shapes.Move(ImgCherry[Times], xRandomNumber, yRandomNumber)

    Shapes.Rotate(ImgCherry[Times], RandomRotation)

  EndFor

  For Times = 1 To 15

    xRandomNumber = Math.GetRandomNumber(wWidth - 32)

    yRandomNumber = Math.GetRandomNumber(wHeight - 32)

    RandomRotation = Math.GetRandomNumber(360)

    ImgApple[Times] = Shapes.AddImage(Load_ImgApple)

    Shapes.Move(ImgApple[Times], xRandomNumber, yRandomNumber)

    Shapes.Rotate(ImgApple[Times], RandomRotation)

  EndFor

  For Times = 1 To 15

    xRandomNumber = Math.GetRandomNumber(wWidth - 32)

    yRandomNumber = Math.GetRandomNumber(wHeight - 32)

    RandomRotation = Math.GetRandomNumber(360)

    ImgBanana[Times] = Shapes.AddImage(Load_ImgBanana)

    Shapes.Move(ImgBanana[Times], xRandomNumber, yRandomNumber)

    Shapes.Rotate(ImgBanana[Times], RandomRotation)

  EndFor

  BtnReposition = Controls.AddButton("Reposition", 10, 43)

  Controls.SetSize(BtnReposition, 80, 23)

  LoadHomeBtn()

  CurrentMenu = "RandomlyPositionedShapes"

EndSub



'LoadMoveObjects

Sub LoadMoveObjects

  GraphicsWindow.Clear()

  For Times = 1 To 50

    ParticleSmallStar[Times] = Shapes.AddImage(Load_ImgSmallStar)

    ParticleMediumStar[Times] = Shapes.AddImage(Load_ImgSmallStar)

    ParticleLargeStar[Times] = Shapes.AddImage(Load_ImgSmallStar)

    Shapes.Zoom(ParticleSmallStar[Times], 0.5, 0.5)

    Shapes.Zoom(ParticleLargeStar[Times], 1.5, 1.5)

    Shapes.SetOpacity(ParticleSmallStar[Times], 20)

    Shapes.SetOpacity(ParticleMediumStar[Times], 50)

    xRandomNumber = Math.GetRandomNumber(wWidth - 32)

    yRandomNumber = Math.GetRandomNumber(wHeight - 32)

    xRandomNumber2 = Math.GetRandomNumber(wWidth - 32)

    yRandomNumber2 = Math.GetRandomNumber(wHeight - 32)

    xRandomNumber3 = Math.GetRandomNumber(wWidth - 32)

    yRandomNumber3 = Math.GetRandomNumber(wHeight - 32)

    Shapes.Move(ParticleSmallStar[Times], xRandomNumber, yRandomNumber)

    Shapes.Move(ParticleMediumStar[Times], xRandomNumber2, yRandomNumber2)

    Shapes.Move(ParticleLargeStar[Times], xRandomNumber3, yRandomNumber3)

  EndFor

  Shield = Shapes.AddRectangle(wWidth, wHeight)

  Shapes.SetOpacity(Shield, 0)

  LoadHomeBtn()

  CurrentMenu = "MoveObjects"

EndSub



'LoadMoveTrianglesLines

Sub LoadMoveTrianglesLines

  GraphicsWindow.Clear()

  GraphicsWindow.ShowMessage("Use the arrow keys on the keyboard to move the shapes.", "Information")

  For Times = 1 To 20

    GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()

    GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()

    Triangles[Times] = Shapes.AddTriangle(0, 50, 25, 0, 50, 50)

    Lines[Times] = Shapes.AddLine(0, 0, 50, 0)

    TriangleRotation = Math.GetRandomNumber(360)

    LineRotation = Math.GetRandomNumber(360)

    xRandomTriangle = Math.GetRandomNumber(wWidth - 50)

    yRandomTriangle = Math.GetRandomNumber(wHeight - 50)

    xRandomLine = Math.GetRandomNumber(wWidth - 50)

    yRandomLine = Math.GetRandomNumber(wHeight - 50)

    Shapes.Rotate(Triangles[Times], TriangleRotation)

    Shapes.Rotate(Lines[Times], LineRotation)

    Shapes.Move(Triangles[Times], xRandomTriangle, yRandomTriangle)

    Shapes.Move(Lines[Times], xRandomLine, yRandomLine)

  EndFor

  LoadHomeBtn()

  CurrentMenu = "MoveTrianglesLines"

EndSub



'Subroutines - System

'********************

'ButtonClicked

Controls.ButtonClicked = ButtonClicked

Sub ButtonClicked

  LastBtn = Controls.LastClickedButton

  

  If LastBtn = BtnHome Then

    GraphicsWindow.Clear()

    LoadMainMenu()

  ElseIf LastBtn = MmShape[4] Then

    LoadFlashAnObject()

  ElseIf LastBtn = MmShape[5] Then

    LoadRandomlyPositionedShapes()

  ElseIf LastBtn = MmShape[6] Then

    LoadMoveObjects()

  ElseIf LastBtn = MmShape[7] Then

    LoadMoveTrianglesLines()

  ElseIf LastBtn = BtnReposition Then

    GraphicsWindow.Clear()

    LoadRandomlyPositionedShapes()

  EndIf

EndSub



'MouseDown

GraphicsWindow.MouseDown = MouseDown

Sub MouseDown

  xDown = GraphicsWindow.MouseX

  yDown = GraphicsWindow.MouseY

  

  If CurrentMenu = "MainMenu" Then

    If xDown > xPosImgExit And xDown < xPosImgExit + 40 And yDown > yPosImgExit And yDown < yPosImgExit + 40 Then

      Program.End()

    EndIf

  EndIf

EndSub



'MouseMove

GraphicsWindow.MouseMove = MouseMove

Sub MouseMove

  xMove = GraphicsWindow.MouseX

  yMove = GraphicsWindow.MouseY

  

  If CurrentMenu = "MainMenu" Then

    xPosImgExit = Shapes.GetLeft(MmShape[9])

    yPosImgExit = Shapes.GetTop(MmShape[9])

    If xMove > xPosImgExit And xMove < xPosImgExit + 40 And yMove > yPosImgExit And yMove < yPosImgExit + 40 Then

      Shapes.ShowShape(MmShape[8])

      If FadeAdded = "False" Then

        For Times = 0 To 80 Step 0.01

          Shapes.SetOpacity(MmShape[8], Times)

        EndFor

        FadeAdded = "True"

      EndIf

    Else

      If FadeAdded = "True" Then

        For Times = 80 To 0 Step -0.01

          Shapes.SetOpacity(MmShape[8], Times)

        EndFor

        FadeAdded = "False"

        Shapes.HideShape(MmShape[8])

      EndIf

    EndIf

  ElseIf CurrentMenu = "FlashAnObject" Then

    xBorderFoShape1 = Shapes.GetLeft(FoShape[1])

    yBorderFoShape1 = Shapes.GetTop(FoShape[1])

    If xMove > xBorderFoShape1 And xMove < xBorderFoShape1 + 300 And yMove > yBorderFoShape1 And yMove < yBorderFoShape1 + 300 Then

      If StarFlashed = "False" Then

        FlashStar()

      EndIf

    Else

      StarFlashed = "False"

    EndIf

  ElseIf CurrentMenu = "MoveObjects" Then

    For Times = 1 To 50

      xSmall = Shapes.GetLeft(ParticleSmallStar[Times])

      ySmall = Shapes.GetTop(ParticleSmallStar[Times])

      xMedium = Shapes.GetLeft(ParticleMediumStar[Times])

      yMedium = Shapes.GetTop(ParticleMediumStar[Times])

      xLarge = Shapes.GetLeft(ParticleLargeStar[Times])

      yLarge = Shapes.GetTop(ParticleLargeStar[Times])

      Shapes.Move(ParticleSmallStar[Times], (xMove / 12) - xSmall, (yMove / 12) - ySmall)

      Shapes.Move(ParticleMediumStar[Times], (xMove / 6) - xMedium, (yMove / 6) - yMedium)

      Shapes.Move(ParticleLargeStar[Times], (xMove / 1.2) - xLarge, (yMove / 1.2) - yLarge)

    EndFor

  EndIf

EndSub



'KeyDown

GraphicsWindow.KeyDown = KeyDown

Sub KeyDown

  LastKey = GraphicsWindow.LastKey

  

  

  If CurrentMenu = "MoveTrianglesLines" Then

    If LastKey = "Left" Then

      For Times = 1 To 20

        xTriangle[Times] = Shapes.GetLeft(Triangles[Times])

        yTriangle[Times] = Shapes.GetTop(Triangles[Times])

        xLine[Times] = Shapes.GetLeft(Lines[Times])

        yLine[Times] = Shapes.GetTop(Lines[Times])

        Shapes.Move(Triangles[Times], xTriangle[Times] - 7, yTriangle[Times])

        Shapes.Move(Lines[Times], xLine[Times] - 5, yLine[Times])

      EndFor

    ElseIf LastKey = "Right" Then

      For Times = 1 To 20

        xTriangle[Times] = Shapes.GetLeft(Triangles[Times])

        yTriangle[Times] = Shapes.GetTop(Triangles[Times])

        xLine[Times] = Shapes.GetLeft(Lines[Times])

        yLine[Times] = Shapes.GetTop(Lines[Times])

        Shapes.Move(Triangles[Times], xTriangle[Times] + 7, yTriangle[Times])

        Shapes.Move(Lines[Times], xLine[Times] + 5, yLine[Times])

      EndFor

    ElseIf LastKey = "Up" Then

      For Times = 1 To 20

        xTriangle[Times] = Shapes.GetLeft(Triangles[Times])

        yTriangle[Times] = Shapes.GetTop(Triangles[Times])

        xLine[Times] = Shapes.GetLeft(Lines[Times])

        yLine[Times] = Shapes.GetTop(Lines[Times])

        Shapes.Move(Triangles[Times], xTriangle[Times], yTriangle[Times] - 7)

        Shapes.Move(Lines[Times], xLine[Times], yLine[Times] - 5)

      EndFor

    ElseIf LastKey = "Down" Then

      For Times = 1 To 20

        xTriangle[Times] = Shapes.GetLeft(Triangles[Times])

        yTriangle[Times] = Shapes.GetTop(Triangles[Times])

        xLine[Times] = Shapes.GetLeft(Lines[Times])

        yLine[Times] = Shapes.GetTop(Lines[Times])

        Shapes.Move(Triangles[Times], xTriangle[Times], yTriangle[Times] + 7)

        Shapes.Move(Lines[Times], xLine[Times], yLine[Times] + 5)

      EndFor

    EndIf

  EndIf

EndSub


