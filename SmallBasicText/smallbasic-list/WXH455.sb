' SmallBasic Version 1.2
' Program: Logic
' Changelog: 
' Author: Pappa Lapub
' Website: https://social.msdn.microsoft.com/Forums/en-US/fd23ded0-7459-43a1-b98f-b91b1a340dd0/litdev-extension-ldlogicandtruetrue
' ImportURL: http://smallbasic.com/program/?
' Extension: LitDev
' Comment: 
'  
' Variables: 
' ToDo: 
' ================================================================================
lf = Text.GetCharacter(10)

CSExt()
LDInline.IncludeCS(cs, "","")

params = "1=True;2=True;"
Logics()
params = "1=True;2=False;"
Logics()
params = "1=False;2=True;"
Logics()
params = "1=False;2=False;"
Logics()
TextWindow.WriteLine("")

Sub Logics
  TextWindow.WriteLine(lf+ params)
  
  anded = LDInline.Call("SBLogic.And", params)
  TextWindow.WriteLine("AND("+ params +"): "+ anded)
  
  ored = LDInline.Call("SBLogic.Or", params)
  TextWindow.WriteLine("OR("+ params +"): "+ ored)
  
  xored = LDInline.Call("SBLogic.XOr", params)    ' <>
  TextWindow.WriteLine("XOR("+ params +"): "+ xored)
  
  
  nanded = LDInline.Call("SBLogic.NAnd", params)
  TextWindow.WriteLine("NAND("+ params +"): "+ nanded)
  
  nored = LDInline.Call("SBLogic.NOr", params)
  TextWindow.WriteLine("NOR("+ params +"): "+ nored)
  
  nxored = LDInline.Call("SBLogic.NXor", params)  ' ==
  TextWindow.WriteLine("NXOR("+ params +"): "+ nxored)
EndSub


Sub CSExt
  cs = "using System;"+ lf
  cs = cs +"using Microsoft.SmallBasic.Library;"+ lf
  cs = cs +"[SmallBasicType]"+ lf
  cs = cs +"public static class SBLogic {"+ lf
  cs = cs +"  public static Primitive And(Primitive cond1, Primitive cond2) {"+ lf
  cs = cs +"  return (bool)cond1 && (bool)cond2; }"+ lf
  
  cs = cs +"  public static Primitive Or(Primitive cond1, Primitive cond2) {"+ lf
  cs = cs +"  return (bool)cond1 || (bool)cond2; }"+ lf
  
  cs = cs +"  public static Primitive XOr(Primitive cond1, Primitive cond2) {"+ lf
  cs = cs +"  return (bool)cond1 != (bool)cond2; }"+ lf
  'cs = cs +"  return (bool)cond1 ^ (bool)cond2; }"+ lf
  
  cs = cs +"  public static Primitive NAnd(Primitive cond1, Primitive cond2) {"+ lf
  cs = cs +"  return !((bool)cond1 && (bool)cond2); }"+ lf
  
  cs = cs +"  public static Primitive NOr(Primitive cond1, Primitive cond2) {"+ lf
  cs = cs +"  return !((bool)cond1 || (bool)cond2); }"+ lf
  
  cs = cs +"  public static Primitive NXor(Primitive cond1, Primitive cond2) {"+ lf
  cs = cs +"  return (bool)cond1 == (bool)cond2; }"+ lf
  'cs = cs +"  return !((bool)cond1 ^ (bool)cond2); }"+ lf
  cs = cs +"  }"+ lf
  
  'TextWindow.WriteLine(cs)
EndSub

