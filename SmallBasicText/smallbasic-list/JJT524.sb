GraphicsWindow.BackgroundColor="teal

rb=ldControls.AddRichTextBox (700 700)

LDControls.RichTextBoxFontFamily ="Lucida console

LDControls.RichTextBoxFontBackground="lightgray

LDControls.RichTextBoxFontSize=14

LDControls.RichTextBoxDefault (rb)

Controls.Move (rb 15 15)

GraphicsWindow.Width=1300

GraphicsWindow.Height=800

GraphicsWindow.Title ="NewBasic v0.1

GraphicsWindow.FontBold="true

GraphicsWindow.FontName ="Liberation sans

GraphicsWindow.FontSize=16

GraphicsWindow.BrushColor="White

txx="#bg /hu/ /sa/ /lg/ | bckgrnd clr 0-360 0-100 0-100~#fg\pc /hu /sa /lg  |  forgrnd/pen clr 0-360 0-100 0-100~

txx=txx+"#gw /lt/ /tp/ /wd/ /ht/ | grwnd size/pos~

txx=txx+"#rp /ttf/ /ttr/ | replaces text <ttf> with <ttr>~

txx=txx+"#ff /vv/ /st/ /en/ /stp/...`ff | for vv=st to en step stp ... Endfor~

txx=txx+"#if /cnd/ #tt <then part> #ef <elseif part> #ee <else part> `ii~

txx=txx+"#ii /cnd/ ##<then part> | oneline short if~

txx=txx+"#wh /cnd/ ... `ww | while ... endwh.~

txx=txx+"#gr /px,py/ /nx,ny/ /sx,sy/ ##<obj> | draws grid(nx,ny) of object<obj> at (px,py), sized each (sx,sy)~

txx=txx+"#sb ... `ss | Sub ... Endsub~

txx=txx+"#rr /n/ ...`rr [rpt] | repeats ... n times [indic. by rpt]~

txx=txx+"~spec.consts:~`y` = true / `n` = false ~`g` = graph.window~`t` = textwindow~`s` = shapes~`a` = array~`c` = controls~`f` = file~`p` = prog.~`x` = text~\\ = LD xtension~

txx=txx+"!> /fnm/ /p1/ /p2/ ... /pn/ | call func w args 1..n 

nln=text.GetCharacter (13)+Text.GetCharacter(10)

txx=LDText.Replace (txx "~" nln)

GraphicsWindow.DrawBoundText (800 10 490 txx)

GraphicsWindow.BrushColor="black

bt1=Controls.AddButton ("Convert to SB" 10 750)

bt2=Controls.AddButton ("EXEC" 140 750)

Controls.ButtonClicked=cbc

err[1]="Number or args different than required."+nln+"Missing args will be null, other ignored.

err[2]="Uneven block count. Program won't start!"

err[3]="Unexpected End of block.

err[4]="Too many sub args. Truncated to 5

ss=", "

args=0



Sub getpp

  pp=ldtext.Split (cl " ")

  pc=array.GetItemCount (pp)

endsub



Sub repcc

  nn=text.GetCharacter (34)

  txt="not="+nn+"true=false;false=true"+nln+"args=0"+nln+txt

  txt=ldtext.Replace (txt "\\" "LD") 

  txt=ldtext.Replace (txt "`y`" nn+"true"+nn)

  txt=ldtext.Replace (txt "`n`" nn+"false"+nn)

  

  txt=ldtext.Replace (txt "`g`"  "GraphicsWindow.") 

  txt=ldtext.Replace (txt "`t`"  "TextWindow.")

  txt=ldtext.Replace (txt "`s`"  "Shapes.") 

  txt=ldtext.Replace (txt "`c`"  "Controls.") 

' The following line could be harmful and has been automatically commented.

'   txt=ldtext.Replace (txt "`f`"  "File.") 

  txt=ldtext.Replace (txt "`a`"  "Array.") 

  txt=ldtext.Replace (txt "`p`"  "Program.") 

  txt=ldtext.Replace (txt "`x`"  "Text.") 

  txt=ldtext.Replace (txt "``ln" "Text.GetLength(") 

  txt=ldtext.Replace (txt "``tc" "Text.GetCharacter(")

  txt=ldtext.Replace (txt "``ac" "Array.GetItemCount(") 

  txt=ldtext.Replace (txt "`\"   "Math.Remainder (") 

  txt=ldtext.Replace (txt "@rc"  "AddRectangle(")

  txt=ldtext.Replace (txt "@el"  "AddEllipse(")

  txt=ldtext.Replace (txt "@drc"  "DrawRectangle(")

  txt=ldtext.Replace (txt "@del"  "DrawEllipse(")

  txt=ldtext.Replace (txt "@frc"  "FillRectangle(")

  txt=ldtext.Replace (txt "@fel"  "FillEllipse(")

  txt=ldtext.Replace (txt "@tr"   "AddTriangle(")

  txt=ldtext.Replace (txt "@dtr"  "DrawTriangle(")

  txt=ldtext.Replace (txt "@ftr"  "FillTriangle(")

  

EndSub 



Sub cbc

  If Controls.LastClickedButton=bt1 then

    pl=2

    bc=0

    dac ="false

    l1=ldlist.CreateFromValues (LDText.Split ("#bg #fg #pc" " "))

    lc1=LDText.Split (ldtext.Replace  ("g#BackgroundColor g#BrushColor g#PenColor" "g#" "GraphicsWindow.") " ")

    ar=LDText.Split ("'prog.list '*******Endprg." " ")

    prg=LDList.CreateFromValues (ar)

    frl= ldlist.CreateFromValues("1=1") 

    txt= LDControls.RichTextBoxGetText (rb)

    repcc()

    tt=ldtext.Split (txt nln)

    

    For xx=1 To Array.GetItemCount (tt)

      cl=text.ConvertToLowerCase (ldtext.Trim (tt[xx]))

      oc=tt[xx]

      if Text.StartsWith (cl "#bg") Or  Text.StartsWith (cl "#fg") Or  Text.StartsWith (cl "#pc")  Then

        getpp()

        If pc<>4 Then

          GraphicsWindow.ShowMessage (err[1]+nln+cl "Warning line:"+xx)

        endif

        ii=LDList.IndexOf(l1 pp[1]) 

        oc=lc1[ii]+"= LDColours.HSLtoRGB ("+pp[2]+ss+pp[3]/100+ss+pp[4]/100+")" 

        

      elseif Text.StartsWith (cl "#sb") Then

        getpp()    

        dac="true

        oc="SUB "+pp[2]+" '***********************************

        bc=bc+1

        

      elseif Text.StartsWith (cl "!>") Then

        getpp()

        nc=pc-2

        If nc>5 then 

          nc=5

          GraphicsWindow.ShowMessage (err[4] "Args err at line "+(pl-1))

        endif

        oc="Ldcall.function"+nc+"("+nn+pp[2]+nn+ss

        

        For f=1 to nc-1

          oc=oc+pp[f+2]+ss

        endfor

        oc=oc+pp[nc+2]+")"

        

      elseif Text.StartsWith (cl "`sb") Then

        bc=bc-1

        oc="EndSUB"+nln

        

      elseif Text.StartsWith (cl "#gw") Then  

        getpp()

        LDCall.Function ("ladd"  "GraphicsWindow.Left="+pp[2]) 

        LDCall.Function ("ladd"  "GraphicsWindow.Top="+pp[3]) 

        LDCall.Function ("ladd"  "GraphicsWindow.Width="+pp[4]) 

        LDCall.Function ("ladd"  "GraphicsWindow.Height="+pp[5]) 

        Goto nxt

        

      elseif Text.StartsWith (cl "#wh") or text.StartsWith (cl "#rr") Then

        obc=bc

        bc=bc+1

        getpp()

        If text.StartsWith (cl "#rr") Then

          oc="rpt["+bc+"]= "+pp[2]+nln

          cbc=obc

          gsp()

          oc=oc+isp+"WHILE rpt["+bc+"]>0

        else

          oc="WHILE "+pp[2]

        endif

        dac="true

        

      elseif Text.StartsWith (cl "`ww") Then

        bc=bc-1

        

        oc="EndWHILE"+nln

        

        

      elseif Text.StartsWith (cl "#gr") Then

        ip=ldtext.Split (cl "|")

        xl=array.GetItemCount (ip)

        gx=0

        gy=0

        cl=text.GetSubTextToEnd(ip[1],5)

        cl=LDText.Replace (cl "," " ") 

        getpp()

        gx=pp[3]-1

        gy=pp[4]-1

        sx=pp[5]

        sy=pp[6]

        dx=pp[1]

        dy=pp[2]

        oc="For _x1=0 to "+gx+nln+isp+"   "

        oc=oc+"For _y1=0 to "+gy+nln+isp+"      "

        For ll=2 to xl-1

          cl=ip[ll]

          if Text.StartsWith (cl "#bg") Or  Text.StartsWith (cl "#fg") Or  Text.StartsWith (cl "#pc")  Then

            getpp()

            If pc<>4 Then

              GraphicsWindow.ShowMessage (err[1]+nln+cl "Warning line:"+xx)

            endif

            ii=LDList.IndexOf(l1 pp[1]) 

            oc=oc+isp+lc1[ii]+"= LDColours.HSLtoRGB ("+pp[2]+ss+pp[3]/100+ss+pp[4]/100+")"+nln 

          Else

            oc=oc+isp+cl+nln

          endif

        endfor

        oc=oc+isp+"      "+ip[xl]+dx+"+"+(sx+"*_x1")+ss+dy+"+"+(sy+"*_y1")+ss+sx+ss+sy+")"+nln

        oc=oc+isp+"   Endfor"+nln+isp+"Endfor

      elseif Text.StartsWith (cl "#ii") Then

        ip=ldtext.Split (cl "##")

        

        oc="IF "+Text.GetSubTextToEnd (ip[1] 5)+"then"+nln+isp+"   "+ip[2]+nln+isp+"Endif"

        

      elseif Text.StartsWith (cl "`ff") Then

        bc=bc-1

        

        oc="EndFOR"+nln

        

      elseif Text.StartsWith (cl "`rr") Then

        oc="rpt["+bc+"]= "+"rpt["+bc+"]-1"

        LDList.InsertAt (prg pl isp+oc)

        pl=pl+1

        bc=bc-1

        oc="EndWHILE"+nln

        

      elseif Text.StartsWith (cl "#ff") Then

        obc=bc

        

        getpp()  

        bc=bc+1

        dac="true

        ddt=""

        qq=pp[2]

        If Text.StartsWith (qq ".") or Text.StartsWith (qq "0") or Text.StartsWith (qq "9") or Text.StartsWith (qq "8") or Text.StartsWith (qq "7") or Text.StartsWith (qq "6") or Text.StartsWith (qq "5") or Text.StartsWith (qq "4") or Text.StartsWith (qq "3") or Text.StartsWith (qq "2") or Text.StartsWith (qq "1")  then 

          ppv="_x"+"_"+bc

          oc="FOR "+ppv+" = "+pp[2]+" to "+pp[3]

          If pp[4]="" or pp[4]=1 then

          else

            oc=oc+" STEP "+pp[4]

          endif 

          oc=oc+"'<~~~~auto added FOR var

        else

          If LDList.Contains (frl pp[2]) then

            pp[2]=pp[2]+"_"+bc

            ddt="'<----warning! FOR var duplicated, thus changed to new one 

          EndIf 

          LDList.Add  (frl pp[2])

          oc="FOR "+pp[2]+" = "+pp[3]+" to "+pp[4]

          If pp[5]="" or pp[5]=1 then

          else

            oc=oc+" STEP "+pp[5]

          endif 

          

          oc=oc+ddt

        endif

      elseif Text.StartsWith (cl "#rp") Then

        getpp()  

        txt=LDText.Replace (txt pp[2] pp[3])

        tt=ldtext.Split (txt nln)

        'GraphicsWindow.ShowMessage (txt "result")

        Goto nxt

      endif

      

      if dac Then

        dac="false

        cbc=obc

      Else

        cbc=bc

      endif

      gsp()

      LDList.InsertAt (prg pl isp+oc)

      pl=pl+1

      nxt:

      If bc<0 Then

        GraphicsWindow.ShowMessage (err[3] "Fatal err at line "+(pl-1))

      endif 

    EndFor 

    If bc<>0 Then

      GraphicsWindow.ShowMessage (err[2] "Fatal err")

    endif 

    TextWindow.Write ("Output:")

    ary=ldarray.CreateFromValues (LDList.ToArray(prg))

    for x=1 to LDArray.Count(ary)

      TextWindow.WriteLine (LDArray.GetValue (ary x))

      txo=txo+LDArray.GetValue (ary x)+nln

    endfor   

    LDClipboard.SetText (txo)

  endif

  

EndSub 



Sub gsp

  isp=""

  If cbc>0 Then

    

    isp=text.GetSubText ("                                                                                 " 1 cbc*3)

  endif

EndSub 





Sub ladd

  LDList.InsertAt (prg pl args[1])

  pl=pl+1

EndSub 


