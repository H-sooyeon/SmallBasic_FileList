'  original program is made by   Anti-Freeze   JKN336



triangles = 0

GraphicsWindow.Title = "How Many Triangles?"

set = "ABCDEFGHIJKLMNOPQRSTUVWXY"

line = "1=ABC;2=CDE;3=EFG;4=GHA;5=AKLNOD;6=AJYRE;7=AIXVUF;8=BKJXWG;9=BLYTF;10=BMNPQE;11=CMLJIH;12=CNYVG;13=COPRSF;14=DPYXH;15=DQRTUG;16= ESTVWH"

TPoint="A=10,10;B=210,10;C=410,10;D=410,210;E=410,410;F=210,410;G=10,410;H=10,210;I=91,171;J=143,144;K=171,92;L=210,110;"

Tpoint=Tpoint+"M=252,92;N=279,144;O=330,171;P=311,210;Q=330,251;R=279,276;S=250,330;T=210,310;U=171,330;V=143,276;W=91,251;X=110,210;Y=210,210"

Puzzle()

Labels()

TextWindow.Title = "Triangle Puzzle Counter"

TextWindow.Top=10

TextWindow.Left=450

GraphicsWindow.PenWidth=0

For i = 1 to 25 

  point[i] = Text.GetSubText(set,i,1)

  For j = i+1 to 25 

    point[j] = Text.GetSubText(set,j,1)

    If point[i] <> point[j] then

      For k = j+1 To 25 

        point[k] = Text.GetSubText(set,k,1)

        If point[i] <> point[k] And point[j] <> point[k] Then

          For l = 1 to 16  

            If Text.IsSubText(line[l],point[i]) And Text.IsSubText(line[l],point[j]) Then

              side1 = line[l]

              For m = 1 to 16

                If Text.IsSubText(line[m],point[j]) And Text.IsSubText(line[m],point[k]) Then

                  side2 = line[m]

                  If line[l] <> line[m] then

                    For n = 1 To 16

                      If Text.IsSubText(line[n],point[i]) And Text.IsSubText(line[n],point[k]) Then

                        side3 = line[n]

                        If line[m] <> line[n] And line[l] <> line[n] Then

                          pt="1="+(point[i] + point[j] + point[k])+";2="+(point[i]+ point[k] + point[j])+";3="+ (point[j] + point[i] + point[k])+";4="+ (point[j] + point[k] + point[i])+";5="+ (point[k]+point[i] + point[j])+";6="+ (point[k]+point[j] + point[i])

                          If text.IsSubText(ret,pt[1]) ="False" and text.IsSubText(ret,pt[2]) ="False" and text.IsSubText(ret,pt[3]) ="False" and text.IsSubText(ret,pt[4]) ="False" and text.IsSubText(ret,pt[5]) ="False" and text.IsSubText(ret,pt[6]) ="False" then 

                            ret=ret+point[i] + point[j] + point[k]+":"

                            triangles = triangles+1

                            GraphicsWindow.BrushColor=GraphicsWindow.GetRandomColor()

                            Shapes.AddTriangle(_x[i],_y[i],_x[j],_y[j],_x[k],_y[k])

                            TextWindow.Write("No. of trangles = " + triangles)

                            TextWindow.Write("   Triangle " + point[i] + point[j] + point[k])

                            TextWindow.WriteLine("   Lines used " + side1 + " " + side2 + " " + side3)

                           EndIf

                        EndIf

                      Else

                        side3 = 0

                      EndIf

                    EndFor ' n loop

                  EndIf

                Else

                  side2 = 0

                EndIf

              EndFor ' m loop

            Else

              side1 = 0

            EndIf

          EndFor ' l loop

        EndIf

      EndFor ' k loop

    EndIf

  EndFor ' j loop

EndFor ' i loop



TextWindow.WriteLine("Final count = " + triangles)



Sub Puzzle

  GraphicsWindow.Top=10

  GraphicsWindow.Left=10

  GraphicsWindow.DrawRectangle(10,10,400,400)

  GraphicsWindow.DrawLine(10,10,410,410)

  GraphicsWindow.DrawLine(410,10,10,410)

  GraphicsWindow.DrawLine(10,210,410,210)

  GraphicsWindow.DrawLine(210,10,210,410)

  GraphicsWindow.DrawLine(10,10,410,210)

  GraphicsWindow.DrawLine(10,10,210,410)

  GraphicsWindow.DrawLine(10,410,410,210)

  GraphicsWindow.DrawLine(10,410,210,10)

  GraphicsWindow.DrawLine(410,10,210,410)

  GraphicsWindow.DrawLine(410,10,10,210)

  GraphicsWindow.DrawLine(410,410,210,10)

  GraphicsWindow.DrawLine(410,410,10,210)

EndSub



Sub Labels

  GraphicsWindow.FontSize=16

  GraphicsWindow.PenColor="Black"

  GraphicsWindow.PenWidth=2

  For k=1 To Array.GetItemCount(TPoint)

    _xy=TPoint[Text.GetCharacter(64+k)] 

    _X[k]= text.GetSubText(_xy,1,Text.GetIndexOf(_xy,",")-1)

    _y[k]= text.GetSubTextToEnd(_xy,Text.GetIndexOf(_xy,",")+1)

    GraphicsWindow.BrushColor="Lightcyan"

    ell=Shapes.AddEllipse(24,24)

    Shapes.Move(ell,_X[k]-12,_Y[k]-12) 

    GraphicsWindow.BrushColor="Black"

    shp=shapes.AddText( Text.GetCharacter(64+k))

    Shapes.Move(shp,_X[k]-6,_Y[k]-8) 

  EndFor

EndSub


