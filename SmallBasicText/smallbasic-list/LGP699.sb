gw = 500

gh = 500

GraphicsWindow.Width = gw

GraphicsWindow.Height = gh

radius = 10

count = 100

proximity = 50



LDPhysics.SetBoundaries(0,gw,0,gh)

LDPhysics.SetGravity(0,0)



For i = 1 To count

  GraphicsWindow.BrushColor = "Blue"

  ball = Shapes.AddEllipse(2*radius,2*radius)

  LDPhysics.AddMovingShape(ball,0.3,0.8,1)

  LDPhysics.SetPosition(ball,radius+Math.GetRandomNumber(gw-2*radius),radius+Math.GetRandomNumber(gh-2*radius),0)

EndFor



GraphicsWindow.BrushColor = "Red"

ball = Shapes.AddEllipse(2*radius,2*radius)

LDPhysics.AddMovingShape(ball,0.3,0.8,1)

LDPhysics.SetPosition(ball,gw/2,gh/2,0)



GraphicsWindow.BrushColor = LDColours.Transparent

halo = Shapes.AddEllipse(2*proximity,2*proximity)



While ("True")

  start = Clock.ElapsedMilliseconds

  

  LDPhysics.DoTimestep()

  For angle = 10 To 360 Step 10

    contacts = LDPhysics.RayCast(ball,angle,proximity)

    indices = Array.GetAllIndices(contacts)

    For i = 1 To Array.GetItemCount(indices)

      Shapes.SetOpacity(indices[i],25)

    EndFor 

  EndFor

  Pos = LDPhysics.GetPosition(ball)

  Shapes.Move(halo,Pos[1]-proximity,Pos[2]-proximity)

  

  If (LDUtilities.KeyDown("left")) Then

    LDPhysics.SetImpulse(ball,-100,0)

  EndIf

  If (LDUtilities.KeyDown("Right")) Then

    LDPhysics.SetImpulse(ball,100,0)

  EndIf

  If (LDUtilities.KeyDown("Up")) Then

    LDPhysics.SetImpulse(ball,0,-100)

  EndIf

  If (LDUtilities.KeyDown("Down")) Then

    LDPhysics.SetImpulse(ball,0,100)

  EndIf

  

  delay = 25-(Clock.ElapsedMilliseconds-start)

  If (delay > 0) Then

    Program.Delay(delay)

  EndIf

EndWhile




