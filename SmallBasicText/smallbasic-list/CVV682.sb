'these are text characters that i chose as valid, there probably others. THERE IN LOWER CASE
char = "abcdefghijklmnopqrstuvwxyz0123456789_" 'valid char's except "@" and "."

TextWindow.Write("Enter Email Address: ")
''This converts TextWindow.Read() to lower case, in case user hits the CAPS LOCK
email = Text.ConvertToLowerCase(TextWindow.Read())

'So for email = "a@b.c
length = Text.GetLength(email) ' = 5
ampIndex = Text.GetIndexOf(email, "@") '= 2
dotIndex1 = Text.GetIndexOf(email, ".") ' = 4
'you could include another dotIndex2 here to check addresses with 2 dots

'         5 is the min amt of characters              has to contain "@"                                        and has to contain a "."
If length > 5 And Text.IsSubText(email, "@") = "True" And Text.IsSubText(email, ".") = "True" Then
  For i = 1 To ampIndex-1  ' ampIndex = 2.   checks text upto but including "@"
    CheckString()  'calls the subroutine
  EndFor
  For i = (ampIndex +1) To dotIndex1-1  'checks text after "@" and upto "."
    CheckString()   
  EndFor
  For i = (dotIndex1+1) To length  'checks the rest after "."
    CheckString()
  EndFor
  Results()
Else
  TextWindow.WriteLine("Email Address is INVALID")  'returns this if the 1st 3 conditions aren't satisfied
EndIf

Sub CheckString 'this routine checks the subText from "email" against the Text "char"
  If Text.IsSubText(char, Text.GetSubText(email, i, 1)) <> "True" Then
    result[i] = "Invalid"  'you could do this differently, but Arrays are good.
  EndIf              ' "result" is an Array with [i] indexes, Arrays are a special type of variable that can
EndSub                      'contain more than 1 value. Stored within the array "result" by indexing[i]  the values

Sub Results
  If Array.ContainsValue(result, "Invalid") = "True" Then  'using Array.ContainsValue returns true if "result"
    TextWindow.WriteLine("Email Address is INVALID")    'contains a value = "Invalid"
  Else
    TextWindow.WriteLine("Email Address is VALID")
  EndIf
EndSub


