TextWindow.Title = "HANG MAN (text version v0.1)"

TextWindow.Left = Desktop.Width/4

settings()



While "True"

  display()

  playGame()

  penalize() 

  gameOver()

EndWhile



Sub settings  

  TextWindow.WriteLine("__________________________________RULES_____________________________________")

  TextWindow.WriteLine("* Answer case sensitive & can be a mixture of numbers, signs, letters. . . .")

  TextWindow.WriteLine("* Beware! Spacing will be counted against you. . . .")

  TextWindow.WriteLine("Create word/phrase and press enter. . . .")

  keyWord = TextWindow.Read()

  TextWindow.WriteLine("Write a hint/message related to answer. . . .")

  hint = TextWindow.Read()

  keyWordL = Text.GetLength(keyWord) 

  For i = 1 To keyWordL 'In this loop below, the index, i, of all arrays correspond to the same char

    keyChars[i] = Text.GetSubText(keyWord,i,1) 'breaks down ea char of keyWord into a separate array

    qMarks[i] = "?" 'associate q marks in accordance to keyChars

    hideChar[i] = "True" 

    minusChance[i] = "False"

  EndFor 

  numOfCharsLeft = keyWordL

  chances = 6 

  u = 1 

  TextWindow.Clear()

EndSub



Sub display

  TextWindow.Write("Characters Used: ")

  For j = 1 To numUsedChars

    TextWindow.Write(usedChars[j]) 'display all characters player has inputted (right & wrong)

  EndFor 

  TextWindow.WriteLine("")

  TextWindow.WriteLine("Chances Left: " + chances)

  TextWindow.WriteLine("Hint: " + hint) 

  TextWindow.WriteLine("Number of letters left: " + numOfCharsLeft)

  TextWindow.Write("Answer: ")

  For i = 1 To keyWordL 

    TextWindow.Write(qMarks[i]) 'display all q marks(replce ea q w/ ea char guessed correctly in accordance to placement) 

  EndFor 

  TextWindow.WriteLine("")

EndSub 



Sub playGame

  TextWindow.WriteLine("Guess . . . .")

  input = TextWindow.Read()

  usedChars[u] = input 'record char inputted

  numUsedChars = Array.GetItemCount(usedChars) 

  u = u + 1

  For i = 1 To keyWordL

    'prevnts penalization for inputs that match one of keyChars indices

    'but doesn't match othr values of keyChars indices 

    If (keyChars[i] <> input) Then  

      minusChance[i] = "True" 

    EndIf

    

    'purpose of hideChar is to keep indices of all keyChars the same so it can replace q marks & 

    'display correctly guessed input in display()

    If (hideChar[i] = "True") Then 

      If (keyChars[i] = input) Then

        qMarks[i] = keyChars[i] 

        'keyChars[i] = ""  

        hideChar[i] = "False" 'prevnt subtrcting numOfCharsLeft if same char inputted again matches one of indices in keyChars[i]

        numOfCharsLeft = numOfCharsLeft - 1 

      EndIf 

    EndIf 

  EndFor 

  TextWindow.Clear() 

EndSub



Sub penalize 

  t = 0 

  'ALL minusChance indices must be true which means input doesn't match w/all keyChars indices

  For i = 1 To keyWordL 

    If (minusChance[i] = "True") Then 

      t = t + 1 'adding one to " t " is a way to evaluate how many of indices are "True"

    EndIf 

  EndFor 

  

  'accumulation of " t "  equavalent to keyWordL then all indices of minusChance are "True"

  If (t >= keyWordL) Then 

    chances = chances - 1 

  EndIf

  

  For i = 1 To keyWordL 

    minusChance[i] = "False" 

  EndFor 

EndSub



Sub gameOver

  If (chances <= 0 Or numOfCharsLeft <= 0) Then 

    display()

    TextWindow.WriteLine("")

    If (chances <= 0) Then 'chances= num of times you get penalized before loosing

      TextWindow.WriteLine("You lose!")

    ElseIf (numOfCharsLeft <= 0) Then 'numOfCharsLeft = num of times you need to guess to win

      TextWindow.WriteLine("You win!")

    EndIf

    

    For j = 1 To numUsedChars 

      usedChars[j] = "" 'reset value usedChars for next game

    EndFor

    

    TextWindow.WriteLine("Try Again?")

    TextWindow.WriteLine("Type lowercase " + "'y'" + " or " + "'n'" + " & press enter")

    response = TextWindow.Read()

    If (response = "y") Then 

      TextWindow.Clear()

      settings()

    Else

      Program.End()

    EndIf 

  EndIf

EndSub

'BUGS: input with multiple spacing or value of null interfers with usedChar accuracy


