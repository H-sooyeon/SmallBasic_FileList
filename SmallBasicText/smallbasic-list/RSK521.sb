GraphicsWindow.Title = "Cubic BÃ©zier Curve

Init()

AddControlPoints()

DrawCurve()

mouseDown = "False"

GraphicsWindow.BackgroundColor="tan

GraphicsWindow.MouseDown = OnMouseDown

GraphicsWindow.MouseUp = OnMouseUp

GraphicsWindow.MouseMove = OnMouseMove



While "True"

  If mouseDown Then

    

    While mouseDown

      If mouseMove Then

        lsh1=Text.GetSubTextToEnd(lsh Text.GetLength(lsh))-1

        p[lsh1]["x"] = mx

        p[lsh1]["y"] = my

        _p1 = p[lsh1]

        Shapes.Move(_p1["e"], _p1["x"] - r , _p1["y"] - r)

        i=lsh1

        AddControlLine()

        mouseMove = "False"

      Else

        Program.Delay(3)

      EndIf

    EndWhile

    RemoveCurve()

    DrawCurve()

    

  Else

    Program.Delay(3)

  EndIf

EndWhile



Sub AddControlLine



  GraphicsWindow.PenColor = "SteelBlue"

  GraphicsWindow.PenWidth = 1

  For ii=1 To 2

    If ii = 1 Then

      _p1 = p[0]

      p0=1

    Else

      _p1 = p[3]

      p0=2

    EndIf

    _p = p[p0]

    

    Shapes.Remove(c[ii]["e"])

    

    c[ii]["e"] = Shapes.AddLine(_p["x"], _p["y"], _p1["x"], _p1["y"])

  EndFor

EndSub



Sub AddControlPoints

  GraphicsWindow.PenWidth = 1

  GraphicsWindow.BrushColor = "Transparent"

  For i = 0 To 3

    GraphicsWindow.PenColor = "Black"

    ee=Shapes.AddEllipse(2 * r, 2 * r)

    p[i]["e"] =ee 

    _p1 = p[i]

    Shapes.Move(_p1["e"], _p1["x"] - r , _p1["y"] - r)

    LDShapes.SetShapeEvent(_p1["e"])

    AddControlLine()

  EndFor

  LDShapes.ShapeEvent=see

EndSub



Sub see

  If LDShapes.LastEventType="MouseDown" Then

    lsh=LDShapes.LastEventShape

  EndIf

  

EndSub



Sub Init

  gw = 598

  gh = 428

  GraphicsWindow.Width = gw

  GraphicsWindow.Height = gh

  p[0] = "x=" + (gw / 5) + ";y=" + (gh / 2) + ";"

  p[1] = "x=" + (gw * 2 / 5) + ";y=" + (gh / 4) + ";"

  p[2] = "x=" + (gw * 3 / 5) + ";y=" + (gh / 4) + ";"

  p[3] = "x=300;y=300

  r = 6

EndSub



Sub CalcBt

  ' param t

  ' return b[]

  cood = "1=x;2=y;"

  For i = 1 To Array.GetItemCount(cood)

    a = cood[i]

    b[a] = Math.Power(1 - t, 3) * p[0][a]

    b[a] = b[a] + 3 * Math.Power(1 - t, 2) * t * p[1][a]

    b[a] = b[a] + 3 * (1 - t) * Math.Power(t, 2) * p[2][a]

    b[a] = b[a] + Math.Power(t, 3) * p[3][a]

  EndFor

EndSub



Sub DrawCurve

  GraphicsWindow.PenColor = "red"

  GraphicsWindow.PenWidth = 2

  tt = 1 / 32

  For t = 0 To 1 Step tt

    CalcBt()

    If 0 < t Then

      nL = nL + 1

      l[nL] = Shapes.AddLine(_b["x"], _b["y"], b["x"], b["y"])

    EndIf

    _b = b

  EndFor

EndSub



Sub RemoveCurve

  For i = 1 To nL

    Shapes.Remove(l[i])

  EndFor

  nL = 0

EndSub



Sub OnMouseDown

  mouseDown = "True"

  dx = GraphicsWindow.MouseX

  dy = GraphicsWindow.MouseY

EndSub



Sub OnMouseUp

  mouseDown = "False"

EndSub



Sub OnMouseMove

  mouseMove = "True"

  mx = GraphicsWindow.MouseX

  my = GraphicsWindow.MouseY

EndSub


