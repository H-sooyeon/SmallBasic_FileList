'Pizza Delivery Program

xv = 0

yv = 0

accel = 0.5

yv2 = 0

accel2 = 0

falling = "false"

GraphicsWindow.BrushColor = "Red"

car = Shapes.AddRectangle(23,23)

four = "false"

mg = ""

Shapes.HideShape(car)

InitializeProgram()

Sound.Play("F:\boss.mp3")

GraphicsWindow.KeyUp = KeyUpSub

GraphicsWindow.KeyDown = KeyDownSub

While "true"

  If four = "true" Then

    four = "false"

    pleaseGiveMeAFour()

  EndIf  

  If mg <> "" Then

    If mg = "Game1" Then

      Game1()

    ElseIf mg = "Game2" Then

      Game2()

    ElseIf mg = "Game3" Then

      Game3()  

    ElseIf mg = "Game4" Then

      Game4()  

    ElseIf mg = "Game5" Then

      Game5()  

    ElseIf mg = "Game6" Then

      Game6()

    ElseIf mg = "Game7" Then

      Game7()     

    ElseIf mg = "Game8" Then

      Game8()   

    ElseIf mg = "Game9" Then

      Game9()    

    EndIf

  EndIf  

  mg = ""

EndWhile



Sub KeyUpSub

  k = GraphicsWindow.LastKey

  If k = "Left" Then

    left = 0

  EndIf

  If k = "Right" Then

    right = 0

  EndIf

  If k = "Up" Then

    up = 0

  EndIf

  If k = "Down" Then

    down = 0

  EndIf 

EndSub 

Sub KeyDownSub

  k = GraphicsWindow.LastKey 

  If k = "Left" Then

    left = 2

  EndIf

  If k = "Right" Then

    right = 2

  EndIf

  If k = "Up" Then

    up = 2

  EndIf

  If k = "Down" Then

    down = 2

  EndIf  

  'If GameStatus = "Playing" Then

    n = 0

    If k = "D1" Or k = "NumPad1" Then

      If locked[1] = "false" Then

        n = 1

      Else  

        mg = "Game1"

      EndIf  

    ElseIf  k = "D2" or k  = "NumPad2" then

      If locked[2] = "false" Then

        n = 2

      Else  

        mg = "Game2"

      EndIf 

    ElseIf  k = "D3" or k  = "NumPad3" then

      If locked[3] = "false" Then

        n = 3

      Else  

        mg = "Game3"

      EndIf 

    ElseIf  k = "D4" or k  = "NumPad4" then

      If locked[4] = "false" Then

        n = 4

      Else  

        mg = "Game4"

      EndIf

    ElseIf  k = "D5" or k  = "NumPad5" then

      If locked[5] = "false" Then

        n = 5

      Else  

        mg = "Game5"

      EndIf

    ElseIf  k = "D6" or k  = "NumPad6" then

      If locked[6] = "false" Then

        n = 6

      Else  

        mg = "Game6"

      EndIf              

    ElseIf  k = "D7" or k  = "NumPad7" then

      If locked[7] = "false" Then

        n = 7

      Else  

        mg = "Game7"

      EndIf

    ElseIf  k = "D8" or k  = "NumPad8" then

      If locked[8] = "false" Then

        n = 8

      Else  

        mg = "Game8"

      EndIf

    ElseIf  k = "D9" or k  = "NumPad9" then

      If locked[9] = "false" Then

        n = 9

      Else  

        mg = "Game9"

      EndIf

    EndIf

EndSub  



Sub Game1

  GraphicsWindow.Width = 400

  GraphicsWindow.Height = 400

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.PenColor = "Black"

  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

  For i = GraphicsWindow.Height To 0 Step -1

    Shapes.Move(bg,0,i)

    Program.Delay(1)

  EndFor  

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.PenWidth = 10

  border = Shapes.AddRectangle(300,300)

  Shapes.Move(border, 50, 50)

  GraphicsWindow.PenWidth = 0

  GraphicsWindow.BrushColor = "Red"

  For i = 1 To 128

    knife[i] = Shapes.AddRectangle(10,160)

    Shapes.Move(knife[i], 60+Math.GetRandomNumber(270), -300 + Math.Floor((i-1)/4)*-225)

  EndFor  

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontSize = 64

  num1 = Shapes.AddText("1")

  Shapes.Move(num1, GraphicsWindow.Width/2 - 32, -7000)

  GraphicsWindow.BrushColor = "Blue"

  player = Shapes.AddRectangle(20,20)

  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)

  mgPlaying = "true"

  While mgPlaying = "true"

    rmove()

    kmove()

    Program.Delay(5)

  EndWhile  

  For i = 1 To 128

    Shapes.Remove(knife[i])

  EndFor 

  Shapes.Remove(num1)

  Shapes.Remove(player)

  Shapes.Remove(border)

  Shapes.Remove(bg)

  GraphicsWindow.Width = 1050

  GraphicsWindow.Height = 400

EndSub  





right = 0

left = 0

down = 0

up = 0

slow = 1

Sub rmove

  If (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 320) And (Shapes.GetTop(player) + down - up >= 60) And (Shapes.GetTop(player) + down - up <= 320) Then 

    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player) + down - up)

  ElseIf (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 320) Then

    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player))  

  ElseIf (Shapes.GetTop(player) + down - up >= 60) And (Shapes.GetTop(player) + down - up <= 320) Then

    Shapes.Move(player,Shapes.GetLeft(player),Shapes.GetTop(player) + down - up)  

  EndIf  

EndSub 

Sub kmove

  For i = 1 To 128 

    Shapes.Move(knife[i], Shapes.GetLeft(knife[i]), Shapes.GetTop(knife[i]) + 3)

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(knife[i]) + 10) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(knife[i])) And (Shapes.GetTop(player) <= Shapes.GetTop(knife[i]) + 160) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(knife[i])) Then

      mgPlaying = "false"

      i = 128

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf  

  EndFor  

  Shapes.Move(num1, Shapes.GetLeft(num1), Shapes.GetTop(num1) + 3)

  If Shapes.GetTop(num1) > GraphicsWindow.Height Then

    mgPlaying = "false"

    locked[1] = "false"

    'Shapes.Remove(lockpic[1])

  EndIf  

EndSub  



Sub Game2

  GraphicsWindow.Width = 800

  GraphicsWindow.Height = 400

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.PenColor = "Black"

  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

  For i = GraphicsWindow.Height To 0 Step -1

    Shapes.Move(bg,0,i)

    Program.Delay(1)

  EndFor  

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.PenWidth = 10

  border = Shapes.AddRectangle(700,300)

  Shapes.Move(border, 50, 50)

  GraphicsWindow.PenWidth = 0

  GraphicsWindow.BrushColor = "Red"

  For i = 1 To 64

    glove[i] = Shapes.AddRectangle(50,50)

    Shapes.Move(glove[i], 1600 + i*150, 60+Math.GetRandomNumber(230))

  EndFor  

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.FontSize = 64

  num2 = Shapes.AddText("2")

  Shapes.Move(num2, 11200, (GraphicsWindow.Height/2) - 32)

  GraphicsWindow.BrushColor = "Blue"

  player = Shapes.AddRectangle(20,20)

  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)

  mgPlaying = "true"

  While mgPlaying = "true"

    rmove2()

    gmove()

    Program.Delay(5)

  EndWhile  

  For i = 1 To 64

    Shapes.Remove(glove[i])

  EndFor 

  Shapes.Remove(num2)

  Shapes.Remove(player)

  Shapes.Remove(border)

  Shapes.Remove(bg)

  GraphicsWindow.Width = 1050

  GraphicsWindow.Height = 400

EndSub  



Sub rmove2

  If (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 720) And (Shapes.GetTop(player) + down - up >= 60) And (Shapes.GetTop(player) + down - up <= 320) Then 

    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player) + down - up)

  ElseIf (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 720) Then

    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player))  

  ElseIf (Shapes.GetTop(player) + down - up >= 60) And (Shapes.GetTop(player) + down - up <= 320) Then

    Shapes.Move(player,Shapes.GetLeft(player),Shapes.GetTop(player) + down - up)  

  EndIf  

EndSub 



Sub gmove

  For i = 1 To 64 

    Shapes.Move(glove[i], Shapes.GetLeft(glove[i]) - 5, Shapes.GetTop(glove[i]))

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(glove[i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(glove[i])) And (Shapes.GetTop(player) <= Shapes.GetTop(glove[i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(glove[i])) Then

      mgPlaying = "false"

      i = 64

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf  

  EndFor  

  Shapes.Move(num2, Shapes.GetLeft(num2) - 5, Shapes.GetTop(num2))

  If Shapes.GetLeft(num2) < GraphicsWindow.Width Then

    mgPlaying = "false"

    locked[2] = "false"

    'Shapes.Remove(lockpic[2])

  EndIf  

EndSub



Sub Game3

  speed = 1

  GraphicsWindow.Width = 800

  GraphicsWindow.Height = 400

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.PenColor = "Black"

  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

  For i = GraphicsWindow.Height To 0 Step -1

    Shapes.Move(bg,0,i)

    Program.Delay(1)

  EndFor  

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.PenWidth = 10

  border = Shapes.AddRectangle(700,300)

  Shapes.Move(border, 50, 50)

  GraphicsWindow.PenWidth = 0

  GraphicsWindow.BrushColor = "Purple"

  l1 = Shapes.AddRectangle(680,10)

  Shapes.Move(l1, 60, 60 + 280/4 - 5)

  l2 = Shapes.AddRectangle(680,10)

  Shapes.Move(l2, 60, 60 + 280/2 - 5)

  l3 = Shapes.AddRectangle(680,10)

  Shapes.Move(l3, 60, 60 + (280*3)/4 - 5)

  GraphicsWindow.PenWidth = 0

  GraphicsWindow.BrushColor = "Red"

  For i = 1 To 32

    wall[i] = Shapes.AddRectangle(110,110)

    Shapes.Move(wall[i], 1600 + i*660, 60 + (280*Math.GetRandomNumber(3))/4 - 55)

  EndFor  

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.FontSize = 64

  num3 = Shapes.AddText("3")

  Shapes.Move(num3, 22720, (GraphicsWindow.Height/2) - 32)

  GraphicsWindow.BrushColor = "Blue"

  player = Shapes.AddRectangle(20,20)

  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)

  mgPlaying = "true"

  While mgPlaying = "true"

    rmove3()

    wmove()

    speed = speed + 0.003

    Program.Delay(5)

  EndWhile  

  For i = 1 To 32

    Shapes.Remove(wall[i])

  EndFor 

  Shapes.Remove(num3)

  Shapes.Remove(player)

  Shapes.Remove(border)

  Shapes.Remove(bg)

  Shapes.Remove(l1)

  Shapes.Remove(l2)

  Shapes.Remove(l3)

  GraphicsWindow.Width = 1050

  GraphicsWindow.Height = 400

EndSub



Sub wmove

  For i = 1 To 32

    Shapes.Move(wall[i], Shapes.GetLeft(wall[i]) - speed, Shapes.GetTop(wall[i]))

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(wall[i]) + 110) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(wall[i])) And (Shapes.GetTop(player) <= Shapes.GetTop(wall[i]) + 110) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(wall[i])) Then

      mgPlaying = "false"

      i = 32

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf  

  EndFor

  Shapes.Move(num3, Shapes.GetLeft(num3) - speed, Shapes.GetTop(num3)) 

  If Shapes.GetLeft(num3) < GraphicsWindow.Width Then

    mgPlaying = "false"

    locked[3] = "false"

    'Shapes.Remove(lockpic[3])

  EndIf    

EndSub



Sub rmove3

  If (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 720) Then

    Shapes.Move(player,Shapes.GetLeft(player) + right - left,60 + 280/2 + ((280/4)*down/2) - ((280/4)*up/2) - 10)  

  EndIf  

EndSub



Sub Game4

  GraphicsWindow.Width = 400

  GraphicsWindow.Height = 400

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.PenColor = "Black"

  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

  For i = GraphicsWindow.Height To 0 Step -1

    Shapes.Move(bg,0,i)

    Program.Delay(1)

  EndFor  

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.PenWidth = 10

  border = Shapes.AddRectangle(300,300)

  Shapes.Move(border, 50, 50)

  GraphicsWindow.PenWidth = 0

  GraphicsWindow.BrushColor = "Red"

  For i = 1 To 32

    firespeedx[1][i] = Math.GetRandomNumber(2)

    firespeedy[1][i] = Math.GetRandomNumber(2)

    fire[1][i] = Shapes.AddRectangle(20,20)

    Shapes.Move(fire[1][i], -200 - Math.GetRandomNumber(100) - 40*i, -200 - Math.GetRandomNumber(100) - 40*i)

  EndFor

  For i = 1 To 32

    firespeedx[2][i] = Math.GetRandomNumber(2)

    firespeedy[2][i] = Math.GetRandomNumber(2)

    fire[2][i] = Shapes.AddRectangle(20,20)

    Shapes.Move(fire[2][i], 600 + Math.GetRandomNumber(100) + 40*i, -200 - Math.GetRandomNumber(100) - 40*i)

  EndFor 

  For i = 1 To 32

    firespeedx[3][i] = Math.GetRandomNumber(2)

    firespeedy[3][i] = Math.GetRandomNumber(2)

    fire[3][i] = Shapes.AddRectangle(20,20)

    Shapes.Move(fire[3][i], -200 - Math.GetRandomNumber(100) - 40*i, 600 + Math.GetRandomNumber(100) + 40*i)

  EndFor

  For i = 1 To 32

    firespeedx[4][i] = Math.GetRandomNumber(2)

    firespeedy[4][i] = Math.GetRandomNumber(2)

    fire[4][i] = Shapes.AddRectangle(20,20)

    Shapes.Move(fire[4][i], 600 + Math.GetRandomNumber(100) + 40*i, 600 + Math.GetRandomNumber(100) + 40*i)

  EndFor

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontSize = 64

  num4 = Shapes.AddText("4")

  Shapes.Move(num4, GraphicsWindow.Width/2 - 32, -3000)

  GraphicsWindow.BrushColor = "Blue"

  player = Shapes.AddRectangle(20,20)

  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)

  mgPlaying = "true"

  While mgPlaying = "true"

    rmove()

    fmove()

    Program.Delay(5)

  EndWhile  

  For i = 1 To 32

    Shapes.Remove(fire[1][i])

    Shapes.Remove(fire[2][i])

    Shapes.Remove(fire[3][i])

    Shapes.Remove(fire[4][i])

  EndFor 

  Shapes.Remove(num4)

  Shapes.Remove(player)

  Shapes.Remove(border)

  Shapes.Remove(bg)

  GraphicsWindow.Width = 1050

  GraphicsWindow.Height = 400

EndSub  



Sub fmove

  For i = 1 To 32

    Shapes.Move(fire[1][i], Shapes.GetLeft(fire[1][i]) + firespeedx[1][i], Shapes.GetTop(fire[1][i]) + firespeedy[1][i])

    Shapes.Move(fire[2][i], Shapes.GetLeft(fire[2][i]) - firespeedx[2][i], Shapes.GetTop(fire[2][i]) + firespeedy[2][i])

    Shapes.Move(fire[3][i], Shapes.GetLeft(fire[3][i]) + firespeedx[3][i], Shapes.GetTop(fire[3][i]) - firespeedy[3][i])

    Shapes.Move(fire[4][i], Shapes.GetLeft(fire[4][i]) - firespeedx[4][i], Shapes.GetTop(fire[4][i]) - firespeedy[4][i])

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(fire[1][i]) + 20) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(fire[1][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(fire[1][i]) + 20) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(fire[1][i])) Then

      mgPlaying = "false"

      i = 32

      Sound.PlayClick()

      Program.Delay(1000)     

    EndIf 

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(fire[2][i]) + 20) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(fire[2][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(fire[2][i]) + 20) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(fire[2][i])) Then

      mgPlaying = "false"

      i = 32

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(fire[3][i]) + 20) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(fire[3][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(fire[3][i]) + 20) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(fire[3][i])) Then

      mgPlaying = "false"

      i = 32

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(fire[4][i]) + 20) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(fire[4][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(fire[4][i]) + 20) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(fire[4][i])) Then

      mgPlaying = "false"

      i = 32

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf

  EndFor 

  Shapes.Move(num4, Shapes.GetLeft(num4), Shapes.GetTop(num4) + 2)

  If Shapes.GetTop(num4) > GraphicsWindow.Height Then

    mgPlaying = "false"

    locked[4] = "false"

    'Shapes.Remove(lockpic[4])

  EndIf  

EndSub  



Sub Game5

  GraphicsWindow.Width = 400

  GraphicsWindow.Height = 400

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.PenColor = "Black"

  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

  For i = GraphicsWindow.Height To 0 Step -1

    Shapes.Move(bg,0,i)

    Program.Delay(1)

  EndFor  

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.PenWidth = 10

  border = Shapes.AddRectangle(300,300)

  Shapes.Move(border, 50, 50)

  GraphicsWindow.PenWidth = 0

  GraphicsWindow.BrushColor = "Green"

  For i = 1 To 25

    block[i] = Shapes.AddRectangle(40,40)

    Shapes.Move(block[i], (i-1)*80 - Math.Floor((i-1)/5)*400, Math.Floor((i-1)/5)*80)

  EndFor  

  GraphicsWindow.BrushColor = "Red"

  For i = 1 To 128

    ball[i] = Shapes.AddRectangle(40,40)

    Shapes.Move(ball[i], Math.GetRandomNumber(360), 800 + Math.Floor((i-1)/6)*120)

  EndFor  

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontSize = 64

  num5 = Shapes.AddText("5")

  Shapes.Move(num5, GraphicsWindow.Width/2 - 32, 3440)

  GraphicsWindow.BrushColor = "Blue"

  player = Shapes.AddRectangle(20,20)

  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)

  mgPlaying = "true"

  While mgPlaying = "true"

    rmove4()

    'kmove()

    Program.Delay(5)

  EndWhile  

  For i = 1 To 25

    Shapes.Remove(block[i])

  EndFor 

  For i = 1 To 128

    Shapes.Remove(ball[i])

  EndFor 

  Shapes.Remove(num5)

  Shapes.Remove(player)

  Shapes.Remove(border)

  Shapes.Remove(bg)

  GraphicsWindow.Width = 1050

  GraphicsWindow.Height = 400

EndSub

Sub rmove4

  If up = 2 And yv > -10 Then

    yv = yv - accel

  ElseIf up = 0 And yv < 0 And down = 0 Then 

    yv = yv + accel 

  EndIf

  If down = 2 And yv < 10 Then

    yv = yv + accel

  ElseIf down = 0 And yv > 0 And up = 0 Then 

    yv = yv - accel

  EndIf

  If right = 2 And xv < 10 Then

    xv = xv + accel

  ElseIf right = 0 And xv > 0 And left = 0 Then 

    xv = xv - accel

  EndIf

  If left = 2 And xv > -10 Then

    xv = xv - accel

  ElseIf left = 0 And xv < 0 And right = 0 Then 

    xv = xv + accel

  EndIf

  For i = 1 To 25

    Shapes.Move(block[i], Shapes.GetLeft(block[i]) - xv, Shapes.GetTop(block[i]) - yv)

    If Shapes.GetLeft(block[i]) < -40 Then

      Shapes.Move(block[i], GraphicsWindow.Width, Shapes.GetTop(block[i]))

    EndIf

    If Shapes.GetLeft(block[i]) > GraphicsWindow.Width Then

      Shapes.Move(block[i], -40, Shapes.GetTop(block[i]))

    EndIf

    If Shapes.GetTop(block[i]) < -40 Then

      Shapes.Move(block[i], Shapes.GetLeft(block[i]), GraphicsWindow.Height) 

    EndIf

    If Shapes.GetTop(block[i]) > GraphicsWindow.Height Then

      Shapes.Move(block[i], Shapes.GetLeft(block[i]), -40)

    EndIf   

  EndFor

  For i = 1 To 128

    Shapes.Move(ball[i], Shapes.GetLeft(ball[i]) - xv, Shapes.GetTop(ball[i]) - yv - 10)

    If Shapes.GetLeft(ball[i]) < -40 Then

      Shapes.Move(ball[i], GraphicsWindow.Width, Shapes.GetTop(ball[i]))

    EndIf

    If Shapes.GetLeft(ball[i]) > GraphicsWindow.Width Then

      Shapes.Move(ball[i], -40, Shapes.GetTop(ball[i]))

    EndIf

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ball[i]) + 40) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ball[i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ball[i]) + 40) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ball[i])) Then

      mgPlaying = "false"

      i = 128

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf

  EndFor

  Shapes.Move(num5, Shapes.GetLeft(num5) - xv, Shapes.GetTop(num5) - yv - 10)

  If Shapes.GetLeft(num5) < -40 Then

    Shapes.Move(num5, GraphicsWindow.Width, Shapes.GetTop(num5))

  EndIf

  If Shapes.GetLeft(num5) > GraphicsWindow.Width Then

    Shapes.Move(num5, -40, Shapes.GetTop(num5))

  EndIf

  If Shapes.GetTop(num5) < 0 Then

    mgPlaying = "false"

    locked[5] = "false"

    'Shapes.Remove(lockpic[5])

  EndIf

EndSub



Sub Game6

  GraphicsWindow.Width = 400

  GraphicsWindow.Height = 400

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.PenColor = "Black"

  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

  For i = GraphicsWindow.Height To 0 Step -1

    Shapes.Move(bg,0,i)

    Program.Delay(1)

  EndFor  

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.PenWidth = 10

  border = Shapes.AddRectangle(60,60)

  Shapes.Move(border, 340, 170)

  GraphicsWindow.PenWidth = 0

  GraphicsWindow.BrushColor = "Red"

  For i = 1 To 32

    laser[i] = Shapes.AddRectangle(60,20)

    Shapes.Move(laser[i], -1000 - 200*i, 180 + (Math.GetRandomNumber(2)-1)*20)

  EndFor  

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontSize = 64

  num6 = Shapes.AddText("6")

  Shapes.Move(num6, -7600, GraphicsWindow.Height/2)

  GraphicsWindow.BrushColor = "Blue"

  player = Shapes.AddRectangle(20,20)

  Shapes.Move(player, 360, 190)

  mgPlaying = "true"

  While mgPlaying = "true"

    rmove5()

    lmove()

    Program.Delay(5)

  EndWhile  

  For i = 1 To 32

    Shapes.Remove(laser[i])

  EndFor 

  Shapes.Remove(num6)

  Shapes.Remove(player)

  Shapes.Remove(border)

  Shapes.Remove(bg)

  GraphicsWindow.Width = 1050

  GraphicsWindow.Height = 400

EndSub  



Sub rmove5

  If (Shapes.GetLeft(player) + right - left >= 350) And (Shapes.GetLeft(player) + right - left <= 370) And (Shapes.GetTop(player) + down - up >= 180) And (Shapes.GetTop(player) + down - up <= 200) Then 

    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player) + down - up)

  ElseIf (Shapes.GetLeft(player) + right - left >= 350) And (Shapes.GetLeft(player) + right - left <= 370) Then

    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player))  

  ElseIf (Shapes.GetTop(player) + down - up >= 350) And (Shapes.GetTop(player) + down - up <= 200) Then

    Shapes.Move(player,Shapes.GetLeft(player),Shapes.GetTop(player) + down - up)  

  EndIf  

EndSub



Sub lmove

  For i = 1 To 32 

    Shapes.Move(laser[i], Shapes.GetLeft(laser[i])+3, Shapes.GetTop(laser[i]))

    If (Shapes.GetLeft(player) < Shapes.GetLeft(laser[i]) + 60) And (Shapes.GetLeft(player) + 20 > Shapes.GetLeft(laser[i])) And (Shapes.GetTop(player) < Shapes.GetTop(laser[i]) + 20) And (Shapes.GetTop(player) + 20 > Shapes.GetTop(laser[i])) Then

      mgPlaying = "false"

      i = 32

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf  

  EndFor  

  Shapes.Move(num6, Shapes.GetLeft(num6)+3, Shapes.GetTop(num6))

  If Shapes.GetLeft(num6) > GraphicsWindow.Width Then

    mgPlaying = "false"

    locked[6] = "false"

    'Shapes.Remove(lockpic[6])

  EndIf  

EndSub



Sub Game7

  GraphicsWindow.Width = 400

  GraphicsWindow.Height = 600

  GraphicsWindow.Top = 0

  GraphicsWindow.Left = 0

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.PenColor = "Black"

  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

  For i = GraphicsWindow.Height To 0 Step -1

    Shapes.Move(bg,0,i)

    Program.Delay(1)

  EndFor  

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.PenWidth = 10

  border = Shapes.AddRectangle(300,500)

  Shapes.Move(border, 50, 50)

  GraphicsWindow.PenWidth = 0

  GraphicsWindow.BrushColor = "Green"

  For i = 1 To 5

    line[i] = Shapes.AddRectangle(400,10)

    Shapes.Move(line[i], 0, 100*i)

  EndFor

  GraphicsWindow.BrushColor = "Red"

  For i = 1 To 64

    debris[i] = Shapes.AddRectangle(50,100)

    Shapes.Move(debris[i], 60+Math.GetRandomNumber(230), -1000 - i*200)

  EndFor  

  lava = Shapes.AddRectangle(400,100)

  Shapes.Move(lava, 0, GraphicsWindow.Height - 70)  

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.FontSize = 64

  num7 = Shapes.AddText("7")

  Shapes.Move(num7, (GraphicsWindow.Width/2) - 32, -13800)

  GraphicsWindow.BrushColor = "Blue"

  player = Shapes.AddRectangle(20,20)

  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)

  mgPlaying = "true"

  While mgPlaying = "true"

    rmove6()

    dmove()

    Program.Delay(5)

  EndWhile  

  For i = 1 To 64

    Shapes.Remove(debris[i])

  EndFor 

  For i = 1 To 5

    Shapes.Remove(line[i])

  EndFor

  Shapes.Remove(lava)  

  Shapes.Remove(num2)

  Shapes.Remove(player)

  Shapes.Remove(border)

  Shapes.Remove(bg)

  GraphicsWindow.Width = 1050

  GraphicsWindow.Height = 400

EndSub  



Sub rmove6

  If (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 320) And (Shapes.GetTop(player) + down - up + 1 >= 60) And (Shapes.GetTop(player) + down - up + 1 <= 520) Then 

    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player) + down - up + 1)

  ElseIf (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 320) Then

    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player))  

  ElseIf (Shapes.GetTop(player) + down - up + 1 >= 60) And (Shapes.GetTop(player) + down - up + 1 <= 520) Then

    Shapes.Move(player,Shapes.GetLeft(player),Shapes.GetTop(player) + down - up + 1)  

  EndIf  

EndSub 



Sub dmove

  For i = 1 To 5

    Shapes.Move(line[i], 0, Shapes.GetTop(line[i]) + 1)

    If Shapes.GetTop(line[i]) >= Shapes.GetTop(lava) Then

      Shapes.Move(line[i],0,-20)

    EndIf  

  EndFor  

  For i = 1 To 64 

    Shapes.Move(debris[i], Shapes.GetLeft(debris[i]), Shapes.GetTop(debris[i])+5)

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(debris[i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(debris[i])) And (Shapes.GetTop(player) <= Shapes.GetTop(debris[i]) + 100) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(debris[i])) Then

      mgPlaying = "false"

      i = 64

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf  

  EndFor  

  If (Shapes.GetLeft(player) <= Shapes.GetLeft(lava) + 400) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(lava)) And (Shapes.GetTop(player) <= Shapes.GetTop(lava) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(lava)) Then

      mgPlaying = "false"

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf  

  Shapes.Move(num7, Shapes.GetLeft(num7), Shapes.GetTop(num7)+5)

  If Shapes.GetTop(num7) > GraphicsWindow.Height Then

    mgPlaying = "false"

    locked[7] = "false"

    'Shapes.Remove(lockpic[7])

  EndIf  

EndSub



Sub Game8

  GraphicsWindow.Width = 400

  GraphicsWindow.Height = 400

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.PenColor = "Black"

  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

  For i = GraphicsWindow.Height To 0 Step -1

    Shapes.Move(bg,0,i)

    Program.Delay(1)

  EndFor  

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.PenWidth = 10

  border = Shapes.AddRectangle(300,300)

  Shapes.Move(border, 50, 50)

  GraphicsWindow.PenWidth = 0

  GraphicsWindow.BrushColor = "Yellow"

  For i = 1 To 9

    peg[i] = Shapes.AddRectangle(20,20)

  EndFor  

  Shapes.Move(peg[1], 190, 190)

  Shapes.Move(peg[2], 190, 90)

  Shapes.Move(peg[3], 90, 190)

  Shapes.Move(peg[4], 290, 190)

  Shapes.Move(peg[5], 190, 290)

  Shapes.Move(peg[6], 90, 90)

  Shapes.Move(peg[7], 90, 290)

  Shapes.Move(peg[8], 290, 90)

  Shapes.Move(peg[9], 290, 290)

  GraphicsWindow.BrushColor = "Red"

  For i = 1 To 64

    c = Math.GetRandomNumber(6)

    If c = 1 Then

      ddr[c][i] = Shapes.AddRectangle(50,50)

      Shapes.Move(ddr[c][i], 175, -500 - i * 100)

    ElseIf c = 2 Then

      ddr[c][i] = Shapes.AddRectangle(50,50)

      Shapes.Move(ddr[c][i], -500 - i * 100, 175)  

    ElseIf c = 3 Then 

      ddr[c][i] = Shapes.AddRectangle(50,50)

      Shapes.Move(ddr[c][i], 75, 500 + i * 100)   

    ElseIf c = 4 Then 

      ddr[c][i] = Shapes.AddRectangle(50,50)

      Shapes.Move(ddr[c][i], 500 + i * 100, 75)   

      i = i + 1  

    ElseIf c = 5 Then

      ddr[c][i] = Shapes.AddRectangle(50,50)

      Shapes.Move(ddr[c][i], 275, 500 + i * 100)  

    ElseIf c = 6 Then

      ddr[c][i] = Shapes.AddRectangle(50,50)

      Shapes.Move(ddr[c][i], 500 + i * 100, 275)  

    EndIf  

  EndFor  

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontSize = 64

  num8 = Shapes.AddText("8")

  Shapes.Move(num8, GraphicsWindow.Width/2 - 32, -7000)

  GraphicsWindow.BrushColor = "Blue"

  player = Shapes.AddRectangle(20,20)

  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)

  mgPlaying = "true"

  While mgPlaying = "true"

    rmove7()

    ddrmove()

    Program.Delay(5)

  EndWhile  

  For k = 1 To 6

    For i = 1 To 64

      Shapes.Remove(ddr[k][i])

    EndFor

  EndFor  

  For i = 1 To 9

    Shapes.Remove(peg[i])

  EndFor  

  Shapes.Remove(num8)

  Shapes.Remove(player)

  Shapes.Remove(border)

  Shapes.Remove(bg)

  GraphicsWindow.Width = 1050

  GraphicsWindow.Height = 400

EndSub  



Sub rmove7

  Shapes.Move(player,400/2 + ((400/4)*right/2) - ((400/4)*left/2) - 10,400/2 + ((400/4)*down/2) - ((400/4)*up/2) - 10)   

EndSub



Sub ddrmove

  For i = 1 To 64

    Shapes.Move(ddr[1][i], Shapes.GetLeft(ddr[1][i]), Shapes.GetTop(ddr[1][i])+2)

    Shapes.Move(ddr[2][i], Shapes.GetLeft(ddr[2][i])+2, Shapes.GetTop(ddr[2][i]))

    Shapes.Move(ddr[3][i], Shapes.GetLeft(ddr[3][i]), Shapes.GetTop(ddr[3][i])-2)

    Shapes.Move(ddr[5][i], Shapes.GetLeft(ddr[5][i]), Shapes.GetTop(ddr[5][i])-2)

    Shapes.Move(ddr[4][i], Shapes.GetLeft(ddr[4][i])-2, Shapes.GetTop(ddr[4][i]))

    Shapes.Move(ddr[6][i], Shapes.GetLeft(ddr[6][i])-2, Shapes.GetTop(ddr[6][i]))

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[1][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[1][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[1][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[1][i])) Then

      mgPlaying = "false"

      i = 64

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[2][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[2][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[2][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[2][i])) Then

      mgPlaying = "false"

      i = 64

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf 

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[3][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[3][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[3][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[3][i])) Then

      mgPlaying = "false"

      i = 64

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf 

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[4][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[4][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[4][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[4][i])) Then

      mgPlaying = "false"

      i = 64

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[5][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[5][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[5][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[5][i])) Then

      mgPlaying = "false"

      i = 64

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[6][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[6][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[6][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[6][i])) Then

      mgPlaying = "false"

      i = 64

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf

  EndFor

  Shapes.Move(num8, Shapes.GetLeft(num8), Shapes.GetTop(num8)+2) 

  If Shapes.GetTop(num8) > GraphicsWindow.Height Then

    mgPlaying = "false"

    locked[8] = "false"

    'Shapes.Remove(lockpic[8])

  EndIf    

EndSub



Sub Game9

  GraphicsWindow.Width = 400

  GraphicsWindow.Height = 400

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.PenColor = "Black"

  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

  For i = GraphicsWindow.Height To 0 Step -1

    Shapes.Move(bg,0,i)

    Program.Delay(1)

  EndFor  

  GraphicsWindow.PenColor = "White"

  GraphicsWindow.PenWidth = 10

  border = Shapes.AddRectangle(300,300)

  Shapes.Move(border, 50, 50)

  GraphicsWindow.PenWidth = 0

  GraphicsWindow.BrushColor = "Red"

  For i = 1 To 64

    size[i] = Math.GetRandomNumber(70) + 50

    spike[1][i] = Shapes.AddRectangle(10,size[i])

    spike[2][i] = Shapes.AddRectangle(10,220-size[i])

    Shapes.Move(spike[1][i], 500 + 400*i, 350-size[i])

    Shapes.Move(spike[2][i], 500 + 400*i, 50)

  EndFor  

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontSize = 64

  num9 = Shapes.AddText("9")

  Shapes.Move(num9, 26500, GraphicsWindow.Height/2 - 32)

  GraphicsWindow.BrushColor = "Blue"

  player = Shapes.AddRectangle(20,20)

  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)

  mgPlaying = "true"

  While mgPlaying = "true"

    rmove8()

    smove()

    Program.Delay(5)

  EndWhile  

  For i = 1 To 64

    Shapes.Remove(spike[1][i])

    Shapes.Remove(spike[2][i])

  EndFor 

  Shapes.Remove(num9)

  Shapes.Remove(player)

  Shapes.Remove(border)

  Shapes.Remove(bg)

  GraphicsWindow.Width = 1050

  GraphicsWindow.Height = 400

EndSub



Sub rmove8

  If up = 2 And yv2 <= 0 And Shapes.GetTop(player) > 200 And falling = "false" Then

    accel2 = 0.1

    yv2 = -3 + accel2

  ElseIf Shapes.GetTop(player) + yv2 + accel2 < 320 Then

    accel2 = 0.1

    yv2 = yv2 + accel2

    falling = "true"

  Else

    falling = "false"

    yv2 = 0

    accel2 = 0

    Shapes.Move(player, Shapes.GetLeft(player), 320)  

  EndIf

  If (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 320) Then

    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player) + yv2 + accel2) 

  Else

    Shapes.Move(player,Shapes.GetLeft(player),Shapes.GetTop(player) + yv2 + accel2)   

  EndIf  

EndSub 



Sub smove

  For i = 1 To 64 

    Shapes.Move(spike[1][i], Shapes.GetLeft(spike[1][i]) - 3, Shapes.GetTop(spike[1][i]))

    Shapes.Move(spike[2][i], Shapes.GetLeft(spike[2][i]) - 3, Shapes.GetTop(spike[2][i]))

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(spike[1][i]) + 10) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(spike[1][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(spike[1][i]) + size[i]) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(spike[1][i])) Then

      mgPlaying = "false"

      i = 64

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf

    If (Shapes.GetLeft(player) <= Shapes.GetLeft(spike[2][i]) + 10) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(spike[2][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(spike[2][i]) + 220 - size[i]) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(spike[2][i])) Then

      mgPlaying = "false"

      i = 64

      Sound.PlayClick()

      Program.Delay(1000)

    EndIf  

  EndFor  

  Shapes.Move(num9, Shapes.GetLeft(num9) - 3, Shapes.GetTop(num9))

  If Shapes.GetLeft(num9) < GraphicsWindow.Width Then

    mgPlaying = "false"

    locked[9] = "false"

    'Shapes.Remove(lockpic[9])

  EndIf  

EndSub



Sub pleaseGiveMeAFour

  For i = 1 To 10

    Shapes.Remove(pepperoni[i])

  EndFor 

  For i = 1 to 10

    vy[i] = -0.4

  EndFor

  GraphicsWindow.BackgroundColor = "SkyBlue"

  GraphicsWindow.PenColor = "Black"

  GraphicsWindow.BrushColor = "SkyBlue"

  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

  Shapes.Move(bg,0,0)

  GraphicsWindow.BrushColor = "Peru"

  table = Shapes.AddRectangle(GraphicsWindow.Width,100)

  Shapes.Move(table,0,GraphicsWindow.Height - 100)

  GraphicsWindow.BrushColor = "Tan"

  pizza = Shapes.AddRectangle(GraphicsWindow.Width, 50)

  Shapes.Move(pizza,0,GraphicsWindow.Height - 150)

  GraphicsWindow.BrushColor = "Red"

  For i = 1 To 100

    done[i] = 0

    x = Math.GetRandomNumber(25) + 49

    GraphicsWindow.BrushColor = "Red"

    pepperoni[i] = Shapes.AddRectangle(x, 10)

    Shapes.Move(pepperoni[i], Math.GetRandomNumber(GraphicsWindow.Width - x) + 1,-40*i)

  EndFor  

  donepizza = 0

  While donepizza < 10

    Program.Delay(50)

    For i = 1 To 10

      If Shapes.GetTop(pepperoni[i]) + 10 + vy[i] >= Shapes.GetTop(pizza) And done[i] = 0 Then

        Shapes.Move(pepperoni[i], Shapes.GetLeft(pepperoni[i]), Shapes.GetTop(pizza)-10) 

        vy[i] = 0

        done[i] = 1

        donepizza = donepizza + 1  

      EndIf

      If vy[i] <> 0 Then

        vy[i] = vy[i] + 0.5  

      EndIf

      Shapes.Move(pepperoni[i], Shapes.GetLeft(pepperoni[i]), Shapes.GetTop(pepperoni[i])+vy[i])  

    EndFor

  EndWhile  

  Shapes.Remove(pizza)

  Shapes.Remove(table)

  Shapes.Remove(bg)

  For i = 1 To 10

    Shapes.Remove(pepperoni[i])

  EndFor  

EndSub 



Sub InitializeProgram

  'graphics window

  GraphicsWindow.Width = 715

  GraphicsWindow.Height = 520

  GraphicsWindow.Title = "Pizza Delivery"

  'draw new delivery grid

  DrawGrid()

  'draw clock and sales

  GraphicsWindow.BrushColor="Blue"

  GraphicsWindow.FillRectangle(505,5,100,60)

  GraphicsWindow.FillRectangle(610,5,100,60)

  GraphicsWindow.BrushColor = "Yellow"

  GraphicsWindow.FontSize = 20

  GraphicsWindow.FontBold = "false"

  GraphicsWindow.DrawText(510,5,"Time")

  GraphicsWindow.DrawText(615,5,"Sales")

  ClockTime = "6:00"

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontSize = 20

  GraphicsWindow.FontBold = "false"

  TimeDisplay = Shapes.AddText(ClockTime)

  Shapes.Move(TimeDisplay,535,30)

  TotalSales = 0

  'format as $0.00

  Amount = TotalSales

  FormatAmount()

  SalesDisplay = Shapes.AddText(AmountText)

  Shapes.Move(SalesDisplay,620,30)

  'draw message area

  GraphicsWindow.BrushColor = "LightYellow"

  GraphicsWindow.FillRectangle(505,190,205,50)

  GraphicsWindow.PenColor = "Black"

  GraphicsWindow.PenWidth = 1

  GraphicsWindow.DrawRectangle(505,190,205,50)

  GraphicsWindow.DrawRectangle(505,70,205,120)

  'draw pizza oven

  DrawBlueOven()

  'add pizza button

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.FontSize = 16

  addpizzabutton = Controls.AddButton("Add Pizza",510,380)

  Controls.SetSize(addpizzabutton,95,33)

  'bake pizza button

  bakepizzabutton = Controls.AddButton("Bake Pizza",610,380)

  Controls.SetSize(bakepizzabutton,95,33)

  'draw pizza loading boxes

  GraphicsWindow.BrushColor = "Blue"

  GraphicsWindow.FillRectangle(505,420,70,60)

  GraphicsWindow.FillRectangle(580,420,130,60)

  GraphicsWindow.BrushColor = "Yellow"

  GraphicsWindow.DrawText(510,420,"Baked")

  GraphicsWindow.DrawText(585,420,"Pizzas in Car")

  pizzasready = 0

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontSize = 20

  pizzasreadydisplay = Shapes.AddText(pizzasready)

  Shapes.Move(pizzasreadydisplay,535,445)

  pizzasincar = 0

  pizzasincardisplay = Shapes.AddText(pizzasincar)

  Shapes.Move(pizzasincardisplay, 615,445)

  'load button

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.FontSize = 16

  loadbutton = Controls.AddButton("Load",660,445)

  Controls.SetSize(loadbutton,45,33)

  'start/pause button

  startpausebutton = Controls.AddButton("Start Game",505,485)

  Controls.SetSize(startpausebutton,110,33)

  'exit/stop button

  exitstopbutton = Controls.AddButton("Exit",620,485)

  Controls.SetSize(exitstopbutton,90,33)

  Controls.HideControl(addpizzabutton)

  Controls.HideControl(bakepizzabutton)

  Controls.HideControl(loadbutton)

  gamestatus = "Stopped"

  'game variables

  pizzasreadymax = 20

  pizzasbakingmax = 100

  bakingtime = 10

  pizzaimage = "F:\pizza.jpg"

  pizzasincarmax = 100

  hcarimage = ""

  vcarimage = ""

  ordermaxtime = 60

  orderlatetime = 30

  netsoldpizza = 10

  netlatepizza = 5

  costmissedpizza = 1

  pizzacost = 3

  mileagecost = 0.1

  Timer.Interval = 50

  Timer.Pause()

  Timer.Tick = timerticksub

  clockticksmax = 6

  Controls.ButtonClicked = buttonclickedsub

  GraphicsWindow.MouseDown = mousedownsub

EndSub



Sub drawgrid

  GraphicsWindow.BrushColor = "SteelBlue"

  GraphicsWindow.FillRectangle(0,0,500,520)

  'gridr is row, gridc is column; build one row at a time

  gridw = 22

  GraphicsWindow.FontBold = "false"

  GraphicsWindow.FontSize = 16

  For gridr = 0  To 20

    For gridc = 0 To 20

      deliverygridx[gridr][gridc] = 10 +gridc *gridw

      deliverygridy[gridr][gridc] = 20 +gridr *gridw

      pizzas[gridr][gridc] = 0

      pizzatime[gridr][gridc] = 0

      If gridr = 0 Then

        If gridc <> 0 Then

          'column letters

          GraphicsWindow.BrushColor = "Yellow"

          GraphicsWindow.DrawText(deliverygridx[gridr][gridc] + 5, deliverygridy[gridr][gridc], Text.GetCharacter(gridc +64))

        EndIf

      ElseIf gridc = 0 then

        If gridr <> 0 then

          'row numbers

          GraphicsWindow.BrushColor = "Yellow"

          GraphicsWindow.DrawText(deliverygridx[gridr][gridc], deliverygridy[gridr][gridc],gridr)

        EndIf

      Else

        deliverygridcolor[gridr][gridc] = "White"

        deliverygridtext[gridr][gridc] = ""

        drawgridsquare()

      EndIf

    EndFor

  EndFor

EndSub



Sub drawgridsquare

  GraphicsWindow.BrushColor = deliverygridcolor[gridr][gridc]

  GraphicsWindow.FillRectangle(deliverygridx[gridr][gridc], deliverygridy[gridr][gridc], gridw, gridw)

  GraphicsWindow.PenWidth = 1

  GraphicsWindow.PenColor = "Black"

  GraphicsWindow.DrawRectangle(deliverygridx[gridr][gridc], deliverygridy[gridr][gridc], gridw, gridw)

  GraphicsWindow.BrushColor = "Yellow"

  GraphicsWindow.FontSize = 16

  GraphicsWindow.DrawText(deliverygridx[gridr][gridc]+6, deliverygridy[gridr][gridc]+1, deliverygridtext[gridr][gridc])

EndSub



Sub formatamount

  dollars = Math.Floor(amount)

  cents = Math.Floor(100*(Amount-dollars))

  AmountText = "$" + dollars +"."

  If cents = 0 Then

    AmountText = AmountText + "00"

  ElseIf cents <10 then

    AmountText= AmountText + "0" + cents

  Else

    AmountText = AmountText + cents

  EndIf

EndSub



Sub DrawBlueOven

  'draw pizza oven

  GraphicsWindow.BrushColor = "Blue"

  GraphicsWindow.FillRectangle(505,245,205,170)

  GraphicsWindow.BrushColor = "Yellow"

  GraphicsWindow.DrawText(510,245,"Oven Off")

EndSub



Sub TimerTickSub 

  'clock update

  clockticks = clockticks +1

  If clockticks >= clockticksmax Then

    clockticks = 0

    clockminute = clockminute +1

    If clockminute > 59 Then

      clockminute = 0

      clockhour = clockhour +1

      If clockhour = 11 Then

        ClockTime = "11:00"

        Shapes.SetText(TimeDisplay, clocktime)

        stopgame()

      EndIf

    EndIf

    clocktime=""

    ClockTime = Text.Append(clocktime, clockhour)

    If clockminute <10 Then

      ClockTime = ClockTime +":0" + clockminute

    Else

      ClockTime = ClockTime +":"+clockminute

    EndIf

    Shapes.SetText(TimeDisplay, clocktime)

    'pizzas in oven

    If ovengoing Then

      bakingminutesleft = bakingminutesleft -1

      If bakingminutesleft = 0 Then

        ovengoing = "false"

        pizzasready = pizzasready + pizzasbaking

        If pizzasready > pizzasreadymax Then

          pizzasready = pizzasreadymax

        EndIf

        Shapes.SetText(pizzasreadydisplay , pizzasready )

        DrawBlueOven()

        pizzasbaking = 0

        Controls.ShowControl(addpizzabutton)

        addpizzavisible = "true"

        Controls.ShowControl(bakepizzabutton)

        bakepizzavisible = "true"

      EndIf

    EndIf

    'check for late orders - check if first is expired

    clockminutes = clockminute + 60 * clockhour

    If numberorders <>0 Then

      For i = 1 To numberorders

        s = order[i]

        gridr = Text.GetSubText(s,9,2)

        If Text.GetSubText(gridr, 1,1) = " " Then

          gridr = Text.GetSubTextToEnd(gridr, 2)

        EndIf

        gridc = Text.GetCharacterCode(Text.GetSubText(s,12,1))-64

        If (i = 1 And (clockminutes - pizzatime[gridr][gridc]) >= ordermaxtime) Then

          deliverygridcolor[gridr][gridc] = "White"

          deliverygridtext[gridr][gridc] = ""

          drawgridsquare()

          misseddeliveries = misseddeliveries + pizzas[gridr][gridc]

          pizzas[gridr][gridc] = 0

          'remove top item

          itemtoremove = 1

          removeitem()

        ElseIf clockminutes - pizzatime[gridr][gridc] >= orderlatetime then

          deliverygridcolor[gridr][gridc] = "DarkRed"

          drawgridsquare()

        EndIf

      EndFor

    EndIf

  EndIf

  'phone update

  phoneticks = phoneticks +1

  If phoneticks >= phoneticksmax Then

    phoneticks = 0

    If clockhour = 10 And clockminute >=30 Then

      Goto leavephone

    EndIf

    getlocation:

    gridr = Math.GetRandomNumber(20)

    gridc = Math.GetRandomNumber(20)

    If pizzas[gridr][gridc] <>0 Then

      Goto getlocation

    EndIf

    p = Math.GetRandomNumber(100)

    If p>=1 And p<=30 Then

      pizzas[gridr][gridc] = 1

    ElseIf p>=31 and p<=50 then

      pizzas[gridr][gridc] = 2

    ElseIf p>=51 and p<=70 then

      pizzas[gridr][gridc] = 3

    ElseIf p>=71 and p<=85 then

      pizzas[gridr][gridc] = 4

    Else

      pizzas[gridr][gridc] = 5

    EndIf

    pizzatime[gridr][gridc] = clockminute + 60 * clockhour

    'build string listing order

    numberorders = numberorders +1

    orderstring = ClockTime + " l "

    If clockhour < 10 Then

      orderstring = " " + orderstring

    EndIf

    If gridr <10 Then

      orderstring = orderstring + " "

    EndIf

    orderstring = orderstring + gridr + " "

    orderstring = orderstring + Text.GetCharacter(gridc +64) + " -> " + pizzas[gridr][gridc] + " pizza(s)"

    order[numberorders] = orderstring

    displayorders()

    'print new order on grid

    deliverygridcolor[gridr][gridc] = "DarkGreen"

    deliverygridtext[gridr][gridc] = pizzas[gridr][gridc]

    drawgridsquare()

    phoneticksmax = Math.GetRandomNumber(7) * clockticksmax

  EndIf

  leavephone:

  'car update - updated each tick

  If carmoving Then

    'replace what is there

    gridr = carr

    gridc = carc

    drawgridsquare()

    'move vertically first

    If deltar <>0 Then

      mileage = mileage +1

      carimage = vcarimage

      If deltar > 0 Then

        carr = carr +1

      Else

        carr = carr -1

      EndIf

      deltar = deliveryr - carr

    Else

      mileage = mileage +1

      carimage = hcarimage

      If deltac > 0 Then

        carc = carc +1

      Else

        carc = carc -1

      EndIf

      delatc = deliveryc - carc

    EndIf

    Shapes.Move(car, deliverygridx[carr][carc], deliverygridy[carr][carc])

    If carr = deliveryr And carc = deliveryc Then

      carmoving = "false"

      If carr = pizzar And carc = pizzac Then

        message1 = "Car at Pizza Parlor:"

        message2 = carr + " " + Text.GetCharacter(carc + 64)

        displaymessage()

        gridr = carr

        gridc = carc

        drawgridsquare()

        pizzasincar = 0

        Shapes.SetText(pizzasincardisplay, pizzasincar)

        Controls.ShowControl(loadbutton)

        loadvisible = "true"

      Else

        'check delivery status

        message1 = "Car at " + carr + " " + Text.GetCharacter(carc + 64)

        If pizzas[carr][carc] = 0 Then

          message2 = "No Pizza Wanted"

          displaymessage()

        Else 

          If pizzas[carr][carc] > pizzasincar Then

            message2 = "Not Enough Pizzas"

            displaymessage()

          Else

            message2 = "Delivered " + pizzas[carr][carc] + " Pizza(s)"

            'see if on time

            If ((clockminute + 60 * clockhour) - pizzatime[carr][carc] <= orderlatetime) Then

              message2 = message2 + ": On-Time"

              TotalSales = TotalSales + pizzas[carr][carc]* netsoldpizza

              pizzasontime = pizzasontime + pizzas[carr][carc]

            Else

              message2 = message2 + ": Late!"

              TotalSales = TotalSales + pizzas[carr][carc]* netlatepizza

              pizzaslate = pizzaslate + pizzas[carr][carc]

            EndIf

            Amount = TotalSales

            formatamount()

            Shapes.SetText(SalesDisplay, AmountText)

            displaymessage()

            pizzasincar = pizzasincar - pizzas[carr][carc]

            Shapes.SetText(pizzasincardisplay, pizzasincar)

            pizzas[carr][carc]=0

            deliverygridcolor[carr][carc] = "White"

            deliverygridtext[carr][carc] =""

            gridr =carr

            gridc = carc

            drawgridsquare()

            'GraphicsWindow.DrawResizedImage(carimage, deliverygridx[carr][carc]+3, deliverygridy[carr][carc]+3,20,20)

            'remove from list

            For itemtoremove = 1 To numberorders

              s = order[itemtoremove]

              r = Text.GetSubText(s,9,2)

              If Text.GetSubText(r,1,1) = " " Then

                r = Text.GetSubTextToEnd(r,2)

              EndIf

              c = Text.GetCharacterCode(Text.GetSubText(s,12,1))-64

              If r = deliveryr And c = deliveryc Then

                Goto foundorder

              EndIf

            EndFor

            foundorder:

            'remove itemtoremove from orders

            removeitem()

          EndIf

        EndIf

      EndIf

    EndIf

  EndIf

EndSub



Sub Buttonclickedsub

  b = Controls.LastClickedButton

  If b = startpausebutton Then

    'start, stop, pause button

    startpausebuttonclick()

  ElseIf b = exitstopbutton then

    'exit stop button

    exitstopbuttonclick()

  elseif b = addpizzabutton then

    'add pizza button

    addpizzabuttonclick()

  elseif b = bakepizzabutton then

    'bake pizza button

    bakepizzabuttonclick()

  elseif b = loadbutton then

    'load car button

    loadbuttonclick()

  EndIf

EndSub



sub startpausebuttonclick

  If gamestatus = "Stopped" Then

    gamestatus = "Playing"

    Controls.SetButtonCaption(startpausebutton, "Pause Game")

    Controls.SetButtonCaption(exitstopbutton, "Stop Game")

    'initialize clock

    clockhour = 6

    clockminute = 0

    ClockTime = "6:00"

    Shapes.SetText(TimeDisplay, clocktime)

    clockticks = 0

    'initialize phone

    phoneticks = 0

    phoneticksmax = Math.GetRandomNumber(7) * clockticksmax

    'new grid

    drawgrid()

    'clear order area

    GraphicsWindow.BrushColor = "White"

    GraphicsWindow.FillRectangle(510,75,190,110)

    numberorders = 0

    'clear pizza oven

    GraphicsWindow.BrushColor = "Blue"

    GraphicsWindow.FillRectangle(507,270,200,100)

    pizzasbaking = 0

    Controls.ShowControl(addpizzabutton)

    addpizzavisible = "true"

    Controls.ShowControl(bakepizzabutton)

    bakepizzavisible = "true"

    pizzasready = pizzasbakingmax

    totalpizzasbaked = pizzasready

    Shapes.SetText(pizzasreadydisplay,pizzasready)

    pizzasincar = 0

    Shapes.SetText(pizzasincardisplay, pizzasincar)

    Controls.ShowControl(loadbutton)

    loadvisible = "true"

    'initialize pizza parlor and car location

    pizzar = 1+Math.GetRandomNumber(18)

    pizzac = 1+Math.GetRandomNumber(18)

    deliverygridcolor[pizzar][pizzac] = "Black"

    deliverygridtext[pizzar][pizzac] = "X"

    pizzas[pizzar][pizzac] = -1

    gridr = pizzar

    gridc = pizzac

    drawgridsquare()

    Shapes.ShowShape(car)

    Shapes.Move(car,deliverygridx[gridr][gridc],deliverygridy[gridr][gridc])

    carr = pizzar

    carc = pizzac

    mileage=0

    message1 = "Car at Pizza Parlor:"

    message2=carr + " " + Text.GetCharacter(carc + 64)

    displaymessage()

    carmoving="false"

    pizzasontime=0

    pizzaslate=0

    misseddeliveries=0

    totalsales=0

    amount=totalsales

    formatamount()

    Shapes.SetText(SalesDisplay, AmountText)

    Timer.Resume()

  ElseIf gamestatus = "Playing" then

    gamestatus = "Paused"

    Timer.Pause()

    Controls.SetButtonCaption(startpausebutton, "Restart Game")

    Controls.HideControl(exitstopbutton)

    Controls.HideControl(addpizzabutton)

    Controls.HideControl(bakepizzabutton)

    Controls.HideControl(loadbutton)

  Else

    'game restarted

    gamestatus = "Playing"

    Controls.SetButtonCaption(startpausebutton, "Pause Game")

    Controls.ShowControl(exitstopbutton)

    'show other buttons if they were showing before

    If addpizzavisible Then

      Controls.ShowControl(addpizzabutton)

    EndIf

    If bakepizzavisible Then

      Controls.ShowControl(bakepizzabutton)

    EndIf

    If loadvisible Then

      Controls.ShowControl(loadbutton)

    EndIf

    Timer.Resume()

  EndIf

EndSub



Sub Exitstopbuttonclick

  If gamestatus = "Playing" Then

    stopgame()

  Else

    Program.End()

  EndIf

EndSub



Sub stopgame

  gamestatus = "Stopped"

  Timer.Pause()

  Controls.SetButtonCaption(startpausebutton, "Start Game")

  Controls.SetButtonCaption(exitstopbutton, "Exit")

  'hide other buttons

  Controls.HideControl(addpizzabutton)

  Controls.HideControl(bakepizzabutton)

  Controls.HideControl(loadbutton)

  ovengoing = "false"

  DrawBlueOven()

  carmoving = "false"

  salesresults()

EndSub



Sub displayorders

  'display oldest five orders

  'print orders - clear first

  GraphicsWindow.BrushColor= "White"

  GraphicsWindow.FillRectangle(510,75,190,110)

  y = 80

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.FontSize = 14

  For k = 1 To 5

    If k <=numberorders Then

      GraphicsWindow.DrawText(525, y, order[k])

      y = y +20

    EndIf

  EndFor

EndSub



Sub addpizzabuttonclick

  pizzasbaking = pizzasbaking +1

  If pizzasbaking <5 Then

    pizzax = 507 + (pizzasbaking -1) *50

    pizzay = 270

  Else

    pizzax = 507 + (pizzasbaking -5)*50

    pizzay = 320

  EndIf

  four = "true"

  GraphicsWindow.DrawResizedImage(pizzaimage, pizzax, pizzay, 50,50)

  If pizzasbaking = pizzasbakingmax Then

    Controls.HideControl(addpizzabutton)

    addpizzavisible = "false"

  EndIf

EndSub 



Sub bakepizzabuttonclick

  If pizzasbaking = 0 Then

    Goto leavebakepizzabutton

  EndIf

  'redraw red oven

  GraphicsWindow.BrushColor = "Red"  

  GraphicsWindow.FillRectangle(505,245,205,170)

  For i = 1 To pizzasbaking 

    If i <5 Then

      pizzax = 507 +(i-1)*50

      pizzay = 270

    Else

      pizzax = 507+(i-5)*50

      pizzay = 320

    EndIf

    GraphicsWindow.DrawResizedImage(pizzaimage, pizzax, pizzay, 50,50)

  EndFor

  Controls.HideControl(addpizzabutton)

  addpizzavisible= "false"

  Controls.HideControl(bakepizzabutton)

  bakepizzavisible = "false"

  hout = clockhour

  mout = clockminute + bakingtime

  If mout >59 Then

    mout = mout -60

    hout = hout +1

  EndIf

  GraphicsWindow.BrushColor = "Yellow"

  GraphicsWindow.FontSize = 20

  oventext = "Pizza(s) Out at " + hout + ":"

  If mout <10 Then

    oventext = oventext + "0"

  EndIf

  oventext = oventext + mout

  GraphicsWindow.DrawText(510,245,oventext)

  bakingminutesleft = bakingtime

  ovengoing = "true"

  leavebakepizzabutton:

EndSub



Sub loadbuttonclick

  If pizzasready = 0 Then

    Goto leaveloadcarbutton

  EndIf

  If pizzasready > pizzasincarmax Then

    pizzasincar = pizzasincar + pizzasincarmax

    pizzasready = pizzasready - pizzasincarmax

  Else

    pizzasincar = pizzasincar + pizzasready

    pizzasready = 0

  EndIf

  Shapes.SetText(pizzasreadydisplay, pizzasready)

  Shapes.SetText(pizzasincardisplay, pizzasincar)

  Controls.HideControl(loadbutton)

  loadvisible = "false"

  leaveloadcarbutton:

EndSub



Sub displaymessage

  'clear first

  GraphicsWindow.BrushColor = "LightYellow"

  GraphicsWindow.FillRectangle(505,190,205,50)

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.FontSize = 14

  GraphicsWindow.DrawText(510,195,message1)

  GraphicsWindow.DrawText(510,215,message2)

EndSub



Sub mousedownsub

  x = GraphicsWindow.MouseX

  y = GraphicsWindow.MouseY

  If gamestatus = "Playing" Then

    If carmoving = "false" And loadvisible = "false" Then

      deliveryr = 1 +Math.Floor((y- deliverygridy[1][1])/ gridw)

      deliveryc = 1+ Math.Floor((x- deliverygridx[1][1])/ gridw)

      If deliveryr<1 Or deliveryr > 20 Or deliveryc <1 Or deliveryc>20 Then

        Goto leavemousedownsub

      EndIf

      deltar = deliveryr - carr

      deltac = deliveryc - carc

      If deltar <> 0 Or deltac <> 0  Then

        message1 = "Car GOING to:"

        message2 = deliveryr + " " + Text.GetCharacter(deliveryc+ 64)

        displaymessage()

        carmoving = "true"

      EndIf

    EndIf

  EndIf

  leavemousedownsub:

EndSub



Sub removeitem

  'remove itemtoremove from orders

  If itemtoremove <> numberorders And numberorders <> 1 Then

    For j = itemtoremove To numberorders -1

      order[j] = order[j+1]

    EndFor

  EndIf

  numberorders = numberorders -1

  displayorders()

EndSub



Sub salesresults

  GraphicsWindow.Hide()

  TextWindow.Show()

  TextWindow.BackgroundColor = "White"

  TextWindow.ForegroundColor = "Black"

  TextWindow.Clear()

  TextWindow.Title = "Pizza Delivery Sales Results"

  TextWindow.CursorLeft = 2

  TextWindow.CursorTop = 2

  TextWindow.WriteLine("Pizza Delivery Sales Results:")

  TextWindow.WriteLine("")

  TextWindow.CursorLeft = 2

  TextWindow.WriteLine("Start Time: 6:00     Stop Time: " + ClockTime)

  TextWindow.CursorLeft = 2

  TextWindow.WriteLine("------------------------------------------")

  TextWindow.WriteLine("")

  'sales

  TextWindow.CursorLeft = 2

  TextWindow.WriteLine("Sales:")

  TextWindow.WriteLine("")

  'on time pizzas

  t = pizzasontime + " On Time Deliveries"

  TextWindow.CursorLeft = 25 - Text.GetLength(t)

  TextWindow.Write(t)

  Amount = pizzasontime * netsoldpizza

  formatamount()

  TextWindow.CursorLeft = 35 - Text.GetLength(AmountText)

  TextWindow.WriteLine(AmountText)

  'total sales

  TextWindow.WriteLine("")

  TextWindow.CursorLeft  =14 

  TextWindow.Write("Total Sales")

  Amount = TotalSales

  formatamount()

  TextWindow.CursorLeft = 35 - Text.GetLength(AmountText)

  TextWindow.WriteLine(AmountText)

  'costs

  TextWindow.CursorLeft = 40

  TextWindow.CursorTop = 7

  TextWindow.WriteLine("Costs:")

  TextWindow.WriteLine("")

  'pizzas baked

  t = totalpizzasbaked + " Pizzas Baked"

  TextWindow.CursorLeft = 60 - Text.GetLength(t)

  TextWindow.Write(t)

  Amount = totalpizzasbaked * pizzacost

  formatamount()

  TextWindow.CursorLeft = 70 - Text.GetLength(AmountText)

  TextWindow.WriteLine(AmountText)

  'mileage

  t = mileage + " Units Driven"

  TextWindow.CursorLeft = 60 - Text.GetLength(t)

  TextWindow.Write(t)

  Amount = mileage * mileagecost

  formatamount()

  TextWindow.CursorLeft = 70 - Text.GetLength(AmountText)

  TextWindow.WriteLine(AmountText)

  'missed deliveries

  t = misseddeliveries + " Missed Deliveries"

  TextWindow.CursorLeft = 60 - Text.GetLength(t)

  TextWindow.Write(t)

  Amount = misseddeliveries * costmissedpizza

  formatamount()

  TextWindow.CursorLeft = 70 - Text.GetLength(AmountText)

  TextWindow.WriteLine(AmountText)

  'total costs

  TextWindow.WriteLine("")

  TextWindow.CursorLeft = 49

  TextWindow.Write("Total Costs")

  costs = totalpizzasbaked * pizzacost + mileage * mileagecost + misseddeliveries * costmissedpizza

  Amount = costs

  formatamount()

  TextWindow.CursorLeft = 70 - Text.GetLength(AmountText)

  TextWindow.WriteLine(AmountText)

  TextWindow.WriteLine("")

  TextWindow.CursorLeft = 2

  TextWindow.WriteLine("----------------------------------------------")

  TextWindow.WriteLine("")

  Amount = TotalSales - costs

  formatamount()

  TextWindow.CursorLeft = 10

  TextWindow.Write("Total Profits: " + AmountText)

  If clockhour > 6 Then

    'only show hourly profits if been selling for more than one hour

    Amount = (TotalSales - costs) / (clockhour - 6 + clockminute / 60)

    formatamount()

    TextWindow.CursorLeft = 40

    TextWindow.Write("Hourly Profits: " + AmountText)

  EndIf

  TextWindow.CursorLeft = 2

  TextWindow.CursorTop = 23

  TextWindow.Write("Press Enter to Return to Pizza Delivery")

  t = TextWindow.Read()

  TextWindow.Hide()

  GraphicsWindow.Show()

EndSub
























































