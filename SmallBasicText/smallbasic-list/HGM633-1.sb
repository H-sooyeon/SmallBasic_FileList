'Snaking - Matthew L. Parets (codingCat) - Sumission for the 25 line challange -- Good luck following the collision test.
' additions by DaveyWavey - yeah, I gave up trying to work out the collisions!

vals = "none= 0 1;len=10;Up=-1 0;Down= 1 0;Left= 0-1;Right= 0 1" + ";target=" + Shapes.AddTriangle(5,0,0,10,10,10) + ";1p=0,0;2p=0,0;3p=0,0;4p=0,0;5p=0,0;6p=0,0;7p=0,0;8p=0,0;9p=0,0;10p=0,0;" + "1=" + Shapes.AddEllipse(10,10) + ";2=" + Shapes.AddEllipse(10,10) + ";3="+ Shapes.AddEllipse(10,10) + ";4="+ Shapes.AddEllipse(10,10) + ";5="+ Shapes.AddEllipse(10,10) + ";6="+ Shapes.AddEllipse(10,10) + ";7="+ Shapes.AddEllipse(10,10) + ";8="+ Shapes.AddEllipse(10,10) + ";9="+ Shapes.AddEllipse(10,10) + ";10="+ Shapes.AddEllipse(10,10) 
' DW - in 'vals' above, I have forced the target to draw in the top left corner and removed redundant indeces: hold, tx, ty
While "true"
  If Math.Remainder(math.Floor(Clock.ElapsedMilliseconds), 5 * 100) = 0 And (cur <> vals["len"]) Then
    vals["len"] = vals["len"] + 1
    'GraphicsWindow.BrushColor=GraphicsWindow.GetRandomColor() ' you could even uncomment this line to add a bit of colour and still stay within 25 lines! DW
    vals[vals["len"]] = Shapes.AddEllipse(10,10)
    ' DW - to get rid of the 'lazy tail' in the top left corner, I have initially set the new snake segment at the same position as the previous tail segment, instead of 0,0...
    vals[vals["len"] + "p"] = vals[(vals["len"]-1)+"p"] '"0,0"
    ' DW - now move the new snake segment its starting position at the same location as the end of it's tail...
    Shapes.Move(vals[vals["len"]], shapes.GetLeft(vals[vals["len"]-1]), shapes.Gettop(vals[vals["len"]-1]))
  EndIf
  cur = Math.Remainder(cur,vals["len"])+1
  Shapes.Move(vals[Math.Remainder(cur,vals["len"])+1],Shapes.GetLeft(vals[cur])+(Text.GetSubText(vals[GraphicsWindow.LastKey],3,2)*10),Shapes.GetTop(vals[cur])+(Text.GetSubText(vals[GraphicsWindow.LastKey],1,2)*10))
  vals[(Math.Remainder(cur,vals["len"])+1) + "p"] = Shapes.GetLeft(vals[Math.Remainder(cur,vals["len"])+1]) + "," + Shapes.GetTop(vals[Math.Remainder(cur,vals["len"])+1])
  If (Text.IsSubText(Text.GetSubText(vals,1,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")-1),Text.GetSubText(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),Text.GetIndexOf(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),"="),Text.GetIndexOf(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),";")-(Text.GetIndexOf(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),"=")-1))) Or Text.IsSubText(Text.GetSubTextToEnd(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),Text.GetIndexOf(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),";")+1),Text.GetSubText(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),Text.GetIndexOf(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),"="),Text.GetIndexOf(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),";")-(Text.GetIndexOf(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),"=")-1)))) And (Shapes.GetLeft(vals[Math.Remainder(cur,vals["len"])+1]) + "," + Shapes.GetTop(vals[Math.Remainder(cur,vals["len"])+1]) <> "0,0") Or (Shapes.GetTop(vals[Math.Remainder(cur,vals["len"])+1]) < 0) Or (Shapes.GetTop(vals[Math.Remainder(cur,vals["len"])+1]) > (GraphicsWindow.Height-10)) Or (Shapes.GetLeft(vals[Math.Remainder(cur,vals["len"])+1]) < 0) Or (Shapes.getleft(vals[Math.Remainder(cur,vals["len"])+1]) > (GraphicsWindow.Width-10)) Then
    GraphicsWindow.FontSize = 200
    GraphicsWindow.DrawText(0,200,"BOOM")
    Program.Delay(1000000)
  ' DW - made this collision check an elseif to save 1 line, and added check for 'len' equalling 10 (when score is zero), which can only happen right at the start, so we can safely assume a 'hit' and force the food target to move from its initial 0,0 position
  elseIf (vals["len"]=10 And (text.GetSubTextToEnd(GraphicsWindow.Title,8))<1) or Text.GetSubText(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),Text.GetIndexOf(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),"="),Text.GetIndexOf(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),";")-(Text.GetIndexOf(Text.GetSubTextToEnd(vals,Text.GetIndexOf(vals,(Math.Remainder(cur,vals["len"])+1) + "p")),"=")-1)) = "=" + Shapes.GetLeft(vals["target"]) + "," + Shapes.GetTop(vals["target"]) + ";" Then
    GraphicsWindow.Title = "Score = " + ((text.GetSubTextToEnd(GraphicsWindow.Title,8) * 1) + (10*vals["len"]))
    Shapes.Move(vals["target"],Math.GetRandomNumber((GraphicsWindow.Width / 10)-1) * 10, Math.GetRandomNumber((GraphicsWindow.Height / 10)-1) * 10)
  EndIf
  GraphicsWindow.Title = "Score = " + ((text.GetSubTextToEnd(GraphicsWindow.Title,8) * 1) + 1)
  While Math.Remainder(math.Floor(Clock.ElapsedMilliseconds),100) <> 0
  EndWhile
EndWhile

