'Window

GraphicsWindow.Hide()

GraphicsWindow.Width = 800

GraphicsWindow.Height = 500

GraphicsWindow.Left = (Desktop.Width - 800) / 2

GraphicsWindow.Top = (Desktop.Height - 574) / 2

GraphicsWindow.CanResize = "False"

GraphicsWindow.Title = "Basic Challenges"

GraphicsWindow.BackgroundColor = GraphicsWindow.GetColorFromRGB(50, 50, 50)

GraphicsWindow.FontBold = "False"

GraphicsWindow.FontName = "Microsoft Sans Serif"

GraphicsWindow.PenWidth = 1



'Variables

CurrentMenu = ""

CountValue = 10

PbZoomLevel = 1.0

LsPbWidth = 0

TwCursorLeft = 0

TwCursorTop = 0

MsgHighlightShown = "False"



'Colors

BasicDark = GraphicsWindow.GetColorFromRGB(50, 50, 50)

TextLightDark = GraphicsWindow.GetColorFromRGB(200, 200, 200)

BackgroundLightDark = GraphicsWindow.GetColorFromRGB(100, 100, 100)

BorderDark = GraphicsWindow.GetColorFromRGB(150, 150, 150)



'Main

GraphicsWindow.Show()

AddLoadingScreen()



'Images

Load_ImgBtnBack = ImageList.LoadImage("https://account.windowsazure.com/Content/5.15.0.82-.307108.160119-1818/aux-pre/images/button-back.png")

AddProgressLsPb()

Load_ImgArrow = ImageList.LoadImage("http://iconizer.net/files/Gloss_Basic_Icons/orig/arrow-up.png")

AddProgressLsPb()

Load_ImgLeftArrow = ImageList.LoadImage("http://www.theozoneradio.com/SeniorProject/img/computer_key_Arrow_Left.png")

AddProgressLsPb()

Load_ImgRightArrow = ImageList.LoadImage("http://www.theozoneradio.com/SeniorProject/img/computer_key_Arrow_Right.png")

AddProgressLsPb()

Load_ImgDice = ImageList.LoadImage("http://cliparts.co/cliparts/rcj/rao/rcjraoqoi.png")

AddProgressLsPb()

Load_ImgWSAD = ImageList.LoadImage("http://s3.amazonaws.com/gifpumper/ui/wasd.png")

AddProgressLsPb()

Load_ImgExit = ImageList.LoadImage("http://iconizer.net/files/realistiK_Reloaded/orig/exit.png")

AddProgressLsPb()

Load_ImgActive = ImageList.LoadImage("http://megaicons.net/static/img/icons_title/64/160/title/0007-tick-icon.png")

AddProgressLsPb()

Load_ImgInactive = ImageList.LoadImage("https://cdn2.iconfinder.com/data/icons/function_icon_set/cancel_48.png")

AddProgressLsPb()

Controls.SetSize(LsProgressB, 498, 6)

Program.Delay(500)

GraphicsWindow.Clear()

AddMainMenu()



'Subroutines - Custom

'********************

'AddLoadingScreen

Sub AddLoadingScreen

  CurrentMenu = "LoadingScreen"

  Load_ImgData = ImageList.LoadImage("http://www.design.ddarsow.com/images/recover.png")

  GraphicsWindow.DrawResizedImage(Load_ImgData, 300, 30, 200, 200)

  GraphicsWindow.PenColor = BorderDark

  GraphicsWindow.BrushColor = BackgroundLightDark

  BorderInfoBox = Shapes.AddRectangle(300, 30)

  Shapes.Move(BorderInfoBox, 250, 252)

  GraphicsWindow.BrushColor = TextLightDark

  LabelInfo = Shapes.AddText("Loading resources")

  Shapes.Move(LabelInfo, 345, 260)

  GraphicsWindow.PenColor = BorderDark

  GraphicsWindow.BrushColor = BackgroundLightDark

  LsPbBack = Shapes.AddRectangle(500, 8)

  Shapes.Move(LsPbBack, 150, 300)

  GraphicsWindow.PenColor = TextLightDark

  GraphicsWindow.BrushColor = TextLightDark

  LsProgressB = Shapes.AddRectangle(0, 6)

  Shapes.Move(LsProgressB, 151, 301)

EndSub



'AddProgressLsPb

Sub AddProgressLsPb

  LsPbWidth = LsPbWidth + 55.5

  Controls.SetSize(LsProgressB, LsPbWidth, 6)

EndSub



'AddMainMenu

Sub AddMainMenu

  CurrentMenu = "MainMenu"

  GraphicsWindow.BackgroundColor = BasicDark

  GraphicsWindow.PenColor = BorderDark

  GraphicsWindow.BrushColor = BackgroundLightDark

  BorderTitle = Shapes.AddRectangle(300, 30)

  Shapes.Move(BorderTitle, 250, 117)

  GraphicsWindow.BrushColor = TextLightDark

  TitleMainMenu = Shapes.AddText("Select a program")

  Shapes.Move(TitleMainMenu, 350, 125)

  GraphicsWindow.BrushColor = "Black"

  For Times = 1 To 4

    BtnMainMenu[Times] = Controls.AddButton("", 300, 150 + Times * 40)

    Controls.SetSize(BtnMainMenu[Times], 200, 25)

  EndFor

  CaptionsBtnMM = "1=Countdown;2=Background color;3=Move X;4=Shapes;"

  For Times = 1 To Array.GetItemCount(CaptionsBtnMM)

    Controls.SetButtonCaption(BtnMainMenu[Times], CaptionsBtnMM[Times])

  EndFor

  BtnExit = Controls.AddButton("", 375, 370)

  Controls.SetSize(BtnExit, 50, 50)

  Shapes.SetOpacity(BtnExit, 0)

  GraphicsWindow.DrawResizedImage(Load_ImgExit, 375, 370, 50, 50)

  GraphicsWindow.BrushColor = TextLightDark

  MmTooltip = Shapes.AddText("Exit")

  Shapes.Move(MmTooltip, 390, 425)

  Shapes.HideShape(MmTooltip)

EndSub



'LoadCountdownSoft

Sub LoadCountdownSoft

  CurrentMenu = "Countdown"

  ImportBtnBack()

  GraphicsWindow.PenColor = BackgroundLightDark

  GraphicsWindow.BrushColor = BasicDark

  PbBackground = Shapes.AddRectangle(800, 7)

  Shapes.Move(PbBackground, 0, 246)

  GraphicsWindow.BrushColor = BackgroundLightDark

  PbCountdown = Shapes.AddRectangle(800, 5)

  Shapes.Move(PbCountdown, 0, 247)

  GraphicsWindow.BrushColor = "LightGreen"

  GraphicsWindow.FontSize = 50

  LabelCount = Shapes.AddText("10")

  Shapes.Move(LabelCount, 385, 180)

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.FontSize = 12

  BtnStartTimer = Controls.AddButton("Start", 350, 280)

  Controls.SetSize(BtnStartTimer, 100, 25)

EndSub



'ResetCountdown

Sub ResetCountdown

  Shapes.SetText(LabelCount, 10)

  Shapes.Zoom(PbCountdown, 1, 1)

  Shapes.ShowShape(PbCountdown)

  CountValue = 10

  PbZoomLevel = 1.0

EndSub



'LoadBackgroundClrSoft

Sub LoadBackgroundClrSoft

  CurrentMenu = "BackgroundColor"

  ImportBtnBack()

  GraphicsWindow.PenColor = "Black"

  For Times = 1 To 17

    GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()

    GraphicsWindow.FillRectangle(80 + Times * 40, 5, 30, 30)

    RectangleColors[Times] = Shapes.AddRectangle(30, 30)

    Shapes.Move(RectangleColors[Times], 80 + Times * 40, 5)

  EndFor

  ImgArrow = Shapes.AddImage(Load_ImgArrow)

  Shapes.Move(ImgArrow, 119, 40)

  ScannedPixel = GraphicsWindow.GetPixel(140, 30)

  GraphicsWindow.BackgroundColor = ScannedPixel

  GraphicsWindow.DrawResizedImage(Load_ImgLeftArrow, 175, 250, 200, 200)

  GraphicsWindow.DrawResizedImage(Load_ImgRightArrow, 425, 250, 200, 200)

  GraphicsWindow.BrushColor = BasicDark

  GraphicsWindow.DrawBoundText(225, 300, 100, "Press the left arrow key to scroll left.")

  GraphicsWindow.DrawBoundText(475, 300, 100, "Press the right arrow key to scroll right.")

  GraphicsWindow.DrawResizedImage(Load_ImgDice, 350, 100, 100, 100)

  Line1 = Shapes.AddRectangle(150, 1)

  Shapes.Move(Line1, 325, 75)

  Line2 = Shapes.AddRectangle(150, 1)

  Shapes.Move(Line2, 325, 225)

  Line3 = Shapes.AddRectangle(1, 150)

  Shapes.Move(Line3, 325, 75)

  Line4 = Shapes.AddRectangle(1, 150)

  Shapes.Move(Line4, 475, 75)

  BtnRollDice = Controls.AddButton("", 325, 75)

  Controls.SetSize(BtnRollDice, 150, 150)

  Shapes.SetOpacity(BtnRollDice, 30)

  GraphicsWindow.PenColor = BorderDark

  GraphicsWindow.BrushColor = BackgroundLightDark

  BackLabelInfo = Shapes.AddRectangle(70, 30)

  Shapes.Move(BackLabelInfo, 45, 5)

  GraphicsWindow.BrushColor = TextLightDark

  LabelInfo = Shapes.AddText("Colors:")

  Shapes.Move(LabelInfo, 60, 13)

EndSub



'LoadMoveAnXSoft

Sub LoadMoveAnXSoft

  CurrentMenu = "MoveAnX"

  ImportBtnBack()

  GraphicsWindow.PenColor = BorderDark

  GraphicsWindow.BrushColor = BackgroundLightDark

  BackImgWSAD = Shapes.AddRectangle(400, 300)

  Shapes.Move(BackImgWSAD, 200, 100)

  ImgWSAD = Shapes.AddImage(Load_ImgWSAD)

  Shapes.Move(ImgWSAD, 250, 150)

  TextWindow.Title = "Move an X"

  TextWindow.Left = 0

  TextWindow.Top = 0

  GraphicsWindow.BrushColor = TextLightDark

  GraphicsWindow.DrawText(265, 80, "Use these keys to move the X in the TextWindow")

  GraphicsWindow.BrushColor = "Black"

  BtnActivateKeys = Controls.AddButton("Activate keys", 325, 410)

  Controls.SetSize(BtnActivateKeys, 150, 25)

  ImgInactive = Shapes.AddImage(Load_ImgInactive)

  Shapes.Move(ImgInactive, 485, 400)

  UpdateXPos()

EndSub



'ActivateWSADKeys

Sub ActivateWSADKeys

  Shapes.Remove(ImgInactive)

  Shapes.SetOpacity(BtnActivateKeys, 50)

  GraphicsWindow.DrawImage(Load_ImgActive, 485, 400)

  Controls.SetButtonCaption(BtnActivateKeys, "Activated")

EndSub



'UpdateXPos

Sub UpdateXPos

  If TwCursorLeft = -1 Then

    TwCursorLeft = 0

    UpdateXPos()

  ElseIf TwCursorTop = -1 Then

    TwCursorTop = 0

    UpdateXPos()

  ElseIf TwCursorLeft = 79 Then

    TwCursorLeft = 78

    UpdateXPos()

  ElseIf TwCursorTop = 299 Then

    TwCursorTop = 288

    UpdateXPos()

  Else

    TextWindow.Clear()

    TextWindow.CursorLeft = TwCursorLeft

    TextWindow.CursorTop = TwCursorTop

    TextWindow.WriteLine("X")

  EndIf

EndSub



'LoadShapesAndFileSoft

Sub LoadShapesAndFileSoft

  CurrentMenu = "ShapesAndFile"

  ResetShapeValues()

  ImportBtnBack()

  GraphicsWindow.BrushColor = "Black"

  TbMain = Controls.AddMultiLineTextBox(0, 40)

  Controls.SetSize(TbMain, 400, 460)

  GraphicsWindow.PenColor = BorderDark

  GraphicsWindow.BrushColor = BackgroundLightDark

  RectangleWorkspace = Shapes.AddRectangle(400, 460)

  Shapes.Move(RectangleWorkspace, 400, 40)

  GraphicsWindow.BrushColor = "Black"

  BtnDefault = Controls.AddButton("Default", 45, 7)

  Controls.SetSize(BtnDefault, 100, 25)

  BtnClear = Controls.AddButton("Clear", 155, 7)

  Controls.SetSize(BtnClear, 100, 25)

  If MsgHighlightShown = "False" Then

    GraphicsWindow.ShowMessage("Highlight effect has been removed from Back button to prevent crash.", "Information")

    MsgHighlightShown = "True"

  EndIf

EndSub



'ResetShapeValues

Sub ResetShapeValues

  DataLine[1] = "#Rectangle"

  DataLine[2] = "Width = 100"

  DataLine[3] = "Height = 100"

  DataLine[4] = "Left = 10"

  DataLine[5] = "Top = 10"

  DataLine[6] = "Pen color = LightGray"

  DataLine[7] = "Brush color = RoyalBlue"

' The following line could be harmful and has been automatically commented.

'   FilePath = File.GetTemporaryFilePath() + "Document.txt"

  For Times = 1 To Array.GetItemCount(DataLine)

' The following line could be harmful and has been automatically commented.

'     File.WriteLine(FilePath, Times, DataLine[Times])

  EndFor

EndSub



'DrawShapesLayout

Sub DrawShapesLayout

  TxtShapes = Controls.GetTextBoxText(TbMain)

  GraphicsWindow.PenColor = BorderDark

  GraphicsWindow.BrushColor = BackgroundLightDark

  RectangleWorkspace = Shapes.AddRectangle(400, 460)

  Shapes.Move(RectangleWorkspace, 400, 40)

  If TxtShapes = "" Then

    GraphicsWindow.ShowMessage("There are no shapes to be drawn.", "Information")

  Else

' The following line could be harmful and has been automatically commented.

'     File.WriteContents(FilePath, TxtShapes)

' The following line could be harmful and has been automatically commented.

'     Shape_Type = Text.GetSubTextToEnd(File.ReadLine(FilePath, 1), 2)

' The following line could be harmful and has been automatically commented.

'     Shape_Width = Text.GetSubTextToEnd(File.ReadLine(FilePath, 2), 9)

' The following line could be harmful and has been automatically commented.

'     Shape_Height = Text.GetSubTextToEnd(File.ReadLine(FilePath, 3), 10)

' The following line could be harmful and has been automatically commented.

'     Shape_Left = Text.GetSubTextToEnd(File.ReadLine(FilePath, 4), 8)

' The following line could be harmful and has been automatically commented.

'     Shape_Top = Text.GetSubTextToEnd(File.ReadLine(FilePath, 5), 7)

' The following line could be harmful and has been automatically commented.

'     Shape_PenColor = Text.GetSubTextToEnd(File.ReadLine(FilePath, 6), 13)

' The following line could be harmful and has been automatically commented.

'     Shape_BrushColor = Text.GetSubTextToEnd(File.ReadLine(FilePath, 7), 15)

    GraphicsWindow.PenColor = Shape_PenColor

    GraphicsWindow.BrushColor = Shape_BrushColor

    If Shape_Type = "Rectangle" Then

      VisibleShape = Shapes.AddRectangle(Shape_Width, Shape_Height)

    ElseIf Shape_Type = "Ellipse" Then

      VisibleShape = Shapes.AddEllipse(Shape_Width, Shape_Height)

    ElseIf Shape_Type = "Triangle" Then

      VisibleShape = Shapes.AddTriangle(0, 100, 75, 0, 150, 100)

      Controls.SetSize(VisibleShape, Shape_Width, Shape_Height)

    EndIf

    If Shape_Left < 1 Or Shape_Left > 400 - Shape_Width Then

      Shapes.Move(VisibleShape, 401, Shape_Top + 40)

    ElseIf Shape_Top < 1 Or Shape_Top > 460 - Shape_Height Then

      Shapes.Move(VisibleShape, Shape_Left + 400, 41)

    ElseIf Shape_Left = 0 Then

      Shapes.Move(VisibleShape, 400, Shape_Top + 40)

    ElseIf Shape_Top = 0 Then

      Shapes.Move(VisibleShape, Shape_Left + 400, 40)

    Else

      Shapes.Move(VisibleShape, Shape_Left + 400, Shape_Top + 40)

    EndIf

  EndIf

EndSub



'ImportBtnBack

Sub ImportBtnBack

  GraphicsWindow.BrushColor = TextLightDark

  EffectImgBtnBack = Shapes.AddEllipse(30, 30)

  Shapes.Move(EffectImgBtnBack, 5, 5)

  Shapes.HideShape(EffectImgBtnBack)

  ImgBtnBack = Shapes.AddImage(Load_ImgBtnBack)

  Shapes.Move(ImgBtnBack, 5, 5)

  BtnBack = Controls.AddButton("", 5, 5)

  Controls.SetSize(BtnBack, 30, 30)

  Shapes.SetOpacity(BtnBack, 0)

EndSub



'Subroutines - System

'********************

'ButtonClicked

Controls.ButtonClicked = ButtonClicked

Sub ButtonClicked

  LastBtn = Controls.LastClickedButton

  If LastBtn = BtnMainMenu[1] Then

    GraphicsWindow.Clear()

    LoadCountdownSoft()

  ElseIf LastBtn = BtnMainMenu[2] Then

    GraphicsWindow.Clear()

    LoadBackgroundClrSoft()

  ElseIf LastBtn = BtnMainMenu[3] Then

    GraphicsWindow.Clear()

    LoadMoveAnXSoft()

  ElseIf LastBtn = BtnMainMenu[4] Then

    GraphicsWindow.Clear()

    LoadShapesAndFileSoft()

  ElseIf LastBtn = BtnExit Then

    Program.End()

  ElseIf LastBtn = BtnStartTimer Then

    If Controls.GetButtonCaption(BtnStartTimer) = "Start" Then

      Controls.SetButtonCaption(BtnStartTimer, "Pause")

      ResetCountdown()

      Timer.Resume()

    ElseIf Controls.GetButtonCaption(BtnStartTimer) = "Resume" Then

      Timer.Resume()

      Controls.SetButtonCaption(BtnStartTimer, "Pause")

    Else

      Timer.Pause()

      Controls.SetButtonCaption(BtnStartTimer, "Resume")

    EndIf

  ElseIf LastBtn = BtnBack Then

    If CurrentMenu = "MoveAnX" Then

      TextWindow.Hide()

      TwCursorLeft = 0

      TwCursorTop = 0

    EndIf

    GraphicsWindow.Clear()

    ResetCountdown()

    Timer.Pause()

    AddMainMenu()

  ElseIf LastBtn = BtnRollDice Then

    Sound.PlayClick()

    For Times = 1 To 17

      GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()

      GraphicsWindow.FillRectangle(80 + Times * 40, 5, 30, 30)

      RectangleColors[Times] = Shapes.AddRectangle(30, 30)

      Shapes.Move(RectangleColors[Times], 80 + Times * 40, 5)

    EndFor

    PointerLeft = Shapes.GetLeft(ImgArrow)

    CurrentPixel = GraphicsWindow.GetPixel(PointerLeft + 15, 30)

    GraphicsWindow.BackgroundColor = CurrentPixel

  ElseIf LastBtn = BtnActivateKeys Then

    ActivateWSADKeys()

  ElseIf LastBtn = BtnDefault Then

    ResetShapeValues()

' The following line could be harmful and has been automatically commented.

'     FileContents = File.ReadContents(FilePath)

    Controls.SetTextBoxText(TbMain, FileContents)

    DrawShapesLayout()

  ElseIf LastBtn = BtnClear Then

    Controls.SetTextBoxText(TbMain, "")

  EndIf

EndSub



'MouseDown

GraphicsWindow.MouseDown = MouseDown

Sub MouseDown

  MouseX = GraphicsWindow.MouseX

  MouseY = GraphicsWindow.MouseY

  If CurrentMenu = "BackgroundColor" Then

    If MouseY > 0 And MouseY < 45 Then

      CurrentPixel = GraphicsWindow.GetPixel(MouseX, MouseY)

      If CurrentPixel = "#000000" Then

      Else

        Sound.PlayClick()

        GraphicsWindow.BackgroundColor = CurrentPixel

        For Times = 140 To 800

          ScannedPixel = GraphicsWindow.GetPixel(Times, 30)

          If ScannedPixel = CurrentPixel Then

            Shapes.Move(ImgArrow, Times - 30, 40)

          EndIf

        EndFor

      EndIf

    EndIf

  EndIf

EndSub



'MouseMove

GraphicsWindow.MouseMove = MouseMove

Sub MouseMove

  MouseX = GraphicsWindow.MouseX

  MouseY = GraphicsWindow.MouseY

  If CurrentMenu = "MainMenu" Then

    If MouseX > 375 And MouseX < 425 And MouseY > 370 And MouseY < 420 Then

      Shapes.ShowShape(MmTooltip)

    Else

      Shapes.HideShape(MmTooltip)

    EndIf

  ElseIf CurrentMenu = "ShapesAndFile" Then

  Else

    If MouseX > 5 And MouseX < 35 And MouseY > 5 And MouseY < 35 Then

      Shapes.ShowShape(EffectImgBtnBack)

    Else

      Shapes.HideShape(EffectImgBtnBack)

    EndIf

  EndIf

EndSub



'KeyDown

GraphicsWindow.KeyDown = KeyDown

Sub KeyDown

  LastKey = GraphicsWindow.LastKey

  If CurrentMenu = "BackgroundColor" Then

    PointerLeft = Shapes.GetLeft(ImgArrow)

    If LastKey = "Left" Then

      If PointerLeft > 140 Then

        Shapes.Move(ImgArrow, PointerLeft - 40, 40)

        CurrentPixel = GraphicsWindow.GetPixel(PointerLeft - 10, 30)

        GraphicsWindow.BackgroundColor = CurrentPixel

      EndIf

    ElseIf LastKey = "Right" Then

      If PointerLeft < 740 Then

        Shapes.Move(ImgArrow, PointerLeft + 40, 40)

        CurrentPixel = GraphicsWindow.GetPixel(PointerLeft + 50, 30)

        GraphicsWindow.BackgroundColor = CurrentPixel

      EndIf

    EndIf

  EndIf

  If CurrentMenu = "MoveAnX" Then

    If LastKey = "D" Then

      TwCursorLeft = TwCursorLeft + 1

      UpdateXPos()

    ElseIf LastKey = "A" Then

      TwCursorLeft = TwCursorLeft - 1

      UpdateXPos()

    ElseIf LastKey = "W" Then

      TwCursorTop = TwCursorTop - 1

      UpdateXPos()

    ElseIf LastKey = "S" Then

      TwCursorTop = TwCursorTop + 1

      UpdateXPos()

    EndIf

    If TwCursorLeft > 0 Or TwCursorTop > 0 Then

      ActivateWSADKeys()

    EndIf

  EndIf

EndSub



'TextTyped

Controls.TextTyped = TextTyped

Sub TextTyped

  DrawShapesLayout()

EndSub





'Timer

Timer.Tick = Tick

Timer.Interval = 1000

Timer.Pause()

Sub Tick

  Sound.PlayClick()

  CountValue = CountValue - 1

  PbZoomLevel = PbZoomLevel - 0.1

  Shapes.SetText(LabelCount, CountValue)

  Shapes.Zoom(PbCountdown, PbZoomLevel, 1)

  If CountValue = 0 Then

    Shapes.HideShape(PbCountdown)

    Controls.SetButtonCaption(BtnStartTimer, "Start")

    Timer.Pause()

  EndIf

EndSub


