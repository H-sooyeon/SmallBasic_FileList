'=======================================
'================SET -UP=================
'=======================================


gw = 720 'Graphics Window Dimensions (all can be changed)
gh = 640
pw = 10  'Paddle Dimensions
ph = 100
bw = 20  'Ball Dimensions
bh = 20
GraphicsWindow.Hide() 'Hides graphics window during set-up
GraphicsWindow.Width = gw
GraphicsWindow.Height = gh

Paddle = Shapes.AddRectangle(pw,ph)
Shapes.Move(Paddle,30,(gh - ph) / 2) 'centres paddle on screen

GraphicsWindow.BrushColor = "Black"

score1 = 0 'Start score at 0
score = Shapes.AddText("Current Score: " + score1) 'puts first score bar on
Shapes.Move(score,(gw - 150),(gh - 50))

Ball = Shapes.AddEllipse(bw,bh)
Shapes.Move(Ball,gw - 100,(gh - bh) / 2) 'centres ball on screen

GraphicsWindow.Show() 'All set up is done

PaddleY = Shapes.GetTop(Paddle)

GraphicsWindow.KeyDown = OnKeyDown



'============================================
'======BALL MOVEMENT========================
'===========================================

BallX = Shapes.GetLeft(Ball)
BallY = Shapes.GetTop(Ball)

Ang = Math.GetRandomNumber(91) + 180 'Generate intial angle in degrees

Angle = Ang * Math.Pi / 180  'Degrees to radians

For i = 1 To Math.Power(2,67)     'Runs loop of ball movement 
BallX = BallX + (Math.Cos(Angle) * 0.8)   'Polar co-ordinates to rectangular co-ordinates
BallY = BallY + (Math.Sin(Angle) * 0.8)

Shapes.Move(Ball,BallX,BallY)
CollisionCheck()
Program.Delay(2)

EndFor

'==============================================
'===========COLLISIONS  SUB======================
'==============================================

Sub CollisionCheck  
  If BallY < 0 Then
    Angle = Angle * -1  'uses polar co-ordinates to show bounces
  EndIf
  
  If BallX < 0 Then
    Angle = Math.pi - Angle
    score1 = score1 - 1
    ScoreUpdate()
   EndIf 
 
 If BallY > (gh - bh) Then
   Angle = Angle * -1 
 EndIf
 
 If BallX > (gw - bw) Then
   Angle = Math.pi - Angle
 EndIf
 
 If BallX > (30 - bw) And BallX < (30 + pw)  Then 'Check if ball is possible to hit paddle
   Hitcheck()
 EndIf
 
EndSub


 Sub Hitcheck ' Checks y co-ordinates to verify a hit
  
  If (BallY + bh) > PaddleY And BallY < (PaddleY + ph) Then 
    Angle = Math.pi - Angle
    score1 = score1 + 1
    ScoreUpdate()
  EndIf
  
EndSub
  

  
  
  '================================================
  '==============CONTROLS SUB======================
  '================================================

Sub OnKeyDown
  



key = GraphicsWindow.LastKey

If key = "W" Or "w" Then
     PaddleY = PaddleY - 18
     Shapes.Move(Paddle,30,PaddleY)
EndIf

If key = "S" Or "s" Then
  PaddleY = PaddleY + 18
  Shapes.Move(Paddle,30,PaddleY)
EndIf
  
EndSub

'===============================================
'================SCORE UPDATE SUB===============
'==============================================


Sub ScoreUpdate  'Updates the score box
  Shapes.Remove(score)
    score = Shapes.AddText("Current Score: " + score1)
    Shapes.Move(score,(gw - 150),(gh - 50))
 EndSub


 
