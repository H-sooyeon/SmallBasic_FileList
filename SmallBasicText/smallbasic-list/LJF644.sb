numAtom = 1000 'Number of atoms
tHalf = 10 'Half life
dt = 0.1 'Time interval to use

'Create the window and atoms
GraphicsWindow.Width = 600
GraphicsWindow.Height = 600
GraphicsWindow.BackgroundColor = "Black"
GraphicsWindow.PenWidth = 0
GraphicsWindow.BrushColor = "DarkKhaki"
For i = 1 To numAtom
  atom[i] = Shapes.AddEllipse(10,10)
  Shapes.Move(atom[i],5+Math.GetRandomNumber(590)-5,5+Math.GetRandomNumber(590)-5)
EndFor

count = 0 'Number of decays so far
time = Clock.ElapsedMilliseconds 'Start time
prob = (1-Math.Power(2.718281828,-Math.NaturalLog(2)*dt/tHalf)) 'Probability of decay in each time interval

While ("True")
  start = Clock.ElapsedMilliseconds
  For i = 1 To numAtom
    'Check all surviving atoms
    If (atom[i] <> "") Then
      If (Math.GetRandomNumber(1/prob+0.5) = 1) Then 'A decay occurs with probability prop, this is 1 in 1/prob (the 0.5 rounds to nearest integer)
        decay()
      EndIf
    EndIf
  EndFor
  'output to the title
  GraphicsWindow.Title = count+" decays in "+0.001*Math.Floor(Clock.ElapsedMilliseconds-time)+" seconds"
  'A delay to keep the time approximately right
  delay = dt*1000 - (Clock.ElapsedMilliseconds-start)
  If (delay > 0) Then
    Program.Delay(delay)
  Else
    TextWindow.WriteLine("Increase dt or reduce numAtom for more realistic results") 'Warning if PC is too slow for model parameters
  EndIf
EndWhile

'Do the decay - we could add particles coming out or other effect here
Sub decay
  Shapes.SetOpacity(atom[i],25)
  atom[i] = ""
  count = count+1
EndSub
