'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

'Train is a simple PC based simulator used for conducting basic

'excersises in directional drilling.





'   Designed and prepared by Angus L Jamieson June 1993

'   Converted to Small Basic by Micheal Lanham December 2010



'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



'INITIALIZATION

bha = 0           'DEFAULT

inclination = 0   'up to date well attitude

direction = 0

ander = 0

spin = 0

ob = 1

wd[1][ 1] = 0

wd[1][2] = 0

wd[1][3] = 0

wd[1][4] = 0

wd[1][5] = 0

wd[1][6] = 0

andrex = 1



GraphicsWindow.Title = "Drilling Simulator"

GraphicsWindow.Width = 1024

GraphicsWindow.Height = 768

GraphicsWindow.CanResize = "false"

GraphicsWindow.Clear()

GraphicsWindow.Show()



debug = "off"



xScale = GraphicsWindow.Width/46.1 '21

yScale = GraphicsWindow.Height/35 '20.5

If xScale > yScale then

  rscale = yScale

else

  rscale = xScale

endif



GraphicsWindow.FontSize = 12 * GraphicsWindow.Height/480 



bStr = "None"

GraphicsWindow.KeyUp = Await



p1 = 3.1415936 / 180    'degrees radians convertor

maxrpm = 200

maxwob = 100            '1000 lbs

MWOB = 0                'CHECK MAX TORQUE DURING FIRST 2 DEGS OF BUILD

maxmud = 200

mud = 0                'initial setting for mud pumps

toolsav = 3             'both MWD and SRG

tf = 0

rotary = 1

Weight = 0

son = 1

startdepth = 615

holedepth = startdepth

rotgear = 1      'DRILL FLOOR UNLOCKED

liftgear = 1     'direction downhole



'assigned variables

BUNG = 0

md = 0

binc = 0

hit = 0



SetColors()

Chars()

Layout()

Gears()



If bha = 0 Then 

  'BhaSetup() 

endif



Sub Await

  bStr = GraphicsWindow.LastKey

endsub



Sub SetColors

  BGColor = GraphicsWindow.GetColorFromRGB(0,0,255)

  FRColor = GraphicsWindow.GetColorFromRGB(255,255,255)

  LFRColor = GraphicsWindow.GetColorFromRGB(128,128,128)

  LBGColor = GraphicsWindow.GetColorFromRGB(64,64,64)

  TXColor = GraphicsWindow.GetColorFromRGB(255,255,255)

  TXSHColor = GraphicsWindow.GetColorFromRGB(64,64,64)

  

  Color0 = GraphicsWindow.GetColorFromRGB(0,0,0)

  Color1 = GraphicsWindow.GetColorFromRGB(0,0,255)

  Color2 = GraphicsWindow.GetColorFromRGB(0,255,0)

  Color3 = GraphicsWindow.GetColorFromRGB(0,255,255) 'CYAN

  Color4 = GraphicsWindow.GetColorFromRGB(170,0,0)

  Color5 = GraphicsWindow.GetColorFromRGB(255,0,255)

  Color7 = GraphicsWindow.GetColorFromRGB(222,222,222)

  Color8 = GraphicsWindow.GetColorFromRGB(128,128,128)

  Color9 = GraphicsWindow.GetColorFromRGB(64,64,255)

  Color10 = GraphicsWindow.GetColorFromRGB(128,255,128)

  Color11 = GraphicsWindow.GetColorFromRGB(100,255,255)

  Color12 = GraphicsWindow.GetColorFromRGB(128,64,64)

  Color13 = GraphicsWindow.GetColorFromRGB(255,100,255)

  Color14 = GraphicsWindow.GetColorFromRGB(255,255,0)

  Color15 = GraphicsWindow.GetColorFromRGB(255,255,255)

  Color16 = GraphicsWindow.GetColorFromRGB(128,128,150)

  Color17 = GraphicsWindow.GetColorFromRGB(64,64,64)

endsub





Sub Layout

  GraphicsWindow.Clear()

  GraphicsWindow.BrushColor = BGColor

  GraphicsWindow.FillRectangle(0,0,GraphicsWindow.Width,GraphicsWindow.Height)

  GraphicsWindow.PenColor = FRColor

  GraphicsWindow.PenWidth = 1

  GraphicsWindow.DrawRectangle(2,2,GraphicsWindow.Width-2,GraphicsWindow.Height-2)

  

  createHandle = "true"

  openWindowStack = "openwindow"

  

  gauges: 

  aStr = "JTS  DRILLING SIMULATOR  H=HELP  ESC=EXIT"

  lx0 = (-8 + 32) * xScale  '-8

  ly0 = (24 - 22.4) * yScale  '22.4

  lx = 0.5 * xScale

  ly = .8 * yScale  

  Label() 

  

  'StartSelect()

  

  r = 4 * rscale

  cx = (-25 + 32) * xScale

  cy = (24 - 18) * yScale

  minv = 0

  maxv = 200

  iv = 10

  Gauge()

  

  aStr = "ROTARY  R.P.M."

  lx0 = (-29 + 32) * xScale 

  ly0 = (24 - 12.1) * yScale 

  lx = 0.6 * xScale '.6

  ly = 1 * yScale '1

  Label()

  

  r = 5.6 * rscale

  cx = (-13.86 + 32) * xScale

  cy = (24 - 17.65) * yScale

  minv = 0

  maxv = 100

  iv = 1

  Gauge()

  

  aStr = "Weight on BIT"

  lx0 = (-17 + 32) * xScale 

  ly0 = (24 - 23) * yScale 

  lx = 0.4 * xScale 

  ly = 0.6 * yScale 

  Label()

  

  r = 4 * rscale

  cx = (-25 + 32) * xScale

  cy = (24 - 5) * yScale

  minv = 0

  maxv = 5000

  iv = 100

  Gauge()

  

  aStr = "DRILL PIPE PSI"

  lx0 = (-29 + 32) * xScale 

  ly0 = (24 - -1) * yScale 

  lx = 0.6 * xScale 

  ly = 1 * yScale 

  Label()

  

  r = 2.5 * rscale

  cx = (-27 + 32) * xScale

  cy = (24 - -6) * yScale

  minv = 0

  maxv = maxmud

  iv = 10

  Gauge()

  

  r = 2.5 * rscale

  cx = (-21.5 + 32) * xScale

  cy = (24 - -6) * yScale

  Gauge()

  

  aStr = "MUD PUMPS S.P.M"

  lx0 = (-29 + 32) * xScale

  ly0 = (24 - -10.5) * yScale

  lx = 0.6 * xScale

  ly = 1 * yScale

  Label()

  

  aStr = "SURVEY DATA"

  lx0 = (-17 + 32) * xScale

  ly0 = (24 - -11) * yScale

  lx = 0.6 * xScale

  ly = 1 * yScale

  Label()

  SURVEY() 

  Box() 

  

endsub



Sub Box

  'DRILL FLOOR BOX

  x0 = -8.5

  y0 = -8.5

  X1 = 8.5

  Y1 = 16.6

  gfxcolor = Color14

  FillRectangleConvert()

  x0 = -8.0

  y0 = -8.0

  X1 = 8.0

  Y1 = 16.1

  gfxcolor = Color0

  FillRectangleConvert()

  

  DY = 4

  x0 = -8.5

  y0 = -8.5

  X1 = -8.0

  Y1 = -8.0

  gfxcolor = Color4

  DrawLineConvert()   

  x0 = -8.0

  y0 = -8.0

  X1 = -8.0

  Y1 = 16.0

  gfxcolor = Color4

  DrawLineConvert() 

  x0 = -8.0

  y0 = 16

  X1 = 8.0

  Y1 = 16

  gfxcolor = Color4

  DrawLineConvert() 

  x0 = 8.0

  y0 = 16

  X1 = 8.5

  Y1 = 16.6

  gfxcolor = Color4

  DrawLineConvert() 

  x0 = 8.5

  y0 = 16.6

  X1 = -8.5

  Y1 = 16.6

  gfxcolor = Color4

  DrawLineConvert() 

  x0 = -8.5

  y0 = 16.6

  X1 = -8.5

  Y1 = -8.5

  gfxcolor = Color4

  DrawLineConvert() 

    

  aStr = "DRILL FLOOR WINDOW"

  lx0 = -5

  ly0 = -9.7

  ly = 1

  lx = 0.6

  ConvertLabel()

  Label()

  

  'stars

  For i = 0 To 50

    X = -8 +  Math.GetRandomNumber(16) '16  * Rnd

    Y = 6 +  Math.GetRandomNumber(10)  '10 * RND

    X = (X + 32) * xScale

    Y = (24 - Y) * yScale

    GraphicsWindow.PenColor = Color15

    GraphicsWindow.DrawLine(x,y,x+.5,y+.5)

    GraphicsWindow.PenColor = Color14

    GraphicsWindow.DrawLine(x-.5,y-.5,x,y)    

  endfor  

  

  x0 = -8

  y0 = -8

  X1 = 8

  Y1 = 6

  gfxcolor = Color2

  FillRectangleConvert()

  

  shadow:  

  x0 = -1.25

  y0 = 0

  X1 = 6

  Y1 = 6

  gfxcolor = Color8

  DrawLineConvert() 

  x0 = 6

  y0 = 6

  X1 = 6.6

  Y1 = 6

  gfxcolor = Color8

  DrawLineConvert() 

  x0 = 6.6

  y0 = 6

  X1 = 0

  Y1 = -1.5

  gfxcolor = Color8

  DrawLineConvert() 

  x0 = 0

  y0 = -1.5

  X1 = -1.25

  Y1 = 0

  gfxcolor = Color8

  DrawLineConvert() 

  x0 = -1.25

  Y0 = 0

  X1 = 6

  Y1 = 6

  X2 = 0

  Y2 = -1.5

  gfxcolor = Color8

  FillTriangleConvert()

  x0 = 0

  Y0 = -1.5

  X1 = 6.6

  Y1 = 6

  X2 = 6

  Y2 = 6

  gfxcolor = Color8

  FillTriangleConvert()



  ARROW:   'save up just now

  GraphicsWindow.PenWidth = 2

  x0 = 0

  y0 = -6.3

  X1 = 0

  Y1 = -5.3

  gfxcolor = Color8

  DrawLineConvert()

  GraphicsWindow.PenWidth = 1

  x0 = 0

  y0 = -6.3

  X1 = 0

  Y1 = -5.3

  gfxcolor = Color15

  DrawLineConvert() 

  GraphicsWindow.PenWidth = 2

  x0 = 0

  y0 = -5.3

  X1 = -1

  Y1 = -5.3

  gfxcolor = Color8

  DrawLineConvert() 

  x0 = -1

  y0 = -5.3

  X1 = 0

  Y1 = -3.3

  gfxcolor = Color8

  DrawLineConvert() 

  x0 = 0

  y0 = -3.3

  X1 = 1

  Y1 = -5.3

  gfxcolor = Color8

  DrawLineConvert() 

  x0 = 1

  y0 = -5.3

  X1 = 0

  Y1 = -5.3

  gfxcolor = Color8

  DrawLineConvert() 

  GraphicsWindow.PenWidth = 1

  x0 = -1

  Y0 = -5.3

  X1 = 1

  Y1 = -5.3

  X2 = 0

  Y2 = -3.3

  gfxcolor = Color15

  FillTriangleConvert()

   

  Y = 6

  For D = 12 To 3 Step -1

    x0 = -8

    y0 = y

    X1 = 8

    Y1 = y

    gfxcolor = Color3

    DrawLineConvert() 

    Y = Y - 9 / D

  endfor  

  

  For i = 0 To 8

    X1 = 2 * i

    Y1 = -8

    If X1 > 8 Then

      Y1 = (X1 - 8) / (i + 0.0001) * 14 - 8

      X1 = 8

    EndIf

    sx1 = X1

    sy1 = y1

    x0 = -sx1

    y0 = sy1

    X1 = -i

    Y1 = 6

    gfxcolor = Color3

    DrawLineConvert()

    x0 = sx1

    y0 = sy1

    X1 = i

    Y1 = 6

    gfxcolor = Color3

    DrawLineConvert()

  EndFor

  x0 = -8

  y0 = -8

  X1 = 8

  Y1 = 16.1

  gfxcolor = Color15

  DrawRectangleConvert()

  

  FLOOR()

  'HOLE()

  DRILL()

  

  aStr = "B.H.A Now Running:         "

  lx0 = 1.4

  ly0 = -6.4

  lx = 0.37

  ly = 0.9

  ConvertLabel()

  Label()

  astr = ""

  If bha = 6 Or (bha = 8 And andrex = 1) Then

    If ander = 1 Then 

      aStr = "F"

    endif

    If ander = 0 Then 

      aStr = "U"

    endif  

  EndIf

  X = 71

  Y = 25

  aStr = bha + "  " + aStr

  gfxcolor = Color1

  BuildTextShapeConvert()

  

  aStr = "BRAKE"

  lx0 = 9

  ly0 = 15

  lx = 0.5

  ly = 0.8

  ConvertLabel()

  Label()

  aStr = "OFF"

  lx0 = 9

  ly0 = 13

  lx = 0.5

  ly = 0.8

  ConvertLabel()

  label1()

  aStr = " ON"

  lx0 = 9

  ly0 = -3

  lx = 0.5

  ly = 0.8

  ConvertLabel()

  label1()



  x0 = 9

  Y0 = -1

  X1 = 11

  Y1 = -1

  X2 = 9

  Y2 = 12

  gfxcolor = Color12

  FillTriangleConvert()



  x0 = 9

  Y0 = 12

  X1 = 11

  Y1 = 12

  X2 = 11

  Y2 = -1

  gfxcolor = Color10

  FillTriangleConvert()



  brake = 1

  L = (1 - brake) * 13 - 1

  Lasthandle = L

  Handle()

  

endsub



sub Handle

  L = (1 - brake) * 13 - 1

  If createHandle = "true" then

    i = 1

    x0 = 8 + .5

    y0 = L 

    X1 = 9

    Y1 = L + .5

    gfxcolor = Color0

    gfxPcolor = Color0

    BuildRectangleShapeConvert()

    Shapes.SetOpacity(shape,50)

    AddHandleShape()

    x0 = 11

    Y0 = L

    X1 = 11

    Y1 = L+.5

    X2 = 12

    Y2 = L

    gfxcolor = Color0

    BuildTriangleShapeConvert()

    Shapes.SetOpacity(shape,50)

    AddHandleShape()

    x0 = 8 

    y0 = L 

    X1 = 8 + .5

    Y1 = L + .5

    gfxcolor = Color0

    gfxPcolor = Color0    

    BuildRectangleShapeConvert()

    Shapes.SetOpacity(shape,50)

    AddHandleShape()

    x0 = 8 

    y0 = L 

    X1 = 8 

    Y1 = L + .5

    gfxcolor = Color0

    BuildLineShapeConvert()

    AddHandleShape()

    x0 = 9 

    y0 = L 

    X1 = 9 + 2*brake

    Y1 = L + .5

    gfxcolor = Color0

    BuildRectangleShapeConvert()

    Shapes.SetOpacity(shape,50)

    AddHandleShape()

    x0 = 9+2*brake 

    y0 = L 

    X1 = 11

    Y1 = L + .5

    gfxcolor = Color2

    BuildRectangleShapeConvert()

    AddHandleShape()

    hp = 13

    x0 = 7 

    y0 = L + .5

    X1 = 11

    Y1 = L + 1

    gfxcolor = Color13

    BuildRectangleShapeConvert()

    AddHandleShape()

    x0 = 11

    Y0 = L + 1

    X1 = 12

    Y1 = L + .5

    X2 = 11

    Y2 = L + .5

    gfxcolor = Color13

    BuildTriangleShapeConvert()

    AddHandleShape()

    x0 = 11

    Y0 = L + .5

    X1 = 12

    Y1 = L + .5

    X2 = 12

    Y2 = L 

    gfxcolor = Color13

    BuildTriangleShapeConvert()

    AddHandleShape()

    x0 = 7 

    y0 = L + .5

    X1 = 7

    Y1 = L + 1

    gfxcolor = Color15

    BuildLineShapeConvert()

    AddHandleShape()

    x0 = 7 

    y0 = L + 1

    X1 = 11

    Y1 = L + 1

    gfxcolor = Color15

    BuildLineShapeConvert()

    AddHandleShape()

    x0 = 11 

    y0 = L + 1

    X1 = 12

    Y1 = L + .5

    gfxcolor = Color15

    BuildLineShapeConvert()

    AddHandleShape()

    createHandle = "false"  

    handleShapeCnt = i  

  endif

    

  L = (1 - brake) * 13 - 1

  ly0 = (24 - -1) * yScale  'starting point

  ly1 = (24 - L) * yScale

  lyMove = (ly1 - ly0) 

  If lyMove <> 0 then

    For i = 1 to handleShapeCnt

      shape = handleShapes[i]["Name"]

      X = handleShapes[i]["Left"]

      Y = handleShapes[i]["Top"] + lyMove

      Shapes.Move(shape,x,y)

    endfor  

   endif

  Lasthandle = L

endsub



Sub AddHandleShape

  handleShapes[i]["Name"] = shape

  handleShapes[i]["Top"] = Shapes.GetTop(shape)

  handleShapes[i]["Left"] = Shapes.GetLeft(shape)

  i = i + 1

endsub



Sub FLOOR



  'SHADOW

  For i = 125 To 40 Step -0.2

    j = i * p1

    X = 5 * Math.Sin(j)

    Y = 2.5 * Math.Cos(j)

    x0 = X

    y0 = Y - 1

    X1 = X + .3

    Y1 = Y - .6

    gfxcolor = Color8

    DrawLineConvert()

  endfor



  For i = 0 To 360 Step .25

    j = i * p1

    X = 5 * Math.Sin(j)

    Y = 2.5 * Math.Cos(j)

    If i = 0 Then 

      x0 = X

      y0 = Y 

      X1 = X 

      Y1 = Y 

      shx = X

      shy = y

      gfxcolor = Color1

      DrawLineConvert()

    endif

    x0 = shx

    y0 = shy 

    X1 = X

    Y1 = Y

    gfxcolor = Color1

    DrawLineConvert()

  endfor

    

  For i = 0 To 38 Step .25

    j = i * p1

    X = 5 * Math.Sin(j)

    Y = 2.55 * Math.Cos(j)

    If i = 0 Then 

      x0 = .95

      y0 = -.15 

      X1 = X 

      Y1 = Y 

      shx = x0

      shy = y0

      gfxcolor = Color17

      DrawLineConvert()

    endif

    x0 = shx

    y0 = shy 

    X1 = X 

    Y1 = Y 

    gfxcolor = Color17

    DrawLineConvert()

  endfor  

  shx = X

  shy = Y

  x0 = shx

  y0 = shy 

  X1 = 1.3 

  Y1 = -.3 

  gfxcolor = Color8

  x0 = 1.3

  y0 = -.3 

  X1 = 0 

  Y1 = 0 

  gfxcolor = Color8

  'DrawLineConvert()

    

  For i = 270 To 90 Step -0.3

    j = i * p1

    X = 5 * Math.Sin(j)

    Y = 2.5 * Math.Cos(j)

    pp = Color4

    If i > 130 Then 

      pp = Color12

    endif

    x0 = x

    y0 = Y 

    X1 = X 

    Y1 = Y-1 

    gfxcolor = pp

    DrawLineConvert()

  EndFor

  

endsub



Sub DRILL

  r = 1.25 

  x0 = r

  y0 = 16 

  X1 = r 

  Y1 = 0 

  gfxcolor = Color1

  'DrawLineConvert()

  shx = r

  shy = 0

  For i = 90 To 270

    x0 = shx

    y0 = 16

    X1 = r * Math.Sin(i * p1) 

    Y1 = 0.5 * r * Math.Cos(i * p1) 

    shx = x1

    shy = y1

    gfxcolor = Color9

    DrawLineConvert() 

  endfor 

endsub







sub StartSelect

  errorSelect:

  x0 = -24 

  y0 = 3

  X1 = -1 

  Y1 = 10.5

  OpenWindow()

  

  QB = 1.16

  B = 2

  a = 9 + B

  x0 = -19.9

  y0 = 18.2-QB*a 

  X1 = -6.1

  Y1 = 19.3-QB*a

  gfxcolor = Color8

  gfxPcolor = Color14

  BuildRectangleShapeConvert() 

  Shapes.SetOpacity(shape,50)

  Stack.PushValue(openWindowStack,shape)

  highlight = shape

  

  gfxcolor = Color13

  X = 22

  Y = 12

  aStr = "Please Select Starting Point"

  BuildTextShapeConvert()

  Stack.PushValue(openWindowStack,shape)

  gfxcolor = Color11

  X = 25

  Y = 14

  aStr = " Previous Status"

  BuildTextShapeConvert()

  Stack.PushValue(openWindowStack,shape)

  X = 25

  Y = 15

  aStr = "      NEW"

  BuildTextShapeConvert()

  Stack.PushValue(openWindowStack,shape)

  

  startsel: 

  if bStr = "None" Then

    Goto startsel    

  endif 

 

  If bStr = "Up" And B <> 1 Then 

    B = B - 1

    hmove = -1.167 * yScale

    X = Shapes.GetLeft(highlight)

    Y = Shapes.GetTop(highlight)+hmove    

    Shapes.Move(highlight,x,y)

  EndIf

  If bStr = "Down" And B <> 2 Then 

    B = B + 1

    hmove = 1.167 * yScale

    X = Shapes.GetLeft(highlight)

    Y = Shapes.GetTop(highlight)+hmove

    Shapes.Move(highlight,x,y)

  endif

  If bStr = "Return" Then

    GoTo accepted3

  endif

  

  GoTo startsel 

  

  accepted3:

  SHUTWINDOW() 

  If stuck = 0 Then 

    SHUTWINDOW()

  endif

  If B = 1 Then                     'recover data

    If Text.GetLength(simStr) < 4 Then

      simStr = "status.sim"

    EndIf

     

     fileText = ""

     line = 1

' The following line could be harmful and has been automatically commented.

'      fileText = File.ReadLine(simStr,line)

     line = line + 1

     If fileText = "" Then

       'error

       GraphicsWindow.ShowMessage("File " + simStr + " cannot be found.","No File")

       Goto errorselect

     endif

     SplitFileCommaString()     

     inclination = split[1]

     direction = split[2]

     holedepth = split[3]

     BD = split[4]

     md = split[5]

     bha = split[6]

     back = split[7]

     toolsav = split[8]

     ob = split[9]

     rotary = split[10]

     spin = split[11]

     rotgear = split[12]

     liftgear = split[13]

     toolorient = split[14]

     tf = split[15]

     startdepth = split[16]

     mud = split[17]

     ander = split[18]

   

     MEASUREDDEPTH = md   

     

    tch: 

    If toolsav = 1 Then 

      surtool = 1 

    Else 

      surtool = 2        'MWD unless SRG only

    endif

    For i = 1 To ob

      For j = 1 To 6

' The following line could be harmful and has been automatically commented.

'         wd[i][j] = File.ReadLine(simStr,line)

        line = line + 1        

      endfor

    endfor  

    

    nobs = ob   ' calculate XYZ

    wd[1][4] = 0

    wd[1][5] = 0

    wd[1][6] = 0

    For ob = 1 To nobs - 1

      'Call SURVEY(wd(), ob)

    EndFor

    ob = nobs

    'GoTo nold1

  Else

    exn = 1

    'GoSub exselect

    If B = 5 Then

        exn = 2

        stuck = 1

        'GoSub exselect

        stuck = B

        simStr = "Stuck" + stuck + ".sim"

        B = 1

        GoTo accepted3

    EndIf

  EndIf

    'GoSub getex



endsub



Sub SHUTWINDOW

  While Stack.GetCount(openWindowStack) > 0

    shape = Stack.PopValue(openWindowStack)

    Shapes.Remove(shape)

  endwhile

endsub



Sub Label

  w = (Text.GetLength(aStr) + 1 ) * lx

  h = 1.5 * ly

  GraphicsWindow.BrushColor = Color0

  GraphicsWindow.FillRectangle(lx0 - .5 * lx + 2, ly0 + 2 - h, w ,  h ) 

  GraphicsWindow.BrushColor = Color8

  GraphicsWindow.FillRectangle(lx0 - .5 * lx, ly0 - h, w, h) 

  shd = 1

  GraphicsWindow.PenWidth = 1.5

  GraphicsWindow.PenColor = Color15

  GraphicsWindow.DrawRectangle(lx0 - .5 * lx, ly0 - h, w, h) 

  GraphicsWindow.PenWidth = 1

  ly0 = ly0 + 0.3 * h - h/2

  label1()

  shd = 0

endsub



Sub ConvertLabel

  lx0 = (lx0 + 32) * xScale

  ly0 = (24 - ly0) * yScale

  lx = lx * xScale

  ly = ly * yScale

endsub





sub label1 

  keeplx0 = lx0

  keeply0 = ly0

  For ofst = shd To 0 Step -1

    If ofst = 0 then

      GraphicsWindow.PenColor = Color15

      GraphicsWindow.PenWidth = ly / 13

    Else

      GraphicsWindow.PenColor = Color0

      GraphicsWindow.PenWidth = ly / 13

    EndIf    

    lx0 = keeplx0

    ly0 = keeply0

    For LABI = 1 To Text.GetLength(aStr) 

      LABC =  Text.GetCharacterCode(Text.GetSubText(aStr, LABI, 1))

      For LABJ = 1 To GH[LABC][1]

        LABJ1 = LABJ * 3

        ch1 = lx * GH[LABC][LABJ1 - 1] / 12

        CH2 = ly * GH[LABC][LABJ1] / 12

        X = lx0 + ch1 + ofst 

        Y = ly0 - CH2 + ofst       

        If GH[LABC][LABJ1 + 1] = 1 Then

          GraphicsWindow.DrawLine(x,y,x,y)   

          oldx = X

          oldy = y

        endif

        

        GraphicsWindow.DrawLine(oldx,oldy,x,y) 

        oldx = X

        oldy = y

      endfor 'LABJ

      lx0 = lx0 + lx

    EndFor 'LABI

  endfor 'ofst

  GraphicsWindow.PenWidth = 1

EndSub



Sub Gauge

  If r = 5.6 Then 

    EXTRA = 19 

  Else 

    EXTRA = 0

  endif

  r1 = r

  X1 = cx + .3 * rscale

  Y1 = cy + .3 * rscale

  gfxcolor = Color0

  FillCircle() 

  X1 = cx

  Y1 = cy

  gfxcolor = Color12

  FillCircle() 

  r1 = .9 * r

  gfxcolor = Color8

  FillCircle()  

  r1 = r

  gfxcolor = Color15

  DrawCircle()

  r1 = 0.9 * r

  gfxcolor = Color1

  DrawCircle()

  r1 = .2 * r

  gfxcolor = Color14

  FillCircle()  

  

  'numbers  

  s = 300 / (maxv - minv)

  c = 0

  For i = minv To maxv + EXTRA Step iv

    labit = 0

    q = 0.06 * r

    If Math.Remainder(c,5) = 0 Then 

      q = 1.5 * q

    EndIf

    If Math.Remainder(c,10) = 0 Then 

      q = 1.5 * q

      labit = 1

    endif

    

    a = (-150 + s * (i - minv)) * p1 'angle

    r1 = 0.86 * r

    r2 = r1 - q

    lp = 14

    

    If i > maxv Then 

      gfxColor = Color12 'lp = 12

    Else

      gfxcolor = Color14

    endif

    GraphicsWindow.PenColor = gfxcolor

    GraphicsWindow.DrawLine(cx + r1 * Math.Sin(a), cy - r1 * Math.Cos(a),cx + r2 * Math.Sin(a), cy - r2 * Math.Cos(a))

    If labit = 1 And i <= maxv Then

      aStr = i

      lx = 0.09 * r

      ly = 0.12 * r

      lx0 = cx + 0.6 * r * Math.Sin(a) - 0.6 * lx * Text.GetLength(aStr)

      ly0 = cy - 0.6 * r * Math.Cos(a) + 0.6 * ly

      Label1()

    endif

    c = c + 1

  endfor

  

  G = G + 1 'gauge counter

  gag[G][1] = r

  gag[G][2] = cx

  gag[G][3] = cy

  gag[G][4] = minv

  gag[G][5] = maxv

  gag[G][6] = 0    'first value

  newval = 0

  Needle() 

endsub



Sub Needle

  gfxColor = color8 ' P = 8

  v = gag[G][6]

  Needpos()

  gfxColor = Color12 'P = 12

  v = newval

  Needpos()

  gag[G][6] = newval

EndSub 



sub Needpos

  a = (-150 + 300 * (v - gag[G][4]) / (gag[G][5] - gag[G][4])) * p1 'angle

  X = gag[G][2]

  Y = gag[G][3]

  r = gag[G][1]

  X1 = X + 0.4 * r * Math.Sin(a)

  Y1 = Y - 0.4 * r * Math.Cos(a)

  X2 = X + 0.22 * r * Math.Sin(a - 0.15)

  Y2 = Y - 0.22 * r * Math.Cos(a - 0.15)

  x3 = X + 0.22 * r * Math.Sin(a + 0.15)

  y3 = Y - 0.22 * r * Math.Cos(a + 0.15)

  GraphicsWindow.PenColor = gfxcolor

  GraphicsWindow.DrawLine(X1,Y1,X2,Y2) 

  GraphicsWindow.DrawLine(x2,y2,x3,y3) 

  GraphicsWindow.DrawLine(x3,y3,x1,y1)  

endsub



sub Gears

  aStr = "ROTARY TABLE"

  lx0 = (-8 + 32) * xScale

  ly0 = (24 - 20) * yScale

  lx = 0.6 * xScale

  ly = 1 * yScale

  Label()

  

  aStr = "UNLK"

  lx0 = (-8 + 32) * xScale

  ly0 = (24 - 18) * yscale

  lx = 0.4 * xscale

  ly = 0.7 * yScale

  Label()

  

  aStr = "LOCK"

  lx0 = (-4 + 32) * xScale

  ly0 = (24 - 18) * yScale

  lx = 0.4 * xScale

  ly = 0.7 * yScale

  Label()

  

  aStr = "DRAWWORKS CLUTCH"

  lx0 = (2 + 32) * xScale

  ly0 = (24 - 20) * yScale

  lx = 0.6 * xScale

  ly = 1 * yScale

  Label()

  

  aStr = "OUT"

  lx0 = (32 + 2) * xScale

  ly0 = (24 - 18) * yScale

  lx = 0.4 * xScale

  ly = 0.7 * yScale

  Label()

  

  aStr = "IN"

  lx0 = (32 + 6) * xScale

  ly0 = (24 - 18) * yScale

  lx = 0.4 * xScale

  ly = 0.7 * yScale

  Label()

  

  r1 = .6 * rscale

  X1 = (32 + -5.5) * xScale

  Y1 = (24 - 18.35) * yScale

  gfxcolor = Color15

  FillCircle() 

  X1 = (32 + -1.5) * xScale

  FillCircle()    

  X1 = (32 + 4.5) * xScale

  FillCircle()  

  X1 = (32 + 8.5) * xScale

  FillCircle()   

  

  Gears1()

endsub



Sub Gears1

  

  gfxcolor = Color10   

  If rotgear = 0 Then 

    gfxcolor = Color0

  endif

  r1 = .5 * rscale

  X1 = (32 + -5.5) * xScale

  Y1 = (24 - 18.35) * yScale

  FillCircle()  

  gfxcolor = Color12 

  If rotgear = 1 Then 

    gfxcolor = Color0

  endif

  X1 = (32 + -1.5) * xScale

  FillCircle()  

  

  gfxcolor = Color10  

  If liftgear = -1 Then 

    gfxcolor = Color0  

  endif

  X1 = (32 + 4.5) * xScale

  FillCircle()  

  gfxcolor = Color12  ' P = 12: 

  If liftgear = 1 Then 

    gfxcolor = Color0

  endif

  X1 = (32 + 8.5) * xScale

  FillCircle()  

endsub



sub SURVEY  

  x0 = -18.5

  y0 = -9

  X1 = -9

  Y1 = 11.5

  gfxcolor = Color14

  FillRectangleConvert()

  x0 = -18

  y0 = -8.5

  X1 = -9.5

  Y1 = 11

  gfxcolor = Color7

  FillRectangleConvert()

  x0 = -18

  y0 = 7

  X1 = -9

  Y1 = 7.5

  gfxcolor = Color14

  FillRectangleConvert()

  x0 = -18

  y0 = 3

  X1 = -9

  Y1 = 3.5

  gfxcolor = Color14

  FillRectangleConvert()

  x0 = -18

  y0 = -1

  X1 = -9

  Y1 = -.5

  gfxcolor = Color14

  FillRectangleConvert()

  x0 = -18

  y0 = -5

  X1 = -9

  Y1 = -4.5

  gfxcolor = Color14

  FillRectangleConvert()



  x0 = -18.5

  y0 = -9

  X1 = -18.4

  Y1 = 11.5

  gfxcolor = Color15

  FillRectangleConvert()

  x0 = -18.5

  y0 = 11.4

  X1 = -9

  Y1 = 11.5

  gfxcolor = Color15

  FillRectangleConvert()



  x0 = -18.5

  y0 = -9

  X1 = -9

  Y1 = -8.9

  gfxcolor = Color4

  FillRectangleConvert()

  x0 = -9.1

  y0 = -9

  X1 = -9

  Y1 = 11.5

  gfxcolor = Color4

  FillRectangleConvert()

  For j = 7.5 To -8.5 Step -4

    x0 = -18.1

    y0 = j 

    X1 = -18

    Y1 = j + 3.5

    gfxcolor = Color4

    FillRectangleConvert()

    x0 = -18

    y0 = j + 3.5

    X1 = -9.5

    Y1 = j + 3.6

    gfxcolor = Color4

    FillRectangleConvert()

    x0 = -18.1

    y0 = j 

    X1 = -9.5

    Y1 = j + .1

    gfxcolor = Color4

    FillRectangleConvert()

    x0 = -9.6

    y0 = j 

    X1 = -9.5

    Y1 = j + 3.5

    gfxcolor = Color4

    FillRectangleConvert()

  endfor

  

  x0 = -16.5

  y0 = 2.22 + 8 

  X1 = -10.5

  Y1 = 2.93 + 8

  gfxcolor = Color1

  FillRectangleConvert()

  aStr = "BIT  Depth"

  lx = 0.5

  ly = 0.5

  lx0 = -16

  ly0 = 10.3

  ConvertLabel()

  label1()

  

  x0 = -16.5

  y0 = 2.22 + 4 

  X1 = -10.5

  Y1 = 2.93 + 4

  gfxcolor = Color1

  FillRectangleConvert()

  aStr = "HOLE Depth"

  lx = 0.5

  ly = 0.5

  lx0 = -16

  ly0 = 6.3

  ConvertLabel()

  label1()

  x0 = -16.5

  y0 = 2.22 

  X1 = -10.5

  Y1 = 2.93 

  gfxcolor = Color1

  FillRectangleConvert()

  aStr = "HOLE Dir'n"

  lx = 0.5

  ly = 0.5

  lx0 = -16

  ly0 = 2.3

  ConvertLabel()

  label1()

  x0 = -16.5

  y0 = 2.22 - 4 

  X1 = -10.5

  Y1 = 2.93 - 4

  gfxcolor = Color1

  FillRectangleConvert()

  aStr = "INCLINAT'n"

  lx = 0.5

  ly = 0.5

  lx0 = -16

  ly0 = -1.7

  ConvertLabel()

  label1()

  x0 = -16.5

  y0 = 2.22 - 8 

  X1 = -10.5

  Y1 = 2.93 - 8

  gfxcolor = Color1

  

  FillRectangleConvert()

  aStr = " TOOLFACE "

  lx = 0.5

  ly = 0.5

  lx0 = -16

  ly0 = -5.7

  ConvertLabel()

  label1()

  

  panel:

  BDDISP()

  MDDISP()

  DIRDISP()

  INCDISP()

  TFDISP()

  

EndSub



sub BDDISP

  If BUNG <= 0 Then 

    BD = md

    nx = -18

    ny = 8

    Value = BD

    keepblank = blank

    blank = 0

    dis()

    blank = keepblank

    x0 = -12.3

    y0 = 8

    X1 = -11.9

    Y1 = 8.4

    gfxcolor = Color0

    FillRectangleConvert()

  endif

EndSub



Sub MDDISP

  nx = -18

  ny = 4

  Value = holedepth

  keepblank = blank

  blank = 0

  dis()

  blank = keepblank

  x0 = -12.3

  y0 = 4

  X1 = -11.9

  Y1 = 4.4

  gfxcolor = Color0

  FillRectangleConvert()

endsub



sub DIRDISP

  nx = -18

  ny = 0

  If bdir < 0 Then

    bdir = bdir + 360

  EndIf

  If bdir > 360 Then 

    bdir = bdir - 360

  endif

  Value = bdir

  dis()

  x0 = -12.3

  y0 = 0

  X1 = -11.9

  Y1 = 0.4

  gfxcolor = Color0

  FillRectangleConvert()

endsub



Sub  INCDISP

  nx = -18

  ny = -4

  Value = binc

  fd = 2

  dis()

  x0 = -12.3

  y0 = -4

  X1 = -11.9

  Y1 = -3.6

  gfxcolor = Color0

  FillRectangleConvert()

endsub



Sub TFDISP

  nx = -18

  ny = -8

  aStr = Math.Round(tf*100) 

  keepblank = blank

  If tf = -99 Then 

    blank = 1

  EndIf    

  Value = tf

  If hit = 1 And tf > 180 Then

    Value = 360 - tf

  endif

  fd = 2

  

  dis()

  

  blank = keepblank

  x0 = -12.3

  y0 = -8

  X1 = -11.9

  Y1 = -7.6

  gfxcolor = Color0

  FillRectangleConvert()

  

  tfc = 11

  tfcStr = "A"

  If hit = 1 Then

    If tf > 180 Then

      tfc = Color12

      tfcStr = "L"

    EndIf      

    If tf <= 180 Then 

      tfc = color10

      tfcStr = "R"

    endif

  EndIf

  

  X = 27

  Y = 26

  aStr = tfcStr  

  gfxcolor = tfc

  BuildTextShapeConvert()

  

Endsub





sub dis

  u = 0



  aStr =  "        " + Math.Round(Value * 100)        

  aStr = Text.GetSubTextToEnd(aStr,text.GetLength(aStr)-6)

  

  If Value < 1 Then 

    aStr =  "        00" + aStr  

    aStr = Text.GetSubTextToEnd(aStr,text.GetLength(aStr)-6)

  endif

  If Value < 0.1 Then 

    aStr =  "        000" + aStr  

    aStr = Text.GetSubTextToEnd(aStr,text.GetLength(aStr)-6)

  endif

  

  dsx = nx + 1.2 * fd

  nx = dsx

  u = 0

  For a = fd + 1 To 7

    A1Str = Text.GetSubText(aStr, a, 1)     

    If A1Str <> " " And u = 0 And a >= fd Then

      x0 = dsx + .1

      y0 = ny 

      x1 = nx

      Y1 = ny + 2

      gfxcolor = Color7

      FillRectangleConvert() 

      u = 1

    EndIf

    i = A1Str

    If blank = 1 Then 

      i = 10

    endif

    If u = 1 Then 

      Digit()      

    endif

    nx = nx + 1.2

    If a = 5 Then 

      nx = nx + 0.3

    endif

  EndFor

  fd = 0

endsub



sub Digit

  x0 = nx + .26

  y0 = ny + 1.86

  X1 = nx + .54

  Y1 = ny + 2

  gfxcolor = L[i][1]

  FillRectangleConvert()

  x0 = nx + .26

  y0 = ny + 1

  X1 = nx + .54

  Y1 = ny + 1.14

  gfxcolor = L[i][2]

  FillRectangleConvert()

  x0 = nx + .26

  y0 = ny 

  X1 = nx + .54

  Y1 = ny + .14

  gfxcolor = L[i][3]

  FillRectangleConvert()

  x0 = nx 

  y0 = ny + 1

  X1 = nx + .14

  Y1 = ny + 2

  gfxcolor = L[i][4]

  FillRectangleConvert()

  x0 = nx 

  y0 = ny 

  X1 = nx + .14

  Y1 = ny + 1

  gfxcolor = L[i][5]

  FillRectangleConvert()

  x0 = nx + .66

  y0 = ny + 1

  X1 = nx + .8

  Y1 = ny + 2

  gfxcolor = L[i][6]

  

  FillRectangleConvert()

  x0 = nx + .66

  y0 = ny 

  X1 = nx + .8

  Y1 = ny + 1

  gfxcolor = L[i][7]

  FillRectangleConvert()

endsub



Sub FillRectangleConvert

  x0 = (x0 + 32) * xScale

  y1 = (24 - y1) * yScale

  w = ((X1 + 32) * xScale) - x0

  h = ((24 - Y0) * yScale) - y1

  If debug = "on" then

    TextWindow.WriteLine(x0 + ", " + y1 + ", " + " ," + w + " ," + h)

  endif

  GraphicsWindow.PenColor = gfxcolor

  GraphicsWindow.BrushColor = gfxcolor

  If w > 0 and h > 0 then

    GraphicsWindow.FillRectangle(x0,y1,w,h)

  Else

    'TextWindow.WriteLine("Application Error, width and/or height on object negative values")

    'TextWindow.WriteLine("    width = " + w + "   height = " + h)     

  endif

endsub



Sub DrawRectangleConvert

  x0 = (x0 + 32) * xScale

  y1 = (24 - y1) * yScale

  w = ((X1 + 32) * xScale) - x0

  h = ((24 - Y0) * yScale) - y1

  If debug = "on" then

    TextWindow.WriteLine(x0 + ", " + y1 + ", " + " ," + w + " ," + h)

  endif

  GraphicsWindow.PenColor = gfxcolor

  If w > 0 and h > 0 then

    GraphicsWindow.DrawRectangle(x0,y1,w,h)

  Else

    'TextWindow.WriteLine("Application Error, width and/or height on object negative values")

    'TextWindow.WriteLine("    width = " + w + "   height = " + h) 

  endif

endsub



sub BuildRectangleShapeConvert

  x0 = (x0 + 32) * xScale

  y1 = (24 - y1) * yScale

  w = ((X1 + 32) * xScale) - x0

  h = ((24 - Y0) * yScale) - y1

  If debug = "on" then

    TextWindow.WriteLine(x0 + ", " + y1 + ", " + " ," + w + " ," + h)

  endif

  If gfxPcolor <> 0 then

    GraphicsWindow.PenColor = gfxPcolor

  else

    GraphicsWindow.PenColor = gfxcolor

  endif

  GraphicsWindow.BrushColor = gfxcolor

  shape = Shapes.AddRectangle(w,h)

  Shapes.Move(shape,x0,y1)

  Shapes.ShowShape(shape)  

endsub



Sub DrawLineConvert

  x0 = (x0 + 32) * xScale

  y0 = (24 - y0) * yScale

  x1 = ((X1 + 32) * xScale) 

  y1 = ((24 - Y1) * yScale) 

  If debug = "on" then

    TextWindow.WriteLine(x0 + ", " + y1 + ", " + " ," + x1 + " ," + y1)

  endif

  GraphicsWindow.PenColor = gfxcolor

  GraphicsWindow.DrawLine(x0,y0,x1,y1)

endsub



sub BuildTextShapeConvert

  x = ((X * 8 / 640 * 46.1)) * xScale

  y = Y * 16 / 480 * 35 * yScale

  If debug = "on" then

    TextWindow.WriteLine(x + ", " + y )

  endif

  GraphicsWindow.PenColor = gfxcolor

  GraphicsWindow.BrushColor = gfxcolor  

  shape = Shapes.AddText(aStr)

  Shapes.Move(shape,x,y)  

  Shapes.ShowShape(shape)

  

endsub



Sub BuildLineShapeConvert

  x0 = (x0 + 32) * xScale

  y0 = (24 - y0) * yScale

  x1 = ((X1 + 32) * xScale) 

  y1 = ((24 - Y1) * yScale) 

  If debug = "on" then

    TextWindow.WriteLine(x0 + ", " + y1 + ", " + " ," + x1 + " ," + y1)

  endif

  GraphicsWindow.PenColor = gfxcolor

  shape = Shapes.AddLine(x0,y0,x1,y1)  

  Shapes.ShowShape(shape)

endsub



Sub FillTriangleConvert

  x0 = (x0 + 32) * xScale

  y0 = (24 - y0) * yScale

  x1 = ((X1 + 32) * xScale) 

  y1 = ((24 - Y1) * yScale) 

  X2 = (X2 + 32) * xScale

  Y2 = (24 - y2) * yScale

  If debug = "on" then

    TextWindow.WriteLine(x0 + ", " + y1 + ", " + " ," + x1 + " ," + y1)

  endif

  GraphicsWindow.PenColor = gfxcolor

  GraphicsWindow.BrushColor = gfxcolor

  GraphicsWindow.FillTriangle(x0,y0,x1,y1,x2,y2)

endsub



Sub BuildTriangleShapeConvert

  x0 = (x0 + 32) * xScale

  y0 = (24 - y0) * yScale

  x1 = ((X1 + 32) * xScale) 

  y1 = ((24 - Y1) * yScale) 

  X2 = (X2 + 32) * xScale

  Y2 = (24 - y2) * yScale

  If debug = "on" then

    TextWindow.WriteLine(x0 + ", " + y1 + ", " + " ," + x1 + " ," + y1)

  endif

  GraphicsWindow.BrushColor = gfxcolor

  GraphicsWindow.PenColor = gfxcolor

  shape = Shapes.AddTriangle(x0,y0,x1,y1,x2,y2)

  Shapes.ShowShape(shape)

endsub



 sub OpenWindow

   wind:

   

  'GET (x0, y0)-(X1, Y1), holder

  sx0 = x0

  sy0 = y0

  sx1 = X1

  sy1 = Y1  

  'window shadow

  x0 = sx0 + 1

  y0 = sy0 

  X1 = sX1

  Y1 = sY1 - 2

  gfxPcolor = Color0

  BuildRectangleShapeConvert() 

  Shapes.SetOpacity(shape,50)

  Stack.PushValue(openWindowStack,shape)

  'TextWindow.WriteLine(y0 + " , " + y1)

  ' Line (x0, y0 + 1)-(X1 - 1, Y1), 0, BF

  x0 = sx0

  y0 = sy0 + 1

  X1 = sX1 -1

  Y1 = sY1

  gfxcolor = Color0

  gfxPcolor = Color14

  BuildRectangleShapeConvert()    

  Stack.PushValue(openWindowStack,shape)

  ' Line (x0, y0 + 1)-(X1 - 1, Y1), 14, B 

endsub





Sub DrawCircle

  GraphicsWindow.PenColor = gfxcolor

  GraphicsWindow.DrawEllipse(X1-r1,Y1-r1,r1*2,r1*2)

endsub



Sub FillCircle 

  GraphicsWindow.BrushColor = gfxcolor

  GraphicsWindow.FillEllipse(X1-r1,Y1-r1,r1*2,r1*2)  

endsub





Sub Chars

  Nums()

  LoadChars()

  Goto bypass

  

  pr = 1

  DEP = 1

  line = 1

  'filePath = Network.DownloadFile("http://www.advgeotech.com/tech21/CHARBANK")

  filepath = Network.DownloadFile("http://www.advgeotech.com/tech21/CHARBANK")

   

  For i = 1 To 128

    GH[i][1] = 0

' The following line could be harmful and has been automatically commented.

'     GH[i][1] = File.ReadLine(filepath,line)

    line = line + 1

    For j = 1 To 3 * GH[i][1]

      GH[i][j+1] = 0

' The following line could be harmful and has been automatically commented.

'       GH[i][j+1] = File.ReadLine(filepath,line)

      line = line + 1

    EndFor

  EndFor  

  bypass:

  'TestChars()

EndSub



sub SplitFileCommaString 

  For splitIndx = 1 to 256

    split[splitIndx] = ""

  endfor

  splitIndx = 1  

  For textIndx = 1 to Text.GetLength(fileText)

    str = Text.GetSubText(fileText,textIndx,1)

    If str = "," Then

      splitIndx = splitIndx + 1      

    Else

      split[splitIndx] = Text.Append(split[splitIndx],str)      

    EndIf        

  endfor  

endsub



Sub LoadChars

  

  chardata[0] = "start"

  chardata[1] = "0,"

  chardata[2] = "0,"

  chardata[3] = "0,"

  chardata[4] = "6,4,8,1,4,0,1,1,4,2,4,8,2,7,4,2,4,0,2,"

  chardata[5] = "0,"

  chardata[6] = "0,"

  chardata[7] = "0,"

  chardata[8] = "0,"

  chardata[9] = "0,"

  chardata[10] = "0,"

  chardata[11] = "0,"

  chardata[12] = "0,"

  chardata[13] = "0,"

  chardata[14] = "0,"

  chardata[15] = "0,"

  chardata[16] = "0,"

  chardata[17] = "0,"

  chardata[18] = "0,"

  chardata[19] = "0,"

  chardata[20] = "0,"

  chardata[21] = "0,"

  chardata[22] = "0,"

  chardata[23] = "0,"

  chardata[24] = "6,4,12,1,0,6,2,8,6,2,4,12,2,4,6,1,4,0,2,"

  chardata[25] = "7,0,6,1,8,6,2,4,0,2,0,6,2,4,6,1,4,12,1,4,6,2,"

  chardata[26] = "5,0,6,1,8,6,2,6,8,2,8,6,2,6,4,2,"

  chardata[27] = "5,8,6,1,0,6,2,2,8,2,2,4,1,0,6,2,"

  chardata[28] = "3,3,8,1,3,3,2,7,3,2,"

  chardata[29] = "12,0,6,1,2,8,2,2,4,1,2,8,2,0,6,1,2,4,2,2,6,1,6,6,2,6,8,2,8,6,2,6,4,2,6,6,2,"

  chardata[30] = "0,"

  chardata[31] = "0,"

  chardata[32] = "0,"

  chardata[33] = "14,3,0,1,3,1,2,4,1,2,4,0,2,3,0,2,3,3,1,2,8,2,2,11,2,3,12,2,4,12,2,5,11,2,5,8,2,4,3,2,3,3,2,"

  chardata[34] = "10,2,12,1,3,12,2,3,10,2,2,9,2,2,12,2,5,12,1,6,12,2,6,10,2,5,9,2,5,12,2,"

  chardata[35] = "8,2,0,1,2,12,2,6,12,1,6,0,2,8,3,1,0,3,2,0,9,1,8,9,2,"

  chardata[36] = "16,0,2,1,2,1,2,6,1,2,8,3,2,8,4,2,6,6,2,2,6,2,0,8,2,0,9,2,2,11,2,6,11,2,8,10,2,4,12,1,4,11,2,4,1,1,4,0,2,"

  chardata[37] = "6,8,12,1,0,0,2,2,9,1,2,9,2,5,3,1,5,3,2,"

  chardata[38] = "12,8,0,1,1,8,2,1,10,2,2,12,2,3,12,2,4,10,2,4,8,2,0,4,2,0,2,2,2,0,2,5,0,2,7,5,2,"

  chardata[39] = "8,2,12,1,5,12,1,2,12,2,2,9,2,5,9,2,5,12,2,5,8,2,3,6,2,"

  chardata[40] = "6,5,0,1,3,2,2,2,4,2,2,8,2,3,10,2,5,12,2,"

  chardata[41] = "6,3,0,1,5,2,2,6,4,2,6,8,2,5,10,2,3,12,2,"

  chardata[42] = "8,1,6,1,7,6,2,1,3,1,7,9,2,2,9,1,7,3,2,4,3,1,4,9,2,"

  chardata[43] = "4,1,6,1,7,6,2,4,3,1,4,9,2,"

  chardata[44] = "7,3,0,1,4,0,2,5,1,2,5,4,2,3,4,2,3,2,2,5,2,2,"

  chardata[45] = "2,1,6,1,7,6,2,"

  chardata[46] = "5,3,0,1,5,0,2,5,2,2,3,2,2,3,0,2,"

  chardata[47] = "2,0,0,1,8,12,2,"

  chardata[48] = "10,2,0,1,0,2,2,0,10,2,2,12,2,6,12,2,2,0,2,6,0,2,8,2,2,8,10,2,6,12,2,"

  chardata[49] = "5,3,10,1,4,12,2,4,0,2,2,0,2,6,0,2,"

  chardata[50] = "8,0,10,1,2,12,2,6,12,2,8,10,2,8,8,2,6,6,2,0,0,2,8,0,2,"

  chardata[51] = "13,0,10,1,2,12,2,6,12,2,8,10,2,8,8,2,6,6,2,4,6,2,6,6,2,8,4,2,8,2,2,6,0,2,2,0,2,0,2,2,"

  chardata[52] = "4,6,0,1,6,12,2,0,3,2,8,3,2,"

  chardata[53] = "9,0,2,1,2,0,2,6,0,2,8,2,2,8,5,2,6,7,2,0,7,2,0,12,2,8,12,2,"

  chardata[54] = "11,0,6,1,6,6,2,8,4,2,8,2,2,6,0,2,2,0,2,0,2,2,0,10,2,2,12,2,6,12,2,8,10,2,"

  chardata[55] = "3,0,12,1,8,12,2,1,0,2,"

  chardata[56] = "16,2,6,1,0,8,2,0,10,2,2,12,2,6,12,2,8,10,2,8,8,2,6,6,2,2,6,2,0,4,2,0,2,2,2,0,2,6,0,2,8,2,2,8,4,2,6,6,2,"

  chardata[57] = "11,0,2,1,2,0,2,6,0,2,8,2,2,8,10,2,6,12,2,2,12,2,0,10,2,0,8,2,2,6,2,8,6,2,"

  chardata[58] = "10,3,2,1,5,2,2,5,4,2,3,4,2,3,2,2,3,6,1,5,6,2,5,8,2,3,8,2,3,6,2,"

  chardata[59] = "13,3,7,1,5,7,1,3,7,2,3,4,2,5,4,2,5,7,2,5,0,1,3,0,2,3,3,2,5,3,2,5,0,2,5,-1,2,4,-2,2,"

  chardata[60] = "3,8,12,1,0,6,2,8,0,2,"

  chardata[61] = "4,2,6,1,6,6,2,2,4,1,6,4,2,"

  chardata[62] = "3,0,12,1,8,6,2,0,0,2,"

  chardata[63] = "10,2,8,1,2,10,2,4,12,2,6,12,2,8,10,2,8,7,2,5,4,2,5,2,2,5,0,1,5,0,2,"

  chardata[64] = "12,4,0,1,2,0,2,1,2,2,1,8,2,3,10,2,5,10,2,7,8,2,7,5,2,4,5,2,4,7,2,5,9,2,5,10,2,"

  chardata[65] = "5,0,0,1,4,12,2,8,0,2,1,3,1,7,3,2,"

  chardata[66] = "12,0,0,1,0,12,2,5,12,2,7,10,2,7,8,2,6,7,2,0,7,2,6,7,1,8,5,2,8,2,2,6,0,2,0,0,2,"

  chardata[67] = "8,8,2,1,6,0,2,2,0,2,0,2,2,0,10,2,2,12,2,6,12,2,8,10,2,"

  chardata[68] = "7,0,0,1,0,12,2,6,12,2,8,10,2,8,2,2,6,0,2,0,0,2,"

  chardata[69] = "6,8,0,1,0,0,2,0,12,2,8,12,2,7,6,1,0,6,2,"

  chardata[70] = "5,0,0,1,0,12,2,8,12,2,7,6,1,0,6,2,"

  chardata[71] = "10,5,5,1,8,5,2,8,2,2,6,0,2,2,0,2,0,2,2,0,10,2,2,12,2,6,12,2,8,10,2,"

  chardata[72] = "6,0,0,1,0,12,2,0,6,2,8,6,2,8,12,2,8,0,2,"

  chardata[73] = "6,3,0,1,5,0,2,4,0,2,4,12,2,3,12,2,5,12,2,"

  chardata[74] = "8,4,12,1,8,12,2,6,12,2,6,2,2,4,0,2,2,0,2,0,2,2,0,4,2,"

  chardata[75] = "6,0,0,1,0,12,2,0,5,2,7,12,2,2,7,2,8,0,2,"

  chardata[76] = "3,0,12,1,0,0,2,8,0,2,"

  chardata[77] = "5,0,0,1,0,12,2,4,0,2,8,12,2,8,0,2,"

  chardata[78] = "4,0,0,1,0,12,2,8,0,2,8,12,2,"

  chardata[79] = "9,2,0,1,0,2,2,0,10,2,2,12,2,6,12,2,8,10,2,8,2,2,6,0,2,2,0,2,"

  chardata[80] = "7,0,0,1,0,12,2,6,12,2,8,10,2,8,8,2,6,6,2,0,6,2,"

  chardata[81] = "11,2,0,1,0,2,2,0,10,2,2,12,2,6,12,2,8,10,2,8,2,2,6,0,2,2,0,2,5,3,1,8,0,2,"

  chardata[82] = "9,0,0,1,0,12,2,6,12,2,8,10,2,8,8,2,6,6,2,0,6,2,5,6,1,8,0,2,"

  chardata[83] = "12,0,2,1,2,0,2,6,0,2,8,2,2,8,4,2,6,6,2,2,6,2,0,8,2,0,10,2,2,12,2,6,12,2,8,10,2,"

  chardata[84] = "4,4,0,1,4,12,2,0,12,2,8,12,2,"

  chardata[85] = "6,0,12,1,0,2,2,2,0,2,6,0,2,8,2,2,8,12,2,"

  chardata[86] = "3,0,12,1,4,0,2,8,12,2,"

  chardata[87] = "5,0,12,1,2,0,2,4,12,2,6,0,2,8,12,2,"

  chardata[88] = "4,0,0,1,8,12,2,0,12,1,8,0,2,"

  chardata[89] = "5,0,12,1,4,6,2,4,0,2,4,6,2,8,12,2,"

  chardata[90] = "4,0,12,1,8,12,2,0,0,2,8,0,2,"

  chardata[91] = "4,5,12,1,4,12,2,4,0,2,5,0,2,"

  chardata[92] = "2,0,12,1,8,0,2,"

  chardata[93] = "4,3,12,1,4,12,2,4,0,2,3,0,2,"

  chardata[94] = "4,4,12,1,2,9,2,4,12,2,6,9,2,"

  chardata[95] = "2,2,-2,1,6,-2,2,"

  chardata[96] = "9,2,12,1,5,12,1,2,12,2,2,9,2,5,9,2,5,12,2,2,9,1,2,8,2,5,6,2,"

  chardata[97] = "13,2,8,1,6,8,2,7,7,2,7,0,2,8,0,2,7,1,1,6,0,2,1,0,2,0,2,2,0,3,2,0,4,2,2,5,2,7,5,2,"

  chardata[98] = "12,0,12,1,1,12,2,1,0,2,0,0,2,1,7,1,3,8,2,6,8,2,8,6,2,8,2,2,6,0,2,3,0,2,1,1,2,"

  chardata[99] = "8,8,6,1,6,8,2,2,8,2,0,6,2,0,2,2,2,0,2,6,0,2,8,2,2,"

  chardata[100] = "12,8,12,1,7,12,2,7,0,2,8,0,2,7,1,1,5,0,2,2,0,2,0,2,2,0,6,2,2,8,2,5,8,2,7,7,2,"

  chardata[101] = "10,0,4,1,8,4,2,8,6,2,6,8,2,2,8,2,0,6,2,0,2,2,2,0,2,6,0,2,8,1,2,"

  chardata[102] = "9,0,8,1,4,8,2,4,0,1,0,0,2,2,0,1,2,10,2,4,12,2,6,12,2,8,10,2,"

  chardata[103] = "14,8,8,1,7,8,2,7,-2,2,5,-4,2,2,-4,2,0,-3,2,7,1,1,5,0,2,2,0,2,0,3,2,0,6,2,2,8,2,5,8,2,7,7,2,"

  chardata[104] = "9,0,12,1,1,12,2,1,0,2,0,0,2,1,6,1,3,8,2,6,8,2,8,6,2,8,0,2,"

  chardata[105] = "4,4,8,1,4,0,2,4,10,1,4,10,2,"

  chardata[106] = "9,8,8,1,7,8,2,7,-2,2,5,-4,2,2,-4,2,0,-3,2,0,0,2,7,10,1,7,10,2,"

  chardata[107] = "8,0,12,1,1,12,2,1,0,2,0,0,2,1,3,1,6,8,2,4,6,1,8,0,2,"

  chardata[108] = "5,3,12,1,4,12,2,4,0,2,2,0,2,6,0,2,"

  chardata[109] = "13,1,0,1,1,8,2,1,7,2,2,8,2,3,8,2,4,7,2,4,6,2,5,6,2,5,7,2,6,8,2,7,8,2,8,7,2,8,0,2,"

  chardata[110] = "9,0,8,1,1,8,2,1,0,2,0,0,2,1,6,1,3,8,2,6,8,2,8,6,2,8,0,2,"

  chardata[111] = "9,6,0,1,2,0,2,0,2,2,0,6,2,2,8,2,6,8,2,8,6,2,8,2,2,6,0,2,"

  chardata[112] = "13,0,9,1,1,8,2,1,-4,2,0,-4,1,2,-4,2,1,7,1,1,6,2,3,8,2,6,8,2,8,6,2,8,2,2,6,0,2,1,0,2,"

  chardata[113] = "16,8,8,1,7,7,2,6,8,2,2,8,2,0,6,2,0,2,2,2,0,2,6,0,2,7,1,2,7,1,2,7,1,2,7,1,2,7,1,2,7,7,2,7,-4,2,8,-3,2,"

  chardata[114] = "8,1,0,1,1,8,2,0,9,2,1,6,1,3,8,2,6,8,2,8,6,2,8,4,2,"

  chardata[115] = "13,8,7,1,7,8,2,3,8,2,2,8,2,0,7,2,0,5,2,2,4,2,6,4,2,8,3,2,8,1,2,6,0,2,1,0,2,0,1,2,"

  chardata[116] = "8,4,12,1,4,2,2,4,1,2,5,0,2,6,0,2,7,1,2,2,7,1,6,7,2,"

  chardata[117] = "8,1,8,1,1,2,2,3,0,2,5,0,2,7,2,2,7,8,2,7,2,1,8,0,2,"

  chardata[118] = "5,1,8,1,1,4,2,4,0,2,7,4,2,7,8,2,"

  chardata[119] = "11,1,8,1,1,1,2,2,0,2,3,0,2,4,1,2,4,4,2,4,1,2,5,0,2,6,0,2,7,1,2,7,8,2,"

  chardata[120] = "12,0,8,1,2,8,2,1,8,2,7,0,2,6,0,2,8,0,2,6,8,1,8,8,2,7,8,2,1,0,2,0,0,2,2,0,2,"

  chardata[121] = "10,0,8,1,0,2,2,2,0,2,6,0,2,8,2,2,8,8,2,8,-2,2,6,-4,2,3,-4,2,2,-4,2,"

  chardata[122] = "6,0,7,1,1,8,2,8,8,2,0,0,2,7,0,2,8,1,2,"

  chardata[123] = "9,6,11,1,5,11,2,4,10,2,4,6,2,3,5,2,4,4,2,4,1,2,5,0,2,6,0,2,"

  chardata[124] = "11,3,12,1,4,12,1,3,12,2,3,9,2,4,9,2,4,12,2,3,7,1,4,7,2,4,4,2,3,4,2,3,7,2,"

  chardata[125] = "9,3,11,1,4,11,2,5,10,2,5,6,2,6,5,2,5,4,2,5,1,2,4,0,2,3,0,2,"

  chardata[126] = "9,3,12,1,4,12,2,5,11,2,5,9,2,4,8,2,3,8,2,2,9,2,2,11,2,3,12,2,"

  chardata[127] = "6,4,6,1,2,3,2,2,0,2,6,0,2,6,3,2,4,6,2,"

  chardata[128] = "0,"



For i = 1 To 128

  fileText = ""

    fileText = chardata[i]

    SplitFileCommaString()

    GH[i][1] = split[1]

    'TextWindow.Write(fileText + " = " + GH[i][1] + ",")

    temp = 3 * GH[i][1]

    'TextWindow.Write("(" + temp + ")")

    For j = 2 To 3 * GH[i][1]

      GH[i][j] = split[j]

      'TextWindow.Write(GH[i][j] + ",")

    EndFor    

    'TextWindow.WriteLine("("+j+")")

  EndFor   

    

EndSub







Sub TestChars

  'test input/output for Chars

  For i = 1 To 128

    TextWindow.WriteLine(GH[i][1])

    For j = 1 To 3

      TextWindow.WriteLine(GH[i][j+1])

    EndFor

  EndFor 

EndSub



sub Nums

  Data[0] = "1711111"

  Data[1] = "7777711"

  Data[2] = "1117117"

  Data[3] = "1117711"

  Data[4] = "7171711"

  Data[5] = "1111771"

  Data[6] = "7111171"

  Data[7] = "1777711"

  Data[8] = "1111111"

  Data[9] = "1111711"

  Data[10] = "7777777"

  For i = 0 To 10

    'TextWindow.WriteLine(" ")

    For j = 1 To 7

      aStr = Text.GetSubText(Data[i],j,1)

      If aStr = "1" Then

        L[i][j] = Color1

      ElseIf aStr = "7" then

        L[i][j] = Color7

      EndIf   

      'TextWindow.Write(L[i][j])

    EndFor

  EndFor

endsub


