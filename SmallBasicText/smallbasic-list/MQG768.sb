'Safecracker Program
xv = 0
yv = 0
accel = 0.5
yv2 = 0
accel2 = 0
falling = "false"
TextWindow.WriteLine("You must unlock every number before you can use it.")
TextWindow.WriteLine("Each number is unlocked by playing a minigame when you press its key.")
TextWindow.WriteLine("To win you must survive on endurance and not get hit.")
TextWindow.WriteLine("It may take you multiple tries to find the strategy to win.")
TextWindow.WriteLine("The minigames are generally hard as well, so good luck!")
TextWindow.Pause()
TextWindow.Hide()
start:
GraphicsWindow.Clear()
For i = 1 To 9
  locked[i] = "true"
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FontSize = 16
  numtext[i] = Shapes.AddText(i)
  lockpic[i] = Shapes.AddImage("D:\lock.png")
  Shapes.Move(numtext[i], 360 + 60 * i, 330) 
  Shapes.Move(lockpic[i], 300 + 60 * i, 300)
EndFor
mg = ""
InitializeProgram()
Sub InitializeProgram
  'setup graphics window
  GraphicsWindow.Width = 1050
  GraphicsWindow.Height = 400
  GraphicsWindow.CanResize = "false"
  GraphicsWindow.BackgroundColor = "Black"
  'Draw Bank Safe
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FillRectangle(0, 0, 310, 400)
  GraphicsWindow.BrushColor = "LightGray"
  GraphicsWindow.FillRectangle(25, 25, 260, 350)
  GraphicsWindow.BrushColor = "Gray"
  GraphicsWindow.FillRectangle(50, 50, 210, 300)
  GraphicsWindow.PenWidth = 2
  GraphicsWindow.PenColor = "Black"
  GraphicsWindow.DrawRectangle(25, 25, 260, 350)
  GraphicsWindow.DrawRectangle(50, 50, 210, 300)
  GraphicsWindow.DrawLine(25, 25, 50, 50)
  GraphicsWindow.DrawLine(285, 25, 260, 50)
  GraphicsWindow.DrawLine(285, 375, 260, 350)
  GraphicsWindow.DrawLine(25, 375, 50, 350)
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FontBold = "false"
  GraphicsWindow.FontSize = 48
  GraphicsWindow.DrawText(95, 50, "BANK")
  'default options
  numberdigits = 2
  GraphicsWindow.Title = "Safecracker - " + numberdigits + " Digits in Combination"
  cleardigits()
  'results data
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FontSize = 20
  GraphicsWindow.DrawText(330, 10, "Results:")
  'define buttons
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.FontSize = 16
  StartStopButton = Controls.AddButton("Start Game", 320, 360)
  OptionsButton = Controls.AddButton("Change Options", 420, 360)
  ExitButton = Controls.AddButton("Exit", 550, 360)
  GameStatus = "Stopped"
  Controls.ButtonClicked = ButtonClickedSub
  GraphicsWindow.KeyDown = KeyDownSub
  GraphicsWindow.KeyUp = KeyUpSub
EndSub
While (GameStatus = "Stopped")
EndWhile
Sound.Play("D:\boss.mp3")
While (GameStatus = "Playing")
  If mg <> "" Then
    If mg = "Game1" Then
      Game1()
    ElseIf mg = "Game2" Then
      Game2()
    ElseIf mg = "Game3" Then
      Game3()  
    ElseIf mg = "Game4" Then
      Game4()  
    ElseIf mg = "Game5" Then
      Game5()  
    ElseIf mg = "Game6" Then
      Game6()
    ElseIf mg = "Game7" Then
      Game7()     
    ElseIf mg = "Game8" Then
      Game8()   
    ElseIf mg = "Game9" Then
      Game9()    
    EndIf
  EndIf  
  mg = ""
EndWhile
Sound.Stop("D:\boss.mp3")
Goto start
Sub ClearDigits
  For i = 1 To numberdigits
    GraphicsWindow.BrushColor = "White"
    GraphicsWindow.FillRectangle(60 + (i - 1) * 50, 120, 40, 60)
    GraphicsWindow.PenWidth = 1
    GraphicsWindow.PenColor = "Black"
    GraphicsWindow.DrawRectangle(60 + (i - 1) * 50, 120, 40, 60)
  EndFor
EndSub
Sub ButtonClickedSub
  b = Controls.LastClickedButton
  If GameStatus = "Stopped" Then
    If b = ExitButton Then
      Program.End()
    ElseIf b = OptionsButton then
      setoptions()
    ElseIf b = StartStopButton then
      startgame()
    EndIf
  ElseIf GameStatus = "Playing" then
    If b = StartStopButton then
      'stop program
      stopgame()
    EndIf
  EndIf
EndSub
Sub Game1
  GraphicsWindow.Width = 400
  GraphicsWindow.Height = 400
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "Black"
  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  For i = GraphicsWindow.Height To 0 Step -1
    Shapes.Move(bg,0,i)
    Program.Delay(1)
  EndFor  
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 10
  border = Shapes.AddRectangle(300,300)
  Shapes.Move(border, 50, 50)
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Red"
  For i = 1 To 128
    knife[i] = Shapes.AddRectangle(10,160)
    Shapes.Move(knife[i], 60+Math.GetRandomNumber(270), -300 + Math.Floor((i-1)/4)*-225)
  EndFor  
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FontSize = 64
  num1 = Shapes.AddText("1")
  Shapes.Move(num1, GraphicsWindow.Width/2 - 32, -7000)
  GraphicsWindow.BrushColor = "Blue"
  player = Shapes.AddRectangle(20,20)
  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)
  mgPlaying = "true"
  While mgPlaying = "true"
    rmove()
    kmove()
    Program.Delay(5)
  EndWhile  
  For i = 1 To 128
    Shapes.Remove(knife[i])
  EndFor 
  Shapes.Remove(num1)
  Shapes.Remove(player)
  Shapes.Remove(border)
  Shapes.Remove(bg)
  GraphicsWindow.Width = 1050
  GraphicsWindow.Height = 400
EndSub  


right = 0
left = 0
down = 0
up = 0
slow = 1
Sub rmove
  If (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 320) And (Shapes.GetTop(player) + down - up >= 60) And (Shapes.GetTop(player) + down - up <= 320) Then 
    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player) + down - up)
  ElseIf (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 320) Then
    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player))  
  ElseIf (Shapes.GetTop(player) + down - up >= 60) And (Shapes.GetTop(player) + down - up <= 320) Then
    Shapes.Move(player,Shapes.GetLeft(player),Shapes.GetTop(player) + down - up)  
  EndIf  
EndSub 
Sub kmove
  For i = 1 To 128 
    Shapes.Move(knife[i], Shapes.GetLeft(knife[i]), Shapes.GetTop(knife[i]) + 3)
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(knife[i]) + 10) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(knife[i])) And (Shapes.GetTop(player) <= Shapes.GetTop(knife[i]) + 160) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(knife[i])) Then
      mgPlaying = "false"
      i = 128
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf  
  EndFor  
  Shapes.Move(num1, Shapes.GetLeft(num1), Shapes.GetTop(num1) + 3)
  If Shapes.GetTop(num1) > GraphicsWindow.Height Then
    mgPlaying = "false"
    locked[1] = "false"
    Shapes.Remove(lockpic[1])
  EndIf  
EndSub  

Sub Game2
  GraphicsWindow.Width = 800
  GraphicsWindow.Height = 400
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "Black"
  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  For i = GraphicsWindow.Height To 0 Step -1
    Shapes.Move(bg,0,i)
    Program.Delay(1)
  EndFor  
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 10
  border = Shapes.AddRectangle(700,300)
  Shapes.Move(border, 50, 50)
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Red"
  For i = 1 To 64
    glove[i] = Shapes.AddRectangle(50,50)
    Shapes.Move(glove[i], 1600 + i*150, 60+Math.GetRandomNumber(230))
  EndFor  
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.FontSize = 64
  num2 = Shapes.AddText("2")
  Shapes.Move(num2, 11200, (GraphicsWindow.Height/2) - 32)
  GraphicsWindow.BrushColor = "Blue"
  player = Shapes.AddRectangle(20,20)
  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)
  mgPlaying = "true"
  While mgPlaying = "true"
    rmove2()
    gmove()
    Program.Delay(5)
  EndWhile  
  For i = 1 To 64
    Shapes.Remove(glove[i])
  EndFor 
  Shapes.Remove(num2)
  Shapes.Remove(player)
  Shapes.Remove(border)
  Shapes.Remove(bg)
  GraphicsWindow.Width = 1050
  GraphicsWindow.Height = 400
EndSub  

Sub rmove2
  If (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 720) And (Shapes.GetTop(player) + down - up >= 60) And (Shapes.GetTop(player) + down - up <= 320) Then 
    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player) + down - up)
  ElseIf (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 720) Then
    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player))  
  ElseIf (Shapes.GetTop(player) + down - up >= 60) And (Shapes.GetTop(player) + down - up <= 320) Then
    Shapes.Move(player,Shapes.GetLeft(player),Shapes.GetTop(player) + down - up)  
  EndIf  
EndSub 

Sub gmove
  For i = 1 To 64 
    Shapes.Move(glove[i], Shapes.GetLeft(glove[i]) - 5, Shapes.GetTop(glove[i]))
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(glove[i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(glove[i])) And (Shapes.GetTop(player) <= Shapes.GetTop(glove[i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(glove[i])) Then
      mgPlaying = "false"
      i = 64
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf  
  EndFor  
  Shapes.Move(num2, Shapes.GetLeft(num2) - 5, Shapes.GetTop(num2))
  If Shapes.GetLeft(num2) < GraphicsWindow.Width Then
    mgPlaying = "false"
    locked[2] = "false"
    Shapes.Remove(lockpic[2])
  EndIf  
EndSub

Sub Game3
  speed = 1
  GraphicsWindow.Width = 800
  GraphicsWindow.Height = 400
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "Black"
  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  For i = GraphicsWindow.Height To 0 Step -1
    Shapes.Move(bg,0,i)
    Program.Delay(1)
  EndFor  
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 10
  border = Shapes.AddRectangle(700,300)
  Shapes.Move(border, 50, 50)
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Purple"
  l1 = Shapes.AddRectangle(680,10)
  Shapes.Move(l1, 60, 60 + 280/4 - 5)
  l2 = Shapes.AddRectangle(680,10)
  Shapes.Move(l2, 60, 60 + 280/2 - 5)
  l3 = Shapes.AddRectangle(680,10)
  Shapes.Move(l3, 60, 60 + (280*3)/4 - 5)
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Red"
  For i = 1 To 32
    wall[i] = Shapes.AddRectangle(110,110)
    Shapes.Move(wall[i], 1600 + i*660, 60 + (280*Math.GetRandomNumber(3))/4 - 55)
  EndFor  
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.FontSize = 64
  num3 = Shapes.AddText("3")
  Shapes.Move(num3, 22720, (GraphicsWindow.Height/2) - 32)
  GraphicsWindow.BrushColor = "Blue"
  player = Shapes.AddRectangle(20,20)
  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)
  mgPlaying = "true"
  While mgPlaying = "true"
    rmove3()
    wmove()
    speed = speed + 0.003
    Program.Delay(5)
  EndWhile  
  For i = 1 To 32
    Shapes.Remove(wall[i])
  EndFor 
  Shapes.Remove(num3)
  Shapes.Remove(player)
  Shapes.Remove(border)
  Shapes.Remove(bg)
  Shapes.Remove(l1)
  Shapes.Remove(l2)
  Shapes.Remove(l3)
  GraphicsWindow.Width = 1050
  GraphicsWindow.Height = 400
EndSub

Sub wmove
  For i = 1 To 32
    Shapes.Move(wall[i], Shapes.GetLeft(wall[i]) - speed, Shapes.GetTop(wall[i]))
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(wall[i]) + 110) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(wall[i])) And (Shapes.GetTop(player) <= Shapes.GetTop(wall[i]) + 110) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(wall[i])) Then
      mgPlaying = "false"
      i = 32
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf  
  EndFor
  Shapes.Move(num3, Shapes.GetLeft(num3) - speed, Shapes.GetTop(num3)) 
  If Shapes.GetLeft(num3) < GraphicsWindow.Width Then
    mgPlaying = "false"
    locked[3] = "false"
    Shapes.Remove(lockpic[3])
  EndIf    
EndSub

Sub rmove3
  If (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 720) Then
    Shapes.Move(player,Shapes.GetLeft(player) + right - left,60 + 280/2 + ((280/4)*down/2) - ((280/4)*up/2) - 10)  
  EndIf  
EndSub

Sub Game4
  GraphicsWindow.Width = 400
  GraphicsWindow.Height = 400
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "Black"
  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  For i = GraphicsWindow.Height To 0 Step -1
    Shapes.Move(bg,0,i)
    Program.Delay(1)
  EndFor  
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 10
  border = Shapes.AddRectangle(300,300)
  Shapes.Move(border, 50, 50)
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Red"
  For i = 1 To 32
    firespeedx[1][i] = Math.GetRandomNumber(2)
    firespeedy[1][i] = Math.GetRandomNumber(2)
    fire[1][i] = Shapes.AddRectangle(20,20)
    Shapes.Move(fire[1][i], -200 - Math.GetRandomNumber(100) - 40*i, -200 - Math.GetRandomNumber(100) - 40*i)
  EndFor
  For i = 1 To 32
    firespeedx[2][i] = Math.GetRandomNumber(2)
    firespeedy[2][i] = Math.GetRandomNumber(2)
    fire[2][i] = Shapes.AddRectangle(20,20)
    Shapes.Move(fire[2][i], 600 + Math.GetRandomNumber(100) + 40*i, -200 - Math.GetRandomNumber(100) - 40*i)
  EndFor 
  For i = 1 To 32
    firespeedx[3][i] = Math.GetRandomNumber(2)
    firespeedy[3][i] = Math.GetRandomNumber(2)
    fire[3][i] = Shapes.AddRectangle(20,20)
    Shapes.Move(fire[3][i], -200 - Math.GetRandomNumber(100) - 40*i, 600 + Math.GetRandomNumber(100) + 40*i)
  EndFor
  For i = 1 To 32
    firespeedx[4][i] = Math.GetRandomNumber(2)
    firespeedy[4][i] = Math.GetRandomNumber(2)
    fire[4][i] = Shapes.AddRectangle(20,20)
    Shapes.Move(fire[4][i], 600 + Math.GetRandomNumber(100) + 40*i, 600 + Math.GetRandomNumber(100) + 40*i)
  EndFor
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FontSize = 64
  num4 = Shapes.AddText("4")
  Shapes.Move(num4, GraphicsWindow.Width/2 - 32, -3000)
  GraphicsWindow.BrushColor = "Blue"
  player = Shapes.AddRectangle(20,20)
  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)
  mgPlaying = "true"
  While mgPlaying = "true"
    rmove()
    fmove()
    Program.Delay(5)
  EndWhile  
  For i = 1 To 32
    Shapes.Remove(fire[1][i])
    Shapes.Remove(fire[2][i])
    Shapes.Remove(fire[3][i])
    Shapes.Remove(fire[4][i])
  EndFor 
  Shapes.Remove(num4)
  Shapes.Remove(player)
  Shapes.Remove(border)
  Shapes.Remove(bg)
  GraphicsWindow.Width = 1050
  GraphicsWindow.Height = 400
EndSub  

Sub fmove
  For i = 1 To 32
    Shapes.Move(fire[1][i], Shapes.GetLeft(fire[1][i]) + firespeedx[1][i], Shapes.GetTop(fire[1][i]) + firespeedy[1][i])
    Shapes.Move(fire[2][i], Shapes.GetLeft(fire[2][i]) - firespeedx[2][i], Shapes.GetTop(fire[2][i]) + firespeedy[2][i])
    Shapes.Move(fire[3][i], Shapes.GetLeft(fire[3][i]) + firespeedx[3][i], Shapes.GetTop(fire[3][i]) - firespeedy[3][i])
    Shapes.Move(fire[4][i], Shapes.GetLeft(fire[4][i]) - firespeedx[4][i], Shapes.GetTop(fire[4][i]) - firespeedy[4][i])
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(fire[1][i]) + 20) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(fire[1][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(fire[1][i]) + 20) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(fire[1][i])) Then
      mgPlaying = "false"
      i = 32
      Sound.PlayClick()
      Program.Delay(1000)     
    EndIf 
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(fire[2][i]) + 20) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(fire[2][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(fire[2][i]) + 20) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(fire[2][i])) Then
      mgPlaying = "false"
      i = 32
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(fire[3][i]) + 20) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(fire[3][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(fire[3][i]) + 20) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(fire[3][i])) Then
      mgPlaying = "false"
      i = 32
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(fire[4][i]) + 20) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(fire[4][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(fire[4][i]) + 20) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(fire[4][i])) Then
      mgPlaying = "false"
      i = 32
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf
  EndFor 
  Shapes.Move(num4, Shapes.GetLeft(num4), Shapes.GetTop(num4) + 2)
  If Shapes.GetTop(num4) > GraphicsWindow.Height Then
    mgPlaying = "false"
    locked[4] = "false"
    Shapes.Remove(lockpic[4])
  EndIf  
EndSub  

Sub Game5
  GraphicsWindow.Width = 400
  GraphicsWindow.Height = 400
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "Black"
  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  For i = GraphicsWindow.Height To 0 Step -1
    Shapes.Move(bg,0,i)
    Program.Delay(1)
  EndFor  
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 10
  border = Shapes.AddRectangle(300,300)
  Shapes.Move(border, 50, 50)
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Green"
  For i = 1 To 25
    block[i] = Shapes.AddRectangle(40,40)
    Shapes.Move(block[i], (i-1)*80 - Math.Floor((i-1)/5)*400, Math.Floor((i-1)/5)*80)
  EndFor  
  GraphicsWindow.BrushColor = "Red"
  For i = 1 To 128
    ball[i] = Shapes.AddRectangle(40,40)
    Shapes.Move(ball[i], Math.GetRandomNumber(360), 800 + Math.Floor((i-1)/6)*120)
  EndFor  
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FontSize = 64
  num5 = Shapes.AddText("5")
  Shapes.Move(num5, GraphicsWindow.Width/2 - 32, 3440)
  GraphicsWindow.BrushColor = "Blue"
  player = Shapes.AddRectangle(20,20)
  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)
  mgPlaying = "true"
  While mgPlaying = "true"
    rmove4()
    'kmove()
    Program.Delay(5)
  EndWhile  
  For i = 1 To 25
    Shapes.Remove(block[i])
  EndFor 
  For i = 1 To 128
    Shapes.Remove(ball[i])
  EndFor 
  Shapes.Remove(num5)
  Shapes.Remove(player)
  Shapes.Remove(border)
  Shapes.Remove(bg)
  GraphicsWindow.Width = 1050
  GraphicsWindow.Height = 400
EndSub
Sub rmove4
  If up = 2 And yv > -10 Then
    yv = yv - accel
  ElseIf up = 0 And yv < 0 And down = 0 Then 
    yv = yv + accel 
  EndIf
  If down = 2 And yv < 10 Then
    yv = yv + accel
  ElseIf down = 0 And yv > 0 And up = 0 Then 
    yv = yv - accel
  EndIf
  If right = 2 And xv < 10 Then
    xv = xv + accel
  ElseIf right = 0 And xv > 0 And left = 0 Then 
    xv = xv - accel
  EndIf
  If left = 2 And xv > -10 Then
    xv = xv - accel
  ElseIf left = 0 And xv < 0 And right = 0 Then 
    xv = xv + accel
  EndIf
  For i = 1 To 25
    Shapes.Move(block[i], Shapes.GetLeft(block[i]) - xv, Shapes.GetTop(block[i]) - yv)
    If Shapes.GetLeft(block[i]) < -40 Then
      Shapes.Move(block[i], GraphicsWindow.Width, Shapes.GetTop(block[i]))
    EndIf
    If Shapes.GetLeft(block[i]) > GraphicsWindow.Width Then
      Shapes.Move(block[i], -40, Shapes.GetTop(block[i]))
    EndIf
    If Shapes.GetTop(block[i]) < -40 Then
      Shapes.Move(block[i], Shapes.GetLeft(block[i]), GraphicsWindow.Height) 
    EndIf
    If Shapes.GetTop(block[i]) > GraphicsWindow.Height Then
      Shapes.Move(block[i], Shapes.GetLeft(block[i]), -40)
    EndIf   
  EndFor
  For i = 1 To 128
    Shapes.Move(ball[i], Shapes.GetLeft(ball[i]) - xv, Shapes.GetTop(ball[i]) - yv - 10)
    If Shapes.GetLeft(ball[i]) < -40 Then
      Shapes.Move(ball[i], GraphicsWindow.Width, Shapes.GetTop(ball[i]))
    EndIf
    If Shapes.GetLeft(ball[i]) > GraphicsWindow.Width Then
      Shapes.Move(ball[i], -40, Shapes.GetTop(ball[i]))
    EndIf
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ball[i]) + 40) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ball[i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ball[i]) + 40) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ball[i])) Then
      mgPlaying = "false"
      i = 128
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf
  EndFor
  Shapes.Move(num5, Shapes.GetLeft(num5) - xv, Shapes.GetTop(num5) - yv - 10)
  If Shapes.GetLeft(num5) < -40 Then
    Shapes.Move(num5, GraphicsWindow.Width, Shapes.GetTop(num5))
  EndIf
  If Shapes.GetLeft(num5) > GraphicsWindow.Width Then
    Shapes.Move(num5, -40, Shapes.GetTop(num5))
  EndIf
  If Shapes.GetTop(num5) < 0 Then
    mgPlaying = "false"
    locked[5] = "false"
    Shapes.Remove(lockpic[5])
  EndIf
EndSub

Sub Game6
  GraphicsWindow.Width = 400
  GraphicsWindow.Height = 400
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "Black"
  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  For i = GraphicsWindow.Height To 0 Step -1
    Shapes.Move(bg,0,i)
    Program.Delay(1)
  EndFor  
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 10
  border = Shapes.AddRectangle(60,60)
  Shapes.Move(border, 340, 170)
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Red"
  For i = 1 To 32
    laser[i] = Shapes.AddRectangle(60,20)
    Shapes.Move(laser[i], -1000 - 200*i, 180 + (Math.GetRandomNumber(2)-1)*20)
  EndFor  
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FontSize = 64
  num6 = Shapes.AddText("6")
  Shapes.Move(num6, -7600, GraphicsWindow.Height/2)
  GraphicsWindow.BrushColor = "Blue"
  player = Shapes.AddRectangle(20,20)
  Shapes.Move(player, 360, 190)
  mgPlaying = "true"
  While mgPlaying = "true"
    rmove5()
    lmove()
    Program.Delay(5)
  EndWhile  
  For i = 1 To 32
    Shapes.Remove(laser[i])
  EndFor 
  Shapes.Remove(num6)
  Shapes.Remove(player)
  Shapes.Remove(border)
  Shapes.Remove(bg)
  GraphicsWindow.Width = 1050
  GraphicsWindow.Height = 400
EndSub  

Sub rmove5
  If (Shapes.GetLeft(player) + right - left >= 350) And (Shapes.GetLeft(player) + right - left <= 370) And (Shapes.GetTop(player) + down - up >= 180) And (Shapes.GetTop(player) + down - up <= 200) Then 
    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player) + down - up)
  ElseIf (Shapes.GetLeft(player) + right - left >= 350) And (Shapes.GetLeft(player) + right - left <= 370) Then
    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player))  
  ElseIf (Shapes.GetTop(player) + down - up >= 350) And (Shapes.GetTop(player) + down - up <= 200) Then
    Shapes.Move(player,Shapes.GetLeft(player),Shapes.GetTop(player) + down - up)  
  EndIf  
EndSub

Sub lmove
  For i = 1 To 32 
    Shapes.Move(laser[i], Shapes.GetLeft(laser[i])+3, Shapes.GetTop(laser[i]))
    If (Shapes.GetLeft(player) < Shapes.GetLeft(laser[i]) + 60) And (Shapes.GetLeft(player) + 20 > Shapes.GetLeft(laser[i])) And (Shapes.GetTop(player) < Shapes.GetTop(laser[i]) + 20) And (Shapes.GetTop(player) + 20 > Shapes.GetTop(laser[i])) Then
      mgPlaying = "false"
      i = 32
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf  
  EndFor  
  Shapes.Move(num6, Shapes.GetLeft(num6)+3, Shapes.GetTop(num6))
  If Shapes.GetLeft(num6) > GraphicsWindow.Width Then
    mgPlaying = "false"
    locked[6] = "false"
    Shapes.Remove(lockpic[6])
  EndIf  
EndSub

Sub Game7
  GraphicsWindow.Width = 400
  GraphicsWindow.Height = 600
  GraphicsWindow.Top = 0
  GraphicsWindow.Left = 0
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "Black"
  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  For i = GraphicsWindow.Height To 0 Step -1
    Shapes.Move(bg,0,i)
    Program.Delay(1)
  EndFor  
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 10
  border = Shapes.AddRectangle(300,500)
  Shapes.Move(border, 50, 50)
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Green"
  For i = 1 To 5
    line[i] = Shapes.AddRectangle(400,10)
    Shapes.Move(line[i], 0, 100*i)
  EndFor
  GraphicsWindow.BrushColor = "Red"
  For i = 1 To 64
    debris[i] = Shapes.AddRectangle(50,100)
    Shapes.Move(debris[i], 60+Math.GetRandomNumber(230), -1000 - i*200)
  EndFor  
  lava = Shapes.AddRectangle(400,100)
  Shapes.Move(lava, 0, GraphicsWindow.Height - 70)  
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.FontSize = 64
  num7 = Shapes.AddText("7")
  Shapes.Move(num7, (GraphicsWindow.Width/2) - 32, -13800)
  GraphicsWindow.BrushColor = "Blue"
  player = Shapes.AddRectangle(20,20)
  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)
  mgPlaying = "true"
  While mgPlaying = "true"
    rmove6()
    dmove()
    Program.Delay(5)
  EndWhile  
  For i = 1 To 64
    Shapes.Remove(debris[i])
  EndFor 
  For i = 1 To 5
    Shapes.Remove(line[i])
  EndFor
  Shapes.Remove(lava)  
  Shapes.Remove(num2)
  Shapes.Remove(player)
  Shapes.Remove(border)
  Shapes.Remove(bg)
  GraphicsWindow.Width = 1050
  GraphicsWindow.Height = 400
EndSub  

Sub rmove6
  If (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 320) And (Shapes.GetTop(player) + down - up + 1 >= 60) And (Shapes.GetTop(player) + down - up + 1 <= 520) Then 
    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player) + down - up + 1)
  ElseIf (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 320) Then
    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player))  
  ElseIf (Shapes.GetTop(player) + down - up + 1 >= 60) And (Shapes.GetTop(player) + down - up + 1 <= 520) Then
    Shapes.Move(player,Shapes.GetLeft(player),Shapes.GetTop(player) + down - up + 1)  
  EndIf  
EndSub 

Sub dmove
  For i = 1 To 5
    Shapes.Move(line[i], 0, Shapes.GetTop(line[i]) + 1)
    If Shapes.GetTop(line[i]) >= Shapes.GetTop(lava) Then
      Shapes.Move(line[i],0,-20)
    EndIf  
  EndFor  
  For i = 1 To 64 
    Shapes.Move(debris[i], Shapes.GetLeft(debris[i]), Shapes.GetTop(debris[i])+5)
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(debris[i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(debris[i])) And (Shapes.GetTop(player) <= Shapes.GetTop(debris[i]) + 100) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(debris[i])) Then
      mgPlaying = "false"
      i = 64
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf  
  EndFor  
  If (Shapes.GetLeft(player) <= Shapes.GetLeft(lava) + 400) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(lava)) And (Shapes.GetTop(player) <= Shapes.GetTop(lava) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(lava)) Then
      mgPlaying = "false"
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf  
  Shapes.Move(num7, Shapes.GetLeft(num7), Shapes.GetTop(num7)+5)
  If Shapes.GetTop(num7) > GraphicsWindow.Height Then
    mgPlaying = "false"
    locked[7] = "false"
    Shapes.Remove(lockpic[7])
  EndIf  
EndSub

Sub Game8
  GraphicsWindow.Width = 400
  GraphicsWindow.Height = 400
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "Black"
  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  For i = GraphicsWindow.Height To 0 Step -1
    Shapes.Move(bg,0,i)
    Program.Delay(1)
  EndFor  
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 10
  border = Shapes.AddRectangle(300,300)
  Shapes.Move(border, 50, 50)
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Yellow"
  For i = 1 To 9
    peg[i] = Shapes.AddRectangle(20,20)
  EndFor  
  Shapes.Move(peg[1], 190, 190)
  Shapes.Move(peg[2], 190, 90)
  Shapes.Move(peg[3], 90, 190)
  Shapes.Move(peg[4], 290, 190)
  Shapes.Move(peg[5], 190, 290)
  Shapes.Move(peg[6], 90, 90)
  Shapes.Move(peg[7], 90, 290)
  Shapes.Move(peg[8], 290, 90)
  Shapes.Move(peg[9], 290, 290)
  GraphicsWindow.BrushColor = "Red"
  For i = 1 To 64
    c = Math.GetRandomNumber(6)
    If c = 1 Then
      ddr[c][i] = Shapes.AddRectangle(50,50)
      Shapes.Move(ddr[c][i], 175, -500 - i * 100)
    ElseIf c = 2 Then
      ddr[c][i] = Shapes.AddRectangle(50,50)
      Shapes.Move(ddr[c][i], -500 - i * 100, 175)  
    ElseIf c = 3 Then 
      ddr[c][i] = Shapes.AddRectangle(50,50)
      Shapes.Move(ddr[c][i], 75, 500 + i * 100)   
    ElseIf c = 4 Then 
      ddr[c][i] = Shapes.AddRectangle(50,50)
      Shapes.Move(ddr[c][i], 500 + i * 100, 75)   
      i = i + 1  
    ElseIf c = 5 Then
      ddr[c][i] = Shapes.AddRectangle(50,50)
      Shapes.Move(ddr[c][i], 275, 500 + i * 100)  
    ElseIf c = 6 Then
      ddr[c][i] = Shapes.AddRectangle(50,50)
      Shapes.Move(ddr[c][i], 500 + i * 100, 275)  
    EndIf  
  EndFor  
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FontSize = 64
  num8 = Shapes.AddText("8")
  Shapes.Move(num8, GraphicsWindow.Width/2 - 32, -7000)
  GraphicsWindow.BrushColor = "Blue"
  player = Shapes.AddRectangle(20,20)
  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)
  mgPlaying = "true"
  While mgPlaying = "true"
    rmove7()
    ddrmove()
    Program.Delay(5)
  EndWhile  
  For k = 1 To 6
    For i = 1 To 64
      Shapes.Remove(ddr[k][i])
    EndFor
  EndFor  
  For i = 1 To 9
    Shapes.Remove(peg[i])
  EndFor  
  Shapes.Remove(num8)
  Shapes.Remove(player)
  Shapes.Remove(border)
  Shapes.Remove(bg)
  GraphicsWindow.Width = 1050
  GraphicsWindow.Height = 400
EndSub  

Sub rmove7
  Shapes.Move(player,400/2 + ((400/4)*right/2) - ((400/4)*left/2) - 10,400/2 + ((400/4)*down/2) - ((400/4)*up/2) - 10)   
EndSub

Sub ddrmove
  For i = 1 To 64
    Shapes.Move(ddr[1][i], Shapes.GetLeft(ddr[1][i]), Shapes.GetTop(ddr[1][i])+2)
    Shapes.Move(ddr[2][i], Shapes.GetLeft(ddr[2][i])+2, Shapes.GetTop(ddr[2][i]))
    Shapes.Move(ddr[3][i], Shapes.GetLeft(ddr[3][i]), Shapes.GetTop(ddr[3][i])-2)
    Shapes.Move(ddr[5][i], Shapes.GetLeft(ddr[5][i]), Shapes.GetTop(ddr[5][i])-2)
    Shapes.Move(ddr[4][i], Shapes.GetLeft(ddr[4][i])-2, Shapes.GetTop(ddr[4][i]))
    Shapes.Move(ddr[6][i], Shapes.GetLeft(ddr[6][i])-2, Shapes.GetTop(ddr[6][i]))
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[1][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[1][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[1][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[1][i])) Then
      mgPlaying = "false"
      i = 64
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[2][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[2][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[2][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[2][i])) Then
      mgPlaying = "false"
      i = 64
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf 
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[3][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[3][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[3][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[3][i])) Then
      mgPlaying = "false"
      i = 64
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf 
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[4][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[4][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[4][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[4][i])) Then
      mgPlaying = "false"
      i = 64
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[5][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[5][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[5][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[5][i])) Then
      mgPlaying = "false"
      i = 64
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(ddr[6][i]) + 50) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(ddr[6][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(ddr[6][i]) + 50) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(ddr[6][i])) Then
      mgPlaying = "false"
      i = 64
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf
  EndFor
  Shapes.Move(num8, Shapes.GetLeft(num8), Shapes.GetTop(num8)+2) 
  If Shapes.GetTop(num8) > GraphicsWindow.Height Then
    mgPlaying = "false"
    locked[8] = "false"
    Shapes.Remove(lockpic[8])
  EndIf    
EndSub

Sub Game9
  GraphicsWindow.Width = 400
  GraphicsWindow.Height = 400
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.PenColor = "Black"
  bg = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)
  For i = GraphicsWindow.Height To 0 Step -1
    Shapes.Move(bg,0,i)
    Program.Delay(1)
  EndFor  
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 10
  border = Shapes.AddRectangle(300,300)
  Shapes.Move(border, 50, 50)
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Red"
  For i = 1 To 64
    size[i] = Math.GetRandomNumber(70) + 50
    spike[1][i] = Shapes.AddRectangle(10,size[i])
    spike[2][i] = Shapes.AddRectangle(10,220-size[i])
    Shapes.Move(spike[1][i], 500 + 400*i, 350-size[i])
    Shapes.Move(spike[2][i], 500 + 400*i, 50)
  EndFor  
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FontSize = 64
  num9 = Shapes.AddText("9")
  Shapes.Move(num9, 26500, GraphicsWindow.Height/2 - 32)
  GraphicsWindow.BrushColor = "Blue"
  player = Shapes.AddRectangle(20,20)
  Shapes.Move(player, GraphicsWindow.Width/2 - 10, GraphicsWindow.Height/2 - 10)
  mgPlaying = "true"
  While mgPlaying = "true"
    rmove8()
    smove()
    Program.Delay(5)
  EndWhile  
  For i = 1 To 64
    Shapes.Remove(spike[1][i])
    Shapes.Remove(spike[2][i])
  EndFor 
  Shapes.Remove(num9)
  Shapes.Remove(player)
  Shapes.Remove(border)
  Shapes.Remove(bg)
  GraphicsWindow.Width = 1050
  GraphicsWindow.Height = 400
EndSub

Sub rmove8
  If up = 2 And yv2 <= 0 And Shapes.GetTop(player) > 200 And falling = "false" Then
    accel2 = 0.1
    yv2 = -3 + accel2
  ElseIf Shapes.GetTop(player) + yv2 + accel2 < 320 Then
    accel2 = 0.1
    yv2 = yv2 + accel2
    falling = "true"
  Else
    falling = "false"
    yv2 = 0
    accel2 = 0
    Shapes.Move(player, Shapes.GetLeft(player), 320)  
  EndIf
  If (Shapes.GetLeft(player) + right - left >= 60) And (Shapes.GetLeft(player) + right - left <= 320) Then
    Shapes.Move(player,Shapes.GetLeft(player) + right - left,Shapes.GetTop(player) + yv2 + accel2) 
  Else
    Shapes.Move(player,Shapes.GetLeft(player),Shapes.GetTop(player) + yv2 + accel2)   
  EndIf  
EndSub 

Sub smove
  For i = 1 To 64 
    Shapes.Move(spike[1][i], Shapes.GetLeft(spike[1][i]) - 3, Shapes.GetTop(spike[1][i]))
    Shapes.Move(spike[2][i], Shapes.GetLeft(spike[2][i]) - 3, Shapes.GetTop(spike[2][i]))
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(spike[1][i]) + 10) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(spike[1][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(spike[1][i]) + size[i]) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(spike[1][i])) Then
      mgPlaying = "false"
      i = 64
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf
    If (Shapes.GetLeft(player) <= Shapes.GetLeft(spike[2][i]) + 10) And (Shapes.GetLeft(player) + 20 >= Shapes.GetLeft(spike[2][i])) And (Shapes.GetTop(player) <= Shapes.GetTop(spike[2][i]) + 220 - size[i]) And (Shapes.GetTop(player) + 20 >= Shapes.GetTop(spike[2][i])) Then
      mgPlaying = "false"
      i = 64
      Sound.PlayClick()
      Program.Delay(1000)
    EndIf  
  EndFor  
  Shapes.Move(num9, Shapes.GetLeft(num9) - 3, Shapes.GetTop(num9))
  If Shapes.GetLeft(num9) < GraphicsWindow.Width Then
    mgPlaying = "false"
    locked[9] = "false"
    Shapes.Remove(lockpic[9])
  EndIf  
EndSub

Sub SetOptions
  GraphicsWindow.Hide()
  TextWindow.Show()
  TextWindow.Title = "Safecracker"
  TextWindow.CursorLeft = 3
  TextWindow.CursorTop = 3
  TextWindow.WriteLine("Safecracker options")
  TextWindow.WriteLine("")
  getinput:
  TextWindow.CursorLeft = 3
  TextWindow.WriteLine("The safe combination can have 2, 3, or 4 digits. ")
  TextWindow.CursorLeft = 3
  TextWindow.Write("How many digits do you want? ")
  numberdigits = TextWindow.ReadNumber()
  If numberdigits < 2 Or numberdigits > 4 Then
    Goto getinput
  EndIf
  GraphicsWindow.Title = "Safecracker " + numberdigits + " Digits in Combination"
  ClearDigits()
  TextWindow.Hide()
  GraphicsWindow.Show()
EndSub
Sub startgame
  GameStatus = "Playing"
  'clear results area and change buttons
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.FillRectangle(320, 30, 330, 370)
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.FontSize = 16
  Controls.SetButtonCaption(StartStopButton, "Stop Game")
  Controls.HideControl(OptionsButton)
  Controls.HideControl(ExitButton)
  ClearDigits()
  'get combinatino
  secretcombo = ""
  For i = 1 to numberdigits
    'select unique digit
    uniquedigit = "false"
    While uniquedigit = "false"
      j = Math.GetRandomNumber(9)
      uniquedigit = "true"
      If i <> 1 then
        For k = 1 To i - 1
          If Text.GetSubText(secretcombo, k, 1) = j Then
            uniquedigit = "false"
          EndIf
        EndFor
      Endif
    EndWhile
    secretcombo = Text.Append(secretcombo, j)
  EndFor
  enteredcombo = ""
  digitsentered = 0
  tries = 0
  combox = 330
  comboy = 40
EndSub
Sub stopgame
  'restore buttons
  GameStatus = "Stopped"
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.FontSize = 16
  Controls.SetButtonCaption(StartStopButton, "Start Game")
  Controls.ShowControl(OptionsButton)
  Controls.ShowControl(ExitButton)
  'write message
  combox = 330
  comboy = comboy + 20
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FontSize = 16
  If enteredcombo = secretcombo Then
    GraphicsWindow.DrawText(combox, comboy, "That's it!!! It took you " + tries + " tries.")
  Else
    GraphicsWindow.DrawText(combox, comboy, "Game Stopped.  Combination: " + secretcombo)
  EndIf
EndSub
Sub KeyDownSub
  k = GraphicsWindow.LastKey 
  If k = "Left" Then
    left = 2
  EndIf
  If k = "Right" Then
    right = 2
  EndIf
  If k = "Up" Then
    up = 2
  EndIf
  If k = "Down" Then
    down = 2
  EndIf  
  If GameStatus = "Playing" Then
    n = 0
    If k = "D1" Or k = "NumPad1" Then
      If locked[1] = "false" Then
        n = 1
      Else  
        mg = "Game1"
      EndIf  
    ElseIf  k = "D2" or k  = "NumPad2" then
      If locked[2] = "false" Then
        n = 2
      Else  
        mg = "Game2"
      EndIf 
    ElseIf  k = "D3" or k  = "NumPad3" then
      If locked[3] = "false" Then
        n = 3
      Else  
        mg = "Game3"
      EndIf 
    ElseIf  k = "D4" or k  = "NumPad4" then
      If locked[4] = "false" Then
        n = 4
      Else  
        mg = "Game4"
      EndIf
    ElseIf  k = "D5" or k  = "NumPad5" then
      If locked[5] = "false" Then
        n = 5
      Else  
        mg = "Game5"
      EndIf
    ElseIf  k = "D6" or k  = "NumPad6" then
      If locked[6] = "false" Then
        n = 6
      Else  
        mg = "Game6"
      EndIf              
    ElseIf  k = "D7" or k  = "NumPad7" then
      If locked[7] = "false" Then
        n = 7
      Else  
        mg = "Game7"
      EndIf
    ElseIf  k = "D8" or k  = "NumPad8" then
      If locked[8] = "false" Then
        n = 8
      Else  
        mg = "Game8"
      EndIf
    ElseIf  k = "D9" or k  = "NumPad9" then
      If locked[9] = "false" Then
        n = 9
      Else  
        mg = "Game9"
      EndIf
    EndIf
    If n = 0 Then
      Goto leavesub
    EndIf
    'if first number in combo, clear out digits boxes
    If digitsentered = 0 Then
      ClearDigits()
    EndIf
    'for second digit on, make sure not in code already
    If numberdigits >=1 Then
      For i = 1 To numberdigits
        If n  = Text.GetSubText(enteredcombo, i, 1) Then
          Goto leavesub
        EndIf
      EndFor
    EndIf
    enteredcombo = Text.Append(enteredcombo, n)
    digitsentered = digitsentered + 1   
    GraphicsWindow.BrushColor = "Black"
    GraphicsWindow.FontSize = 48
    GraphicsWindow.DrawText(67 + (digitsentered - 1) * 50, 120, n)
    'if all digits entered, check combo
    If digitsentered = numberdigits Then
      tries = tries + 1
      GraphicsWindow.BrushColor = "Red"
      GraphicsWindow.FontSize = 16
      GraphicsWindow.DrawText(combox, comboy, enteredcombo)
      If enteredcombo = secretcombo Then
        Sound.PlayBellRing()
        stopgame()
      Else
        numberright = 0
        For i = 1 To numberdigits
          n = Text.GetSubText(enteredcombo, i, 1)
          For j = 1 To numberdigits
            If n = Text.GetSubText(secretcombo, j, 1) Then
              numberright = numberright + 1
            EndIf
          EndFor
        EndFor
        'how many in correct position
        positionright  = 0
        For i = 1 To numberdigits
          If Text.GetSubText(secretcombo, i, 1) = Text.GetSubText(enteredcombo, i, 1) Then
            positionright = positionright + 1
          EndIf
        EndFor
        GraphicsWindow.DrawText(combox + 50, comboy, numberright + ":" + positionright)
        Sound.PlayChime()
        'clear combo to try again
        enteredcombo = ""
        digitsentered = 0
        combox = combox + 100
        If combox > 530 Then
          combox = 330
          comboy = comboy + 20
        EndIf
      EndIf
    EndIf
  EndIf
  leavesub:
EndSub

Sub KeyUpSub
  k = GraphicsWindow.LastKey
  If k = "Left" Then
    left = 0
  EndIf
  If k = "Right" Then
    right = 0
  EndIf
  If k = "Up" Then
    up = 0
  EndIf
  If k = "Down" Then
    down = 0
  EndIf 
EndSub  
