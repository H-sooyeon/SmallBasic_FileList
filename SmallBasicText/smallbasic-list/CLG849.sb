args=0

p=0

GraphicsWindow.title="Tree"



sub tree   ' :size

  p=p+1

  size[p]=args[1]

  'TextWindow.WriteLine(size[p]) ' data ok

  if size[p] < 5 then

    

    dd=size 

    tmov()

    dd=size

    tmov()

  else

    dd= size[p]/3

    tmov()

    tang=tang- 30 

    

    ldcall.Function ("tree", size[p]*2/3 )

    p=p-1

    tang=tang+ 30

   ' TextWindow.WriteLine(tang) ' data ok

    

    dd=size[p]/6

    tmov()

    tang=tang+ 25 

   ldcall.Function ("tree", size[p]/2) 

    p=p-1

    tang=tang - 25

    

    dd= size[p]/3

    tmov()

    tang=tang+ 25 

    ldcall.Function ("tree", size[p]/2 )

    p=p-1 

    tang=tang - 25

    

    dd=size[p]/6

    tmov()

    dd=-size[p]

    tmov()

    

  EndIf 

EndSub

GraphicsWindow.left=10

GraphicsWindow.top=10

GraphicsWindow.Width =1500

GraphicsWindow.Height=800

GraphicsWindow.BackgroundColor ="teal"

GraphicsWindow.PenWidth =1

GraphicsWindow.PenColor ="lime"

tx=600

ty=600

tang=-20

ldcall.Function ("tree" , 330)



tx=600

ty=600

tang=20

ldcall.Function ("tree" , 330)



tx=600

ty=600

tang=40

ldcall.Function ("tree", 300)





Sub tmov

  'mm=LDMath.Convert2Cartesian(tx ty dd tang-90)

  mm[1] = tx+dd*Math.Cos((tang-90)*Math.Pi/180)

  mm[2] = ty+dd*Math.Sin((tang-90)*Math.Pi/180)

'  TextWindow.WriteLine("FROM "+tx+" : "+ty)

'  TextWindow.WriteLine("TO   "+mm[1]+" : "+mm[2])

GraphicsWindow.DrawLine (tx, ty, mm[1], mm[2])





   TextWindow.WriteLine ("tx="+tx)

   TextWindow.WriteLine ("ty="+ty)

   TextWindow.WriteLine ("mm[1]="+mm[1])

     TextWindow.WriteLine ("mm[2]="+mm[2])





  tx=mm[1]

  ty=mm[2]

  

  

  

  Program.Delay(1000)

EndSub 


