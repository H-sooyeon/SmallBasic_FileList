'  Challenge of the month March  2013    --   Graphical  scales   --   by NaochanON   
'  Now this program is on processing

GraphicsWindow.MouseMove=onmove
GraphicsWindow.MouseDown=onmousedown
GraphicsWindow.MouseUp=onmouseup

Shapes_Init()
balance()

Sub moveweight
  sumw1=0
  sumw4=0
  For jj=1 To 4
    sumw4=sumw4+W4[jj]
    Shapes.Move(shape[(W4[jj]*jj+7)],Shapes.GetLeft(shape[6]["obj"])+60,Shapes.GetTop(shape[6]["obj"])-40*sumw4)
  endfor
EndSub

Sub falling
  w4x=Shapes.GetLeft(shape[w4nmb+7])                     '   w4   X-position 
  w4y=Shapes.Gettop(shape[w4nmb+7])                      '   w4   Y-position
  newBX=Shapes.GetLeft(shape[6]["obj"])                  '   base  X-position 
  If newBX<w4x And w4x+40<newBX+shape[6]["width"] Then   
    For ii=1 To 20
      newBY=Shapes.Gettop(shape[6]["obj"])
      Shapes.Move(shape[w4nmb+7],w4x,w4y+(newBY-w4y-40)/20*(ii-1) ) 
      Program.Delay(15) 
    EndFor
    If L<>startL+10+DDL Then  
      startL=L     '  change start swing
      DDL=DDL+10   '  add swing time +10 
      wangle0=((4*sumw4+sumw1)*BL-(bx0-bx1)*8)/((bx0-bx1)*8)*30   '   angle of the balance
      GraphicsWindow.Title="angle=  "+wangle0
    ElseIf L=startL+10+DDL Then  
      L=0
      startL=0     '  change start swing
      DDL=0   '  add swing time +10 
      wangle0=((4*sumw4+sumw1)*BL-(bx0-bx1)*8)/((bx0-bx1)*8)*30   '   angle of the balance
      GraphicsWindow.Title="angle=  "+wangle0
      balance()  
    EndIf
  Else 
    W4[w4NMB]=0
    Shapes.Animate(shape[w4nmb+7],w4x,1000,2000) 
  endif  
EndSub

Sub onmove
  MX= GraphicsWindow.MouseX
  MY= GraphicsWindow.MouseY
  If catch4="true" Then 
    Shapes.Move(shape[w4nmb+7],MX-20,MY-20)
  elseIf catch1="true" Then 
    Shapes.Move(shape[w1nmb+11],MX-10,MY-10)
  endif
EndSub

Sub onmousedown
  MX= GraphicsWindow.MouseX
  MY= GraphicsWindow.MouseY
  GraphicsWindow.Title="Scale ...... Catch Error"
  If    (shx+580<MX And MX<shx+580+40) And (shy<MY And MY<shy+42*4) Then 
    w4NMB=Math.Floor((MY-shy)/42)+1
    GraphicsWindow.Title="Scale ...... Catch a Weight4..... No "+w4NMB
    If W4[w4NMB]=0 Then 
      catch4="true"
    EndIf
  elseIf    (shx+638<MX And MX<shx+638+40) And (shy<MY And MY<shy+22*10) Then 
    w1NMB=Math.Floor((MY-shy)/22)+1
    GraphicsWindow.Title="Scale ...... Catch a Weight1..... No "+w1NMB
    If W4[w1NMB]=0 Then 
      catch1="true"
    EndIf
  EndIf
EndSub

Sub onmouseup
  if catch4="true" then 
    catch4="false"
    W4[w4nmb]=1
    falling()
  elseif catch1="true" then 
    W1[w1nmb]=1
    catch1="false"
    falling()
  endif
EndSub

Sub Shapes_Init
  s=1
  shX = 60    
  shY = 120 
  shape[1] = "func=rect;x=207.5;y=0;width=25;height=110;bc=#6A5ACD;pc=#6A5ACD;pw=8;"    '  chain 
  shape[2] = "func=ell;x=207.5;y=95;width=25;height=25;bc=#6A5ACD;pc=#6A5ACD;pw=8;" 
  shape[3] = "func=rect;x=0;y=93;width=440;height=25;bc=#47703D;pc=#47703D;pw=2;"       '  arm
  shape[4] = "func=line;x=440;y=118;x1=0;y1=0;x2=-87.5;y2=168;pc=#000000;pw=4;"         '  line
  shape[5] = "func=line;x=440;y=118;x1=0;y1=0;x2=87.5;y2=168;pc=#000000;pw=4;"          '  line
  shape[6] = "func=rect;x=352;y=280;width=175;height=8;bc=#47703D;pc=#000000;pw=8;"     '  base
  start=1
  Shapes_Add()
  Shapes.SetOpacity(shape[3]["obj"],80)
  '--------------------------------------------------------------------------------------------------------------------
  GraphicsWindow.penColor="#FFFF00"
  GraphicsWindow.PenWidth=1
  For j=1 To 20
    scale[j]=Shapes.AddLine(0,0,0,shape[3]["height"]*s)                '  scale 
    Shapes.Move(scale[j],shx+10*j,shy+shape[3]["y"]*s)               
  EndFor
  shape[7] = "func=rect;x=120;y=64.5;width=40;height=80;bc=#C82E22;pc=#C82E22;pw=4;"   '  measuring  weight 
  start=7
  Shapes_Add()
  Shapes.SetOpacity(shape[7]["obj"],80)
  '--------------------------------------------------------------------------------------------------------------------
  GraphicsWindow.brushColor="#BA992C"
  GraphicsWindow.penColor="#BA992C"
  GraphicsWindow.PenWidth=1
  For j=8 To 11
    shape[j] = Shapes.AddRectangle(40,40)               '  weight   4
    W4[j-7]=0                                           ' 1-4 
    Shapes.Move(shape[j],shx+580,shy+42*(j-8))
  EndFor
  For j=12 To 21
    shape[j] = Shapes.AddRectangle(20,20)               '  weight  1
    W1[j-11]=0                                          '  1-10
    Shapes.Move(shape[j],shx+638,shy+22*(j-12))
  EndFor
  '-----------------------------------------------------------------------------
  BH=shape[3]["height"]*s/2                             '  balance height 
  BL=shape[3]["width"]*s/2                              '  half  length 
  bx0=shx+BL                                            '   balance center 
  by0=shy+shape[3]["y"]*s+BH           
  WL=BL-(shape[7]["x"]*s+shape[7]["width"]*s/2)            '   weight  point  Length
  DX=shape[4]["x"]*s-shape[6]["x"]*s                    '  distance from line to base  X position  
  DY=shape[6]["y"]*s-shape[4]["y"]*s                    '  distance from line to base  Y position 
  bx1=Shapes.GetLeft(shape[7]["obj"])                   '   counter weight X-Position 
  '-----------------------------------------------------------------------------
  startL=0
  DDL=0
  wangle0=-50                                            '   starting angle of balance
  swing="true" 
EndSub

Sub balance
  NN=0
  For L=startL To startL+10+DDL 
    For k=1 To 40
      NN=NN+1
      dangle=(startL+10+DDL-L)*(Math.Sin(math.GetRadians(NN*9)))
      wangle=wangle0+dangle
      rwangle=Math.GetRadians(wangle)
      Shapes.Rotate(shape[3]["obj"],wangle) 
      '-----------------------------------------------------------------------------
      wx=bx0-WL*Math.Cos(rwangle)-shape[7]["width"]*s/2       '   new weight position   X
      wy=shy+shape[7]["y"]*s-WL*Math.sin(rwangle)             '   new weight position   Y 
      shapes.Move(shape[7]["obj"],WX,WY)
      Shapes.Rotate(shape[7]["obj"],wangle) 
      '-----------------------------------------------------------------------------
      LX=bx0+BL*Math.Cos(rwangle)+BH*Math.sin(-rwangle)       '  line position  X
      LY=by0+BL*Math.sin(rwangle)+BH*Math.cos(-rwangle)       '  Line position  Y
      shapes.Move(shape[4]["obj"],LX-2,LY)                    '  new line position 
      shapes.Move(shape[5]["obj"],LX,LY)                      '  new line position  
      shapes.Move(shape[6]["obj"],LX-DX,LY+DY)                '  new base position 
      '-----------------------------------------------------------------------------
      moveweight()                                            '   weight moves 
      '-----------------------------------------------------------------------------
      For j=1 To 20
        scx=bx0- (BL-j*10)*Math.Cos(rwangle)
        scy=by0- (BL-j*10)*Math.sin(rwangle)-BH
        Shapes.Move(scale[j],scx,scy)                         '   new scale position 
        Shapes.Rotate(scale[j],wangle)    
      EndFor
      Program.Delay(60)
    EndFor
  EndFor
EndSub


Sub Shapes_Add
  GraphicsWindow.Title="Scale ......  "
  GraphicsWindow.BackgroundColor="Lightcyan"
  GraphicsWindow.Width=800
  GraphicsWindow.Height=550
  For i = start To Array.GetItemCount(shape)
    GraphicsWindow.PenWidth = shape[i]["pw"]*s
    GraphicsWindow.PenColor = shape[i]["pc"]
    GraphicsWindow.BrushColor = shape[i]["bc"]
    If shape[i]["func"] = "rect" Then
      shape[i]["obj"] = Shapes.AddRectangle(shape[i]["width"]*s, shape[i]["height"]*s)
    ElseIf shape[i]["func"] = "ell" Then
      shape[i]["obj"] = Shapes.AddEllipse(shape[i]["width"]*s, shape[i]["height"]*s)
    ElseIf shape[i]["func"] = "tri" Then
      shape[i]["obj"] = Shapes.AddTriangle(shape[i]["x1"]*s, shape[i]["y1"]*s, shape[i]["x2"]*s, shape[i]["y2"]*s, shape[i]["x3"]*s, shape[i]["y3"]*s)
    ElseIf shape[i]["func"] = "line" Then
      shape[i]["obj"] = Shapes.AddLine(shape[i]["x1"]*s, shape[i]["y1"]*s, shape[i]["x2"]*s, shape[i]["y2"]*s)
    EndIf
    Shapes.Move(shape[i]["obj"], shX + shape[i]["x"]*s, shY + shape[i]["y"]*s)
    Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
  EndFor
EndSub

