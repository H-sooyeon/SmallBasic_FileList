' SmallBasic Version 1.2
' Program: NormalMapping
' Changelog: 
' Author: Zock77 / Pappa Lapub
' Website: https://social.msdn.microsoft.com/Forums/en-US/add75526-9b04-47ad-ab41-79916b8fa9b9/rendering-shadows-on-shapes
' ImportURL: http://smallbasic.com/program/?
' Extension: LitDev, SBVector (based on http://www.codeproject.com/Articles/17425/A-Vector-Type-for-C)
' Comment: http://sean.alyrica.net/Blank.png (97x88, 24 bit, 96 dpi)
'  http://sean.alyrica.net/NM_4.png (https://social.msdn.microsoft.com/Forums/getfile/965381)
' Variables: 
' ToDo: 
' ================================================================================
shiny = 1
specular = 128
ImageListWorks()

'' Finally here comes the GW
GraphicsWindow.BackgroundColor = "Sienna"
GraphicsWindow.Title = "P .. Pause, Esc .. Exit"
imgShp = Shapes.AddImage(printImg)                ' Blank.png
LDShapes.Centre(imgShp, 200,200)

GraphicsWindow.KeyDown = OnKeyDown
GraphicsWindow.MouseMove = OnMouseMove


' ////////// SUB  \\\\\\\\\\
'' ImageList processing is faster with GW not being invoked (windowless)
Sub ImageListWorks
  normImg = ImageList.LoadImage(Program.Directory +"\img\NM_4.png") ' 88x88
  imgW = ImageList.GetWidthOfImage(normImg)   ' 88
  imgH = ImageList.GetHeightOfImage(normImg)  ' 88
  
  LDImage.OpenWorkingImage(normImg)
  'collect the normal map data, normalize and store it in an array (3D vector)
  For px = 1 To imgW
    For py = 1 To imgH
      pixRGB = LDImage.GetWorkingImagePixelARGB(normImg, px,py)
      
      '' normalize to [-1,1[
      'tface = "1="+ pixRGB["R"] +";2="+ pixRGB["G"] +";3="+ pixRGB["B"] ' +";"
      'tface = SBVector.ScalarDivide(tface, 128)
      'tface = SBVector.ScalarAdd(tface, -1)
      tface = "1="+ (pixRGB["R"]/128-1) +";2="+ (pixRGB["G"]/128-1) +";3="+ (pixRGB["B"]/128-1) ' +";"
      ''tface = SBVector.Normalize(tface)    '' normalize to length 1
      
      len = SBVector.Length(tface)
      face[px][py] = "1="+ (tface[1]/len) +";2="+ (tface[2]/len) +";3="+ (tface[3]/len) '+";"
    EndFor
  EndFor
  printImg = LDImage.NewImage(97,88, "#FFFFFF")   ' Blank.png
EndSub


' //////////  EVENTs  \\\\\\\\\\
Sub OnMouseMove
  If LDLogic.Not(bWait) And LDLogic.Not(bPause) Then ' If bRun Or bPause Then
    bWait = "True"
    FL_dist = "1="+ (GraphicsWindow.MouseX-200) +";2="+ (200-GraphicsWindow.MouseY) +";3="+ 40 ' +";"
    
    LDImage.OpenWorkingImage(printImg)
    For px = 1 To imgW Step 2
      For py = 1 To imgH Step 2
        
        'Normalize the light vector
        L_dist = SBVector.Normalize(FL_dist)
        
        'Get the dot product of the two normalized vectors
        dot = SBVector.DotProduct(L_dist, face[px][py])
        
        spec = Math.Max(dot * (specular + shiny), 0)
        intens = Math.Min(spec + 128, 255)
        
        LDImage.SetWorkingImagePixel(printImg, px,py, GraphicsWindow.GetColorFromRGB(intens,intens,intens))
        LDImage.SetWorkingImagePixel(printImg, px,py+1, GraphicsWindow.GetColorFromRGB(intens,intens,intens))
      EndFor
    EndFor
    
    LDImage.CloseWorkingImage(printImg)
    LDShapes.SetImage(imgShp, printImg)
    bWait = ""
  EndIf
EndSub

Sub OnKeyDown
  lastKey = GraphicsWindow.LastKey
  If lastKey = "Escape" Then
    Program.End()
  ElseIf lastKey = "P" Then
    bPause = LDLogic.Not(bPause)
  EndIf  
EndSub
