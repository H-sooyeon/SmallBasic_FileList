pi=ldtext.Split ("31 41 5 9 26 5 35 8" " ")
SQ=ldtext.Split ("22 47 16 41 10 35 4 5 23 48 17 42 11 29 30 6 24 49 18 36 12 13 31 7 25 43 19 37 38 14 32 1 26 44 20 21 39 8 33 2 27 45 46 15 40 9 34 3 28" " ")
nnp=ldtext.Split ("1 9 15 21 25 27 33 35 39 45 49" " ")
args=0
GraphicsWindow.BrushColor="black
GraphicsWindow.FontSize=20
GraphicsWindow.FontName="calibri
GraphicsWindow.FontBold="false
i=1
j=1
For y=0 To 8
  for x=1 To 8
    
    If y=0 And x<8 Then
    else
      cc= Controls.AddTextBox (x*50 y*40)
      If x<8 and y<8 then
        nn[i]=cc
        LDShapes.BrushColour (nn[i],"white")
        i=i+1
      Else
        ct[j]=cc
        j=j+1
      EndIf 
      Controls.SetSize (cc 45 30)
      'If y=4 then
      Controls.SetTextBoxText (cc sq[i-1])
      'endif
    endif
  EndFor 
EndFor 
GraphicsWindow.BackgroundColor="teal
Timer.Interval=255
Timer.Tick=ttt
GraphicsWindow.Title="MgcSq Composer
mm=Shapes.AddText(0)
Shapes.Move (mm 5 405)
mm1=Shapes.AddText(0)
Shapes.Move (mm1 5 365)
sss=LDShapes.GetAllShapes ()

bb[1]=Controls.AddButton ("clr" 1 330)
bb[2]=Controls.AddButton ("odd" 1 10)
bb[3]=Controls.AddButton ("all" 1 50)
bb[4]=Controls.AddButton ("prm" 1 90)
bb[5]=Controls.AddButton ("seq" 1 130)
bb[6]=Controls.AddButton ("pi" 1 170)
bb[7]=Controls.AddButton ("gen" 1 210)
bb[8]=Controls.AddButton ("add" 1 250)
bb[9]=Controls.AddButton ("pmt" 1 290)
Controls.ButtonClicked =bcc
q5=0

While "true
  If lpp Then
    lpp="false
    Timer.Pause ()
    LDShapes.ResetTurtle ()
    Turtle.Speed=10
    Turtle.PenUp ()
    For i=1 To 49
      Controls.SetTextBoxText (nn[i] "" )
    endfor
    GraphicsWindow.PenColor="red
    For f=1 to 49
      For i=1 To 49
        
        If SQ[i]=f then
          Controls.SetTextBoxText (nn[i] SQ[i] ) 
          Turtle.MoveTo (ldShapes .GetLeft (nn[i])+20 10+ldShapes.GetTop (nn[i]))
          Turtle.PenDown ()
        EndIf 
      EndFor
      Program.Delay (250)
    endfor 
    Timer.Resume ()
    shww ()
  EndIf
  
  If dobb Then
    dobb="false
    For f=1 To 9
      Controls.HideControl (bb[f])
    EndFor 
    Program.Delay (500)
    If lb=bb[2] Then
      For f=1 To 49
        If Math.Remainder (sq[f] 2)=1 Then 
          Controls.SetTextBoxText (nn[f] SQ[f] )
        Else
          Controls.SetTextBoxText (nn[f] "" )
        EndIf
      endfor
      shww ()
      
    elseIf lb=bb[3] Then
      For f=1 To 49
        Controls.SetTextBoxText (nn[f] SQ[f] )
      Endfor
      shww ()
      
    elseIf lb=bb[4] Then
      For f=1 To 49
        If sq[f]=2 or ((Math.Remainder (sq[f] 2)=1) and (Array.ContainsValue(nnp SQ[f])="False"))  Then  
          Controls.SetTextBoxText (nn[f] SQ[f] )
        Else
          Controls.SetTextBoxText (nn[f] "" )
        EndIf
      endfor
      shww ()
      
    elseIf lb=bb[5] Then
      lpp="true
      LDShapes.RemoveTurtleLines ()
      
    elseIf lb=bb[7] Then
      Timer.Pause ()
      args[1]=7
      genSq()
      sqshw()
      Timer.Resume ()
      shww ()
      
    elseIf lb=bb[9] Then
      Timer.Pause ()
      c1=math.GetRandomNumber (7)
      c2=c1
      While c2=c1
        c2=math.GetRandomNumber (7)
      endwhile
      c1=c1-1
      c2=c2-1
      tt= magicSquare [c1]
      magicSquare [c1]= magicSquare [c2]
      magicSquare [c2]=tt
      sqshw ()
      Timer.Resume ()
      shww ()
      
    elseIf lb=bb[8] Then
      Timer.Pause ()
      If q5=0   then 
        q5=6
      else
        q5=6
      EndIf 
      
      LDShapes.RemoveTurtleLines ()
      For i=1 To 49
        px=Math.Remainder ((i-1) 7)
        py=math.Floor((i-1)/7) 
        SQ[i]=math.Remainder (SQ[i]+q5 49)+1
        magicSquare[px][py]=sq[i]
        Controls.SetTextBoxText (nn[i] sq[i]) 
        
      Endfor
      Timer.Resume ()
      shww ()
      
    elseif lb=bb[1] then
      LDShapes.RemoveTurtleLines ()
      Turtle.Hide ()
      shww()
      
    elseif lb=bb[11] then
      Timer.Pause ()
      For i=1 To 49
        Controls.SetTextBoxText (nn[i] "" )
        
      EndFor 
      shww ()
      Timer.Resume ()
      
    else
      For i=1 To 49
        
        If Array.ContainsValue (pi sq[i]) then
          Controls.SetTextBoxText (nn[i] SQ[i])
        Else
          Controls.SetTextBoxText (nn[i] "" )
        EndIf 
      EndFor 
      shww ()
    endif
  EndIf 
endwhile

Sub shww
  For f=1 To 9
    Controls.showControl (bb[f])
  EndFor 
EndSub

Sub sqshw
  For i=1 To 49
    px=Math.Remainder ((i-1) 7)
    py=math.Floor((i-1)/7) 
    SQ[i]=magicSquare[py][px]
    Controls.SetTextBoxText (nn[i] sq[i]) 
  Endfor
EndSub

Sub bcc
  dobb="true
  lb= Controls.LastClickedButton 
EndSub 

Sub ttt
  ll=ldlist.CreateFromValues ("")
  For r=1 To 49
    LDList.Add (ll r)
  EndFor 
  
  i=1
  err="err: "
  For r=1 To 7
    ss=0
    For c=1 To 7
      tt=Controls.GetTextBoxText (nn[i])
      ss=ss+ tt
      If LDList.Contains (ll tt) then
        LDList.Remove (ll tt "true")
      ElseIf tt="" then
      else 
        err=err+tt+"; " 
      endif
      i=i+1
    EndFor 
    Controls.SetTextBoxText (ct[r+1] ss)
  EndFor 
  
  bb1= LDList.ToArray (ll)
  tx="missing: "
  sm=0
  
  For r=1 To Array.GetItemCount (bb1)
    tx=tx+bb1[r]+"; "
    sm=sm+bb1[r]
  EndFor 
  Shapes.SetText (mm tx+" = "+sm)
  Shapes.SetText (mm1 err)
  
  For c=1 To 7
    ss=0
    i=c
    For r=1 To 7
      ss=ss+ Controls.GetTextBoxText (nn[i])
      i=i+7
    EndFor 
    Controls.SetTextBoxText (ct[c+8] ss)
  EndFor 
  
  ss=0
  i=1
  For r=1 To 7
    tt=Controls.GetTextBoxText (nn[i])
    ss=ss+tt
    i=i+8
  EndFor 
  
  Controls.SetTextBoxText (ct[16] ss)
  ss=0
  i=43
  For r=1 To 7
    tt=Controls.GetTextBoxText (nn[i])
    ss=ss+tt
    i=i-6
  EndFor
  
  
  Controls.SetTextBoxText (sss[1] ss)
EndSub

sub genSq'(int n)
  n=args[1]
  i = n/2
  j = n-1
  For x=0 To n
    For y=0 To n
      magicSquare [x][y]=0
    EndFor
  EndFor 
  
  num=1
  while num<=n*n
    
    if (i=-1 And  j=n) Then 
      
      j = n-2
      i = 0
      
    else
      if (j = n) Then 
        j = 0
      endif
      
      if (i < 0) then
        i=n-1
      endif
    EndIf 
    
    if (magicSquare[math.Floor (i)][math.Floor (j)])>0 then 
      j=j- 2
      i=i+1
      goto  cont
      
    else
      magicSquare[math.Floor (i)][math.Floor (j)] = num
      num=num+1  
    endif
    j=j+1
    i=i-1
    cont:
  endwhile
  
endsub
