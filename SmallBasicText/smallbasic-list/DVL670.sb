GraphicsWindow.Title = "Pictogram - Handicapped Accesible Sign"

GraphicsWindow.Width = 600

GraphicsWindow.Height = 600

GraphicsWindow.BackgroundColor="tan

LDEvents.MouseWheel=mmw

zz=1

args=0



Sub mmw

  If Mouse.IsLeftButtonDown Then

    aa=aa+LDEvents.LastMouseWheelDelta*3

  Else

    zz=zz+LDEvents.LastMouseWheelDelta/20

  EndIf

  LDGraphicsWindow.Reposition(zz zz 0 0 aa)

EndSub



border = "#666666"

blue = "#155196"

GraphicsWindow.PenWidth = 3

GraphicsWindow.PenColor = border

GraphicsWindow.BrushColor = "White"

param="x=1;y=1;width=598;height=598;border-radius=50;"

GW_DrawRoundRectangle()

GraphicsWindow.BrushColor = "white

ldcall.Function5( "GW_FillRoundRectangle" 1 1 598 598 50)

GraphicsWindow.BrushColor = blue

ldcall.Function5( "GW_FillRoundRectangle" 15 15 570 570 35)

GraphicsWindow.PenWidth = 40

GraphicsWindow.PenColor = "White"

GraphicsWindow.BrushColor="transparent

Shapes.Move(Shapes.AddEllipse(280 280) 113, 246)

GraphicsWindow.PenWidth=0

GraphicsWindow.BrushColor = blue

Shapes.Move(Shapes.AddRectangle(160 160) 253, 216)

GraphicsWindow.PenWidth = 68

GraphicsWindow.PenColor = blue

Shapes.AddLine(212, 98, 228, 338)

GraphicsWindow.PenWidth = 40

GraphicsWindow.PenColor = "White"

Shapes.AddLine(212, 98, 228, 338)

GraphicsWindow.BrushColor = "White"

Shapes.Move(Shapes.AddEllipse(87 87) 188, 50)

GraphicsWindow.PenWidth = 84

GraphicsWindow.PenColor = blue

Shapes.AddLine(378, 306, 452, 490)

GraphicsWindow.PenWidth = 40

GraphicsWindow.PenColor = "White"

Shapes.AddLine(379, 307, 452, 490)

Shapes.AddLine(220, 250, 352, 250)

Shapes.AddLine(208, 320, 396, 320)

Shapes.AddLine(426, 480, 512, 447)



Sub GW_DrawRoundRectangle

  Stack.PushValue("local", param)

  Stack.PushValue("local", local)

  local = param

  param = ""

  param["r"] = local["border-radius"]

  If (local["width"] / 2 < param["r"]) Or (local["height"] / 2 < param["r"]) Then

    param["r"] = Math.Min(local["width"] / 2, local["height"] / 2)

  EndIf

  Shapes.addLine(local["x"] + param["r"], local["y"], local["x"] + local["width"] - param["r"], local["y"])

  Shapes.addLine(local["x"] + param["r"], local["y"] + local["height"], local["x"] + local["width"] - param["r"], local["y"] + local["height"])

  Shapes.addLine(local["x"], local["y"] + param["r"], local["x"], local["y"] + local["height"] - param["r"])

  

  Shapes.addLine(local["x"] + local["width"], local["y"] + param["r"], local["x"] + local["width"], local["y"] + local["height"] - param["r"])

  GraphicsWindow.PenWidth=1

  param["da"] = 5

  param["x"] = local["x"] + param["r"]

  param["y"] = local["y"] + param["r"]

  param["a1"] = 180

  param["a2"] = 270

  GW_DrawArc()

  param["x"] = local["x"] + local["width"] - param["r"]

  param["y"] = local["y"] + param["r"]

  param["a1"] = 270

  param["a2"] = 360

  GW_DrawArc()

  param["x"] = local["x"] + local["width"] - param["r"]

  param["y"] = local["y"] + local["height"] - param["r"]

  param["a1"] = 0

  param["a2"] = 90

  GW_DrawArc()

  param["x"] = local["x"] + param["r"]

  param["y"] = local["y"] + local["height"] - param["r"]

  param["a1"] = 90

  param["a2"] = 180

  GW_DrawArc()

  local = Stack.PopValue("local")

  param = Stack.PopValue("local")

EndSub



Sub GW_FillRoundRectangle

  

  pr=args[5]

  

  ' byy=LDShapes.BrushGradient("1="+blue+";2="+blue "DD")

  ' ldshapes.BrushRoundedRectangle(byy args[1] args[2] args[3] args[4]  pr )

  GraphicsWindow.PenWidth=0

  cc=Shapes.AddRectangle(args[3] args[4]-pr*2)

  Shapes.Move(cc args[1] args[2]+pr)

  cc=Shapes.AddRectangle(args[3]-PR*2 args[4])

  Shapes.Move(cc args[1]+pr args[2])

  cc= Shapes.AddEllipse(pr*2 pr*2)

  Shapes.Move(cc args[1] args[2])

  cc= Shapes.AddEllipse(pr*2 pr*2)

  Shapes.Move(cc args[1] args[2]+args[4]-pr*2)

  cc= Shapes.AddEllipse(pr*2 pr*2)

  Shapes.Move(cc args[1]+args[3]-pr*2 args[2])

  cc= Shapes.AddEllipse(pr*2 pr*2)

  Shapes.Move(cc args[1]+args[3]-pr*2 args[2]+args[4]-pr*2)

EndSub



Sub GW_DrawArc

  Stack.PushValue("local", param)

  Stack.PushValue("local", local)

  Stack.PushValue("local", a)

  local = param

  param = ""

  local["pw"] = GraphicsWindow.PenWidth

  local["pc"] = GraphicsWindow.PenColor

  local["bc"] = GraphicsWindow.BrushColor

  GraphicsWindow.BrushColor = local["pc"]

  local["r1"] = local["r"] - local["pw"] / 2

  local["r2"] = local["r"] + local["pw"] / 2

  For a = local["a1"] To local["a2"] Step local["da"]

    local["rad"] = Math.GetRadians(a)

    param["x1"] = local["x"] + local["r1"] * Math.Cos(local["rad"])

    param["y1"] = local["y"] + local["r1"] * Math.Sin(local["rad"])

    param["x2"] = local["x"] + local["r2"] * Math.Cos(local["rad"])

    param["y2"] = local["y"] + local["r2"] * Math.Sin(local["rad"])

    If local["a1"] < a Then

      GW_FillQuadrangle()

    EndIf

    param["x4"] = param["x1"]

    param["y4"] = param["y1"]

    param["x3"] = param["x2"]

    param["y3"] = param["y2"]

  EndFor

  GraphicsWindow.BrushColor = local["bc"]

  a = Stack.PopValue("local")

  local = Stack.PopValue("local")

  param = Stack.PopValue("local")

EndSub



Sub GW_FillQuadrangle

  Shapes.AddTriangle(param["x1"], param["y1"], param["x2"], param["y2"], param["x3"], param["y3"])

  Shapes.AddTriangle(param["x3"], param["y3"], param["x4"], param["y4"], param["x1"], param["y1"])

EndSub


