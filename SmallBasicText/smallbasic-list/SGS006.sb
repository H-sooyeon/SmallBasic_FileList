' This is a Decimal Analog Clock coded by MTS van der Walt. (December 2018).
' It displays the decimal portion of the Julian Date in Analog Format.
' The Red Hand and Numerals indicates Millidays since Midnight.

' Initialization:

   'Draw Clock Face and digits

  GraphicsWindow.BackgroundColor = "Black" 
  GraphicsWindow.Width = 600 
  GraphicsWindow.Height = 600 
  GW = GraphicsWindow.Width
  GH = GraphicsWindow.Height
  X = GW/2 ' Pivot point X position
  Y = GH/2 ' Pivot pont Y position
  R0 = 185 
  R1 = 195
  R2 = 220

   'Write name in top text area
  
  GraphicsWindow.Fontsize = 18
  'GraphicsWindow.PenColor = "White"
  GraphicsWindow.DrawText (197,9,"Decimal Analog Clock")
  
  ' Draw outer circle  
  
  GraphicsWindow.PenColor = "White"
  GraphicsWindow.PenWidth = 4
  GraphicsWindow.DrawEllipse(42, 42, 510, 510)
  Sides = 10
  Angle = 360 / Sides
  Radangle = Angle * Math.PI / 180
  Increment=RadAngle
   
  'Draw divisions around edge of Clock Face. Every fifth division is double length.
  
 GraphicsWindow.PenColor = "Gold" 

For i = 1 to 100
 m = X-(R0*(Math.Sin(RadAngle/10)))
 n = Y-(R0*(Math.Cos(RadAngle/10)))
 GraphicsWindow.DrawLine(X,Y,m,n)
 RadAngle=(RadAngle+Increment)
EndFor
For i = 1 to 20
 p = X-(R1*(Math.Sin(RadAngle/2)))
 q = Y-(R1*(Math.Cos(RadAngle/2)))
 GraphicsWindow.DrawLine(X,Y,p,q)
 RadAngle=(RadAngle+Increment)
EndFor

   'Clear inner area to dislay the hands here

 GraphicsWindow.BrushColor = "Black"
 GraphicsWindow.FillEllipse (122, 122, 355, 355)

   'Add Numeral Zero to top of Clock Face
   
 i=0
 GraphicsWindow.BrushColor = "Red"
 ClockNum[0] = Shapes.AddText(0)
 Shapes.Move(ClockNum[i],m-6,n-50)

   'Draw Milliday numerals 100 to 900 around outside of  Clock Face
  
For i = 1 To 9 Step 1
 Radians = Math.GetRadians(-i * 36 + 90)
 ClockNum[i] = Shapes.AddText(i*100)
 Shapes.Move(ClockNum[i],X-19+R2*Math.Cos(Radians),Y-12-R2*Math.Sin(Radians))
EndFor
 
RadAngle = 0 'Home postion of all hands ( @ Midnight)
  
While 1=1
 Update()
 Sound.PlayClick()
 Program.Delay(864) ' Never change this
EndWhile
 
   'Draw and move Hands according to specific time 
 
 

Sub Update
    
   'Draw RedHand Centre flange
    
 GraphicsWindow.Fontsize = 24
 GraphicsWindow.BrushColor = "Red"
 GraphicsWindow.FillEllipse (X-8, Y-8, 16, 16)
 GraphicsWindow.Fontsize = 18
   
   ' Get Local Time, Julian date, Millidays expired since Midnight
    
 LocalTime = Clock.Time    
 JD = Clock.ElapsedMilliseconds / 1000 / 3600 / 24 + 2415020.0
 JDDisplay = Math.Floor(1000000*JD) / 1000000
 JDInteger = Math.Floor (JD)
 JDDecimal = JD-JDInteger
 Millidays = 1000*(JDDecimal)
 Microdays = 1000000*(JDDecimal)
 Day = 1000000 * Microdays  
 MilliDay = Day / 1000
 
   'Clear the bottom text area
 
 GraphicsWindow.BrushColor = "Black" 
 GraphicsWindow.FillRectangle (20,563,590,25)
 
   'Write initial Local Time and Julian Date
 
 GraphicsWindow.BrushColor = "SteelBlue"
 GraphicsWindow.DrawText (20,563, "Local Time :")
 GraphicsWindow.DrawText (145,563, LocalTime)
 
 GraphicsWindow.BrushColor = "Turquoise"
 GraphicsWindow.DrawText (310,563,"Julian Day :")
 GraphicsWindow.DrawText (430,563,JDDisplay) 
 

   ' Move hands to current positions as determined by current Julian Time 

 If MilliDay <> RedValue Then
  Shapes.Remove(RedHand)
  RedValue = MilliDay / 10000000
  DRadAngle=Angle / 10
  RedRadAngle = DRadAngle * RedValue  'Current position of RedHand
  GraphicsWindow.PenColor = "Red"
  GraphicsWindow.PenWidth = 8
  RedHand = Shapes.AddLine(X,Y,X+R2 / 1.44 * Math.Cos(Math.GetRadians(RedRadAngle-90)),Y+R2 / 1.44 * Math.Sin(Math.GetRadians(RedRadAngle-90)))
  RedValue = RedValue + 1
 EndIf

 If MilliDay <> MagentaValue Then
  Shapes.Remove(MagentaHand)
  MagentaValue = MilliDay / 1000000
  DRadAngle=Angle / 10
  MagentaRadAngle = DRadAngle * MagentaValue  'Current position of MagentaHand
  GraphicsWindow.PenColor = "Magenta"
  GraphicsWindow.PenWidth = 6
  MagentaHand = Shapes.AddLine(X,Y,X+R2 / 1.39 * Math.Cos(Math.GetRadians(MagentaRadAngle-90)),Y+R2 / 1.39 * Math.Sin(Math.GetRadians(MagentaRadAngle - 90)))
  MagentaValue = MagentaValue + 1
 EndIf

 If MilliDay <> GreenValue Then
  Shapes.Remove(GreenHand)
  GreenValue = MilliDay / 100000 
  DRadAngle=Angle / 10
  GreenRadAngle = DRadAngle * GreenValue  'Current position of GreenHand
  GraphicsWindow.PenColor = "Green"
  GraphicsWindow.PenWidth = 4
  GreenHand = Shapes.AddLine(X,Y,X+R2 / 1.33 * Math.Cos(Math.GetRadians(GreenRadAngle - 90)),Y+R2 / 1.33 * Math.Sin(Math.GetRadians(GreenRadAngle - 90)))
  GreenValue = GreenValue + 1
 EndIf

 If MilliDay <> CyanValue Then
  Shapes.Remove(CyanHand)
  CyanValue = MilliDay / 10000 
  DRadAngle=Angle / 10
  CyanRadAngle = DRadAngle * CyanValue  'Current postion of CyanHand
  GraphicsWindow.PenColor = "Cyan"
  GraphicsWindow.PenWidth = 2
  CyanHand = Shapes.AddLine(X,Y,X+R2 / 1.26 * Math.Cos(Math.GetRadians(CyanRadAngle-90)),Y+R2 / 1.26 * Math.Sin(Math.GetRadians(CyanRadAngle-90)))
  CyanValue = CyanValue + 1
 EndIf
  
EndSub

'************************************
' Comments from LitDev (SB Moderator)
' My favorite for dynamic text output in graphicswindow is over text shapes.
' Initialization:
' Julian = Shapes.AddText(JDDisplay)
' Shapes.Move(Julian,430,563)
' Output:
' GraphicsWindow.DrawText (430,563,JDDisplay) 
' Shapes.SetText(Julian,JDDisplay)
'*************************************
