korr()
' The following line could be harmful and has been automatically commented.
' 'ff=File.ReadContents("e:\krnna.spl")
GraphicsWindow.Title="SVM Renderer
bbb=LDShapes.BrushGradient("1=tan;2=tan;3=#FF6B0000" "DD")
LDGraphicsWindow.BackgroundBrush(bbb)
hlw="true
VT = Text.GetCharacter(9)
CR = Text.GetCharacter(13)
LF = Text.GetCharacter(10)
WQ = Text.GetCharacter(34)
scale=5
not="true=false;false=true
LDEvents.MouseWheel=mww
GraphicsWindow.KeyDown=kkd
mmr=LDText.Split("OpenSVM OpenPoly SavePoly SaveClrs LoadClrs SaveProps LoadProps" " ")
LDDialogs.AddRightClickMenu(mmr "")
LDDialogs.RightClickMenu=rcll
ccc=LDText.Split("white red red red red red red red red red red " " ")
ff=korf

ox=2120
oy=-180
zz=1.5
LDGraphicsWindow.Reposition(zz zz ox, oy 0)
GraphicsWindow.Width=Desktop.Width
GraphicsWindow.Height=Desktop.Height
GraphicsWindow.Left=0
GraphicsWindow.Top=0
LDUtilities.ShowNoShapeErrors="false
rendd()
'ldpol()
'fi="e:\koronn.spc
scl()
spp()

LDGraphicsWindow.Reposition(zz zz ox, oy 0)
While 1=1
  If sclr Then
    sclr="false
    cc=LDDialogs.Colour()
    If cc="" Then
    Else
      LDShapes.BrushColour(Ls cc)
      clmt[ls]=cc
    EndIf
  EndIf
  
  Program.Delay(1)
EndWhile

'------------------------subs=============================
Sub spp
  ff=korm
  For r=1 To Array.GetItemCount(ff)
    Shapes.Move(shp[r] ff[r][1] ff[r][2])
  EndFor
  
EndSub

Sub rcll
  rm=LDDialogs.LastRightClickMenuItem
  If rm=1 Then
    
    fi=LDDialogs.OpenFile("svm" "e:\")
    If fi="" Then
    Else
      GraphicsWindow.Clear()
' The following line could be harmful and has been automatically commented.
'       ff=File.ReadContents(fi)
      pi=0
      ptm=""
      rendd()
    EndIf
    
  ElseIf rm=4 Then
    fi=LDDialogs.SaveFile("spc" "e:\")
    If fi="" Then
    Else
' The following line could be harmful and has been automatically commented.
'       File.WriteContents(fi clmt)
      
    EndIf
  ElseIf rm=6 Then
    fi=LDDialogs.SaveFile("spp" "e:\")
    If fi="" Then
    Else
      aaa=LDShapes.GetAllShapes()
      prpz=""
      For f=1 To Array.GetItemCount(aaa)
        prpz[f][1]=Shapes.GetLeft(aaa[f])
        prpz[f][2]=Shapes.GetTop(aaa[f])
        prpz[f][3]=Shapes.GetOpacity(aaa[f])
        prpz[f][4]=f
        
      EndFor
' The following line could be harmful and has been automatically commented.
'       File.WriteContents(fi prpz)
      
    EndIf
    
  ElseIf rm=5 Then
    
    fi=LDDialogs.OpenFile("spc" "e:\")
    If fi="" Then
    Else
      scl()
    EndIf
    
  ElseIf rm=7 Then
    
    fi=LDDialogs.OpenFile("spp" "e:\")
    If fi="" Then
    Else
      spp()
    EndIf
    
  ElseIf rm=2 Then
    
    fi=LDDialogs.OpenFile("spl" "e:\")
    If fi="" Then
    Else
      GraphicsWindow.Clear()
' The following line could be harmful and has been automatically commented.
'       ff=File.ReadContents(fi)
      ldpol()
    EndIf
    
  ElseIf rm=3 Then
    fi=LDDialogs.SaveFile("spl" "e:\")
    If fi="" Then
    Else
' The following line could be harmful and has been automatically commented.
'       File.WriteContents(fi ptm)
      
    EndIf
  EndIf
  
EndSub

Sub scl
  clmt=korc
  ci=Array.GetAllIndices(clmt)
  For f=1 To Array.GetItemCount(clmt)
    LDShapes.BrushColour(ci[f] clmt[ci[f]])
  EndFor
EndSub

Sub ldpol
  GraphicsWindow.BrushColor="#33bbbbbb
  GraphicsWindow.PenWidth=.4
  GraphicsWindow.PenColor="black
  GraphicsWindow.Title=Array.GetItemCount(ff)
  For f=1 To Array.GetItemCount(ff)
    po=LDShapes.AddPolygon(ff[f])
    LDShapes.SetShapeEvent(po)
  EndFor
  LDShapes.ShapeEvent=see
  zz=1.3
  aaa=LDShapes.GetAllShapes()
  LDGraphicsWindow.Reposition(zz zz ox, oy 0)
EndSub

Sub see
  If LDShapes.LastEventType="MouseDown" Then
    If Mouse.IsLeftButtonDown Then
      If FCKeyboard.IsControlPressed Then
        lsh=LDShapes.LastEventShape
      Else
        ls=LDShapes.LastEventShape
        sclr="true
      EndIf
    ElseIf Mouse.IsRightButtonDown Then
      lsh=LDShapes.LastEventShape
    EndIf
    
  EndIf
  
EndSub

Sub kkd
  lk=text.ConvertToLowerCase( GraphicsWindow.LastKey)
  If lk="left" Then
    If FCKeyboard.IsControlPressed Then
      Shapes.Move(lsh Shapes.GetLeft(lsh)-1 Shapes.GetTop(lsh))
    Else
      ox=ox-20
    EndIf
    
  ElseIf lk="return" Then
    sclr="true
  ElseIf lk="f1" Then
    For f=1 To Array.GetItemCount(aaa)
      LDShapes.penColour(aaa[f] "black")
      LDShapes.BrushColour(aaa[f] "transparent")
    EndFor
    
  ElseIf lk="f2" Then
    For f=1 To Array.GetItemCount(aaa)
      LDShapes.penColour(aaa[f] "black")
      bb=clmt[aaa[f]]
      If bb="" Then
        bb="transparent
      EndIf
      LDShapes.BrushColour(aaa[f] bb)
    EndFor
    
  ElseIf lk="tab" Then
    LDShapes.penColour(aaa[ti] "black")
    If FCKeyboard.IsControlPressed Then
      ti=ti-1
    Else
      ti=ti+1
    EndIf
    If ti>Array.GetItemCount(aaa) Then
      ti=1
    ElseIf ti<1 Then
      ti=Array.GetItemCount(aaa)
    EndIf
    lsh=aaa[ti]
    ls=lsh
    GraphicsWindow.Title="#"+ti
    LDShapes.penColour(aaa[ti] "white")
    
  ElseIf lk="right" Then
    If FCKeyboard.IsControlPressed Then
      Shapes.Move(lsh Shapes.GetLeft(lsh)+1 Shapes.GetTop(lsh))
    Else
      ox=ox+20
    EndIf
    
  ElseIf lk="up" Then
    If FCKeyboard.IsControlPressed Then
      Shapes.Move(lsh Shapes.GetLeft(lsh) Shapes.GetTop(lsh)-1)
    Else
      oy=oy-20
    EndIf
    
  ElseIf lk="down" Then
    If FCKeyboard.IsControlPressed Then
      Shapes.Move(lsh Shapes.GetLeft(lsh) Shapes.GetTop(lsh)+1)
    Else
      oy=oy+20
    EndIf
  EndIf
  LDGraphicsWindow.Reposition(zz zz ox, oy 0)
    GraphicsWindow.Title=ox+":"+oy
EndSub

Sub mww
  zz=zz+LDEvents.LastMouseWheelDelta/10
  LDGraphicsWindow.Reposition(zz zz ox, oy 0)
  GraphicsWindow.Title=zz
EndSub

Sub SVG_SetAttr
  If attr["style"] <> "" Then
    style = LDText.Split(attr["style"], ";")
    nStyle = Array.GetItemCount(style)
    For iStyle = 1 To nStyle
      pair = LDText.Split(style[iStyle], ":")
      If attr[pair[1]] = "" Then
        attr[pair[1]] = LDText.Replace(pair[2], "\", "")
      EndIf
    EndFor
  EndIf
  If (attr["stroke"] = "") Or (attr["stroke"] = "none") Then
    GraphicsWindow.PenColor = "Transparent"
  Else
    GraphicsWindow.PenColor = attr["stroke"]
  EndIf
  If attr["stroke-width"] <> "" Then
    GraphicsWindow.PenWidth = attr["stroke-width"] * scale
  EndIf
  If attr["fill"] = "none" Then
    GraphicsWindow.BrushColor = "Transparent"
  ElseIf attr["fill"] <> "" Then
    GraphicsWindow.BrushColor = attr["fill"]
  Else
    GraphicsWindow.BrushColor = "Black"
  EndIf
EndSub

Sub rendd
  xl=0
  yt=0
  For q=1 To Array.GetItemCount(ff)
    If Array.ContainsIndex(ff[q] "d") Then
      buf=(ff[q]["d"])
      
      ps_d()
    ElseIf  ff[q]["element"]= "rect" Then
      attr=(ff[q])
      'TextWindow.WriteLine(buf)
      'SVG_SetAttr()
      width = attr["width"] * scale
      height = attr["height"] * scale
      x = attr["x"] * scale
      y = attr["y"] * scale
      'dd=" / "
      'TextWindow.WriteLine(x+dd+y+dd+width+dd+height)
      nShp = nShp + 1
      GraphicsWindow.BrushColor="transparent
      
      shp[nShp] = Shapes.AddRectangle(width, height)
      Shapes.Move(shp[nShp], xL + x, yT + y)
      If width<350*scale Then
        
        Shapes.Zoom(shp[nShp] .95 .95)
        
        LDShapes.BrushColour(shp[nShp] "gray")
        LDEffect.DropShadow(shp[nShp] "")
      EndIf
      
    EndIf
  EndFor
EndSub

Sub AddArc_Ps  ' param large_arc_flag = 1 if angle > 180Â°  param swp_flag = 1 if positive angle
  _x = (ps["x"] + pe["x"]) / 2
  _y = (ps["y"] + pe["y"]) / 2
  dx = (ps["x"] - pe["x"])
  dy = (ps["y"] - pe["y"])
  d = Math.SquareRoot(dx * dx + dy * dy)
  da = 10
  r = d / 2
  k = rx / r
  If k < 1 Then
    match = "False"
  Else
    _d = k * d
    _r = _d / 2
    If large_arc_flag = sweep_flag Then
      cx = _x - (dy / 2) * (k * r * Math.Sin(Math.ArcCos(1 / k))) / r
      cy = _y + (dx / 2) * (k * r * Math.Sin(Math.ArcCos(1 / k))) / r
    Else
      cx = _x + (dy / 2) * (k * r * Math.Sin(Math.ArcCos(1 / k))) / r
      cy = _y - (dx / 2) * (k * r * Math.Sin(Math.ArcCos(1 / k))) / r
    EndIf
    cc=ldMath.Convert2Radial(cx cy ps["x"] ps["y"])
    as = cc[2]
    cc=ldMath.Convert2Radial(cx cy pe["x"] pe["y"])
    ae = cc[2]
    If sweep_flag = 1 Then
      If ae < as Then
        ae = ae + 360
      EndIf
      For a = as To ae Step da
        x = cx + rx * LDMath.Cos(a)
        y = cy + ry * LDMath.Sin(a)
        AddPoint()
      EndFor
      If a < ae + da Then
        x = cx + rx * LDMath.Cos(ae)
        y = cy + ry * LDMath.Sin(ae)
        AddPoint()
      EndIf
    Else ' sweep_flag = 0
      If as < ae Then
        as = as + 360
      EndIf
      For a = as To ae Step -da
        x = cx + rx * LDMath.Cos(a)
        y = cy + ry * LDMath.Sin(a)
        AddPoint()
      EndFor
      If ae - da < a Then
        x = cx + rx * LDMath.Cos(ae)
        y = cy + ry * LDMath.Sin(ae)
        AddPoint()
      EndIf
    EndIf
    xo = x
    yo = y
  EndIf
EndSub

Sub AddCubic_Ps
  nC = nC + 1
  _c[nC] = "x=" + x1 + ";y=" + y1 + ";"
  nc = nC + 1
  _c[nC] = "x=" + x2 + ";y=" + y2 + ";"
  nc = nC + 1
  _c[nC] = "x=" + x + ";y=" + y + ";"
  For t = 0 To 1 Step 0.05
    x1 = (1 - t) * _c[nC - 3]["x"] + t * _c[nC - 2]["x"]
    y1 = (1 - t) * _c[nC - 3]["y"] + t * _c[nC - 2]["y"]
    x2 = (1 - t) * _c[nC - 2]["x"] + t * _c[nC - 1]["x"]
    y2 = (1 - t) * _c[nC - 2]["y"] + t * _c[nC - 1]["y"]
    x3 = (1 - t) * _c[nC - 1]["x"] + t * _c[nC]["x"]
    y3 = (1 - t) * _c[nC - 1]["y"] + t * _c[nC]["y"]
    x12 = (1 - t) * x1 + t * x2
    y12 = (1 - t) * y1 + t * y2
    x23 = (1 - t) * x2 + t * x3
    y23 = (1 - t) * y2 + t * y3
    x = (1 - t) * x12 + t * x23
    y = (1 - t) * y12 + t * y23
    AddPoint()
  EndFor
  xo = x
  yo = y
EndSub

Sub AddPoint
  If __Ps <> "" Then
    __Ps = __Ps + " "
  EndIf
  __Ps = __Ps + x + "," + y
EndSub

Sub AddQuad_Ps
  nQ = nQ + 1
  _q[nQ] = "x=" + x1 + ";y=" + y1 + ";"
  nQ = nQ + 1
  _q[nQ] = "x=" + x + ";y=" + y + ";"
  For t = 0 To 1 Step 0.05
    x1 = (1 - t) * _q[nQ - 2]["x"] + t * _q[nQ - 1]["x"]
    y1 = (1 - t) * _q[nQ - 2]["y"] + t * _q[nQ - 1]["y"]
    x2 = (1 - t) * _q[nQ - 1]["x"] + t * _q[nQ]["x"]
    y2 = (1 - t) * _q[nQ - 1]["y"] + t * _q[nQ]["y"]
    x = (1 - t) * x1 + t * x2
    y = (1 - t) * y1 + t * y2
    AddPoint()
  EndFor
  xo = x
  yo = y
EndSub

Sub ps_Arc
  _p = p
  char = "Aa"
  ps_Char()
  If match Then
    cmd = c
  EndIf
  matchA = "False"
  ps = "x=" + xo + ";y=" + yo + ";" ' start point
  While match
    ps_Space()
    ps_Point()     ' rx, ry
    If match Then
      rx = x
      ry = y
      ps_Space()
      ps_Number()  ' x-axis-rotation
    EndIf
    If match Then
      x_axis_rotation = number
      ps_Space()
      char = "01"
      ps_Char()    ' large-arc-flag
    EndIf
    If match Then
      large_arc_flag = c
      ps_Space()
      char = "01"
      ps_Char()    ' sweep-flag
    EndIf
    If match Then
      sweep_flag = c
      ps_Space()
      ps_Point()   ' end point
    EndIf
    If match Then
      If cmd = "a" Then
        x = xo + x
        y = yo + y
      EndIf
      matchA = "True"
      pe = "x=" + x + ";y=" + y + ";"
      AddArc_Ps()
    EndIf
  EndWhile
  If Not[matchA] Then
    p = _p
  Else
    _Ps[n_Ps] = _Ps[n_Ps] + " " + __Ps
    match = "True"
  EndIf
EndSub

Sub ps_Char
  match = "False"
  c = Text.GetSubText(buf, p, 1)
  If (p <= len) And Text.IsSubText(char, c) Then
    match = "True"
    p = p + 1
  EndIf
EndSub

Sub ps_ClosePath
  char = "Zz"
  ps_Char()
  If match Then
    closed[n_Ps] = "True"
    xo = xz
    yo = yz
    cmd = c
  EndIf
EndSub

Sub ps_Cubic
  _p = p
  char = "CcSs"
  ps_Char()
  If match Then
    cmd = c
  EndIf
  matchC = "False"
  If Text.IsSubText("Cc", cmd) Then
    _c = ""
    nC = 1
    _c[nC]["x"] = xo
    _c[nC]["y"] = yo
    While match
      ps_Space()
      ps_Point()   '  control point 1
      If match Then
        If cmd = "c" Then
          x = xo + x
          y = yo + y
        EndIf
        x1 = x
        y1 = y
        ps_Space()
        ps_Point() ' control point 2
        If cmd = "c" Then
          x = xo + x
          y = yo + y
        EndIf
      EndIf
      If match Then
        x2 = x
        y2 = y
        ps_Space()
        ps_Point() ' end point
        If cmd = "c" Then
          x = xo + x
          y = yo + y
        EndIf
      EndIf
      If match Then
        matchC = "True"
        AddCubic_Ps()
      EndIf
    EndWhile
  Else  ' S or s
    ps_Space()
    ps_Point() ' end point
    If match Then
      If cmd = "s" Then
        x = xo + x
        y = yo + y
      EndIf
      x1 = _c[nC]["x"] + (_c[nC]["x"] - _c[nC - 1]["x"])
      y1 = _c[nC]["y"] + (_c[nC]["x"] - _c[nC - 1]["x"])
      AddCubic_Ps()
    EndIf
  EndIf
  If Not[matchC] Then
    p = _p
  Else
    _Ps[n_Ps] = _Ps[n_Ps] + " " + __Ps
    match = "True"
  EndIf
EndSub

Sub Render_Polygon
  For iPts = 1 To nPts
    _pt = LDText.Split(pts[iPts], ",")
    pt[iPts][1] = Math.Round(_pt[1] * scale)
    pt[iPts][2] = Math.Round(_pt[2] * scale)
  EndFor
  nShp = nShp + 1
  shp[nShp] = LDShapes.AddPolygon(pt)
  pi=pi+1
  ptm[pi]=pt
  If hlw Then
    LDShapes.BrushColour(shp[nShp] "transparent")
    LDShapes.PenWidth(shp[nShp] 0.8)
    LDShapes.PenColour(shp[nShp] "black")
  EndIf
  Shapes.Move(shp[nShp], 50, -50)'xL, yT)
EndSub

Sub ps_LineTo
  _p = p
  char = "LlHhVv"
  ps_Char()
  If match Then
    cmd = c
    __Ps = ""
  EndIf
  matchL = "False"
  If Text.IsSubText("Ll", cmd) Then
    While match
      ps_Space()
      ps_Point()
      If match Then
        matchL = "True"
        If cmd = "l" Then
          x = xo + x
          y = yo + y
        EndIf
        AddPoint()
        xo = x
        yo = y
      EndIf
    EndWhile
  Else
    ' cmd is subtext of "HhVv"
    While match
      ps_Space()
      ps_Number()
      If match Then
        matchL = "True"
        If cmd = "H" Then
          x = number
          y = yo
        ElseIf cmd = "h" Then
          x = xo + number
          y = yo
        ElseIf cmd = "V" Then
          x = xo
          y = number
        ElseIf cmd = "v" Then
          x = xo
          y = yo + number
        EndIf
        AddPoint()
        xo = x
        yo = y
      EndIf
    EndWhile
  EndIf
  If Not[matchL] Then
    p = _p
  Else
    _Ps[n_Ps] = _Ps[n_Ps] + " " + __Ps
    match = "True"
  EndIf
EndSub

Sub ps_MoveTo
  _p = p
  char = "Mm"
  ps_Char()
  If match Then
    cmd = c
    __Ps = ""
  EndIf
  matchM = "False"
  While match
    ps_Space()
    ps_Point()
    If match Then
      matchM = "True"
      If cmd = "m" Then
        x = xo + x
        y = yo + y
      EndIf
      AddPoint()
      xo = x
      yo = y
      xz = x
      yz = y
    EndIf
  EndWhile
  If Not[matchM] Then
    p = _p
  Else
    match = "True"
    n_Ps = n_Ps + 1
    _Ps[n_Ps] = __Ps
    closed[n_Ps] = "False"
  EndIf
EndSub

Sub ps_Number
  
  _p = p
  matchN = "False"
  char = "-"
  ps_Char()
  If match Then
    number = "-"
  Else
    number = ""
  EndIf
  match = "True"
  char = "0123456789"
  While match
    ps_Char()
    If match Then
      number = Text.Append(number, c)
      matchN = "True"
    EndIf
  EndWhile
  char = "."
  ps_Char()
  
  If match Then
    number = Text.Append(number, c)
  EndIf
  char = "0123456789"
  While match
    ps_Char()
    If match Then
      number = Text.Append(number, c)
      matchN = "True"
    EndIf
  EndWhile
  If Not[matchN] Then
    p = _p
  Else
    match = "True"
  EndIf
EndSub

Sub ps_Point
  
  _p = p
  match = "False"
  ps_Number()
  If match Then
    x = number
    ps_Space()
    match = "True"
  EndIf
  If match Then
    ps_Number()
  EndIf
  If match Then
    y = number
  Else
    p = _p
  EndIf
EndSub

Sub ps_Quadratic
  
  _p = p
  char = "QqTt"
  ps_Char()
  If match Then
    cmd = c
  EndIf
  matchQ = "False"
  If Text.IsSubText("Qq", cmd) Then
    _q = ""
    nQ = 1
    _q[nQ]["x"] = xo
    _q[nQ]["y"] = yo
    While match
      ps_Space()
      ps_Point()   '  control point
      If cmd = "q" Then
        x = xo + x
        y = yo + y
      EndIf
      x1 = x
      y1 = y
      If match Then
        ps_Space()
        ps_Point() ' end point
        If cmd = "q" Then
          x = xo + x
          y = yo + y
        EndIf
      EndIf
      If match Then
        matchQ = "True"
        AddQuad_Ps()
      EndIf
    EndWhile
  Else  ' T or t
    ps_Space()
    ps_Point() ' end point
    If match Then
      If cmd = "t" Then
        x = xo + x
        y = yo + y
      EndIf
      x1 = _q[nQ]["x"] + (_q[nQ]["x"] - _q[nQ - 1]["x"])
      y1 = _q[nQ]["y"] + (_q[nQ]["x"] - _q[nQ - 1]["x"])
      AddQuad_Ps()
    EndIf
  EndIf
  If Not[matchQ] Then
    p = _p
  Else
    _Ps[n_Ps] = _Ps[n_Ps] + " " + __Ps
    match = "True"
  EndIf
EndSub

Sub ps_d'--------------paths---------
  match = "False"
  len = Text.GetLength(buf)
  p = 1
  _Ps = ""
  closed = ""
  n_Ps = 0
  xo = 0
  yo = 0
  While p <= len
    ps_Space()
    ps_MoveTo()
    If Not[match] Then
      ps_LineTo()
    EndIf
    If Not[match] Then
      ps_Cubic()
    EndIf
    If Not[match] Then
      ps_Quadratic()
    EndIf
    If Not[match] Then
      ps_Arc()
    EndIf
    If Not[match] Then
      ps_ClosePath()
    EndIf
  EndWhile
  ' SVG_SetAttr()
  For i_Ps = 1 To n_Ps
    pt = ""
    pts = LDText.Split(_Ps[i_Ps], " ")
    nPts = Array.GetItemCount(pts)
    
    Render_Polygon()
    
  EndFor
EndSub

Sub Render_Polyline
  GraphicsWindow.PenWidth=.5
  For iPts = 1 To nPts
    _pt = LDText.Split(pts[iPts], ",")
    x2 = Math.Round(_pt[1] * scale)
    y2 = Math.Round(_pt[2] * scale)
    If 1 < iPts Then
      nShp = nShp + 1
      shp[nShp] = Shapes.AddLine(x1, y1, x2, y2)
      Shapes.Move(shp[nShp], xL, yT)
    EndIf
    x1 = x2
    y1 = y2
  EndFor
  'Program.Delay(1222)
EndSub

Sub ps_Space
  
  match = "False"
  While (p <= len) And Text.IsSubText(" ," + VT + CR + LF, Text.GetSubText(buf, p, 1))
    match = "True"
    p = p + 1
  EndWhile
EndSub

Sub  korr
  korf="1=element\=svg\;level\=1\;;2=element\=g\;level\=2\;id\=11\;;3=element\=path\;level\=3\;d\=m -300.59645,69.566961 c -0.87875,0 -1.67535,0.792681 -1.67535,1.670182 0,0.899997 1.32497,2.301056 0.36122,2.895431 -0.61314,0.376876 -1.7982,-0.359151 -2.66289,-0.359151 -0.87781,0 -1.67122,0.717018 -1.67122,1.595768 0,0.878126 0.79341,1.595769 1.67122,1.595769 0.81,0 3.03329,-1.534837 2.98173,-0.364836 l -0.0263,0.602547 -0.20464,2.863392 c -1.87264,0.533459 -3.24425,2.253031 -3.24425,4.296379 0,0.953595 0.30375,1.833141 0.81287,2.558499 -1.04485,0.550987 -1.6924,1.804575 -1.6924,3.449402 -0.0144,2.369999 -2.69286,2.272212 -2.69286,2.272212 0,0 0.20328,1.179952 1.19735,1.699638 0.25573,0.133459 0.52165,0.221091 0.7891,0.270785 -1.34536,1.039911 -2.81125,1.785091 -4.34134,2.324404 -0.34816,-0.839345 -1.17555,-1.431953 -2.13786,-1.431953 -1.27616,0 -2.31614,1.039415 -2.31614,2.315622 0,0.0589 0.003,0.116951 0.008,0.174665 -1.01347,0.150008 -2.02965,0.251835 -3.03547,0.331245 -0.17742,-1.193279 -1.20611,-2.113566 -2.44791,-2.113566 -1.35065,0 -2.45091,1.087893 -2.47582,2.43241 -1.08451,0.07874 -2.12561,0.177162 -3.08715,0.338481 -0.51709,-0.689885 -1.33954,-1.138949 -2.26601,-1.138949 -1.56074,0 -2.83187,1.271678 -2.83187,2.832383 0,0.16487 0.0166,0.32572 0.0444,0.48266 -0.66619,0.56295 -1.18519,1.17663 -1.5782,1.82831 -0.0268,0 -0.0526,-0.005 -0.0796,-0.005 -1.61777,0 -2.93574,1.31649 -2.93574,2.93523 0,1.35866 0.93033,2.50218 2.18643,2.83445 0.15784,0.87578 0.4141,1.75745 0.73381,2.62826 -0.70514,0.41523 -1.18081,1.17994 -1.18081,2.05517 0,1.31558 1.07201,2.38642 2.38745,2.38642 0.30475,0 0.59586,-0.0587 0.86403,-0.16381 0.48884,0.8278 0.9904,1.59585 1.47536,2.2996 -0.0422,0.01 -0.0845,0.0175 -0.1266,0.0279 -0.96469,0.23719 -1.96899,0.6523 -2.5368,1.10949 3.72803,1.31682 5.47927,2.86657 7.18768,5.01778 -0.24163,0.47426 -0.36846,0.96007 -0.36846,1.45417 0,0.68834 0.63561,1.10586 1.40922,1.54306 -0.0468,0.19921 -0.0604,0.40581 -0.0238,0.61289 0.14468,0.82488 1.01448,1.46441 1.69447,1.6061 0.021,0.18905 0.0546,0.40556 0.11627,0.57102 0.11499,0.31137 0.39956,0.65727 0.57723,0.8568 -0.43003,0.55338 -0.65836,1.14133 -0.65836,1.75803 0,3.18187 9.45451,5.72782 21.7842,5.72782 12.33094,0 21.78575,-2.54594 21.78575,-5.72782 0,-0.61333 -0.22614,-1.19795 -0.65164,-1.74873 0.17679,-0.19778 0.46848,-0.55041 0.5855,-0.8661 0.0192,-0.0516 0.0351,-0.10902 0.0496,-0.16846 0.0644,0.0273 0.12979,0.0491 0.19688,0.061 0.67251,0.11719 1.9336,-0.61524 2.11047,-1.62367 0.0889,-0.50264 -0.10442,-1.0052 -0.40359,-1.39682 0.49923,-0.49065 0.81752,-1.0276 0.81752,-1.6154 0,-0.28723 -0.0549,-0.57438 -0.15865,-0.86042 1.82132,-2.26934 3.9783,-3.95238 7.41919,-5.20123 -0.56813,-0.45718 -1.57242,-0.8723 -2.5368,-1.10949 -0.13994,-0.0345 -0.28006,-0.0626 -0.42013,-0.0878 0.47285,-0.68943 0.96063,-1.43713 1.43454,-2.23966 0.26818,0.10511 0.55928,0.16382 0.86403,0.16382 1.31545,0 2.38745,-1.07084 2.38745,-2.38642 0,-0.87523 -0.47567,-1.63994 -1.18081,-2.05517 0.31971,-0.87081 0.57597,-1.75248 0.73381,-2.62827 1.2561,-0.33226 2.18643,-1.47579 2.18643,-2.83445 0,-1.61873 -1.31797,-2.93522 -2.93574,-2.93522 -0.0269,0 -0.0528,0.004 -0.0796,0.005 -0.393,-0.65168 -0.91201,-1.26536 -1.5782,-1.82831 0.0278,-0.15694 0.0444,-0.31779 0.0444,-0.48266 0,-1.560708 -1.27113,-2.832386 -2.83187,-2.832386 -0.92647,0 -1.74892,0.449064 -2.26601,1.138949 -0.96154,-0.161319 -2.00264,-0.259744 -3.08715,-0.338481 -0.0249,-1.344517 -1.12517,-2.43241 -2.47582,-2.43241 -1.2418,0 -2.27049,0.9203 -2.44791,2.113566 -1.00581,-0.0794 -2.022,-0.181237 -3.03547,-0.331245 0.005,-0.05771 0.008,-0.115761 0.008,-0.174665 0,-1.276207 -1.03998,-2.315622 -2.31614,-2.315622 -0.96231,0 -1.7897,0.592608 -2.13786,1.431953 -1.51131,-0.532698 -2.95994,-1.266187 -4.29172,-2.286163 0.36172,-0.03144 0.7271,-0.128487 1.07332,-0.309026 0.99437,-0.519686 1.19734,-1.697572 1.19734,-1.697572 0,0 -2.69234,0.0966 -2.69234,-2.293399 0,-1.632836 -0.64712,-2.881469 -1.69189,-3.430797 0.50852,-0.725537 0.81235,-1.604922 0.81235,-2.557983 0,-2.04388 -1.37328,-3.763394 -3.24631,-4.296379 l -0.20266,-2.840661 -0.0284,-0.625285 c -0.0519,-1.170937 2.10599,0.364836 2.9838,0.364836 0.87782,0 1.67122,-0.717643 1.67122,-1.595769 0,-0.87875 -0.7934,-1.595768 -1.67122,-1.595768 -0.89532,0 -2.08196,0.736027 -2.66133,0.359151 -0.97219,-0.633745 0.35966,-1.995429 0.35966,-2.895431 0,-0.877498 -0.7968,-1.670182 -1.67586,-1.670182 z\;;4=element\=path\;level\=3\;d\=m -300.59645,80.385423 c 2.1975,0 3.97753,1.781279 3.97753,3.977535 0,0.889838 -0.29409,1.709364 -0.78858,2.370915 -0.36618,-0.109342 -0.76685,-0.148362 -1.19838,-0.09715 -0.86718,0.101875 -1.45484,0.539525 -1.99109,1.025776 -0.535,-0.486251 -1.12081,-0.922652 -1.98644,-1.025776 -0.43267,-0.05181 -0.83432,-0.01286 -1.20148,0.09715 -0.49479,-0.661538 -0.7891,-1.481034 -0.7891,-2.370915 0,-2.196251 1.78129,-3.977535 3.97754,-3.977535 z\;;5=element\=path\;level\=3\;d\=m -303.79006,93.850751 c 0,0 -0.12194,0.08228 -0.30592,0.188619 -0.39661,0.685387 -1.11194,2.03001 -1.53117,3.487642 -0.0118,0.04588 -0.0265,0.09095 -0.0398,0.136424 -0.20838,0.7635 -0.32918,1.545254 -0.26562,2.263429 0.17,1.934685 1.45772,3.414455 1.82366,5.321635 0.11991,0.62537 0.16579,1.32745 0.17105,2.02262 0.22666,-0.36362 0.45971,-0.6987 0.69401,-1.00046 0.023,-0.50825 0.027,-1.01321 0.005,-1.50998 -0.0231,-0.52313 -0.21014,-1.33388 -0.43201,-2.14044 -0.21969,-0.80656 -0.4745,-1.60542 -0.632,-2.10323 -0.47032,-1.485001 -0.0955,-3.244903 0.39481,-4.630208 0.32071,-0.90559 0.58416,-1.333736 0.76481,-1.680517 -0.16178,-0.117242 -0.30948,-0.236572 -0.4377,-0.355534 z\;;6=element\=path\;level\=3\;d\=m -325.67451,115.07994 c 0.27241,-1.51129 0.85421,-2.5988 0.85421,-2.5988 0,0 0.40887,-0.0208 1.05937,0.0827 -2.14519,-2.37114 -3.49699,-4.90513 -2.27686,-7.136 2.21477,-4.0516 13.2211,-0.82646 19.57141,-7.143235 -0.44649,-0.159946 -0.88687,-0.372864 -1.26866,-0.662493 v 0 c -7.21973,5.200785 -16.45189,2.290707 -20.07474,5.215705 -4.01414,3.23991 -1.16972,8.30698 2.13527,12.24214\;;7=element\=path\;level\=3\;d\=m -302.53329,94.582961 c -0.66861,1.300994 -1.83126,4.038066 -1.07486,6.202719 0.35812,1.02719 1.05871,3.1739 1.07435,4.2814 0.003,0.22145 -0.005,0.45672 -0.0207,0.70125 1.05683,-1.12772 1.9575,-1.62368 1.9575,-1.62368 0,0 0.90408,0.49751 1.96319,1.62885 -0.0161,-0.24596 -0.0238,-0.48254 -0.0207,-0.70539 0.0144,-1.10844 0.71529,-3.25575 1.07435,-4.28294 0.5175,-1.483442 0.41099,-2.485205 0.046,-3.478342 -0.2978,-0.812731 -0.76659,-1.623869 -1.20716,-2.678906 -0.49703,0.257006 -1.10537,0.485698 -1.85467,0.65164 -0.79288,-0.175443 -1.42575,-0.421468 -1.93735,-0.696601 z\;;8=element\=path\;level\=3\;d\=m -300.59697,104.57154 c 0,0 -3.50708,1.80052 -4.76301,6.83834 -1.88437,-3.47655 -5.18005,-4.49946 -5.18005,-4.49946 0,0 -1.92397,2.07471 -2.51303,5.75003 -2.74438,-2.72812 -5.26066,-3.00808 -5.26066,-3.00808 0,0 -1.12816,1.76558 -1.21284,5.32526 -2.58314,-2.07532 -5.21157,-2.08567 -5.21157,-2.08567 0,0 -1.33451,3.00499 -0.51263,5.94279 -0.87501,-0.41531 -1.90669,-0.58843 -3.14606,-0.50281 -1.05688,0.0738 -2.05446,0.24851 -2.62258,0.70539 2.25402,0.87253 4.43054,2.53466 6.03736,4.79299 0.70571,-1.1512 2.10005,-2.22484 4.02611,-3.1657 -0.16908,-0.34177 -0.3429,-0.69828 -0.48318,-1.00614 -0.4,-0.87594 -1.11621,-2.2779 -1.11621,-2.2779 -0.0109,-0.0266 0.0225,-0.0413 0.0357,-0.0176 0,0 0.89925,1.27065 1.40456,2.06034 0.19667,0.30761 0.43728,0.66426 0.66766,1.00149 1.63091,-0.7417 3.60653,-1.39085 5.84306,-1.91978 -0.10857,-0.27191 -0.51602,-1.39445 -0.85525,-2.21588 -0.38906,-0.94251 -1.06609,-2.38694 -1.06608,-2.38694 -0.0119,-0.0256 0.0204,-0.0445 0.0357,-0.0202 0,0 0.94367,1.42745 1.46554,2.38745 0.38527,0.70825 0.82196,1.67036 1.01545,2.10065 1.70444,-0.37898 3.55704,-0.68491 5.51439,-0.91313 -0.0924,-0.58274 -0.26579,-1.67538 -0.40308,-2.4846 -0.20344,-1.19625 -0.32422,-1.87097 -0.54828,-3.06441 -0.005,-0.0281 0.0307,-0.0376 0.0398,-0.0114 0.3975,1.155 0.60588,1.8119 0.94619,2.98535 0.23054,0.79355 0.5085,1.87604 0.66508,2.4939 2.14488,-0.2255 4.41308,-0.35446 6.76806,-0.36794 0.005,-0.11497 0.0873,-1.91288 0.16485,-3.11453 0.0803,-1.24375 0.24494,-4.00493 0.24494,-4.00493 0.003,-0.0275 0.0387,-0.43823 0.0419,-0.40979 0,0 0.15476,3.16982 0.22945,4.41265 0.0725,1.20359 0.14544,3.00673 0.14986,3.11609 2.37495,0.0142 4.65181,0.14929 6.79442,0.38292 0.15538,-0.6156 0.43673,-1.70936 0.66817,-2.50837 0.34094,-1.17344 0.5489,-1.82933 0.94672,-2.98432 0.009,-0.0272 0.0454,-0.0174 0.0398,0.01 -0.22438,1.19313 -0.34392,1.86785 -0.54829,3.06441 -0.13839,0.81425 -0.31386,1.92025 -0.40515,2.49959 1.96442,0.23732 3.80017,0.56196 5.49269,0.94982 0.18105,-0.40324 0.64259,-1.42132 1.03921,-2.15181 0.52219,-0.96 1.46555,-2.38745 1.46555,-2.38745 0.0153,-0.0241 0.0478,-0.006 0.0356,0.0196 0,0 -0.67682,1.44515 -1.06557,2.38797 -0.35437,0.85783 -0.80053,2.09396 -0.86454,2.27169 2.21342,0.53967 4.14383,1.19638 5.72988,1.92702 0.24211,-0.35378 0.50171,-0.73771 0.71055,-1.06505 0.50532,-0.78969 1.40405,-2.06034 1.40405,-2.06034 0.0144,-0.0238 0.0477,-0.009 0.0377,0.0176 0,0 -0.71777,1.40195 -1.11621,2.27789 -0.15002,0.32874 -0.33858,0.71456 -0.5178,1.07539 2.04505,1.01343 3.43337,2.15689 3.97289,3.33055 1.62058,-2.37869 3.87122,-4.12445 6.20272,-5.02709 -0.56781,-0.45687 -1.56674,-0.63163 -2.62362,-0.70538 -1.23844,-0.0856 -2.26961,0.0875 -3.14399,0.50281 0.82156,-2.93781 -0.18603,-5.36918 -0.18603,-5.36918 0,0 -2.95556,-0.56326 -5.53868,1.51205 -0.085,-3.55969 -1.21285,-5.32526 -1.21285,-5.32526 0,0 -2.51598,0.27997 -5.26066,3.00809 -0.5275,-3.89187 -2.51302,-5.75004 -2.51302,-5.75004 0,0 -3.29599,1.0229 -5.18005,4.49947 -1.25595,-5.03782 -4.76457,-6.83834 -4.76457,-6.83834 z\;;9=element\=path\;level\=3\;d\=m -300.61247,126.00124 c -12.32969,0 -21.05608,2.53786 -21.05608,6.51537 0,1.82186 2.86433,3.38202 7.62434,4.38371 -0.16172,-0.0377 -0.32396,-0.0751 -0.48007,-0.11421 -1.72765,-0.43319 -3.10895,-0.95184 -4.07883,-1.55339 -0.96987,-0.60155 -1.55701,-1.31149 -1.55701,-2.11925 0,-0.80776 0.58717,-1.51851 1.55701,-2.1208 0.96985,-0.60229 2.35117,-1.1218 4.07883,-1.55598 3.45531,-0.86836 8.29503,-1.38596 13.91181,-1.38596 5.61708,0 10.45693,0.5176 13.91233,1.38596 1.7277,0.43418 3.10948,0.95369 4.07934,1.55598 0.96985,0.60229 1.55701,1.31304 1.55701,2.1208 0,0.80776 -0.58713,1.5177 -1.55701,2.11925 -0.96989,0.60155 -2.35166,1.1202 -4.07934,1.55339 -0.15612,0.0391 -0.31836,0.0765 -0.48008,0.11421 4.76017,-1.00169 7.62434,-2.56186 7.62434,-4.38371 0,-3.9775 -8.72566,-6.51643 -21.05659,-6.51537 z\;;10=element\=path\;level\=3\;d\=m -300.61247,128.54476 c -2.53408,0 -4.904,0.10844 -7.059,0.30437 2.20291,0.15552 4.57212,0.23823 7.05952,0.23823 2.48741,0 4.8563,-0.0827 7.059,-0.23823 -2.15521,-0.19596 -4.52513,-0.30437 -7.05952,-0.30437 z m -9.54619,0.58601 c -1.29823,0.17498 -2.50261,0.38168 -3.57187,0.62373 3.61267,0.5968 8.1349,0.92501 13.11858,0.92501 4.98341,0 9.50546,-0.32826 13.11806,-0.92501 -1.0693,-0.24205 -2.27361,-0.44875 -3.57188,-0.62373 -2.8703,0.29354 -6.0973,0.45062 -9.54618,0.45062 -3.44869,0 -6.67625,-0.15706 -9.54671,-0.45062 z m -4.74028,0.91622 c -0.73796,0.20179 -1.40297,0.41995 -1.98334,0.65164 3.93126,1.00206 9.70445,1.57096 16.27033,1.57096 6.56532,0 12.33896,-0.56877 16.27032,-1.57096 -0.5804,-0.23167 -1.24545,-0.44988 -1.98334,-0.65164 -3.81601,0.72682 -8.76955,1.12655 -14.28698,1.12655 -5.51771,0 -10.47094,-0.39967 -14.28699,-1.12655 z m -2.70888,0.96687 c -0.26999,0.12981 -0.51617,0.26263 -0.73484,0.39842 -0.25796,0.1602 -0.47261,0.322 -0.6537,0.48473 3.77055,1.27879 10.50806,1.94303 18.38441,1.94303 7.8757,0 14.61344,-0.66355 18.3844,-1.94252 -0.1811,-0.16283 -0.39557,-0.32493 -0.6537,-0.48524 -0.21855,-0.13572 -0.46446,-0.26867 -0.73433,-0.39842 -4.01066,1.12375 -10.06065,1.75028 -16.99637,1.74976 -6.93601,0 -12.98526,-0.62624 -16.99587,-1.74976 z m -1.7787,1.31309 c -0.18545,0.26277 -0.28009,0.52605 -0.28009,0.78652 0,0.16538 0.0412,0.33201 0.11524,0.49868 3.62759,1.45848 10.65469,2.27581 18.93942,2.27634 8.28574,0 15.31215,-0.81839 18.93941,-2.27738 0.0737,-0.16632 0.11472,-0.3326 0.11472,-0.49764 0,-0.2602 -0.0946,-0.52298 -0.27957,-0.78548 -3.86857,1.37966 -10.71974,2.04742 -18.77456,2.04638 -8.05583,0 -14.90654,-0.6678 -18.77457,-2.04742 z\;;11=element\=path\;level\=3\;d\=m -318.79689,134.49426 c 3.95892,1.30048 10.5225,1.96995 18.18494,1.97042 7.66093,0 14.22466,-0.66876 18.1839,-1.96887 -0.13617,0.10639 -0.28363,0.21212 -0.4532,0.3173 -0.89858,0.55732 -2.24155,1.06892 -3.93878,1.49448 -3.39447,0.85112 -8.20571,1.36684 -13.79244,1.36684 -5.58641,0 -10.39701,-0.51572 -13.79141,-1.36684 -1.6972,-0.42556 -3.04021,-0.93716 -3.93878,-1.49448 -0.17015,-0.10554 -0.31769,-0.2121 -0.45423,-0.31885 z\;;12=element\=path\;level\=3\;d\=m -313.65566,124.87505 -0.31625,-1.89625 -1.27688,-0.64375 c 0,0 -1.37219,0.3725 -2.22719,0.67656 -0.88563,0.31438 -2.22812,0.91625 -2.22812,0.91625 l -0.31876,0.55719 0.39907,2.14469 0.715,0.63625 4.77313,-1.43156 0.48,-0.95938 z\;;13=element\=polygon\;level\=3\;points\=745.034,377.307 744.514,376.793 728.465,382.681 729.687,389.486 730.931,390.882 745.383,386.309 746.283,384.812 \;;14=element\=path\;level\=3\;d\=m -287.56801,124.87505 0.31656,-1.89625 1.27657,-0.64375 c 0,0 1.37219,0.3725 2.22719,0.67656 0.88531,0.31438 2.22812,0.91625 2.22812,0.91625 l 0.31875,0.55719 -0.39875,2.14469 -0.71531,0.63625 -4.77314,-1.43156 -0.48,-0.95938 z\;;15=element\=polygon\;level\=3\;points\=855.689,376.793 871.744,382.681 870.519,389.486 869.274,390.882 854.827,386.309 853.921,384.812 855.175,377.307 \;;16=element\=path\;level\=3\;d\=m -303.98539,93.476096 c 0,0.0054 0.002,0.01159 0.003,0.01706 0,-0.0057 -0.002,-0.0114 -0.003,-0.01706 z\;;17=element\=path\;level\=3\;d\=m -313.13212,95.999456 c 0.74862,0 1.38898,0.448625 1.66915,1.092956 -1.1386,0.368245 -2.30755,0.631645 -3.48558,0.824757 -0.002,-0.03208 -0.006,-0.06358 -0.006,-0.09612 0,-1.009417 0.81265,-1.821595 1.82211,-1.821595 z\;;18=element\=path\;level\=3\;d\=m -288.39461,95.999456 c 1.00946,0 1.82211,0.812178 1.82211,1.821595 0,0.03253 -0.004,0.06404 -0.006,0.09612 -1.17803,-0.193112 -2.34698,-0.456512 -3.48558,-0.824757 0.28017,-0.644331 0.92053,-1.092956 1.66915,-1.092956 z\;;19=element\=path\;level\=3\;d\=m -320.92389,96.706907 c 0.98681,0 1.79846,0.714766 1.95492,1.655712 -1.34901,0.0974 -2.6717,0.16433 -3.93517,0.248047 0.0426,-1.060987 0.90819,-1.903759 1.98025,-1.903759 z\;;20=element\=path\;level\=3\;d\=m -280.60284,96.706907 c 1.07205,0 1.93766,0.842772 1.98024,1.903759 -1.26347,-0.08372 -2.58615,-0.150644 -3.93516,-0.248047 0.15646,-0.940946 0.96811,-1.655712 1.95492,-1.655712 z\;;21=element\=path\;level\=3\;d\=m -328.75288,98.339365 c 0.67708,0 1.28096,0.289554 1.70688,0.747241 -1.10228,0.220641 -2.09819,0.533644 -2.94246,1.006654 -0.39998,0.22407 -0.76291,0.4619 -1.09761,0.70952 -0.002,-0.0415 -0.005,-0.083 -0.005,-0.12506 0,-1.293667 1.04421,-2.338355 2.33784,-2.338355 z\;;22=element\=path\;level\=3\;d\=m -272.77386,98.339365 c 1.29363,0 2.33784,1.044688 2.33784,2.338355 0,0.042 -0.003,0.0836 -0.005,0.12506 -0.3347,-0.24762 -0.69763,-0.48545 -1.09761,-0.70952 -0.84427,-0.47301 -1.84018,-0.786013 -2.94245,-1.006654 0.42592,-0.457687 1.0298,-0.747241 1.70687,-0.747241 z\;;23=element\=path\;level\=3\;d\=m -333.39238,103.48737 c -0.71626,1.45191 -0.86389,3.06767 -0.64234,4.72219 -0.93669,-0.34064 -1.60507,-1.23413 -1.60507,-2.2903 0,-1.28625 0.98794,-2.33305 2.24741,-2.43189 z\;;24=element\=path\;level\=3\;d\=m -268.13435,103.48737 c 1.25946,0.0988 2.24741,1.14564 2.24741,2.43189 0,1.05617 -0.66838,1.94966 -1.60507,2.2903 0.22155,-1.65452 0.0739,-3.27028 -0.64234,-4.72219 z\;;25=element\=path\;level\=3\;d\=m -333.03788,111.85327 c 0.46185,1.16744 1.03459,2.30511 1.64382,3.3724 -0.19228,0.0661 -0.3976,0.10387 -0.61288,0.10387 -1.04893,0 -1.89342,-0.84359 -1.89342,-1.89239 0,-0.66688 0.34411,-1.24684 0.86248,-1.58388 z\;;26=element\=path\;level\=3\;d\=m -268.48885,111.85327 c 0.51836,0.33704 0.86248,0.917 0.86248,1.58388 0,1.0488 -0.8445,1.89239 -1.89343,1.89239 -0.21528,0 -0.4206,-0.0378 -0.61288,-0.10387 0.60923,-1.06729 1.18198,-2.20496 1.64383,-3.3724 z\;;27=element\=path\;level\=3\;d\=m -303.27174,120.26619 -1.28106,1.19269 v 0.0574 2.12132 l 1.28416,1.11001 h 0.078 a 0.2884496,0.2884496 0 0 0 0.22634,0 h 4.69429 a 0.28830958,0.28830958 0 0 0 0.25476,0 h 0.093 l 1.28519,-1.11156 v -2.17713 l -1.28106,-1.19269 z m 0.10439,0.26459 h 5.14387 l 1.12086,1.04334 0.001,1.74977 a 0.28841967,0.28841967 0 0 0 -0.0997,-0.0687 l -0.99946,-0.4098 v -1.77302 a 0.28830958,0.28830958 0 1 0 -0.57619,0 v 1.84589 l -0.1633,0.16174 -3.73724,-0.0264 -0.16175,-0.16174 v -1.84744 a 0.28830958,0.28830958 0 0 0 -0.29249,-0.29197 0.28830958,0.28830958 0 0 0 -0.28422,0.29197 v 1.79783 l -0.98495,0.37879 a 0.28838938,0.28838938 0 0 0 -0.0873,0.0532 v -1.70016 z m 0.18965,2.83755 0.0444,0.0444 -0.39895,0.93018 -0.67076,-0.58033 a 0.28838938,0.28838938 0 0 0 0.009,-0.003 z m 4.75578,0.009 1.00201,0.41134 a 0.28841967,0.28841967 0 0 0 0.001,0 l -0.66405,0.57465 -0.39739,-0.92811 z m -4.17701,0.25321 3.58583,0.0253 0.35399,0.82683 h -4.30517 z\;;28=element\=path\;level\=3\;d\=m -321.32699,127.31953 c -0.15375,-0.8725 -0.75032,-1.49656 -1.33157,-1.39437 -0.5825,0.10219 -1.24937,0.89312 -1.09656,1.76562 0.155,0.87219 1.08782,1.50719 1.66906,1.405 0.58219,-0.10187 0.91313,-0.90406 0.75907,-1.77625 z\;;29=element\=path\;level\=3\;d\=m -324.86235,125.15815 c 0,-3.5147 10.41124,-7.90845 24.25065,-7.90845 13.83969,0 24.25094,4.39375 24.25094,7.90845 0,0.97375 -1.08344,1.07125 -1.18125,0.77157 -1.16313,-3.56344 -9.23002,-6.70343 -23.06971,-6.70343 -13.83938,0 -21.90626,3.13999 -23.06971,6.70343 -0.0978,0.29968 -1.18094,0.20218 -1.18094,-0.77157 z\;;30=element\=path\;level\=3\;d\=m -300.64769,94.723926 c -3.33155,-0.756875 -3.76343,-2.820326 -3.67093,-2.797201 0.21844,0.05375 0.98781,1.55875 3.72218,2.319377 2.735,-0.760624 3.50282,-2.265627 3.72282,-2.319377 0.0922,-0.02313 -0.33969,2.040313 -3.67093,2.797201 h -0.10313 z\;;31=element\=path\;level\=3\;d\=m -279.33515,127.76524 c 0.15375,-0.8725 0.75031,-1.49656 1.33156,-1.39438 0.5825,0.10219 1.24938,0.89313 1.09657,1.76563 -0.155,0.87219 -1.08782,1.50719 -1.66907,1.405 -0.58218,-0.10188 -0.91312,-0.90406 -0.75906,-1.77625 z\;;32=element\=path\;level\=3\;d\=m -297.38987,93.536741 h -0.22094 c -0.59344,0.550312 -1.52625,1.108437 -2.98532,1.431562 -1.46031,-0.323125 -2.39188,-0.88125 -2.985,-1.431562 h -0.20875 c 0,0 -2.24376,1.590939 -3.8172,0.397811 -0.58125,-0.439687 -0.70406,-1.046249 -0.70406,-1.046249 0,0 2.69282,-0.146876 2.69282,-2.536875 0,-2.383126 1.29344,-3.387196 3.03374,-3.387196 0.76031,0 1.45219,0.375627 1.98844,0.8625 0.535,-0.486876 1.22844,-0.8625 1.98875,-0.8625 1.74031,0 3.03345,1.004062 3.03345,3.387196 0,2.390002 2.69187,2.536875 2.69187,2.536875 0,0 -0.12312,0.606562 -0.70313,1.046249 -1.57468,1.193126 -3.80468,-0.397811 -3.80468,-0.397811 z\;;33=element\=path\;level\=3\;d\=m -297.39193,93.850751 c 0,0 0.12195,0.08228 0.30592,0.188619 0.39661,0.685387 1.11194,2.03001 1.53118,3.487642 0.0118,0.04588 0.0265,0.09095 0.0398,0.136424 0.20837,0.7635 0.32917,1.545254 0.26561,2.263429 -0.17,1.934685 -1.45772,3.414455 -1.82366,5.321635 -0.11991,0.62537 -0.16579,1.32745 -0.17105,2.02262 -0.22666,-0.36362 -0.45971,-0.6987 -0.69401,-1.00046 -0.023,-0.50825 -0.027,-1.01321 -0.005,-1.50998 0.0231,-0.52313 0.21014,-1.33388 0.43201,-2.14044 0.21969,-0.80656 0.4745,-1.60542 0.63201,-2.10323 0.47031,-1.485001 0.0955,-3.244903 -0.39481,-4.630208 -0.32071,-0.90559 -0.58417,-1.333736 -0.76481,-1.680517 0.16177,-0.117242 0.30948,-0.236572 0.4377,-0.355534 z\;;34=element\=path\;level\=3\;d\=m -304.93875,95.153407 c -0.40685,0.482 -0.82488,0.92818 -1.25468,1.33365 -0.34963,0.32986 -0.70604,0.63571 -1.06834,0.91976 0.37649,0.22545 0.80294,0.39091 1.22499,0.5089 0.0213,-0.0238 0.0422,-0.0484 0.0635,-0.0723 0.10433,-0.38817 0.22821,-0.77441 0.37011,-1.17042 0.31584,-0.88146 0.50102,-1.22777 0.66445,-1.51962 z\;;35=element\=path\;level\=3\;d\=m -306.05675,98.181537 c -6.16101,6.883433 -17.41247,3.370053 -19.66784,7.442463 -1.21006,2.18403 0.24051,4.62392 2.47505,6.90425 0.95921,0.2097 2.2633,0.67693 3.57871,1.72025 0.0836,-3.48113 1.11749,-5.13397 1.1175,-5.13397 0,0 2.65763,0.12593 5.37652,2.79263 0.5179,-3.60065 2.4858,-5.55494 2.4858,-5.55494 0,0 3.26519,1.00972 5.13183,4.4108 0.33101,-1.31144 0.82713,-2.40296 1.37497,-3.3081 -0.0181,-0.74153 -0.0764,-1.49886 -0.21654,-2.16648 -0.38849,-1.84891 -1.9532,-3.97258 -1.88277,-5.527143 0.025,-0.55384 0.10756,-1.07117 0.22677,-1.57976 z\;;36=element\=path\;level\=3\;d\=m -328.91631,117.61117 c -3.51964,-4.83276 -7.96277,-12.9515 -0.55644,-17.04786 5.21572,-2.885773 15.82296,0.16151 22.98651,-5.638833 0.70723,0.0626 1.4005,-0.12957 1.91299,-0.45533 -7.64734,9.386973 -18.77013,4.52785 -23.60694,8.426403 -3.97682,3.20615 -0.98608,8.61955 2.47863,12.73562 -0.073,0.77465 -0.0431,1.62183 0.19759,2.47172 -0.85701,-0.4431 -2.1125,-0.65435 -3.41234,-0.49172\;;37=element\=path\;level\=3\;d\=m -309.67779,99.064337 c 0.43525,0.3105 1.007,0.51556 1.51902,0.64055 -0.17336,0.1198 -0.34919,0.23348 -0.52688,0.343503 -0.52253,-0.163503 -1.05775,-0.406773 -1.46638,-0.754543 0.15849,-0.0737 0.31668,-0.15035 0.47424,-0.22951 z\;;38=element\=path\;level\=3\;d\=m -312.94322,100.30373 c 0.46929,0.44832 1.06396,0.78051 1.69918,0.99383 -0.22536,0.085 -0.45259,0.16472 -0.68072,0.2402 -0.5857,-0.26434 -1.12186,-0.62985 -1.54657,-1.09559 0.17645,-0.0437 0.35228,-0.0898 0.52811,-0.13844 z\;;39=element\=path\;level\=3\;d\=m -316.18638,100.95525 c 0.35197,0.5342 0.83335,0.98466 1.40726,1.32082 -0.2235,0.044 -0.447,0.0862 -0.66989,0.12561 -0.51294,-0.3759 -0.94045,-0.84286 -1.2562,-1.37859 0.17243,-0.0214 0.34547,-0.0437 0.51883,-0.0678 z\;;40=element\=path\;level\=3\;d\=m -319.81561,101.31128 c 0.19349,0.54123 0.58291,1.01828 1.09647,1.4009 0.0572,0.0422 0.0864,0.095 0.0953,0.14821 l -0.58013,0.0721 c -0.52377,-0.43884 -0.91505,-0.97854 -1.10234,-1.58577 l 0.49065,-0.0354 z\;;41=element\=path\;level\=3\;d\=m -323.53631,101.63187 c 0.12879,0.72825 0.51914,1.34374 1.12465,1.78596 -0.2006,0.0416 -0.39563,0.0859 -0.58507,0.13324 -0.53678,-0.49172 -0.88658,-1.12646 -1.01227,-1.85288 0.15509,-0.0235 0.31266,-0.0455 0.47269,-0.0663 z\;;42=element\=path\;level\=3\;d\=m -325.62441,104.81469 c -0.77699,-0.44709 -1.41779,-1.15304 -1.81217,-1.95189 0.14425,-0.10146 0.29532,-0.19559 0.45444,-0.28238 0.2882,0.60387 0.82993,1.41862 1.77657,1.88527 -0.15169,0.10757 -0.2913,0.22371 -0.41884,0.349 z\;;43=element\=path\;level\=3\;d\=m -326.57109,107.17134 c -1.08687,-0.10268 -2.14155,-0.66407 -2.88048,-1.46323 0.0524,-0.21393 0.12104,-0.4251 0.20586,-0.63169 0.42533,0.52503 1.34722,1.43298 2.71855,1.55095 -0.0288,0.18031 -0.043,0.36153 -0.044,0.54397 z\;;44=element\=path\;level\=3\;d\=m -327.37756,109.66177 c 0.59498,-0.0923 0.83551,-0.15158 1.30666,-0.4141 0.0817,0.17756 0.17243,0.35542 0.27148,0.53328 -0.39748,0.22798 -0.7222,0.36459 -1.2726,0.47583 -0.5535,0.11276 -1.12773,0.0795 -1.63695,-0.004 -0.10897,-0.23042 -0.2102,-0.46084 -0.30151,-0.69097 0.49715,0.0947 1.1398,0.17664 1.63292,0.10024 z\;;45=element\=path\;level\=3\;d\=m -325.9038,112.64846 c 0.6832,-0.19467 1.03177,-0.56842 1.41191,-1.00483 0.15478,0.18489 0.31513,0.36887 0.48105,0.55223 -0.26157,0.34228 -0.56061,0.67813 -1.00917,0.91039 -0.54235,0.28085 -1.1364,0.35237 -1.69268,0.35237 -0.18635,-0.24662 -0.36776,-0.49661 -0.54359,-0.74812 0.45135,0.0446 0.95778,0.0508 1.35248,-0.062 z\;;46=element\=path\;level\=3\;d\=m -304.93875,95.153407 c -0.40685,0.482 -0.82488,0.92818 -1.25468,1.33365 -0.34963,0.32986 -0.70604,0.63571 -1.06834,0.91976 0.37649,0.22545 0.80294,0.39091 1.22499,0.5089 0.0213,-0.0238 0.0422,-0.0484 0.0635,-0.0723 0.10433,-0.38817 0.22821,-0.77441 0.37011,-1.17042 0.31584,-0.88146 0.50102,-1.22777 0.66445,-1.51962 z\;;47=element\=path\;level\=3\;d\=m -306.05675,98.181537 c -6.16101,6.883433 -17.41247,3.370053 -19.66784,7.442463 -1.21006,2.18403 0.24051,4.62392 2.47505,6.90425 0.95921,0.2097 2.2633,0.67693 3.57871,1.72025 0.0836,-3.48113 1.11749,-5.13397 1.1175,-5.13397 0,0 2.65763,0.12593 5.37652,2.79263 0.5179,-3.60065 2.4858,-5.55494 2.4858,-5.55494 0,0 3.26519,1.00972 5.13183,4.4108 0.33101,-1.31144 0.82713,-2.40296 1.37497,-3.3081 -0.0181,-0.74153 -0.0764,-1.49886 -0.21654,-2.16648 -0.38849,-1.84891 -1.9532,-3.97258 -1.88277,-5.527143 0.025,-0.55384 0.10756,-1.07117 0.22677,-1.57976 z\;;48=element\=path\;level\=3\;d\=m -309.67779,99.064337 c 0.43525,0.3105 1.007,0.51556 1.51902,0.64055 -0.17336,0.1198 -0.34919,0.23348 -0.52688,0.343503 -0.52253,-0.163503 -1.05775,-0.406773 -1.46638,-0.754543 0.15849,-0.0737 0.31668,-0.15035 0.47424,-0.22951 z\;;49=element\=path\;level\=3\;d\=m -312.94322,100.30373 c 0.46929,0.44832 1.06396,0.78051 1.69918,0.99383 -0.22536,0.085 -0.45259,0.16472 -0.68072,0.2402 -0.5857,-0.26434 -1.12186,-0.62985 -1.54657,-1.09559 0.17645,-0.0437 0.35228,-0.0898 0.52811,-0.13844 z\;;50=element\=path\;level\=3\;d\=m -316.18638,100.95525 c 0.35197,0.5342 0.83335,0.98466 1.40726,1.32082 -0.2235,0.044 -0.447,0.0862 -0.66989,0.12561 -0.51294,-0.3759 -0.94045,-0.84286 -1.2562,-1.37859 0.17243,-0.0214 0.34547,-0.0437 0.51883,-0.0678 z\;;51=element\=path\;level\=3\;d\=m -319.81561,101.31128 c 0.19349,0.54123 0.58291,1.01828 1.09647,1.4009 0.0572,0.0422 0.0864,0.095 0.0953,0.14821 l -0.58013,0.0721 c -0.52377,-0.43884 -0.91505,-0.97854 -1.10234,-1.58577 l 0.49065,-0.0354 z\;;52=element\=path\;level\=3\;d\=m -323.53631,101.63187 c 0.12879,0.72825 0.51914,1.34374 1.12465,1.78596 -0.2006,0.0416 -0.39563,0.0859 -0.58507,0.13324 -0.53678,-0.49172 -0.88658,-1.12646 -1.01227,-1.85288 0.15509,-0.0235 0.31266,-0.0455 0.47269,-0.0663 z\;;53=element\=path\;level\=3\;d\=m -325.62441,104.81469 c -0.77699,-0.44709 -1.41779,-1.15304 -1.81217,-1.95189 0.14425,-0.10146 0.29532,-0.19559 0.45444,-0.28238 0.2882,0.60387 0.82993,1.41862 1.77657,1.88527 -0.15169,0.10757 -0.2913,0.22371 -0.41884,0.349 z\;;54=element\=path\;level\=3\;d\=m -326.57109,107.17134 c -1.08687,-0.10268 -2.14155,-0.66407 -2.88048,-1.46323 0.0524,-0.21393 0.12104,-0.4251 0.20586,-0.63169 0.42533,0.52503 1.34722,1.43298 2.71855,1.55095 -0.0288,0.18031 -0.043,0.36153 -0.044,0.54397 z\;;55=element\=path\;level\=3\;d\=m -327.37756,109.66177 c 0.59498,-0.0923 0.83551,-0.15158 1.30666,-0.4141 0.0817,0.17756 0.17243,0.35542 0.27148,0.53328 -0.39748,0.22798 -0.7222,0.36459 -1.2726,0.47583 -0.5535,0.11276 -1.12773,0.0795 -1.63695,-0.004 -0.10897,-0.23042 -0.2102,-0.46084 -0.30151,-0.69097 0.49715,0.0947 1.1398,0.17664 1.63292,0.10024 z\;;56=element\=path\;level\=3\;d\=m -325.9038,112.64846 c 0.6832,-0.19467 1.03177,-0.56842 1.41191,-1.00483 0.15478,0.18489 0.31513,0.36887 0.48105,0.55223 -0.26157,0.34228 -0.56061,0.67813 -1.00917,0.91039 -0.54235,0.28085 -1.1364,0.35237 -1.69268,0.35237 -0.18635,-0.24662 -0.36776,-0.49661 -0.54359,-0.74812 0.45135,0.0446 0.95778,0.0508 1.35248,-0.062 z\;;
  korc="Polygon1=#00005B;Polygon6=#E6AD02;Polygon33=#FF8000;Polygon7=#FF8000;Polygon2=Yellow;Polygon40=Purple;Polygon51=#BD0000;Polygon59=Black;Polygon60=Black;Polygon58=Black;Polygon57=Black;Polygon4=#AA5500;Polygon56=Black;Polygon55=Black;Polygon54=Black;Polygon53=Black;Polygon52=Black;Polygon50=#FF8000;Polygon3=Maroon;Polygon37=Red;Polygon36=#8000FF;Polygon5=#FF8040;Polygon25=Red;Polygon23=#8000FF;Polygon21=Red;Polygon19=Purple;Polygon17=#FF0080;Polygon32=Red;Polygon35=Red;Polygon15=Red;Polygon14=Red;Polygon28=Red;Polygon27=Maroon;Polygon31=Red;Polygon18=Red;Polygon20=Red;Polygon22=Red;Polygon24=Red;Polygon26=Red;Polygon12=Maroon;Polygon11=Maroon;Polygon13=Maroon;Polygon10=Maroon;Polygon9=Maroon;Polygon8=Maroon;Polygon34=Maroon
  korm="1=1\=0\;2\=0\;3\=100\;4\=1\;;2=1\=0\;2\=0\;3\=100\;4\=2\;;3=1\=0\;2\=0\;3\=100\;4\=3\;;4=1\=0\;2\=0\;3\=100\;4\=4\;;5=1\=0\;2\=0\;3\=100\;4\=5\;;6=1\=0\;2\=0\;3\=100\;4\=6\;;7=1\=0\;2\=0\;3\=100\;4\=7\;;8=1\=0\;2\=0\;3\=100\;4\=8\;;9=1\=0\;2\=0\;3\=100\;4\=9\;;10=1\=0\;2\=0\;3\=100\;4\=10\;;11=1\=0\;2\=0\;3\=100\;4\=11\;;12=1\=0\;2\=0\;3\=100\;4\=12\;;13=1\=0\;2\=0\;3\=100\;4\=13\;;14=1\=0\;2\=0\;3\=100\;4\=14\;;15=1\=0\;2\=0\;3\=100\;4\=15\;;16=1\=0\;2\=0\;3\=100\;4\=16\;;17=1\=0\;2\=0\;3\=100\;4\=17\;;18=1\=0\;2\=0\;3\=100\;4\=18\;;19=1\=0\;2\=0\;3\=100\;4\=19\;;20=1\=0\;2\=0\;3\=100\;4\=20\;;21=1\=0\;2\=0\;3\=100\;4\=21\;;22=1\=0\;2\=0\;3\=100\;4\=22\;;23=1\=0\;2\=0\;3\=100\;4\=23\;;24=1\=0\;2\=0\;3\=100\;4\=24\;;25=1\=0\;2\=0\;3\=100\;4\=25\;;26=1\=0\;2\=0\;3\=100\;4\=26\;;27=1\=0\;2\=0\;3\=100\;4\=27\;;28=1\=6\;2\=-6\;3\=100\;4\=28\;;29=1\=0\;2\=0\;3\=100\;4\=29\;;30=1\=0\;2\=0\;3\=100\;4\=30\;;31=1\=6\;2\=-10\;3\=100\;4\=31\;;32=1\=0\;2\=0\;3\=100\;4\=32\;;33=1\=0\;2\=0\;3\=100\;4\=33\;;34=1\=0\;2\=0\;3\=100\;4\=34\;;35=1\=0\;2\=0\;3\=100\;4\=35\;;36=1\=0\;2\=0\;3\=100\;4\=36\;;37=1\=0\;2\=0\;3\=100\;4\=37\;;38=1\=0\;2\=0\;3\=100\;4\=38\;;39=1\=0\;2\=0\;3\=100\;4\=39\;;40=1\=0\;2\=0\;3\=100\;4\=40\;;41=1\=0\;2\=0\;3\=100\;4\=41\;;42=1\=0\;2\=0\;3\=100\;4\=42\;;43=1\=0\;2\=0\;3\=100\;4\=43\;;44=1\=0\;2\=0\;3\=100\;4\=44\;;45=1\=0\;2\=0\;3\=100\;4\=45\;;46=1\=0\;2\=0\;3\=100\;4\=46\;;47=1\=0\;2\=0\;3\=100\;4\=47\;;48=1\=0\;2\=0\;3\=100\;4\=48\;;49=1\=0\;2\=0\;3\=100\;4\=49\;;50=1\=0\;2\=0\;3\=100\;4\=50\;;51=1\=0\;2\=0\;3\=100\;4\=51\;;52=1\=0\;2\=0\;3\=100\;4\=52\;;53=1\=0\;2\=0\;3\=100\;4\=53\;;54=1\=0\;2\=0\;3\=100\;4\=54\;;55=1\=0\;2\=0\;3\=100\;4\=55\;;56=1\=0\;2\=0\;3\=100\;4\=56\;;57=1\=0\;2\=0\;3\=100\;4\=57\;;58=1\=0\;2\=0\;3\=100\;4\=58\;;59=1\=0\;2\=0\;3\=100\;4\=59\;;60=1\=0\;2\=0\;3\=100\;4\=60\;;
EndSub
