args=0
TRUE = "true
FALSE = "FALSE
not="TRUE=FALSE;FALSE=TRUE
WhatToDO=""
MAXSNAKELENGTH = 1000
STARTOVER = 1
SAMELEVEL = 2
nextLEVEL = 3
curlevel=2
GraphicsWindow.Title=""
GraphicsWindow.Width=5
GraphicsWindow.Height=5
LDGraphicsWindow.TransparentGW()

numplayers=1
comp=0
colortable=LDText.Split("white;yellow;red;green;blue;magenta;cyan;lime;gray" ";")
'TYPE snakeBody
'    row
'    col

'TYPE snaketype
'    head
'    length
'    row
'    col
'    direction
'    lives
'    score
'    scolor
'    alive
'    col2
'    col3
'    row2
'    row3
'    wall

'TYPE arenaType
'    realRow
'    acolor
'    sister

'DIM SHARED arena(1 TO 50, 1 TO 80) AS arenaType
'DIM SHARED curlevel, colortable(13)

Intro()
GetInputs()' numplayers, speed, diff_s, monitor_s, comp
DrawScreen()
PlayNibbles()' numplayers, speed, diff_s, comp

Sub INPUT
  ttt:
  TextWindow.WriteLine("")
  TextWindow.Write(args[1])
  return=TextWindow.ReadNumber()
  If return<args[2] or return>args[3] Then
    Goto ttt
  EndIf
EndSub

Sub GetInputs
  num_s=ldcall.Function3( "INPUT" "How many players (1 to 8): " 1 8)
  comp_s= ldcall.Function3( "INPUT" "How many players does computer play: " 1 7)
  gamespeed_s=ldcall.Function3( "INPUT" "Skill level (1=novice to 100=xpert): " 1 100)
  speed = (200 - gamespeed_s) * 2 + 1
  diff_s = "Y"
  monitor_s = "C"
EndSub

Sub Intro
  ldcall.function2("cent" 4, "N i b b l e s")
  ldcall.function2("cent" 8, "Nibbles is a game for one to eight players.  Navigate your snakes")
  ldcall.function2("cent" 9, "around the game board trying to eat up numbers. The more numbers you eat")
  ldcall.function2("cent" 10, "up, the more points you gain and the longer you snake becomes.")
  ldcall.function2("cent" 11, "With more points you have more special functions available to you.")
  ldcall.function2("cent" 14, "  Keys             Descriptions (Points)             Player Centres (5) ")
  ldcall.function2("cent" 16, " 1 2 3    1 = Random Warp  (1)  6 = RIGHT        (0)    1  --  5        ")
  ldcall.function2("cent" 17, "          2 = UP           (0)  7 = Erase Snake  (3)    2  --  S        ")
  ldcall.function2("cent" 18, " 4 5 6    3 = Pass Through (2)  8 = Warp Others  (1)    3  --  G        ")
  ldcall.function2("cent" 19, "          4 = LEFT         (0)  9 = Warp Near    (5)    4  --  K        ")
  ldcall.function2("cent" 20, " 7 8 9    5 = DOWN         (0)                                          ")
  ldcall.function2("locc" 22 1)
  TextWindow.Pause()
  
EndSub

Sub Cent
  a3=args[2]
  ldcall.function3("locc"  args[1] 41 - Text.GetLength(a3) / 2 a3)
EndSub

Sub locc
  TextWindow.CursorLeft=args[2]
  TextWindow.Cursortop=args[1]
  If args[3]="" Then
  Else
    TextWindow.Write(args[3])
  EndIf
  
EndSub

Sub set
  CHR_219="█
  CHR_220="▄
  CHR_223="▀
  row=args[1]
  col=args[2]
  acolor=args[3]
  If row <> 0 Then
    
    arena[row][col]["acolor"] = acolor
    realRow = arena[row][col]["realRow"]
    topFlag = arena[row][col]["sister"] + 1 / 2
    
    sisterRow = row + arena[row][col]["sister"]
    sisterColor = arena[sisterRow][col]["acolor"]
    
    ldcall.function2("locc"  realRow col)
    
    If acolor = sisterColor Then
      TextWindow.ForegroundColor= acolor
      TextWindow.BackgroundColor= acolor
      textwindow.write(CHR_219)
    Else
      If topFlag Then
        If acolor > 7 Then
          TextWindow.ForegroundColor= acolor
          TextWindow.BackgroundColor= sisterColor
          textwindow.write(CHR_223)
        Else
          TextWindow.ForegroundColor= sisterColor
          TextWindow.BackgroundColor= acolor
          textwindow.write(CHR_220)
        EndIf
      Else
        If acolor > 7 Then
          TextWindow.ForegroundColor= acolor
          TextWindow.BackgroundColor= sisterColor
          textwindow.write(CHR_220)
        Else
          TextWindow.ForegroundColor= sisterColor
          TextWindow.BackgroundColor= acolor
          textwindow.write(CHR_223)
        EndIf
      EndIf
    EndIf
  EndIf
EndSub

Sub PointIsThere' (row col, acolor)
  roww=args[1]
  coll=args[2]
  acolorr=args[3]
  If row <> 0 Then
    If arena[roww][coll]["acolor"] <> acolorr Then
      return = TRUE
    Else
      return = FALSE
    EndIf
  EndIf
EndSub

Sub PointIsThere2' (row col, c, d)
  
  roww=args[1]
  coll=args[2]
  c=args[3]
  
  PointIsThere2 = FALSE
  CAS= args[4]
  If CAS= 1 and arena[roww - 1][col]["acolor"] <> c AND arena[roww][col - 1]["acolor"] <> c AND arena[roww][col + 1]["acolor"] <> c Then
    PointIsThere2 = TRUE
  ElseIf CAS=2 and arena[roww + 1][col]["acolor"] <> c AND arena[roww][col - 1]["acolor"] <> c AND arena[roww][col + 1]["acolor"] <> c Then
    PointIsThere2 = TRUE
  ElseIf CAS=3 and arena[roww + 1][col]["acolor"] <> c AND arena[roww - 1][col]["acolor"] <> c AND arena[roww][col - 1]["acolor"] <> c Then
    PointIsThere2 = TRUE
  ElseIf CAS= 4 and arena[roww + 1][col]["acolor"] <> c AND arena[roww - 1][col]["acolor"] <> c AND arena[roww][col + 1]["acolor"] <> c Then
    PointIsThere2 = TRUE
  EndIf
EndSub

Sub DrawScreen
  
  TextWindow.Clear()
  ldcall.function2("cent" 1, "Nibbles!")
  ldcall.function2("cent" 11, "Initializing Playing Field...")
  
  For row = 1 To 50
    For col = 1 To 80
      arena[row][col]["realRow"] = Math.Floor((row + 1) / 2)
      arena[row][col]["sister"] = math.Remainder (row  2) * 2 - 1
    EndFor
  EndFor
EndSub

Sub EraseSnake
  snake=args[1]
  snakeBod=args[2]
  snakeNum=args[3]
  
  For c = 0 To 9
    For b = snake[snakeNum]["length"] - c To 0 Step -10
      tail = Math.Remainder(snake[snakeNum]["head"] + MAXSNAKELENGTH - b MAXSNAKELENGTH)
      ldcall.Function3( "set" snakeBod[tail][snakeNum]["row"], snakeBod[tail][snakeNum]["col"] 0)
    EndFor
  EndFor
  
EndSub


Sub InitColors
  For row = 1 To 50
    For col = 1 To 80
      arena[row][col]["acolor"] = 0
    EndFor
  EndFor
  
  TextWindow.Clear()
  
  For col = 1 To 80
    ldcall.Function3( "set" 3, col, colortable[9])
    ldcall.Function3( "set" 50, col, colortable[9])
  EndFor
  
  For row = 4 To 49
    ldcall.Function3( "set" row, 1, colortable[9])
    ldcall.Function3( "set" row, 80, colortable[9])
  EndFor
  
EndSub

Sub Level '(WhatToDO, comp, numplayers, sammy() AS snaketype) STATIC
  comp=args[2]
  numplayers=args[3]
  sammy=args[4]
  CAS= args[1]
  If CAS=STARTOVER Then
    curlevel = 1
  ElseIf CAS= nextLEVEL Then
    curlevel = curlevel + 1
  EndIf
  
  For a = 1 To 8
    sammy[a]["head"] = 1
    sammy[a]["length"] =  2
    sammy[a]["alive"] = TRUE
    sammy[a]["scolor"] = colortable[a]
  EndFor
  
  InitColors()
  
  CASE= curlevel
  
  If CASE= 2 Then
    For i = 20 To 60
      ldcall.Function3( "set" 25, i, colortable[9])
    EndFor
    
  ElseIf CASE= 3 Then
    For i = 10 To 40
      ldcall.Function3( "set" i, 20, colortable[9])
      ldcall.Function3( "set" i, 60, colortable[9])
    EndFor
    
  ElseIf CASE= 4 Then
    For i = 4 To 30
      ldcall.Function3( "set" i, 20, colortable[9])
      ldcall.Function3( "set" 53 - i, 60, colortable[9])
    EndFor
    For i = 2 To 40
      ldcall.Function3( "set" 38, i, colortable[9])
      ldcall.Function3( "set" 15, 81 - i, colortable[9])
    EndFor
    
  ElseIf CASE= 5 Then
    For i = 13 To 39
      ldcall.Function3( "set" i, 21, colortable[9])
      ldcall.Function3( "set" i, 59, colortable[9])
    EndFor
    For i = 23 To 57
      ldcall.Function3( "set" 11, i, colortable[9])
      ldcall.Function3( "set" 41, i, colortable[9])
    EndFor
    
  ElseIf CASE= 6 Then
    For i = 4 To 49
      If i > 30 OR i < 23 Then
        ldcall.Function3( "set" i, 10, colortable[9])
        ldcall.Function3( "set" i, 20, colortable[9])
        ldcall.Function3( "set" i, 30, colortable[9])
        ldcall.Function3( "set" i, 40, colortable[9])
        ldcall.Function3( "set" i, 50, colortable[9])
        ldcall.Function3( "set" i, 60, colortable[9])
        ldcall.Function3( "set" i, 70, colortable[9])
      EndIf
    EndFor
    
  ElseIf CASE= 7 Then
    For i = 4 To 49 Step 2
      ldcall.Function3( "set" i, 40, colortable[9])
    EndFor
    
  ElseIf CASE= 8 Then
    For i = 4 To 40
      ldcall.Function3( "set" i, 10, colortable[9])
      ldcall.Function3( "set" 53 - i, 20, colortable[9])
      ldcall.Function3( "set" i, 30, colortable[9])
      ldcall.Function3( "set" 53 - i, 40, colortable[9])
      ldcall.Function3( "set" i, 50, colortable[9])
      ldcall.Function3( "set" 53 - i, 60, colortable[9])
      ldcall.Function3( "set" i, 70, colortable[9])
    EndFor
    
  ElseIf CASE= 9 Then
    For i = 6 To 47
      ldcall.Function3( "set" i, i, colortable[9])
      ldcall.Function3( "set" i, i + 28, colortable[9])
    EndFor
    
  ElseIf CASE= 10 Then
    For i = 4 To 49 Step 2
      ldcall.Function3( "set" i, 10, colortable[9])
      ldcall.Function3( "set" i + 1, 20, colortable[9])
      ldcall.Function3( "set" i, 30, colortable[9])
      ldcall.Function3( "set" i + 1, 40, colortable[9])
      ldcall.Function3( "set" i, 50, colortable[9])
      ldcall.Function3( "set" i + 1, 60, colortable[9])
      ldcall.Function3( "set" i, 70, colortable[9])
    EndFor
    
  ElseIf CASE=11 Then
    For j = 5 To 45 Step 10
      For i = 5 + (j / 2) To 48 - (j / 2)
        ldcall.Function3( "set" i, j, colortable[9])
        ldcall.Function3( "set" i, 81 - j, colortable[9])
      EndFor
    EndFor
    For j = 8 To 36 Step 4
      For i = -12 + (j * 2.5) To 92 - (j * 2.5)
        ldcall.Function3( "set" 53 - j, i, colortable[9])
        ldcall.Function3( "set" j, i, colortable[9])
      EndFor
    EndFor
    
  ElseIf CASE= 12 Then
    For j = 5 To 40 Step 5
      For i = 5 + (j / 3) To 48 - (j / 3)
        ldcall.Function3( "set" i, j, colortable[9])
        ldcall.Function3( "set" i, 81 - j, colortable[9])
      EndFor
    EndFor
    For j = 6 To 12 Step 2
      For i = -15 + (j * 4) To 96 - (j * 4)
        ldcall.Function3( "set" 53 - j, i, colortable[9])
        ldcall.Function3( "set" j, i, colortable[9])
      EndFor
    EndFor
    
  ElseIf CASE= 13 Then
    For j = 5 To 48 Step 1
      For i = 3 To 78 Step 2
        ldcall.Function3( "set" j, i, colortable[9])
      EndFor
    EndFor
    
  ElseIf CASE= 14 Then
    For j = 5 To 48 Step 2
      For i = 3 To 78 Step 1
        ldcall.Function3( "set" j, i, colortable[9])
      EndFor
    EndFor
    
  ElseIf CASE= 15 Then
    For j = 4 To 77
      If (j > 10 AND j < 14) OR (j > 25 AND j < 29) OR (j > 38 AND j < 43) OR (j > 51 AND j < 55) OR (j > 66 AND j < 70) Then
        ldcall.Function3( "set" 11, j, colortable[9])
        ldcall.Function3( "set" 42, j, colortable[9])
      Else
        ldcall.Function3( "set" 6, j, colortable[9])
        ldcall.Function3( "set" 47, j, colortable[9])
      EndIf
    EndFor
    For j = 6 To 47
      If (j > 13 AND j < 16) OR (j > 25 AND j < 29) OR (j > 37 AND j < 40) Then
        ldcall.Function3( "set" j, 8, colortable[9])
        ldcall.Function3( "set" j, 73, colortable[9])
      Else
        ldcall.Function3( "set" j, 4, colortable[9])
        ldcall.Function3( "set" j, 77, colortable[9])
      EndIf
    EndFor
    r = 0
    For q = 1 To 8
      If r = 66 Then
        r = 70
      EndIf
      
      If r = 55 Then
        r = 66
      EndIf
      If r = 51 Then
        r = 55
      EndIf
      If r = 29 Then
        r = 51
      EndIf
      If r = 25 Then
        r = 29
      EndIf
      If r = 14 Then
        r = 25
      EndIf
      If r = 10 Then
        r = 14
      EndIf
      If r = 0 Then
        r = 10
      EndIf
      For j = 7 To 11
        ldcall.Function3( "set" j, r, colortable[9])
        ldcall.Function3( "set" 53 - j, r, colortable[9])
      EndFor
    EndFor
    
    For j = 4 To 8
      ldcall.Function3( "set" 13, j, colortable[9])
      ldcall.Function3( "set" 13, 81 - j, colortable[9])
      ldcall.Function3( "set" 16, j, colortable[9])
      ldcall.Function3( "set" 16, 81 - j, colortable[9])
      ldcall.Function3( "set" 37, j, colortable[9])
      ldcall.Function3( "set" 37, 81 - j, colortable[9])
      ldcall.Function3( "set" 40, j, colortable[9])
      ldcall.Function3( "set" 40, 81 - j, colortable[9])
    EndFor
    For j = 13 To 68
      If (j > 16 AND j < 24) OR (j > 38 AND j < 43) OR (j > 57 AND j < 64) Then
        ldcall.Function3( "set" 11, j, colortable[9])
        ldcall.Function3( "set" 42, j, colortable[9])
      Else
        ldcall.Function3( "set" 15, j, colortable[9])
        ldcall.Function3( "set" 38, j, colortable[9])
      EndIf
    EndFor
    For j = 15 To 38
      If (j > 18 AND j < 23) OR (j > 31 AND j < 35) Then
        ldcall.Function3( "set" j, 8, colortable[9])
        ldcall.Function3( "set" j, 73, colortable[9])
      Else
        ldcall.Function3( "set" j, 13, colortable[9])
        ldcall.Function3( "set" j, 68, colortable[9])
      EndIf
    EndFor
    r = 0
    For q = 1 To 4
      If r = 57 Then
        r = 64
      EndIf
      If r = 23 Then
        r = 57
      EndIf
      If r = 16 Then
        r = 23
      EndIf
      If r = 0 Then
        r = 16
      EndIf
      For j = 11 To 15
        ldcall.Function3( "set" j, r, colortable[9])
        ldcall.Function3( "set" 53 - j, r, colortable[9])
      EndFor
    EndFor
    For j = 8 To 12
      ldcall.Function3( "set" 18, j, colortable[9])
      ldcall.Function3( "set" 18, 81 - j, colortable[9])
      ldcall.Function3( "set" 23, j, colortable[9])
      ldcall.Function3( "set" 23, 81 - j, colortable[9])
      ldcall.Function3( "set" 31, j, colortable[9])
      ldcall.Function3( "set" 31, 81 - j, colortable[9])
      ldcall.Function3( "set" 35, j, colortable[9])
      ldcall.Function3( "set" 35, 81 - j, colortable[9])
    EndFor
    For j = 16 To 65
      If (j > 38 AND j < 43) Then
      Else
        ldcall.Function3( "set" 18, j, colortable[9])
        ldcall.Function3( "set" 35, j, colortable[9])
      EndIf
    EndFor
    For j = 18 To 35
      ldcall.Function3( "set" j, 16, colortable[9])
      ldcall.Function3( "set" j, 65, colortable[9])
    EndFor
    For j = 38 To 43
      ldcall.Function3( "set" 27, j, colortable[9])
    EndFor
    For j = 25 To 29
      ldcall.Function3( "set" j, 40, colortable[9])
      ldcall.Function3( "set" j, 41, colortable[9])
    EndFor
    For r = 18 To 38 Step 2
      For j = 20 To 33
        If (j > 26 AND j < 28) Then
        Else
          ldcall.Function3( "set" j, r, colortable[9])
          '' ldcall.Function3( "set" j,45,colortable[9])
        EndIf
      EndFor
    EndFor
    For r = 43 To 65 Step 2
      For j = 20 To 33
        If (j > 26 AND j < 28) Then
        Else
          ldcall.Function3( "set" j, r, colortable[9])
          '' ldcall.Function3( "set" j , 45, colortable[9])
        EndIf
      EndFor
    EndFor
    
  ElseIf CASE= 16 Then
    For j = 4 To 77
      If (j > 10 AND j < 14) OR (j > 25 AND j < 29) OR (j > 38 AND j < 43) OR (j > 51 AND j < 55) OR (j > 66 AND j < 70) Then
        ldcall.Function3( "set" 11, j, colortable[9])
        ldcall.Function3( "set" 42, j, colortable[9])
      Else
        ldcall.Function3( "set" 6, j, colortable[9])
        ldcall.Function3( "set" 47, j, colortable[9])
      EndIf
    EndFor
    For j = 6 To 47
      If (j > 13 AND j < 16) OR (j > 25 AND j < 29) OR (j > 37 AND j < 40) Then
        ldcall.Function3( "set" j, 8, colortable[9])
        ldcall.Function3( "set" j, 73, colortable[9])
      Else
        ldcall.Function3( "set" j, 4, colortable[9])
        ldcall.Function3( "set" j, 77, colortable[9])
      EndIf
    EndFor
    r = 0
    For q = 1 To 8
      If r = 66 Then
        r = 70
      EndIf
      If r = 55 Then
        r = 66
      EndIf
      If r = 51 Then
        r = 55
      EndIf
      If r = 29 Then
        r = 51
      EndIf
      If r = 25 Then
        r = 29
      EndIf
      If r = 14 Then
        r = 25
      EndIf
      If r = 10 Then
        r = 14
      EndIf
      If r = 0 Then
        r = 10
      EndIf
      For j = 7 To 11
        ldcall.Function3( "set" j, r, colortable[9])
        ldcall.Function3( "set" 53 - j, r, colortable[9])
      EndFor
    EndFor
    For j = 4 To 8
      ldcall.Function3( "set" 13, j, colortable[9])
      ldcall.Function3( "set" 13, 81 - j, colortable[9])
      ldcall.Function3( "set" 16, j, colortable[9])
      ldcall.Function3( "set" 16, 81 - j, colortable[9])
      ldcall.Function3( "set" 37, j, colortable[9])
      ldcall.Function3( "set" 37, 81 - j, colortable[9])
      ldcall.Function3( "set" 40, j, colortable[9])
      ldcall.Function3( "set" 40, 81 - j, colortable[9])
    EndFor
    For j = 13 To 68
      If (j > 16 AND j < 24) OR (j > 38 AND j < 43) OR (j > 57 AND j < 64) Then
        ldcall.Function3( "set" 11, j, colortable[9])
        ldcall.Function3( "set" 42, j, colortable[9])
      Else
        ldcall.Function3( "set" 15, j, colortable[9])
        ldcall.Function3( "set" 38, j, colortable[9])
      EndIf
    EndFor
    For j = 15 To 38
      If (j > 18 AND j < 23) OR (j > 31 AND j < 35) Then
        ldcall.Function3( "set" j, 8, colortable[9])
        ldcall.Function3( "set" j, 73, colortable[9])
      Else
        ldcall.Function3( "set" j, 13, colortable[9])
        ldcall.Function3( "set" j, 68, colortable[9])
      EndIf
    EndFor
    r = 0
    For q = 1 To 4
      If r = 57 Then
        r = 64
      ElseIf r = 23 Then
        r = 57
      ElseIf r = 16 Then
        r = 23
      ElseIf r = 0 Then
        r = 16
      EndIf
      
      For j = 11 To 15
        ldcall.Function3( "set" j, r, colortable[9])
        ldcall.Function3( "set" 53 - j, r, colortable[9])
      EndFor
    EndFor
    For j = 8 To 12
      ldcall.Function3( "set" 18, j, colortable[9])
      ldcall.Function3( "set" 18, 81 - j, colortable[9])
      ldcall.Function3( "set" 23, j, colortable[9])
      ldcall.Function3( "set" 23, 81 - j, colortable[9])
      ldcall.Function3( "set" 31, j, colortable[9])
      ldcall.Function3( "set" 31, 81 - j, colortable[9])
      ldcall.Function3( "set" 35, j, colortable[9])
      ldcall.Function3( "set" 35, 81 - j, colortable[9])
    EndFor
    For j = 16 To 65
      If (j > 38 AND j < 43) Then
      Else
        ldcall.Function3( "set" 18, j, colortable[9])
        ldcall.Function3( "set" 35, j, colortable[9])
      EndIf
    EndFor
    For j = 18 To 35
      ldcall.Function3( "set" j, 16, colortable[9])
      ldcall.Function3( "set" j, 65, colortable[9])
    EndFor
    For j = 18 To 63
      ldcall.Function3( "set" 27, j, colortable[9])
    EndFor
    For j = 23 To 31
      ldcall.Function3( "set" j, 40, colortable[9])
      ldcall.Function3( "set" j, 41, colortable[9])
    EndFor
    
    For j = 20 To 33
      If (j > 25 AND j < 29) Then
      Else
        ldcall.Function3( "set" j, 38, colortable[9])
        ldcall.Function3( "set" j, 43, colortable[9])
      EndIf
    EndFor
    For j = 18 To 63
      If (j > 38 AND j < 43) Then
      Else
        ldcall.Function3( "set" 20, j, colortable[9])
        ldcall.Function3( "set" 25, j, colortable[9])
        ldcall.Function3( "set" 29, j, colortable[9])
        ldcall.Function3( "set" 33, j, colortable[9])
      EndIf
    EndFor
    For j = 1 To 50
      l8:
      q = Math.GetRandomNumber(13) + 20
      If (q > 25 AND q < 29) Then
        Goto l8
      EndIf
      l9:
      r = Math.GetRandomNumber(45) + 18
      If (r > 38 AND r < 43) Then
        Goto l9
      EndIf
      
      ldcall.Function3( "set" q, r, colortable[9])
    EndFor
    
  Else
    For i = 1 To (curlevel - 15) * 100
      ldcall.Function3( "set" Math.GetRandomNumber(46) + 4, Math.GetRandomNumber(79) + 1, colortable[9])
    EndFor
    
  EndIf
  
  For a = 1 To 8
    ldcall.function3("locc"  1, a * 8 sammy[a]["score"])
    TextWindow.ForegroundColor= colortable[a]
    TextWindow.BackgroundColor= "black
  EndFor
EndSub

Sub PlayNibbles '(numplayers, speed, diff_s, comp)***********************************************
  LDTextWindow.KeyDown=kkk
  LDTextWindow.KeyUp=kuu
  x = -1
  For a = 1 To numplayers
    sammy[a]["lives"] = 9
    sammy[a]["score"] = 0
    sammy[a]["scolor"] = colortable[a]
    sammy[a]["wall"]  = 0
    sammy[a]["ROW"] = Math.GetRandomNumber(  40) + 4
    sammy[a]["col"] = Math.GetRandomNumber(  77) + 2
    sammy[a]["direction"] = Math.GetRandomNumber(  4) + 1
  EndFor
  
  LDCall.Function4 ("Level" nextLEVEL, comp, numplayers, sammy)
  For a = 1 To numplayers
    startRow = sammy[a]["ROW"]
    startCol = sammy[a]["col"]
  EndFor
  
  curSpeed = speed
  FCDialogs.ShowMessageAsInformation("LVL "+curlevel)
  gameOver = FALSE
  
  While 1=1
    
    number = 1
    nonum = TRUE
    playerDied = FALSE
    
    While 1=1
      
      If nonum  Then
        While 1=1
          numberrow = Math.GetRandomNumber( 47) + 3
          numbercol = Math.GetRandomNumber( 78) + 2
          sisterRow = numberrow + arena[numberrow][numbercol]["sister"]
          row1 = numberrow
          col1 = numbercol
          if ldcall.Function3( "PointIsThere" numberrow, numbercol, 0) AND ldcall.Function3( "PointIsThere" sisterRow, numbercol, 0) then
            else
             Goto xxx1
          EndIf
        EndWhile
        xxx1:
        numberrow = arena[numberrow][numbercol]["realRow"]
        nonum = FALSE
                  TextWindow.ForegroundColor= "red
      TextWindow.BackgroundColor= "black
   
        ldcall.function3 ("locc"  numberrow, numbercol "*")
        '   DO
        '   xx = Math.GetRandomNumber(  255)
        '   LOOP UNTIL CHR_s(xx) <> " " AND CHR_s(xx) <> ""
        '   PRINT RIGHT_s(CHR_s(xx), 1);
        count = 0
      EndIf
      Program.Delay(33)
      kbd_s = lky
      CAS=text.ConvertToLowerCase( kbd_s)
      If CAS= "i" and sammy[4]["direction"] <> 2 Then
        sammy[4]["direction"] = 1
      ElseIf CAS= "k" and sammy[4]["direction"] <> 1 Then
        sammy[4]["direction"] = 2
      ElseIf CAS= "j" and sammy[4]["direction"] <> 4 Then
        sammy[4]["direction"] = 3
      ElseIf CAS= "l" and sammy[4]["direction"] <> 3 Then
        sammy[4]["direction"] = 4
      ElseIf CAS= "t" and sammy[3]["direction"] <> 2 Then
        sammy[3]["direction"] = 1
      ElseIf CAS= "g" and sammy[3]["direction"] <> 1 Then
        sammy[3]["direction"] = 2
      ElseIf CAS= "f" and sammy[3]["direction"] <> 4 Then
        sammy[3]["direction"] = 3
      ElseIf CAS= "h" and sammy[3]["direction"] <> 3 Then
        sammy[3]["direction"] = 4
      ElseIf CAS= "w" and sammy[2]["direction"] <> 2 Then
        sammy[2]["direction"] = 1
      ElseIf CAS= "s" and sammy[2]["direction"] <> 1 Then
        sammy[2]["direction"] = 2
      ElseIf CAS= "a" and sammy[2]["direction"] <> 4 Then
        sammy[2]["direction"] = 3
      ElseIf CAS= "d" and sammy[2]["direction"] <> 3 Then
        sammy[2]["direction"] = 4
      ElseIf CAS= "8" and sammy[1]["direction"] <> 2 Then
        sammy[1]["direction"] = 1
      ElseIf CAS= "5" and sammy[1]["direction"] <> 1 Then
        sammy[1]["direction"] = 2
      ElseIf CAS= "4" and sammy[1]["direction"] <> 4 Then
        sammy[1]["direction"] = 3
      ElseIf CAS= "6" and sammy[1]["direction"] <> 3 Then
        sammy[1]["direction"] = 4
      ElseIf CAS= "p" Then
        FCDialogs.ShowMessageAsInformation(" Game Paused ...")
        
      ElseIf CAS= " " Then
        nonum = TRUE
      ElseIf Text.IsSubText( "7qru" cas) Then
        a=Text.GetIndexOf("7qru" kbd_s)
        If sammy[a]["score"] > 1 Then
          sammy[a]["score"] = sammy[a]["score"] - 1
          sammy[a]["ROW"] = Math.GetRandomNumber( 40) + 4
          sammy[a]["col"] = Math.GetRandomNumber(  77) + 2
          sammy[a]["direction"] = Math.GetRandomNumber(  4) + 1
        EndIf
        
      ElseIf Text.IsSubText( "9eyo", cas) Then
        a=Text.GetIndexOf("9eyo" kbd_s)
        If sammy[a]["score"] > 2 Then
          CAS= sammy[a]["direction"]
          If cas= 1 Then
            arena[sammy[a]["ROW"] - 1][sammy[a]["col"]]["acolor"] = 0
          ElseIf cas= 2 Then
            arena[sammy[a]["ROW"] + 1][sammy[a]["col"]]["acolor"] = 0
          ElseIf cas= 3 Then
            arena[sammy[a]["ROW"]][sammy[a]["col"] - 1]["acolor"] = 0
          ElseIf cas= 4 Then
            arena[sammy[a]["ROW"]][sammy[a]["col"] + 1]["acolor"] = 0
          EndIf
          sammy[a]["score"] = sammy[a]["score"] - 2
        EndIf
        
      ElseIf Text.IsSubText( "1zvm" cas) Then
        a=Text.GetIndexOf("1zvm" kbd_s)
        r = 0
        If sammy[a]["score"] > 3 Then
          For q = 1 To 8
            CAS= sammy[a]["direction"]
            If CAS=1 and arena[sammy[a]["ROW"] - 1][sammy[a]["col"]]["acolor"] = colortable[q] Then
              r = q
            ElseIf CAS= 2 and  arena[sammy[a]["ROW"] + 1][sammy[a]["col"]]["acolor"] = colortable[q] Then
              r = q
            ElseIf CAS= 3 and arena[sammy[a]["ROW"]][sammy[a]["col"] - 1]["acolor"] = colortable[q] Then
              r = q
            ElseIf CAS= 4 and arena[sammy[a]["ROW"]][sammy[a]["col"] + 1]["acolor"] = colortable[q] Then
              r = q
            EndIf
          EndFor
          If r > 0 AND r < 9 Then
            LDCall.Function3( "EraseSnake" sammy, sammyBody, r)
          EndIf
          r = 0
          sammy[a]["score"] = sammy[a]["score"] - 3
        EndIf
        
      ElseIf text.IsSubText("2xb," CAS) Then
        a=Text.GetIndexOf("2xb," kbd_s)
        If sammy[a]["score"] > 4 Then
          For q = 1 To numplayers
            If q <> a Then
              sammy[q]["row"]= Math.GetRandomNumber(  40) + 4
              sammy[q]["col"] = Math.GetRandomNumber(  77) + 2
              sammy[q]["direction"] = Math.GetRandomNumber(  4) + 1
            EndIf
          EndFor
          sammy[a]["score"] = sammy[a]["score"] - 1
        EndIf
        
      ElseIf text.IsSubText("3cn." CAS) Then
        a=Text.GetIndexOf("3cn." kbd_s)
        If sammy[a]["score"] > 5 Then
          sammy[a]["ROW"] = row1 + Math.GetRandomNumber(  2) + 1
          sammy[a]["col"] = col1 + Math.GetRandomNumber(  2) + 1
          sammy[a]["direction"] = Math.GetRandomNumber(  4) + 1
          sammy[a]["score"] = sammy[a]["score"] - 5
        EndIf
        
      EndIf
      
      For q = 1 To numplayers
        If sammy[q]["row"]< 4 Then
          sammy[q]["row"]= 4
        ElseIf sammy[q]["row"]> 49 Then
          sammy[q]["row"]= 49
        ElseIf sammy[q]["col"] < 2 Then
          sammy[q]["col"] = 2
        ElseIf sammy[q]["col"] > 79 Then
          sammy[q]["col"] = 79
        EndIf
        ldcall.function3("locc"  1, q * 8 sammy[q]["score"])
      EndFor
                TextWindow.ForegroundColor= colortable[q]
      TextWindow.BackgroundColor= "black
    
      ldcall.function3("locc"  1, q * 8 curlevel)
      
      x = x + 1
      If x > 10000 Then
        x = 0
      EndIf
      
      For a = 1 To numplayers
        
        If a > (numplayers - comp) Then
          If (x / 2) - math.Floor(x / 2) = 0 Then
            If sammy[a]["wall"] = 0 Then
              If col1 > sammy[a]["col"] Then
                sammy[a]["direction"] = 4
              ElseIf col1 < sammy[a]["col"] Then
                sammy[a]["direction"] = 3
              EndIf
            EndIf
            sammy[a]["col"][2] = sammy[a]["col"]
            sammy[a]["ROW"][2] = sammy[a]["ROW"]
          EndIf
          If (x / 2) - math.Floor(x / 2) <> 0 Then
            If sammy[a]["wall"] = 0 Then
              If row1 > sammy[a]["ROW"] Then
                sammy[a]["direction"] = 2
              ElseIf row1 < sammy[a]["ROW"] Then
                sammy[a]["direction"] = 1
              EndIf
            EndIf
            sammy[a]["col"][3] = sammy[a]["col"]
            sammy[a]["ROW"][3] = sammy[a]["ROW"]
          EndIf
        EndIf
        
        CAS=sammy[a]["direction"]
        If CAS=1 and not[ldcall.Function3( "PointIsThere" sammy[a]["ROW"] - 1, sammy[a]["col"], 0)] Then
          sammy[a]["ROW"] = sammy[a]["ROW"] - 1
        ElseIf CAS=2 and not[ldcall.Function3( "PointIsThere" sammy[a]["ROW"] + 1, sammy[a]["col"], 0)] Then
          sammy[a]["ROW"] = sammy[a]["ROW"] + 1
        ElseIf CAS= 3 and not[ldcall.Function3( "PointIsThere" sammy[a]["ROW"], sammy[a]["col"] - 1, 0)] Then
          sammy[a]["col"] = sammy[a]["col"] - 1
        ElseIf CAS= 4 and not[ldcall.Function3( "PointIsThere" sammy[a]["ROW"], sammy[a]["col"] + 1, 0)] Then
          sammy[a]["col"] = sammy[a]["col"] + 1
        EndIf
        
        If sammy[a]["wall"] = .25 Then
          sammy[a]["wall"] = 0
        ElseIf sammy[a]["wall"] = .5 Then
          sammy[a]["wall"] = .25
        EndIf
        
        If a > (numplayers - comp) Then
          If ldcall.Function3( "PointIsThere" sammy[a]["ROW"], sammy[a]["col"], 0) Then
            If sammy[a]["direction"] = 1 OR sammy[a]["direction"] = 2 Then
              sammy[a]["direction"] = Math.GetRandomNumber(  2) + 3
              sammy[a]["wall"] = 1
              Goto l4
            EndIf
            If sammy[a]["direction"] = 3 OR sammy[a]["direction"] = 4 Then
              sammy[a]["direction"] = Math.GetRandomNumber(  2) + 1
              sammy[a]["wall"] = 1
              Goto l4
            EndIf
            l4:
          EndIf
          
          If sammy[a]["direction"] = 1 OR sammy[a]["direction"] = 2 Then
            If ldcall.Function3( "PointIsThere" sammy[a]["ROW"], sammy[a]["col"] - 1, 0) OR ldcall.Function3( "PointIsThere" sammy[a]["ROW"], sammy[a]["col"] + 1, 0) Then
            Else
              sammy[a]["wall"] = .5
            EndIf
          EndIf
          
          If sammy[a]["direction"] = 3 OR sammy[a]["direction"] = 4 Then
            If ldcall.Function3( "PointIsThere" sammy[a]["ROW"] - 1, sammy[a]["col"], 0) OR ldcall.Function3( "PointIsThere" sammy[a]["ROW"] + 1, sammy[a]["col"] + 1, 0) Then
            Else
              sammy[a]["wall"] = .5
            EndIf
          EndIf
          
          If sammy[a]["ROW"] < 5 OR sammy[a]["ROW"] > 48 OR sammy[a]["col"] < 3 OR sammy[a]["col"] > 78 Then
            sammy[a]["wall"] = .5
          EndIf
        EndIf
        
        If numberrow = math.Floor((sammy[a]["ROW"] + 1) / 2) AND numbercol = sammy[a]["col"] Then
          
          If sammy[a]["length"] < (MAXSNAKELENGTH - 500) Then
            sammy[a]["length"] = sammy[a]["length"] + number * (numplayers * 5)
            sammy[a]["scolor"] = colortable[a]
            For b = 1 To numplayers
              sammy[b]["wall"] = 0
            EndFor
          EndIf
          sammy[a]["score"] = sammy[a]["score"] + number
          ldcall.function3("locc"  1, a * 8 sammy[a]["score"])
    
                    TextWindow.ForegroundColor= colortable[a]
      TextWindow.BackgroundColor= "black
          number = number + 1
          If number = 15 Then
            For b = 1 To numplayers
              LDCall.Function3( "EraseSnake" sammy, sammyBody, b)
            EndFor
            ldcall.function3("locc"  numberrow, numbercol " ")
            LDCall.Function4("Level" nextLEVEL, comp, numplayers, sammy)
            FCDialogs.ShowMessageAsInformation( "Level" + curlevel )
            
            If numplayers = 1 Then
              sammy[2]["ROW"] = 0
            EndIf
            number = 1
            If diff_s = "P" Then
              speed = speed - 10
              curSpeed = speed
            EndIf
          EndIf
          nonum = TRUE
          If curSpeed < 1 Then
            curSpeed = 1
          EndIf
          
        EndIf
      EndFor
      
      For a = 1 To numplayers
        
        If LDCall.Function4( "PointIsThere2" sammy[a]["ROW"], sammy[a]["col"], 0, sammy[a]["direction"]) Then
          If a > (numplayers - comp) Then
            choose = Math.GetRandomNumber(  5) + 1
            If choose=1 or choose=2 or choose=3 Then
              
              If sammy[a]["score"] > -1 Then
                sammy[a]["ROW"] = Math.GetRandomNumber(  40) + 4
                sammy[a]["col"] = Math.GetRandomNumber(  77) + 2
                sammy[a]["direction"] = Math.GetRandomNumber(  4) + 1
                sammy[a]["score"] = sammy[a]["score"] + 1
              EndIf
            ElseIf choose= 4 Then
              If sammy[a]["score"] > 2 Then
                CAS= sammy[a]["direction"]
                If CAS= 1 Then
                  arena[sammy[a]["ROW"] - 1][sammy[a]["col"]]["acolor"] = 0
                ElseIf CAS= 2 Then
                  arena[sammy[a]["ROW"] + 1][sammy[a]["col"]]["acolor"] = 0
                ElseIf CAS= 3 Then
                  arena[sammy[a]["ROW"]][sammy[a]["col"] - 1]["acolor"] = 0
                ElseIf CAS= 4 Then
                  arena[sammy[a]["ROW"]][sammy[a]["col"] + 1]["acolor"] = 0
                EndIf
                sammy[a]["score"] = sammy[a]["score"] - 2
              EndIf
            ElseIf choose= 5 Then
              r = 0
              If sammy[a]["score"] > 3 Then
                For q = 1 To 8
                  CAS= sammy[a]["direction"]
                  If CAS=1 and  arena[sammy[a]["ROW"] - 1][sammy[a]["col"]]["acolor"] = colortable[q] Then
                    r = q
                  ElseIf CAS=2 and  arena[sammy[a]["ROW"] + 1][sammy[a]["col"]]["acolor"] = colortable[q] Then
                    r = q
                  ElseIf CAS=3 and  arena[sammy[a]["ROW"]][sammy[a]["col"] - 1]["acolor"] = colortable[q] Then
                    r = q
                  ElseIf CAS=4 and arena[sammy[a]["ROW"]][sammy[a]["col"] + 1]["acolor"] = colortable[q] Then
                    r = q
                  EndIf
                EndFor
                If r > 0 AND r < 9 Then
                  LDCall.Function3( "EraseSnake" sammy, sammyBody, r)
                EndIf
                r = 0
                sammy[a]["score"] = sammy[a]["score"] - 3
              EndIf
              
            EndIf
          EndIf
        EndIf
        
        If sammy[a]["ROW"] < 4 Then
          sammy[a]["ROW"] = 4
        EndIf
        If sammy[a]["ROW"] > 49 Then
          sammy[a]["ROW"] = 49
        EndIf
        If sammy[a]["col"] < 2 Then
          sammy[a]["col"] = 2
        EndIf
        If sammy[a]["col"] > 79 Then
          sammy[a]["col"] = 79
        EndIf
        
        If ldcall.Function3( "PointIsThere" sammy[a]["ROW"], sammy[a]["col"], 0) Then
          
          If sammy[a]["direction"] = 1 Then
            If not[ldcall.Function3( "PointIsThere" sammy[a]["ROW"] + 1, sammy[a]["col"], 0)] Then
              sammy[a]["direction"] = 2
              Goto l1
            EndIf
          EndIf
          
          If sammy[a]["direction"] = 2 Then
            If not[ldcall.Function3( "PointIsThere" sammy[a]["ROW"] - 1, sammy[a]["col"], 0)] Then
              sammy[a]["direction"] = 1
              Goto l1
            EndIf
          EndIf
          
          If sammy[a]["direction"] = 3 Then
            If not[ldcall.Function3( "PointIsThere" sammy[a]["ROW"], sammy[a]["col"] + 1, 0)] Then
              sammy[a]["direction"] = 4
              Goto l1
            EndIf
          EndIf
          
          If sammy[a]["direction"] = 4 Then
            If not[ldcall.Function3( "PointIsThere" sammy[a]["ROW"], sammy[a]["col"] - 1, 0)] Then
              sammy[a]["direction"] = 3
              Goto l1
            EndIf
          EndIf
          
          l1:
        EndIf
        sammy[a]["head"] = Math.Remainder(sammy[a]["head"] + 1 MAXSNAKELENGTH)
        sammyBody[sammy[a]["head"]][a]["row"] = sammy[a]["ROW"]
        sammyBody[sammy[a]["head"]][a]["col"] = sammy[a]["col"]
        tail = Math.Remainder(sammy[a]["head"] + MAXSNAKELENGTH - sammy[a]["length"] MAXSNAKELENGTH)
        ldcall.Function3( "set" sammyBody[tail][a]["row"], sammyBody[tail][a]["col"], 0)
        sammyBody[tail][a]["row"] = 0
        ldcall.Function3( "set" sammy[a]["ROW"], sammy[a]["col"], sammy[a]["scolor"])
      EndFor
      If playerDied Then
        Goto wxx
      EndIf
    EndWhile
    wxx:
    curSpeed = speed
    
    For a = 1 To numplayers
      LDCall.Function3( "EraseSnake" sammy, sammyBody, a)
      
      If sammy[a]["alive"] = FALSE Then
        sammy[a]["score"] = sammy[a]["score - 10"]
        FCDialogs.ShowMessageAsWarning(" -- Someone Died! :(( --")
        
      EndIf
    EndFor
    
    ldcall.Function4( "Level" SAMELEVEL, comp, numplayers, sammy)
    If sammy[1]["lives"] = 0 OR sammy[2]["lives"] = 0 Then
      Goto ex2
    EndIf
  EndWhile
  ex2:
EndSub

sub kkk
lky=text.GetSubTextToEnd(LDTextWindow.LastKey Text.GetLength( LDTextWindow.LastKey))  
EndSub

sub kuu
  lky=""
EndSub
