' Digital River
' Version 0.1
' Copyright Â© 2016 Nonki Takahashi.  The MIT License.
' Challenge 2016-01/02
'
GraphicsWindow.Title = "Digital River 0.1"
gw = 598
gh = 214
GraphicsWindow.Width = gw
GraphicsWindow.Height = gh
size = 55
GraphicsWindow.PenWidth = 0
GraphicsWindow.BackgroundColor = "#00EEEE"
GraphicsWindow.BrushColor = "#00CCCC"
rowMax = 3
colMax = 11
n = rowMax * colMax
For i = 1 To n
  row = Math.Floor((i - 1) / colMax) + 1
  col = Math.Remainder(i - 1, colMax) + 1
  ell[i] = Shapes.AddRectangle(size, size)
  x0[i] = gw / 2 + size * 1.2 * (col - Math.Ceiling(colMax / 2))
  y0[i] = gh / 2 + size * 1.2 * (row - Math.Ceiling(rowMax / 2))
  x[i] = x0[i]
  y[i] = y0[i]
  vx[i] = 0
  vy[i] = 0
EndFor
GraphicsWindow.BrushColor = "#11000000"
For i = n + 1 To 2 * n + colMax
  row = Math.Floor(((i - n) - 1) / colMax) + 1
  col = Math.Remainder((i - n) - 1, colMax) + 1
  ell[i] = Shapes.AddRectangle(size, size)
  x0[i] = gw / 2 + size * 1.2 * (col - colMax)
  y0[i] = gh / 2 + size * 1.2 * (row - Math.Ceiling(rowMax / 2)) - size / 2
  x[i] = x0[i]
  y[i] = y0[i]
  vx[i] = 200
  vy[i] = 0
EndFor
dt = 1 / 15 ' [sec]
max = 30
count = max
Timer.Interval = dt * 1000
Timer.Tick = OnTick
While "True"
  If tick Then
    For i = 1 To n
      If count = max Then
        a = Math.GetRandomNumber(360) - 1
        _a = Math.GetRadians(a)
        ax[i] = 100 * (x0[i] - x[i]) + 200 * Math.Cos(_a)
        ay[i] = 100 * (y0[i] - y[i]) + 200 * Math.Sin(_a)
      Else
        ax[i] = 100 * (x0[i] - x[i])
        ay[i] = 100 * (y0[i] - y[i])
      EndIf
      dvx = ax[i] * dt
      dvy = ay[i] * dt
      dx = (2 * vx[i] + dvx) * dt / 2
      dy = (2 * vy[i] + dvy) * dt / 2
      vx[i] = (vx[i] + dvx) * 0.8
      vy[i] = (vy[i] + dvy) * 0.8
      x[i] = x[i] + dx
      y[i] = y[i] + dy
      Shapes.Move(ell[i], x[i] - size / 2, y[i] - size / 2)
    EndFor
    For i = n + 1  To 2 * n + colMax
      If count = max Then
        a = Math.GetRandomNumber(360) - 1
        _a = Math.GetRadians(a)
        ay[i] = 100 * (y0[i] - y[i]) + 500 * Math.Sin(_a)
      Else
        ay[i] = 100 * (y0[i] - y[i])
      EndIf
      dvx = ax[i] * dt
      dvy = ay[i] * dt
      dx = (2 * vx[i] + dvx) * dt / 2
      dy = (2 * vy[i] + dvy) * dt / 2
      vx[i] = vx[i] + dvx
      vy[i] = (vy[i] + dvy) * 0.8
      x[i] = x[i] + dx
      y[i] = y[i] + dy
      If gw + size / 2 < x[i] Then
        x[i] = x[i] - size * 1.2 * colMax
      EndIf
      Shapes.Move(ell[i], x[i] - size / 2, y[i] - size / 2)
    EndFor
    count = count - 1
    If count = 0 Then
      count = max
    EndIf
    tick = "False"
  EndIf
EndWhile
Sub OnTick
  tick = "True"
EndSub
