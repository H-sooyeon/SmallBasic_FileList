GraphicsWindow.BackgroundColor="DarkSlateGray

mmd="false

m = 140

n = 0

sc=Shapes.AddRectangle(800 800)

Shapes.SetOpacity(sc 50)

ldShapes.BrushColour(sc "darkblue")

Shapes.HideShape(sc)

Turtle.Show()

LDShapes.SetTurtleImage("" 1)

doingreset = 0

firstinput = 1

GraphicsWindow.MouseMove=mmow

GraphicsWindow.BrushColor="LightSalmon

ff=Shapes.AddEllipse(200 300)

LDShapes.Centre(ff 300 200)

GraphicsWindow.BrushColor="white

ff1=Shapes.AddEllipse(50 60)

LDShapes.Centre(ff1 250 150)

ff1=Shapes.AddEllipse(50 60)

LDShapes.Centre(ff1 350 150)

GraphicsWindow.PenWidth=0

GraphicsWindow.BrushColor="darkblue

ffd=Shapes.AddEllipse(250 400)

LDShapes.Centre(ffd 300 480)

LDShapes.ZIndex(ffd,-1)

GraphicsWindow.BrushColor="black

e1=Shapes.AddEllipse(20 20)

LDShapes.move(e1 240 140)

e2=Shapes.AddEllipse(20 20)

LDShapes.move(e2 340 140)

GraphicsWindow.BrushColor="red

mm=Shapes.AddEllipse(90 30)

LDShapes.Centre(mm 300 270)

args=0

nodot="true

pz=LDText.Split("3 2 1 4 5 6 7 8" " ")

hand()

handl()

GraphicsWindow.BrushColor="LightSalmon

mm1=Shapes.AddEllipse(80 20)

LDShapes.Centre(mm1 300 260)

chdef()

GraphicsWindow.BrushColor="darkblue

cc=Controls.AddMultiLineTextBox(600 30)

LDShapes.BrushColour(cc "DarkSeaGreen")

Controls.SetSize(cc 300 600)

Controls.AddButton(" Run " 600 5)

GraphicsWindow.Height=600

GraphicsWindow.Width=900

GraphicsWindow.Left=10

GraphicsWindow.Top=10

GraphicsWindow.Title="Axel The Kind Robot

Controls.ButtonClicked=bcc

nn=Text.GetCharacter(13)+Text.GetCharacter(10)

p900=700

p910=p900+10

cmm="l n;dly 555;l s;smi;l e;l w;dot;l nw;smi;bli;l c;h 14;dly 777;h 14;dly 777;bli;h 142;dly 777;h 1423;dly 777;bli;h 12;dly 777;sbin #;fllw

Controls.SetTextBoxText(cc LDText.Replace(cmm ";" nn))



Sub mmow

  If mmd Then

    mousex=GraphicsWindow.MouseX

    mousey=GraphicsWindow.MouseY

    rr=LDMath.Convert2Radial (mousex mousey 240 140)

    r1=LDMath.Convert2Radial (mousex mousey 340 140)

    dd=Math.SquareRoot((mousex-290)*(mousex-290)+(mousey-140)*(mousey-140))

    If dd>10 Then 

      dd=10

    EndIf

    pp=LDMath.Convert2Cartesian(240 140 dd rr[2]+180)

    pp1=LDMath.Convert2Cartesian(340 140 dd r1[2]+180)

    Shapes.Move(e1 pp[1]-5 pp[2]-5)

    Shapes.Move(e2 pp1[1]-5 pp1[2]-5)

  EndIf

  

EndSub





Sub bcc

  run="true

EndSub



While "true

  If run Then

    Controls.HideControl(cc)

    GraphicsWindow.Title=">>>"

    aa=ldtext.split(text.ConvertToLowerCase( Controls.GetTextBoxText(cc)) nn)

    For x=1 To Array.GetItemCount(aa)

      If Text.StartsWith(aa[x] "l") Then

        w=LDText.Split(aa[x] " ")

        dd=w[2]

        If dd="w" Then

          Shapes.Animate(e1 230 140 p900)

          Shapes.Animate(e2 330 140 p900)

          Program.Delay(p910)

          

        ElseIf dd="e" Then

          Shapes.Animate(e1 250 140 p900)

          Shapes.Animate(e2 350 140 p900)

          Program.Delay(p910)

          

        ElseIf dd="n" Then

          Shapes.Animate(e1 240 130 p900)

          Shapes.Animate(e2 340 130 p900)

          Program.Delay(p910)

          

        ElseIf dd="s" Then

          Shapes.Animate(e1 240 150 p910)

          Shapes.Animate(e2 340 150 p910)

          Program.Delay(p910)

          

        ElseIf dd="c" Then

          Shapes.Animate(e1 240 140 p910)

          Shapes.Animate(e2 340 140 p910)

          Program.Delay(p910)

          

        ElseIf dd="nw" Then

          Shapes.Animate(e1 230 130 p910)

          Shapes.Animate(e2 330 130 p910)

          Program.Delay(p910)

          

        ElseIf dd="ne" Then

          Shapes.Animate(e1 250 130 p910)

          Shapes.Animate(e2 350 130 p910)

          Program.Delay(p910)

          

        ElseIf dd="se" Then

          Shapes.Animate(e1 250 150 p910)

          Shapes.Animate(e2 350 150 p910)

          Program.Delay(p910)

          

        ElseIf dd="sw" Then

          Shapes.Animate(e1 230 150 p910)

          Shapes.Animate(e2 330 150 p910)

          Program.Delay(p910)

        EndIf

      ElseIf Text.StartsWith(aa[x] "fllw") Then

        mmd="true

        

      ElseIf Text.StartsWith(aa[x] "smi") Then

        Shapes.ShowShape(mm1)

        nodot="true

        For y=1 To 25

          s=y*2+60

          LDShapes.SetSize(mm s  30)

          LDShapes.ZIndex(mm 5)

          LDShapes.ZIndex(mm1 6)

          Shapes.move(mm 300-s/2 270)

          s=y*2+50

          LDShapes.SetSize(mm1 s 20)

          Shapes.move(mm1 300-s/2 268)

          Program.Delay(33)

        EndFor

        

      ElseIf Text.StartsWith(aa[x] "sy") Then '-----------------say

        w=LDText.Split(aa[x] " ")

        For r=2 To Array.GetItemCount(w)

          LDCall.Function("say" w[r])

        EndFor

        

        ElseIf Text.StartsWith(aa[x] "wrt") Then '-----------------write

        Shapes.ShowShape(sc)

        LDShapes.ZIndex(sc 100)

        for d=0 to 4

          LDShapes.ZIndex(hh[d] 101)

        EndFor

        

        w=LDText.Split(aa[x] ":")

        Shapes.HideShape(hh[2])

        Shapes.HideShape(hh[3])

        

        GraphicsWindow.PenWidth=5

        GraphicsWindow.PenColor="white

        ss=0

        Turtle.Angle=0

        Turtle.x=20

        Turtle.y=100

        LDShapes.RemoveTurtleLines()

        n=0

        m=100

        For qr=1 To Text.GetLength(w[2])

          ch=Text.GetSubText (w[2] qr 1)

          

          

          ldcall.Function("trr" dff[ch])

          n=n+1

          Default()

        EndFor

        Shapes.ShowShape(hh[2])

        Shapes.ShowShape(hh[3])

        Turtle.Hide()

        LDCall.Function2("hmove" 170 340)

        Shapes.HideShape(sc)

        

      ElseIf Text.StartsWith(aa[x] "spk") Then '-----------------speak

        w=LDText.Split(aa[x] ":")

        For r=1 To Text.GetLength(w[2])

          ch=Text.GetSubText (w[2] r 1)

          If Math.Remainder(r 10)=0 Then

            Shapes.Animate(e1 230+kk 150 p910)

            Shapes.Animate(e2 330+kk 150 p910)

            kk=20-kk

          EndIf

          If ch=" " Then

          Else

            If ch="w" Then

              ch="u"

            ElseIf ch="y" Then

              ch="i"

            ElseIf Text.IsSubText("aeiou" ch) Then

            Else

              ch="n"

            EndIf

            LDCall.Function("say" ch)

            Program.Delay(222)

          EndIf

        EndFor

        

      ElseIf Text.StartsWith(aa[x] "sb") Then'-----------binary show fingers

        w=LDText.Split(aa[x] " ")

        If w[2]="#" Then

          For ff=1 To 255

            LDCall.Function("bshw" ff)

            GraphicsWindow.Title=ff

            Program.Delay(1550)

          EndFor

        Else

          LDCall.Function("bshw" w[2])

        EndIf

        

      ElseIf Text.StartsWith(aa[x] "h") Then'------------show/hide fingers

        w=LDText.Split(aa[x] " ")

        If w[2]=2 Then

          GraphicsWindow.ShowMessage("No rude stuff plz. Axel is a kind robot only." "Info")

        Else

          For f=1 To 8

            If text.IsSubText (w[2] f) Then

              Shapes.ShowShape(hh[f]) 

            Else

              Shapes.HideShape(hh[f]) 

            EndIf

          EndFor

        EndIf

        

      ElseIf Text.StartsWith(aa[x] "dot") and nodot Then'---------------smallest lips

        Shapes.HideShape(mm1)

        nodot="false

        For y=1 To 30

          LDShapes.SetSize(mm 120-y*3 20)

          LDShapes.Centre(mm 300 270)

          Program.Delay(33)

        EndFor

        

      ElseIf Text.StartsWith(aa[x] "dly") Then

        Program.Delay(Text.GetSubTextToEnd(aa[x] 5))

        

      ElseIf Text.StartsWith(aa[x] "bli") Then

        LDShapes.AnimateOpacity(e1 500 1)

        LDShapes.AnimateOpacity(e2 500 1)

        Program.Delay(550)

      EndIf

    EndFor

    GraphicsWindow.Title="Axel done.

    run="false

    Controls.ShowControl(cc)

  EndIf

EndWhile



Sub hand

  GraphicsWindow.BrushColor="LightSalmon

  For o=1 To 4

    hh[o]=Shapes.AddEllipse(25 80)

  EndFor

  hh[0]=Shapes.AddEllipse(110 80)

  Shapes.Rotate(hh[4] 45)

  

 LDCall.Function2("hmove" 170 340)

EndSub



sub hmove

  hx=args[1]

  hy=args[2]

  Shapes.move(hh[1] hx hy)'170 340)

  Shapes.move(hh[2] hx-30 hy-10)'140 330)

  Shapes.move(hh[3] hx-60 hy)'110 340)

  Shapes.move(hh[4] hx+30 hy+50)'200 390)

  Shapes.move(hh[0] hx-70 hy+60)'100 400)

 EndSub



Sub handl

  pp=600

  GraphicsWindow.BrushColor="LightSalmon

  hh[5]=Shapes.AddEllipse(25 80)

  Shapes.move(hh[5] pp-200 390)

  Shapes.Rotate(hh[5], -45)

  hh[6]=Shapes.AddEllipse(25 80)

  Shapes.move(hh[6] pp-170 340)

  hh[7]=Shapes.AddEllipse(25 80)

  Shapes.move(hh[7] pp-140 330)

  hh[8]=Shapes.AddEllipse(25 80)

  Shapes.move(hh[8] pp-110 340)

  

  hh[9]=Shapes.AddEllipse(110 80)

  Shapes.move(hh[9] pp-185 400)

EndSub



Sub bshw

  nn=text.GetSubTextToEnd( LDMath.Decimal2Base(args[1]+256 2) 2)

  'TextWindow.WriteLine(nn)

  For xx=1 To 8

    If Text.GetSubText(nn xx 1)=1 Then

      Shapes.ShowShape(hh[pz[xx]])

    Else

      Shapes.HideShape(hh[pz[xx]])

    EndIf

  EndFor

EndSub



Sub say

  nodot="true

  ss=args[1]

  If ss="a" Then

    GraphicsWindow.BrushColor="red

    Shapes.Remove(mm)

    mm=Shapes.AddEllipse(60 60)

    Shapes.HideShape(mm1)

    Shapes.Move(mm 270 240)

    

  ElseIf ss="e" Then

    GraphicsWindow.BrushColor="red

    Shapes.Remove(mm)

    mm=Shapes.AddEllipse(70 40)

    Shapes.HideShape(mm1)

    Shapes.Move(mm 265 250)

    

  ElseIf ss="i" Then

    GraphicsWindow.BrushColor="red

    Shapes.Remove(mm)

    mm=Shapes.AddEllipse(80 30)

    Shapes.HideShape(mm1)

    Shapes.Move(mm 260 255)

    

  ElseIf ss="o" Then

    GraphicsWindow.BrushColor="red

    Shapes.Remove(mm)

    mm=Shapes.AddEllipse(45 45)

    Shapes.HideShape(mm1)

    Shapes.Move(mm 300-22.5 270-22.5)

    

  ElseIf ss="u" Then

    GraphicsWindow.BrushColor="red

    Shapes.Remove(mm)

    mm=Shapes.AddEllipse(30 25)

    Shapes.HideShape(mm1)

    Shapes.Move(mm 285 270-12.5)

    

  ElseIf ss="n" Then

    GraphicsWindow.BrushColor="red

    Shapes.Remove(mm)

    mm=Shapes.AddEllipse(35 15)

    Shapes.HideShape(mm1)

    Shapes.Move(mm 300-17.5 270-7.5)

  EndIf

  

EndSub



Sub chdef

  Turtle.Speed = 10

  Default()

  dff["a"]="20 43 140 43 180 20 -70 15

  dff["b"]="0 40 90 10 45 10 45 5 45 10 45 10 180 10 45 10 45 5 45 10 45 10

  dff["c"]="u x r m20 d x q 15 45 15 45 20 45 15 45 15

  dff["d"]="0 40 90 10 45 15 45 20 45 15 45 10

  dff["e"]="0 40 90 25 u x 180 25 -90 20 d x -90 20 u x 180 20 -90 20 d x -90 25

  dff["f"]="0 40 90 25 u x 180 25 -90 20 d x -90 20 u x 180 20 -90 20 d x

  dff["g"]="0 40 r 25 q 25 l 40 l 25 l 20 l 10

  dff["h"]="0 40 q 20 l 20 r 20 q 40

  dff["i"]="r m26 q m13 r m40 r m13 q m26

  dff["x"]="a30 m44 q m22 a-30 m22 q m44

  dff["z"]="u x 0 m40 r 0 d x 0 m20 a210 m45 a90 m20

  dff["s"]="u x 0 m10 d x t135 m10 t-45 m10 t-45 m10 t-45 m5 t-45 m10 t-45 m10 t45 m10 t45 m5 t45 m10 t45 m10 t45 m10

  dff["o"]="u x r m20 d x q m10 t45 m15 t45 m20 t45 m15 t45 m10 t45 m15 t45 m20 t45 m15

  dff["q"]="u x r m20 d x q m10 t45 m15 t45 m20 t45 m15 t45 m10 t45 m15 t45 m20 t45 m15 q m7.5 r m5 q m10

  dff["v"]="u x r m15 d x a-20 m43 q m43 a20 m43

  dff["m"]="0 m40 t150 m20 t-120 m20 a180 m40

  dff["t"]="u x r m10 d x l m40 l m10 q m20

  dff["l"]="0 m40 u x q m40 d x l m25

  dff["j"]="0 m10 q m10 l m20 l m40

  dff["p"]="0 m40 r m10 t45 m10 t45 m5 t45 m10 t45 m10

  dff["n"]="0 m40 t150 m46 a0 m40

  dff["r"]="0 m40 r m10 t45 m10 t45 m5 t45 m10 t45 m10 t225 m28

  dff["k"]="0 m40 q m20 t-140 m23 q m23 a140 m25

  dff["u"]="u x 0 m40 d x q m30 t-45 m10 t-45 m10 t-45 m10 t-45 m30

  dff["y"]="u x 0 m40 d x a150 m22 a30 m22 q m22 a180 m20

  dff["w"]="u x 0 m40 d x a170 m43 a10 m43 a170 m43 a10 m43

  

  dfn[1]="r u x m5 d x 0 m20 q m10 r m40 t225 m10

  dfn[2]="u x 0 m35 d x t45 m10 t45 m10 t45 m10 t45 m10 t45 m35 t-135 m25

  dfn[3]="u x 0 m35 d x t45 m10 t45 m10 t45 m10 t45 m7.5 t45 m10 t45 m10 q m10 t45 m10 t45 m7.5 t45 m10 t45 m10 t45 m10

  dfn[4]="u x r m15 d x l m45 a210 m30 a90 m25

  dfn[5]="r m15 t-45 m10 t-45 m10 t-45 m10 t-45 m15 r m20 r m20

  dfn[8]="r 9 t-45 9 t-45 9 t-45 9 t-45 9 t45 9 t45 9 t45 9 t45 9 t45 9 t45 9 t45 9 t45 9 t-45 9 t-45 9 t-45 9

  dfn[7]="u x r m5 d x a30 m50 a270 m25

  dfn[6]="u x r m15 l m45 d x r m5 q m15 t-45 m10 t-45 m30 t-45 m10 t-45 m10 t-45 m10 t-45 m10 t-45 m10 t-45 m10 t-45 m10 t-45 m10

  dfn[9]="u x 0 m27.5 d x 0 m10 t45 m10 t45 m10 t45 m10 t45 m10 t45 m10 t45 m10 t45 m10 q m10 t-45 m10 t-45 m10 a180 m20 t45 m10 t45 m10 t45 m10

EndSub



Sub trr

  

  ll= LDText.Split (args[1] " ")

  For tt=1 To Array.GetItemCount (ll) Step 2

    If ll[tt]="r" Then

      Turtle.TurnRight ()

    ElseIf ll[tt]="u" Then

      Turtle.PenUp()

      ddd="false

      Goto xx

    ElseIf ll[tt]="d" Then

      Turtle.PenDown()

      ddd="true

      Goto xx

    ElseIf ll[tt]="q" Then

      Turtle.Turn (180)

    ElseIf text.StartsWith (ll[tt] "a") Then

      Turtle.Angle=Text.GetSubTextToEnd (ll[tt] 2)

    ElseIf ll[tt]="l" Then

      Turtle.TurnLeft ()

    Else

      t1=ll[tt]

      

      If Text.GetCharacterCode (Text.GetSubText (t1 1 1))>64 Then

        t1=Text.GetSubTextToEnd (t1 2)

      EndIf

      Turtle.Turn (t1)

    EndIf

    t2=ll[tt+1]

    If Text.GetCharacterCode (Text.GetSubText (t2 1 1))>64 Then

      t2=Text.GetSubTextToEnd (t2 2)

    EndIf

    t2s=5

    If t2<t2s Then

      t2s=t2

    EndIf

    rr=0

    While rr< t2

      Turtle.Move (t2s)

      LDCall.Function2("hmove" Turtle.x Turtle.y)

      rr=rr+t2s

    EndWhile 

    xx:

  EndFor 

EndSub 









Sub Default

  Turtle.PenUp()

  If Turtle.X > 450 Then

    Turtle.MoveTo(40*n + 25, m)

    Turtle.Angle = 0

    Turtle.Move (20)

    If doingreset = 0 Then

      'nix

    ElseIf doingreset = 1 Then

      doingreset = 0

    EndIf

    Turtle.TurnRight ()

    Turtle.Move (20)

    m = m + 70

    n = 0

  EndIf

  

  Turtle.MoveTo(40*n + 25, m)

  Turtle.Angle = 0

  Turtle.PenDown()

EndSub










