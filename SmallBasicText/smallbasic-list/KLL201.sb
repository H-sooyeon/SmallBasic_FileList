'Challenge of the Month - January 2019 - GUI Challenge

'White an interface with buttons to move backwards and forwards through a list of 

'options. 

'Each time the an option is selected new options are presented from the list.

'The list could be anything, perhaps the colours of the rainbow.

'Add an image or description of the currently selected item.

'Try using partially transparent buttons covering textboxes to change the buttons' text.



gw = 300

gh = 200

GraphicsWindow.Hide()

GraphicsWindow.Width = gw

GraphicsWindow.Height = gh

GraphicsWindow.Left = (Desktop.Width - gw) /2

GraphicsWindow.Top = (Desktop.Height - gh) /2

GraphicsWindow.Title = "GUI Challenge January"

GraphicsWindow.Show()

GraphicsWindow.KeyUp = ExitProgram



Colours = "1=Red;2=Blue;3=Green;4=Magenta;5=Purple"

current = 1

UpdateVariables()

DrawButtons()

Controls.ButtonClicked = ButtonClicked 'This line is calling the Sub ButtonClicked

'***IMPORTANT: You can only declare an event ONCE!



Sub ExitProgram

 If GraphicsWindow.LastKey = "Escape" Then

    Program.End()

 EndIf

EndSub



Sub DrawButtons

  GraphicsWindow.BrushColor = "Black"

  Button1 = Controls.AddButton("Previous: " + Colours[PreviousButton], 50, 30)

  Button2 = Controls.AddButton("Next: " + Colours[NextButton], 50, 130)

  GraphicsWindow.BrushColor = Colours[current]

  CurrentColour = Shapes.AddText(Colours[current])

  Shapes.Move(CurrentColour, 50, 80)

  Shapes.SetText(CurrentColour, "The current colour is: " + Colours[current])

EndSub



Sub UpdateVariables

If current = 0 Then

  current = Array.GetItemCount(Colours)

EndIf

If current > Array.GetItemCount(Colours) Then 

  current = 1

EndIf

PreviousButton = current - 1

NextButton = current + 1

If PreviousButton = 0 Then

  PreviousButton = Array.GetItemCount(Colours)

ElseIf NextButton > Array.GetItemCount(Colours) Then

  NextButton = 1  

EndIf

EndSub



Sub ButtonClicked 'For this sub we don't call it by adding a line of code: ButtonClicked()

'rather we call it by Controls.ButtonClicked = ButtonClicked (Line 27)

 If Controls.GetButtonCaption(Controls.LastClickedButton) = "Previous: " + Colours[PreviousButton] Then

'The reason Line 61 is written like that is because there's a bit of a bug with Controls and 

'Variables. Small Basic won't use the Variable name you called the Controls.AddButton 

'It will call them Button1, Button2 in the order that you write the code. 

'So to overcome this use: Controls.GetButtonCaption(Controls.LastButtonClicked = ""

'Don't forget - you can use a Property as input to an Operator!

 current = current - 1

 ElseIf Controls.GetButtonCaption(Controls.LastClickedButton) = "Next: " + Colours[NextButton] Then

'The reason Line 68 is written like that is because there's a bit of a bug with Controls and 

'Variables. Small Basic won't use the Variable name you called the Controls.AddButton 

'It will call them Button1, Button2 in the order that you write the code. 

'So to overcome this use: Controls.GetButtonCaption(Controls.LastButtonClicked = ""

'Don't forget - you can use a Property as input to an Operator!

 current = current + 1

 EndIf

UpdateVariables()

Controls.Remove(Button1)

Controls.Remove(Button2)

Shapes.Remove(CurrentColour)

DrawButtons()

EndSub 


