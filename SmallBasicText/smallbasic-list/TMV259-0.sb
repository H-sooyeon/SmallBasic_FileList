Game_Width = 800
GraphicsWindow.Width = Game_Width
GraphicsWindow.Height = Game_Width
TextWindow.Left = GraphicsWindow.Left + Game_Width + 15
TextWindow.Top = GraphicsWindow.Top

'SpeechBubble = ImageList.LoadImage(Program.Directory + "\speechbubble.png")
'Speech = Shapes.AddImage(SpeechBubble)
Pi = Math.Pi
NPC_Radius = 10
NPC_Diameter = NPC_Radius*2
NPC_Amount = 10

For i = 1 to NPC_Amount
  If Math.GetRandomNumber(2) = 1 then
    GraphicsWindow.BrushColor = "Blue"
    NPC[i] = Shapes.AddEllipse(NPC_Diameter,NPC_Diameter)
  Else
    GraphicsWindow.BrushColor = "Red"
    NPC[i] = Shapes.AddRectangle(NPC_Diameter,NPC_Diameter)
  endif
  NPC_X[i] = Math.GetRandomNumber(Game_Width)
  NPC_Y[i] = Math.GetRandomNumber(Game_Width)
  Shapes.Move(NPC[i],NPC_X[i]-NPC_Radius,NPC_Y[i]-NPC_Radius)
  'NPC_VX[i] = 0
  'NPC_VY[i] = 0
  'NPC_Zoom[i] = 1
  'NPC_Health[i] = 100
endfor


While "True"
  'Mouse_X = GraphicsWindow.MouseX
  'Mouse_Y = GraphicsWindow.MouseY
  
  'NPC_Update()
  NPC_CheckDistance()
  
  Program.Delay(15)
endwhile

Sub NPC_CheckDistance
  For i = 1 to NPC_Amount
    NPC_Distance_Compare = 10000
    For j = 1 to NPC_Amount
      If (i <> j) Then
        NPC_Distance_X = NPC_X[i]-NPC_X[j]
        NPC_Distance_Y = NPC_Y[i]-NPC_Y[j]
        NPC_Distance_XY = Math.SquareRoot(NPC_Distance_X*NPC_Distance_X + NPC_Distance_Y*NPC_Distance_Y)
        
        If NPC_Distance_XY < NPC_Distance_Compare Then
          NPC_Distance_Compare = NPC_Distance_XY
          NPC_Nearest[i] = j
        endif
      EndIf
    EndFor
  EndFor
  For i = 1 to NPC_Amount
    
    NPC_VX[i] = (NPC_X[NPC_Nearest[i]]-NPC_X[i])*0.01
    NPC_VY[i] = (NPC_Y[NPC_Nearest[i]]-NPC_Y[i])*0.01
    
    NPC_X[i] = NPC_X[i] + NPC_VX[i]
    NPC_Y[i] = NPC_Y[i] + NPC_VY[i]
    
    
    
    'Shapes.Zoom(NPC[i],NPC_Zoom[i],NPC_Zoom[i])
    Shapes.Move(NPC[i],NPC_X[i]-NPC_Radius,NPC_Y[i]-NPC_Radius)
    
    
  endfor
endsub

'Sub NPC_Update
'    For i = 1 to NPC_Amount
'    
'    
'    'NPC_VX[i] = ((NPC_X[NPC_Nearest[i]] - NPC_X[i])/-(NPC_X[NPC_Nearest[i]] - NPC_X[i]))
'    'NPC_VY[i] = ((NPC_Y[NPC_Nearest[i]] - NPC_Y[i])/-(NPC_Y[NPC_Nearest[i]] - NPC_Y[i]))
'
'    NPC_Skip_Update:
'  endfor
'endsub

