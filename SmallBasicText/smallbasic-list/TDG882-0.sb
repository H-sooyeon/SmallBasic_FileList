reg["a"]=0
reg["f"]=0
reg["b"]=0
reg["c"]=0
reg["d"]=0
reg["e"]=0
reg["h"]=0
reg["l"]=0
reg["ix"]=0
reg["iy"]=0
args=0

'adc 'sbc
'andd orr xor cpl neg
'bit 'set 'res 
'call_NZ _Z _NC _C _PO _PE _P _M
'ccf scf
'cp
'cpd 'cpdr 'cpi 'cpir
'daa
'di 'ei
'ex_AF_AF'
'ex_(SP)_HL
'ex_DE_HL
'ex_(SP)_IX
'ex_(SP)_IY
'exx
'im0 'im0/1 'im1 'im2
'in 'ind 'indr 'ini 'inir
'jp_NZ _Z _NC _C _PO _PE _P _M
'jp_(HL) _(IX) _(IY)
'jr_NZ _Z _NC _C
'otdr 'otir 'out 'outd 'outi
'ret_NZ _Z _NC _C _PO _PE _P _M
'reti 'retn
'rl 'rlc 'rlca
'rld rrd
'rr 'rra 'rrc 'rrca
'rst0 8 18 20 28 30 38
'sla 'sll 'sra 'srl


ss="Hello World!~ZX Demo v0.1
For x=1 To 24*32
  mem[16384-1+x]=0'text.GetCharacterCode( Text.GetSubText(ss x 1))
  
EndFor
init()

Sub rst_10
  w=0
  oo=33
  GraphicsWindow.FontName="ZX Spectrum
  GraphicsWindow.FontSize=22
  GraphicsWindow.FontBold="false
  GraphicsWindow.BrushColor="black
  ' TextWindow.WriteLine(text.GetSubText( mem 1 121))
  While mem[w+16384]>0
    If mem[w+16384]=126  Then
      wx=0
      wy=wy+1
    ElseIf mem[w+16384]=16 Then
      wx=mem[w+16384+1]
      wy=mem[w+16384+2]
      w=w+2
    Else
      If (w>0 and math.Remainder(w 32)=0) Then
        wx=0
        wy=wy+1
      EndIf
      GraphicsWindow.BrushColor="teal
      GraphicsWindow.FillRectangle(wx*25+100+oo 10+wy*25 25 25)
      GraphicsWindow.BrushColor="black
      
      GraphicsWindow.DrawText(wx*25+100+oo 10+wy*25 text.GetCharacter( mem[w+16384]))
      GraphicsWindow.BrushColor="white
      GraphicsWindow.DrawText(wx*25+98+oo 8+wy*25 text.GetCharacter( mem[w+16384]))
      
      wx=wx+1
    EndIf
    w=w+1
  EndWhile
  
EndSub
Sub pop_BC
  reg["c"]=Stack.PopValue("reg")
  reg["b"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub pop_DE
  reg["e"]=Stack.PopValue("reg")
  reg["d"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub pop_HL
  reg["l"]=Stack.PopValue("reg")
  reg["h"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub pop_AF
  reg["f"]=Stack.PopValue("reg")
  reg["a"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub pop_ix
  reg["ixl"]=Stack.PopValue("reg")
  reg["ixh"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub pop_iy
  reg["iyl"]=Stack.PopValue("reg")
  reg["iyh"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub push_BC
  Stack.PushValue("reg" reg["b"])
  Stack.PushValue("reg" reg["c"])
  LDList.Add(stk reg["b"])
  LDList.Add(stk reg["c"])
  'TextWindow.WriteLine( LDList.ToArray(stk))
EndSub
Sub push_DE
  Stack.PushValue("reg" reg["d"])
  Stack.PushValue("reg" reg["e"])
  LDList.Add(stk reg["d"])
  LDList.Add(stk reg["e"])
EndSub
Sub push_AF
  Stack.PushValue("reg" reg["a"])
  Stack.PushValue("reg" reg["f"])
  LDList.Add(stk reg["a"])
  LDList.Add(stk reg["f"])
EndSub
Sub push_HL
  Stack.PushValue("reg" reg["h"])
  Stack.PushValue("reg" reg["l"])
  LDList.Add(stk reg["h"])
  LDList.Add(stk reg["l"])
EndSub
Sub push_ix
  Stack.PushValue("reg" reg["ixh"])
  Stack.PushValue("reg" reg["ixl"])
  LDList.Add(stk reg["ixh"])
  LDList.Add(stk reg["ixl"])
EndSub
Sub push_iy
  Stack.PushValue("reg" reg["iyh"])
  Stack.PushValue("reg" reg["iyl"])
  LDList.Add(stk reg["iyh"])
  LDList.Add(stk reg["iyl"])
  
EndSub
Sub call
  Stack.PushValue("pc" px+1)
  px=lbl[":"+args[1][2]]
EndSub
Sub ret
  pc=Stack.PopValue("pc")
EndSub
Sub ld
  If Array.ContainsIndex(reg args[1][2]) and Array.ContainsIndex(reg args[1][3])   Then
    
    reg[args[1][2]]=reg[args[1][3]]
    
  ElseIf Text.StartsWith(args[1][2] "(hl") or Text.StartsWith(args[1][2] "[hl") Then
    mem[reg["h"]*256+reg["l"]]=reg[args[1][3]]
    
  ElseIf FCExtensions.IsNumber(args[1][3]) Then
    If Text.GetLength(args[1][2])=2 Then
      reg[Text.GetSubText(args[1][2] 1 1)]=math.floor(args[1][3]/256)
      reg[Text.GetSubText(args[1][2] 2 1)]=math.Remainder(args[1][3] 256)
    Else
      reg[Text.GetSubText(args[1][2] 1 1)]=math.Remainder(args[1][3] 256)
      
    EndIf
    
  Else
    GraphicsWindow.ShowMessage("Invalid reg on #"+px "Err01")
  EndIf
  
EndSub
Sub dly
  Program.Delay(args[1][2])
EndSub
Sub djnz
  reg["c"]=reg["c"]-1
  If reg["c"]=0 and reg["b"]=0 Then
    Goto xxx
  EndIf
  If reg["c"]<0 Then
    reg["b"]=reg["b"]-1
    reg["c"]=255
  EndIf
  If reg["b"]<0 Then
  Else
    px=lbl[":"+args[1][2]]
  EndIf
  xxx:
EndSub
Sub jp
  px=lbl[":"+args[1][2]]
EndSub
Sub jr
  px=lbl[":"+args[1][2]]
EndSub

Sub jp_cHLc
  'cant b emulated :((
EndSub
Sub jp_cIXc
  'cant b emulated :((
EndSub
Sub jp_cIYc
  'cant b emulated :((
EndSub

Sub inc
  If Array.ContainsIndex(reg args[1][2])    Then
    reg[args[1][2]]=reg[args[1][2]]+1
  Else
    GraphicsWindow.ShowMessage("Invalid reg on #"+px "Err01")
  EndIf
EndSub
Sub dec
  If Array.ContainsIndex(reg args[1][2])    Then
    reg[args[1][2]]=reg[args[1][2]]-1
  Else
    GraphicsWindow.ShowMessage("Invalid reg on #"+px "Err01")
  EndIf
EndSub
Sub subb
  If Array.ContainsIndex(reg args[1][2])    Then
    reg[args[1][2]]=reg[args[1][2]]-args[1][3]
  Else
    GraphicsWindow.ShowMessage("Invalid reg on "+px "Err01")
  EndIf
EndSub
Sub add
  If Array.ContainsIndex(reg args[1][2])    Then
    reg[args[1][2]]=reg[args[1][2]]-args[1][3]
  Else
    GraphicsWindow.ShowMessage("Invalid reg on #"+px "Err01")
  EndIf
EndSub

Sub halt
 GraphicsWindow.ShowMessage("HALT cmd executed" "Info")  
EndSub
Sub nop
'no op...  
EndSub

Sub init
  stk=LDList.CreateFromValues("1=<empty>")
  prg=LDList.CreateFromValues(LDText.Split("ld bc 3!push_bc!ld d 48!ld e 48!ld hl 16384!ld a 16!ld (hl) a!inc l!ld a 9!ld (hl) a!ld a 3!inc l!ld (hl) a!inc l!:rr1!ld bc 10!:rr!ld (hl) d!inc d!rst_10!dly 999!djnz rr!inc e!inc l!ld a 16!ld (hl) a!inc l!ld a 8!ld (hl) a!ld a 3!inc l!ld (hl) a!inc l!ld (hl) e!rst_10!subb l 4!ld d 48!pop_bc!dec c!push_bc!djnz rr1!ld a 48!ld (hl) a!rst_10!nop" "!"))
  'prg=LDList.CreateFromValues("1=rst_10")
  lb=LDControls.AddListBox(stk 100 300)
  lbP=LDControls.AddListBox(prg 150 700)
  Controls.Move(lbp 130 0)
  GraphicsWindow.Left=5
  GraphicsWindow.Top=5
  
  GraphicsWindow.Width=800
  GraphicsWindow.Height=400
  GraphicsWindow.BackgroundColor="teal
  TextWindow.BackgroundColor="darkblue
  TextWindow.ForegroundColor="cyan
  TextWindow.Clear()
EndSub

While 1=1'------------MAIN LOOP=====================
  TextWindow.Write("cmd>")
  cc=text.ConvertToLowerCase(TextWindow.Read())
  If cc="run" or cc="ruh" Then
    paa= LDList.ToArray(prg)
    If cc="ruh" Then
      Shapes.SetOpacity(lbp 30)
    EndIf
    For px=1 To Array.GetItemCount(paa)
      pp=LDText.Split(paa[px]+" 0" " ")
      If Text.StartsWith(pp[1] ":") Then
        lbl[pp[1]]=px+1
      EndIf
    EndFor
    
    px=1
    While px<= Array.GetItemCount(paa)
      pp=LDText.Split(paa[px]+" 0" " ")
      px=px+1
      
      If Text.StartsWith(pp[1] ":") Then
        
      Else
        LDCall.Function(pp[1] pp)
      EndIf
      
      a1=Array.GetAllIndices(reg)
      b1=0
      For ff=1 To Array.GetItemCount(a1)
        b1[ff]=a1[ff]+" << "+reg[a1[ff]]
      EndFor
      LDControls.ListBoxContent(lbp LDList.CreateFromValues(b1))
      LDControls.ListBoxContent(lb stk)
      ' Program.Delay(155)
    EndWhile
    
  ElseIf cc="hid" or cc="h" Then
    Shapes.SetOpacity(lbp 0)
    
  ElseIf cc="list" or cc="lst" or cc="l" Then
    Shapes.SetOpacity(lbp 90)
    prg=LDList.CreateFromValues(paa)
    LDControls.ListBoxContent(lbp prg)
  Else
    
    LDList.Add(prg cc)
    LDControls.ListBoxContent(lbp prg)
  EndIf
  
  'pp=LDText.Split(cc+" 0" " ")
  'LDCall.Function(pp[1] pp)
  
  'LDControls.ListBoxContent(lb stk)
  ' TextWindow.WriteLine(reg)
EndWhile
