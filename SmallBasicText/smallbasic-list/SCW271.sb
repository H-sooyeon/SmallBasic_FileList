Initialise()

GraphicsWindow.Title="3D road"

GraphicsWindow.MouseMove = OnMouseMove

GraphicsWindow.MouseDown = OnMouseDown

GraphicsWindow.MouseUp = OnMouseUp

init="true"

While "True"

  

  If (mww And mouseDown) or init Then

    mww="false"

    GraphicsWindow.BrushColor = bg

    GraphicsWindow.FillRectangle(0,0,gw,gh)

    If init then 

      init="false"   

    else

      theta = -(GraphicsWindow.MouseX-mouseX)/gw*PI

      phi = -(GraphicsWindow.MouseY-mouseY)/gh*PI/2

      'GraphicsWindow.Title =theta +":"+phi

      setRotation()

      matrix1 = matrix

      matrix2 = rotationOLD

      multiply()

      rotation = matrix

    endif  

    

    matrix = rotation

    For iBall = 1 To numBall

      X = ballX[iBall]

      Y = ballY[iBall]

      Z = ballZ[iBall]

      getScreen()

      ballSX[iBall] = SX

      ballSY[iBall] = SY

      ballSZ[iBall] = SZ

    EndFor

    

    j=numBall/2

    For iBall =  j-1 To 1 Step -1

      pp[1][1]= ballSX[iBall]

      pp[1][2]= ballSY[iBall]

      pp[2][1] = ballSX[iBall+j]

      pp[2][2] = ballSY[iBall+j]

      pp[3][1] = ballSX[iBall+j+1]

      pp[3][2] = ballSY[iBall+j+1]

      pp[4][1] = ballSX[iBall+1]

      pp[4][2] = ballSY[iBall+1]

      

      cc[1]=LDColours.HSLtoRGB (10+iball*2 1 0.6)

      cc[2]=LDColours.HSLtoRGB (10+iball*2 1 0.2)

      

      gr= LDShapes.BrushGradient (cc, "DD")

      LDShapes.BrushPolygon (gr pp)   

      

    EndFor

  endif

  Program.Delay(15)

EndWhile



'###########################################*SUBS****



Sub Initialise

  PI = 2.0*Math.ArcCos(0)

  gw = 1200

  gh = 800

  bg = "darkblue"

  GraphicsWindow.PenWidth=0

  GraphicsWindow.Width = gw

  GraphicsWindow.Height = gh

  GraphicsWindow.BackgroundColor = bg

  GraphicsWindow.Top = 0

  GraphicsWindow.Left = 0

  centreX = 0

  centreY = 0

  centreZ = 0

  numBall = 50

  radBall = 15

  scale = 2

  theta = .21

  phi = .02

  zf=1.1

  j= numBall/2

  f3=11

  For i = 1 To j

    If i=1 Then

      dd=200

    Else

      dd=0

    endif

    

    If i=j Then

      ddx=200

    Else

      ddx=0

    endif

    ballX[i] = LDMath.Cos(i*f3)*200+ddx

    ballY[i] = LDMath.sin(i*f3)*200-dd

    ballY[i+j] = LDMath.sin(i*f3)*150-dd

    ballX[i+j] = LDMath.Cos(i*f3)*150+ddx

    ballZ[i] = zf*i

    ballZ[i+j] = zf*i

    pc[i] = LDColours.HSLtoRGB (i*4 1 .6)

  EndFor

  

  GraphicsWindow.PenColor = "#05ff0000"

  setRotation()

  rotation = matrix

EndSub



Sub setRotation 'Input : theta, phi  Output : matrix

  matrix[1][1] = Math.Cos(theta)*Math.Cos(phi)

  matrix[1][2] = Math.Sin(theta)

  matrix[1][3] = Math.Cos(theta)*Math.Sin(phi)

  

  matrix[2][1] = -Math.Sin(theta)*Math.Cos(phi)

  matrix[2][2] = Math.Cos(theta)

  matrix[2][3] = -Math.Sin(theta)*Math.Sin(phi)

  

  matrix[3][1] = -Math.Sin(phi)

  matrix[3][2] = 0

  matrix[3][3] = Math.Cos(phi)

EndSub



Sub multiply

  For i = 1 To 3

    For j = 1 To 3

      matrix[i][j] = 0

      For k = 1 To 3

        matrix[i][j] = matrix[i][j] + matrix1[i][k]*matrix2[k][j]

      EndFor

    EndFor

  EndFor

EndSub



Sub getAngles  'Input : matrix  Output theta, phi

  phi = Math.ArcCos(Math.Min(1.0,Math.Max(-1.0,matrix[3][3])))

  theta = Math.ArcCos(Math.Min(1.0,Math.Max(-1.0,matrix[2][2])))

  If (matrix[1][2] < 0) Then

    theta = theta+PI

  EndIf

EndSub



Sub getScreen  'Input matrix, scale, centreX, centreY, centreZ, X, Y, Z

               'Output SX, SY, SZ(depth)

  DX = (X-centreX)*scale

  DY = (Y-centreY)*scale

  DZ = (Z-centreZ)*scale

  SX = gw/2 + DX*matrix[2][1] + DY*matrix[2][2] + DZ*matrix[2][3]

  SY = gh/2 + DX*matrix[3][1] + DY*matrix[3][2] + DZ*matrix[3][3]

  SZ = (DX*matrix[1][1] + DY*matrix[1][2] + DZ*matrix[1][3])/255/scale

EndSub



Sub OnMouseMove

  mww="true"

EndSub



Sub OnMouseDown

  mww="true"

  mouseX = GraphicsWindow.MouseX

  mouseY = GraphicsWindow.MouseY

  rotationOLD = rotation

  mouseDown = "true"

EndSub



Sub OnMouseUp

  mouseDown = "false"

EndSub


