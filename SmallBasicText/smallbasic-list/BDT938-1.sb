' SmallBasic Version 1.2

' Program: ConicSectionCurvesTurtle small

' Changelog: 

' Author: Pappa Lapub

' Website: https://social.msdn.microsoft.com/Forums/en-US/eaba725c-24a8-4300-8fa6-8231763398cb/challenge-of-the-month-may-2018

' ImportURL: http://smallbasic.com/program/?BDT938-1   , BDT938-0 (add. feature with LitDev)  , BDT938  (filled)

' Extension: ---

' Comment: Maths Challenge (Conics)

'  Get the Turtle (or another way) to draw the main conic sections. These are:

'    Circle, Ellipse, Parabola, Hyperbola

'    https://en.wikipedia.org/wiki/Conic_section

' Variables: 

' ToDo: 

'===============================================================================

pw = 3                  ' PenWidth

f = Math.GetRadians(1)  ' pi/180, factor deg->rad



gw = GraphicsWindow.Width     ' 624

gh = GraphicsWindow.Height    ' 442

GraphicsWindow.Top = 0

GraphicsWindow.BackgroundColor = "#202020"



a = gw / 4    ' 156

x0 = 2 * a    ' = gw / 2  ' 312

y0 = gh / 2   ' = 2 * b ' 221

'Turtle.Speed = 10    ' may cause flickering



'Grid()

'Axis()



GraphicsWindow.PenWidth = pw

Circle()

Ellipse()

Parabola()

Hyperbola()



Turtle.Hide()

GraphicsWindow.Title = "Conic Section Curves (Turtle)"





' ////////////////////  SUBs  ////////////////////

Sub Circle

  GraphicsWindow.Title = "Circle  x,y = r*cos(t), r*sin(t)"

  GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()

  Turtle.X = x0 + a

  Turtle.Y = y0

  For deg = 1 To 360

    x = a * Math.Cos(deg * f)

    y = a * Math.Sin(deg * f)

    Turtle.MoveTo(x0+x, y0-y)

  EndFor

EndSub



Sub Ellipse

  b = a / 2 '' mod. for circleH/2

  GraphicsWindow.Title = "Ellipse  x,y = a*cos(t), b*sin(t)"

  GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()

  Turtle.X = x0 + a

  Turtle.Y = y0

  For deg = 1 To 360

    x = a * Math.Cos(deg * f)

    y = b * Math.Sin(deg * f)

    Turtle.MoveTo(x0+x, y0-y)

  EndFor

EndSub



Sub Parabola

  '' mod. to reach GW-corners, with  init.  gh:gw ?‰ˆ 1:sqrt(2)

  GraphicsWindow.Title = "Parabola  y = inv(q * xÂ²)"

  GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()

  sgnX = 1

  For n = 1 To 2  ' left & right parabola

    'Turtle.X = x0 - sgnX*a

    'Turtle.Y = y0 - a

    'For x = -a To a

    Turtle.X = x0 - sgnX*x0

    Turtle.Y = 0  ' y0 - y0

    For x = -y0 To y0

      y = x * x / a                       ' expl. x -> y

      Turtle.MoveTo(x0-sgnX*y, y0+x)      ' inverse x<->y

    EndFor

    sgnX = -sgnX

  EndFor

EndSub



Sub Hyperbola

  b = y0 / Math.SquareRoot(3) '' mod. to reach GW-corners

  GraphicsWindow.Title = "Hyperbola  y = b/a * ?ˆš(xÂ² - aÂ²), inv(a/b * ?ˆš(yÂ² + bÂ²))"

  GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()

  y1 = b*Math.SquareRoot(3)             ' = b/a * ?ˆš(xÂ² - aÂ²)  @ x=2*a

  sgnX = 1

  For n = 1 To 2                        ' left & right hyperbola

    Turtle.X = x0 - sgnX*x0

    Turtle.Y = y0 - y1

    For x = -y1 To y1+1                 ' endpoints at x=2*a

      y = a/b * Math.SquareRoot(x*x + b*b)  ' expl. x -> y

      Turtle.MoveTo(x0-sgnX*y, y0+x)    ' inverse x<->y

    EndFor

    sgnX = -sgnX

  EndFor

EndSub





Sub Grid

  GraphicsWindow.PenWidth = 0.18

  GraphicsWindow.PenColor = "DimGray"

  d = a / 4 ' 5

  For y = y0 To gh Step d

    For x = x0 To gw-d Step d

      GraphicsWindow.DrawRectangle(x,y, d,d)

      GraphicsWindow.DrawRectangle(gw-x-d,gh-y-d, d,d)

      GraphicsWindow.DrawRectangle(x,gh-y-d, d,d)

      GraphicsWindow.DrawRectangle(gw-x-d,y, d,d)

    EndFor

  EndFor

EndSub



Sub Axis

  GraphicsWindow.PenWidth = 0.5

  GraphicsWindow.PenColor = "OrangeRed"

  GraphicsWindow.DrawLine(0,y0, gw,y0)

  GraphicsWindow.DrawLine(x0,0, x0,gh)

  'GraphicsWindow.DrawEllipse(x0-a/2,y0-a/2, a,a)

EndSub




