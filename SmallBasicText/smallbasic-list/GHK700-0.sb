'  Ants walking around elephant 
'  1st step  ; make an elephant and 3 ants   //    GHK700
'  2nd step ;  Ant approaches the elephant   //  GHK700-0

GraphicsWindow.Width = 1000
GraphicsWindow.Height = 420
GraphicsWindow.BackgroundColor = "rosybrown"

add_Elephant()
Shapes_Init()
Shapes_Add()
other_ant()
CenterPosition()   '  No31 = mouth

While "True"
  TM=TM+1
  ant_walking_around_elephant()  '<---------
  Program.Delay(50)
  If Math.Remainder(TM,10)=0 Then 
    Shapes.HideShape(ele["oEye1"])
    Shapes.HideShape(ele["oEye2"])
    Program.Delay(100)
    Shapes.ShowShape(ele["oEye1"])
    Shapes.ShowShape(ele["oEye2"])
  EndIf
endwhile

Sub ant_walking_around_elephant
  SearchElephant()                                '  search   angle  to elephant   
  MovL= 50+Math.GetRandomNumber(30)            '  random  moving length 
  moveant()                                    '  ant moves 
  XYC[j]="X="+(Shapes.GetLeft(shape[j][31]["obj"])-25)+";Y="+ (Shapes.Gettop(shape[j][31]["obj"])+25)  
  antdistance()                                '  distance from  ant to  sugar
endsub

Sub antdistance
  For j=1 To 2
    x[j][31]=Shapes.GetLeft(shape[j][31]["obj"])+shape[j][31]["width"]*s/2
    y[j][31]=Shapes.Gettop( shape[j][31]["obj"])+shape[j][31]["height"]*s/2
    distance[j]=Math.SquareRoot(Math.Power((x[j][31]-X0),2)+Math.Power((y[j][31]-y0),2))  '  current distance
  EndFor
EndSub

Sub moveant
  For k=1 To 10
    For j=1 To 2
      ddx[j]=-MovL*Math.Cos(Math.GetRadians(targetangle[j]))/50
      ddy[j]=-MovL*Math.Sin(Math.GetRadians(targetangle[j]))/25
      For i=1 To 31   
        Shapes.Move(shape[j][i]["obj"],Shapes.GetLeft(shape[j][i]["obj"])+ddx[j],shapes.GetTop(shape[j][i]["obj"])+ddy[j])
      EndFor
      Program.Delay(10)
    EndFor
  EndFor
EndSub

Sub SearchElephant
  dd0=0.00000001 '  to avoid devide zero error 
  For j=1 To 2
    deg[j]=deg0[j]+(30- Math.GetRandomNumber(60))                                   '  random  direction
    if distance[j]<distance0[j]/2 Then  
      deg[j]=math.GetDegrees(Math.ArcTan( (XYC[j]["Y"]-Y0) / (XYC[j]["X"]-X0+dd0) ))       '  angle to sugar
    EndIf
    targetangle[j]= math.Floor(deg[j]*10)/10                                        '  temporary  target angle
    s1=s
    For NN=NN0[j] To targetangle[j]  Step 2*(targetangle[j]/Math.Abs(targetangle[j]+dd0))     '  step ....  -0.5  or +0.5
      For i=  1 To 31
        newX[j][i]=DR[j][i]*Math.Cos(Math.GetRadians(DS0[j][i]+NN))+XYC[j]["X"]           '   new position .. X //center of the shape
        newY[j][i]=DR[j][i]*Math.sin(Math.GetRadians(DS0[j][i]+NN))+XYC[j]["Y"]           '   new position .. Y //center of the shape
        Shapes.Move(shape[j][i]["obj"],newx[j][i]-shape[j][i]["width"]*s1/2, newY[j][i]-shape[j][i]["height"]*s1/2)  '  move the shape to  Left:Top  position 
        Shapes.Rotate(shape[j][i]["obj"],NN+shape[j][i]["angle"])                       '  rotation  
      endfor
      Program.Delay(5)
    EndFor
    NN0[j]=targetangle[j]   '   start angle 
  EndFor 
EndSub

Sub  CenterPosition
  For j=1 To 2
    For i=  1 To 31 ' array.GetItemCount(SHP)
      X[j][i]=Shapes.GetLeft(shape[j][i]["obj"])+shape[j][i]["width"]*s/2                                  '  center of the shape ... X
      Y[j][i]=Shapes.GetTop(shape[j][i]["obj"])+shape[j][i]["height"]*s/2                                  '  center of the shape ... Y
      DS0[j][i]=math.GetDegrees(Math.ArcTan((Y[j][i]-XYC[j]["Y"])/(X[j][i]-XYC[j]["X"])))                    '  degree // angle of the shape_Center  from   XYC position       
      DR[j][i]=Math.SquareRoot((X[j][i]-XYC[j]["X"])*(X[j][i]-XYC[j]["X"])+(Y[j][i]-XYC[j]["Y"])*(Y[j][i]-XYC[j]["Y"]))  '   radius  
    endfor
    distance[j]=Math.SquareRoot(Math.Power((x[j][31]-X0),2)+Math.Power((y[j][31]-y0),2))               
    distance0[j]=math.Floor( distance[j]) '  distance   from ant-mouse to elephant bpdy-center  
  endfor
  ' GraphicsWindow.Title=distance0[1]+"  :  "+distance0[2] 
endsub

Sub Shapes_Init
  shX = 650 ' x offset                     '<---------
  shY = 300 ' y offset                     '<---------
  shape = ""
  shape[1][1]  = "func=rect;x=61;y=55;width=6;height=14;angle=330;bc=red;pc=yellow;pw=2;"
  shape[1][2]  = "func=rect;x=42;y=25;width=5;height=18;angle=338;bc=red;pc=yellow;pw=2;"
  shape[1][3]  = "func=rect;x=8;y=6;width=3;height=19;angle=241;bc=red;pc=yellow;pw=2;"
  shape[1][4]  = "func=rect;x=28;y=23;width=6;height=25;angle=294;bc=red;pc=yellow;pw=2;"
  shape[1][5]  = "func=rect;x=40;y=7;width=5;height=20;angle=358;bc=red;pc=yellow;pw=2;"
  shape[1][6]  = "func=rect;x=33;y=0;width=5;height=18;angle=241;bc=red;pc=yellow;pw=2;"
  shape[1][7]  = "func=ell;x=27;y=39;width=46;height=21;bc=red;pc=yellow;pw=2;"
  shape[1][8]  = "func=ell;x=36;y=76;width=54;height=7;angle=6;bc=red;pc=yellow;pw=2;"
  shape[1][9]  = "func=ell;x=19;y=86;width=25;height=4;angle=289;bc=red;pc=yellow;pw=2;"
  shape[1][10] = "func=ell;x=13;y=97;width=19;height=3;angle=347;bc=red;pc=yellow;pw=2;"
  shape[1][11] = "func=ell;x=169;y=104;width=26;height=6;angle=7;bc=red;pc=yellow;pw=2;"
  shape[1][12] = "func=ell;x=107;y=75;width=46;height=6;angle=165;bc=red;pc=yellow;pw=2;"
  shape[1][13] = "func=ell;x=138;y=84;width=43;height=9;angle=238;bc=red;pc=yellow;pw=2;"
  shape[1][14] = "func=rect;x=16;y=10;width=5;height=20;angle=345;bc=red;pc=yellow;pw=2;"
  shape[1][15] = "func=ell;x=37;y=43;width=11;height=11;bc=red;pc=yellow;pw=2;"
  shape[1][16] = "func=ell;x=84;y=75;width=39;height=8;angle=152;bc=red;pc=yellow;pw=2;"
  shape[1][17] = "func=ell;x=105;y=83;width=38;height=9;angle=257;bc=red;pc=yellow;pw=2;"
  shape[1][18] = "func=ell;x=126;y=103;width=20;height=8;angle=24;bc=red;pc=yellow;pw=2;"
  shape[1][19] = "func=ell;x=61;y=68;width=46;height=21;angle=12;bc=red;pc=yellow;pw=2;"
  shape[1][20] = "func=ell;x=103;y=73;width=46;height=21;bc=red;pc=yellow;pw=2;"
  shape[1][21] = "func=ell;x=149;y=63;width=73;height=34;angle=352;bc=red;pc=yellow;pw=2;"
  shape[1][22] = "func=ell;x=38;y=74;width=54;height=7;angle=18;bc=red;pc=yellow;pw=2;"
  shape[1][23] = "func=ell;x=12;y=87;width=48;height=7;angle=282;bc=red;pc=yellow;pw=2;"
  shape[1][24] = "func=ell;x=0;y=112;width=30;height=5;angle=347;bc=red;pc=yellow;pw=2;"
  shape[1][25] = "func=ell;x=109;y=76;width=39;height=8;angle=152;bc=red;pc=yellow;pw=2;"
  shape[1][26] = "func=ell;x=91;y=96;width=56;height=8;angle=268;bc=red;pc=yellow;pw=2;"
  shape[1][27] = "func=ell;x=119;y=128;width=30;height=5;angle=14;bc=red;pc=yellow;pw=2;"
  shape[1][28] = "func=ell;x=83;y=75;width=39;height=8;angle=152;bc=red;pc=yellow;pw=2;"
  shape[1][29] = "func=ell;x=123;y=99;width=79;height=9;angle=238;bc=red;pc=yellow;pw=2;"
  shape[1][30] = "func=ell;x=181;y=134;width=30;height=5;angle=14;bc=red;pc=yellow;pw=2;"
  shape[1][31] = "func=ell;x=15;y=52;width=14;height=5;angle=348;bc=red;pc=yellow;pw=2;" '  No31 = mouth
  
  shape[2][1]   = "func=rect;x=561;y=55;width=6;height=14;angle=330;bc=red;pc=yellow;pw=2;"
  shape[2][2]   = "func=rect;x=542;y=25;width=5;height=18;angle=338;bc=red;pc=yellow;pw=2;"
  shape[2][3]   = "func=rect;x=508;y=6;width=3;height=19;angle=241;bc=red;pc=yellow;pw=2;"
  shape[2][4]   = "func=rect;x=528;y=23;width=6;height=25;angle=294;bc=red;pc=yellow;pw=2;"
  shape[2][5]   = "func=rect;x=540;y=7;width=5;height=20;angle=358;bc=red;pc=blue;pw=2;"
  shape[2][6]   = "func=rect;x=533;y=0;width=5;height=18;angle=241;bc=red;pc=blue;pw=2;"
  shape[2][7]   = "func=ell;x=527;y=39;width=46;height=21;bc=red;pc=blue;pw=2;"
  shape[2][8]   = "func=ell;x=536;y=76;width=54;height=7;angle=6;bc=red;pc=blue;pw=2;"
  shape[2][9]   = "func=ell;x=519;y=86;width=25;height=4;angle=289;bc=red;pc=green;pw=2;"
  shape[2][10] = "func=ell;x=513;y=97;width=19;height=3;angle=347;bc=red;pc=green;pw=2;"
  shape[2][11] = "func=ell;x=669;y=104;width=26;height=6;angle=7;bc=red;pc=green;pw=2;"
  shape[2][12] = "func=ell;x=607;y=75;width=46;height=6;angle=165;bc=red;pc=cyan;pw=2;"
  shape[2][13] = "func=ell;x=638;y=84;width=43;height=9;angle=238;bc=red;pc=green;pw=2;"
  shape[2][14] = "func=rect;x=516;y=10;width=5;height=20;angle=345;bc=red;pc=blue;pw=2;"
  shape[2][15] = "func=ell;x=537;y=43;width=11;height=11;bc=red;pc=blue;pw=2;"
  shape[2][16] = "func=ell;x=584;y=75;width=39;height=8;angle=152;bc=red;pc=blue;pw=2;"
  shape[2][17] = "func=ell;x=605;y=83;width=38;height=9;angle=257;bc=red;pc=blue;pw=2;"
  shape[2][18] = "func=ell;x=626;y=103;width=20;height=8;angle=24;bc=red;pc=yellow;pw=2;"
  shape[2][19] = "func=ell;x=561;y=68;width=46;height=21;angle=12;bc=red;pc=yellow;pw=2;"
  shape[2][20] = "func=ell;x=603;y=73;width=46;height=21;bc=red;pc=yellow;pw=2;"
  shape[2][21] = "func=ell;x=649;y=63;width=73;height=34;angle=352;bc=red;pc=yellow;pw=2;"
  shape[2][22] = "func=ell;x=538;y=74;width=54;height=7;angle=18;bc=red;pc=cyan;pw=2;"
  shape[2][23] = "func=ell;x=512;y=87;width=48;height=7;angle=282;bc=red;pc=cyan;pw=2;"
  shape[2][24] = "func=ell;x=500;y=112;width=30;height=5;angle=347;bc=red;pc=cyan;pw=2;"
  shape[2][25] = "func=ell;x=609;y=76;width=39;height=8;angle=152;bc=red;pc=cyan;pw=2;"
  shape[2][26] = "func=ell;x=591;y=96;width=56;height=8;angle=268;bc=red;pc=blue;pw=2;"
  shape[2][27] = "func=ell;x=619;y=128;width=30;height=5;angle=14;bc=red;pc=green;pw=2;"
  shape[2][28] = "func=ell;x=583;y=75;width=39;height=8;angle=152;bc=red;pc=blue;pw=2;"
  shape[2][29] = "func=ell;x=623;y=99;width=79;height=9;angle=238;bc=red;pc=green;pw=2;"
  shape[2][30] = "func=ell;x=681;y=134;width=30;height=5;angle=14;bc=red;pc=blue;pw=2;"
  shape[2][31] = "func=ell;x=515;y=52;width=14;height=5;angle=348;bc=red;pc=green;pw=2;" '  No31 = mouth
EndSub

Sub Shapes_Add
  s = 0.4
  'GraphicsWindow.BackgroundColor="Lightcyan"
  For j=1 To 2
    For i = 1 To 31
      GraphicsWindow.PenWidth = shape[j][i]["pw"]*s
      GraphicsWindow.PenColor = shape[j][i]["pc"]
      GraphicsWindow.BrushColor = shape[j][i]["bc"]
      If shape[j][i]["func"] = "rect" Then
        shape[j][i]["obj"] = Shapes.AddRectangle(shape[j][i]["width"]*s, shape[j][i]["height"]*s)
      ElseIf shape[j][i]["func"] = "ell" Then
        shape[j][i]["obj"] = Shapes.AddEllipse(shape[j][i]["width"]*s, shape[j][i]["height"]*s)
      ElseIf shape[j][i]["func"] = "tri" Then
        shape[j][i]["obj"] = Shapes.AddTriangle(shape[j][i]["x1"]*s, shape[j][i]["y1"]*s, shape[j][i]["x2"]*s, shape[j][i]["y2"]*s, shape[j][i]["x3"]*s, shape[j][i]["y3"]*s)
      ElseIf shape[j][i]["func"] = "line" Then
        shape[j][i]["obj"] = Shapes.AddLine(shape[j][i]["x1"]*s, shape[j][i]["y1"]*s, shape[j][i]["x2"]*s, shape[j][i]["y2"]*s)
      EndIf
      Shapes.Move(shape[j][i]["obj"], shX + shape[j][i]["x"]*s, shY + shape[j][i]["y"]*s)
      Shapes.Rotate(shape[j][i]["obj"], shape[j][i]["angle"])
    EndFor
    XYC[j]="X="+(Shapes.GetLeft(shape[j][31]["obj"])-25)+";Y="+ (Shapes.Gettop(shape[j][31]["obj"])+25)   
    deg0[j]= math.GetDegrees(Math.ArcTan( (XYC[j]["Y"]-Y0) / (XYC[j]["X"]-X0) ))
  EndFor
EndSub

Sub other_ant
  ' Data Table
  draw[1]  = "X=561;Y=55;W=6;H=14;angle=330;color=red;color2=yellow;pw=2;" '<--
  draw[2]  = "X=542;Y=25;W=5;H=18;angle=338;color=red;color2=yellow;pw=2;" '<--
  draw[3]  = "X=508;Y=6;W=3;H=19;angle=241;color=red;color2=yellow;pw=2;" '<--
  draw[4]  = "X=528;Y=23;W=6;H=25;angle=294;color=red;color2=yellow;pw=2;" '<--
  draw[5]  = "X=540;Y=7;W=5;H=20;angle=358;color=red;color2=blue;pw=2;" '<--
  draw[6]  = "X=533;Y=0;W=5;H=18;angle=241;color=red;color2=blue;pw=2;" '<--
  draw[7]  = "X=527;Y=39;W=46;H=21;color=red;color2=blue;pw=2;" '<--
  draw[8]  = "X=536;Y=76;W=54;H=7;angle=6;color=red;color2=blue;pw=2;" '<--
  draw[9]  = "X=519;Y=86;W=25;H=4;angle=289;color=red;color2=green;pw=2;" '<--
  draw[10] = "X=513;Y=97;W=19;H=3;angle=347;color=red;color2=green;pw=2;" '<--
  draw[11] = "X=669;Y=104;W=26;H=6;angle=7;color=red;color2=green;pw=2;" '<--
  draw[12] = "X=607;Y=75;W=46;H=6;angle=165;color=red;color2=cyan;pw=2;" '<--
  draw[13] = "X;=638;Y=84;W=43;H=9;angle=238;color=red;color2=green;pw=2;" '<--
  draw[14] = "X=516;Y=10;W=5;H=20;angle=345;color=red;color2=blue;pw=2;" '<--
  draw[15] = "X=537;Y=43;W=11;H=11;color=red;color2=blue;pw=2;" '<--
  draw[16] = "X=584;Y=75;W=39;H=8;angle=152;color=red;color2=blue;pw=2;" '<--
  draw[17] = "X=605;Y=83;W=38;H=9;angle=257;color=red;color2=blue;pw=2;" '<--
  draw[18] = "X=626;Y=103;W=20;H=8;angle=24;color=red;colo2=yellow;pw=2;" '<--
  draw[19] = "X=561;Y=68;W=46;H=21;angle=12;color=red;color2=yellow;pw=2;" '<--
  draw[20] = "X=603;Y=73;W=46;H=21;color=red;color2=yellow;pw=2;" '<--
  draw[21] = "X=649;Y=63;W=73;H=34;angle=352;color=red;color2=yellow;pw=2;" '<--
  draw[22] = "X=538;Y=74;W=54;H=7;angle=18;color=red;color2=cyan;pw=2;" '<--
  draw[23] = "X=512;Y=87;W=48;H=7;angle=282;color=red;color2=cyan;pw=2;" '<--
  draw[24] = "X=500;Y=112;W=30;H=5;angle=347;color=red;color2=cyan;pw=2;" '<--
  draw[25] = "X=609;Y=76;W=39;H=8;angle=152;color=red;color2=cyan;pw=2;" '<--
  draw[26] = "X=591;Y=96;W=56;H=8;angle=268;color=red;color2=blue;pw=2;" '<--
  draw[27] = "X=619;Y=128;W=30;H=5;angle=14;color=red;color2=green;pw=2;" '<--
  draw[28] = "X=583;Y=75;W=39;H=8;angle=152;color=red;color2=blue;pw=2;" '<--
  draw[29] = "X=623;Y=99;W=79;H=9;angle=238;color=red;color2=green;pw=2;" '<--
  draw[30] = "X=681;Y=134;W=30;H=5;angle=14;color=red;color2=blue;pw=2;" '<--
  draw[31] = "X=515;Y=52;W=14;H=5;angle=348;color=red;color2=green;pw=2;" '<-- '  No31 = mouth
  
  'Add and Animate shapes for solid color
  For i = 1 To Array.GetItemCount(draw)
    GraphicsWindow.PenWidth =draw[i]["pw"]      '<--
    GraphicsWindow.PenColor = draw[i]["color2"]   '<-- 
    GraphicsWindow.BrushColor = draw[i]["color"]
    shp[i] = Shapes.AddEllipse(draw[i]["W"]*s, draw[i]["H"]*s) '<-- 
    Shapes.Rotate(shp[i], draw[i]["angle"]) '<--
    Shapes.Animate(shp[i], shx+draw[i]["X"]*s, draw[i]["Y"]*s, 500) '<-- 
    Program.Delay(50)
  EndFor 
EndSub

Sub add_Elephant
  scale = 1
  GraphicsWindow.PenWidth = 0
  ' Add legs
  GraphicsWindow.BrushColor = "yellow"
  param = "name=oLeg1;width=35;height=80;"
  AddRectangleToElement()
  GraphicsWindow.BrushColor = "red"
  param = "name=oLeg2;width=35;height=80;"
  AddRectangleToElement()
  ' Add tail
  GraphicsWindow.BrushColor = "red"
  param = "name=oTail;a1=330;a2=370;r=75;width=5;"
  AddArcToElement()
  ' Add body
  GraphicsWindow.BrushColor = "blue"
  param = "name=oBody;width=150;height=150;"
  AddEllipseToElement()
  ' Add ears
  GraphicsWindow.BrushColor = "orange"
  param = "name=oEar1;width=75;height=100;"
  AddEllipseToElement()
  param = "name=oEar2;width=75;height=100;"
  AddEllipseToElement()
  ' Add head
  GraphicsWindow.BrushColor = " maroon"
  param = "name=oHead;width=100;height=100;"
  AddEllipseToElement()
  ' Add nose
  r = Math.Floor(ele["oHead.width"] / 2)
  param = "name=oNose;a1=315;a2=360;r=" + r + ";width=25;"
  AddArcToElement()
  ' Add eyes
  GraphicsWindow.BrushColor = "yellow"
  param = "name=oClosedEye1;width=20;height=3;"
  AddRectangleToElement()
  param = "name=oClosedEye2;width=20;height=3;"
  AddRectangleToElement()
  param = "name=oEye1;width=20;height=20;"
  AddEllipseToElement()
  param = "name=oEye2;width=20;height=20;"
  AddEllipseToElement()
  
  ' Move body
  param = "name=oBody;cx=500;cy=200;"
  MoveElement()
  ' Move legs
  rx = ele["oBody.width"] / 2
  ry = ele["oBody.height"] / 2
  ang = 270 - 25
  cx = ele["oBody.cx"] + rx * Math.Cos(ang / 180 * Math.Pi)
  cy = ele["oBody.cy"] - ry * Math.Sin(ang / 180 * Math.Pi)
  param = "name=oLeg1;cx=" + Math.Floor(cx) + ";cy=" + Math.Floor(cy) + ";"
  MoveElement()
  ang = 270 + 25
  cx = ele["oBody.cx"] + rx * Math.Cos(ang / 180 * Math.Pi)
  cy = ele["oBody.cy"] - ry * Math.Sin(ang / 180 * Math.Pi)
  param = "name=oLeg2;cx=" + Math.Floor(cx) + ";cy=" + Math.Floor(cy) + ";"
  MoveElement()
  ' Move head
  cx = ele["oBody.cx"] - 20
  cy = ele["oBody.cy"] - 30
  param = "name=oHead;cx=" + cx + ";cy=" + cy + ";"
  MoveElement()
  ' Move nose
  cx = Math.Floor(ele["oHead.cx"] - ele["oHead.width"] / 2)
  cy = Math.Floor(ele["oHead.cy"] + ele["oHead.height"] / 2)
  param = "name=oNose;cx=" + cx + ";cy=" + cy + ";"
  MoveArc()
  ' Move tail
  cx = ele["oBody.cx"] 
  cy = Math.Floor(ele["oBody.cy"] - ele["oBody.height"] / 2)
  param = "name=oTail;cx=" + cx + ";cy=" + cy + ";"
  MoveArc()
  ' Move ears
  cx = Math.Floor(ele["oHead.cx"] - ele["oHead.width"] / 1.5)
  cy = ele["oHead.cy"]
  param = "name=oEar1;cx=" + cx + ";cy=" + cy + ";"
  MoveElement()
  cx = Math.Floor(ele["oHead.cx"] + ele["oHead.width"] / 1.5)
  param = "name=oEar2;cx=" + cx + ";cy=" + cy + ";"
  MoveElement()
  ' Move eyes
  rx = ele["oHead.width"] / 4
  ry = ele["oHead.height"] / 4
  ang = 270 - 60
  cx = ele["oHead.cx"] + rx * Math.Cos(ang / 180 * Math.Pi)
  cy = ele["oHead.cy"] - ry * Math.Sin(ang / 180 * Math.Pi)
  param = "name=oEye1;cx=" + Math.Floor(cx) + ";cy=" + Math.Floor(cy) + ";"
  MoveElement()
  param["name"] = "oClosedEye1"
  MoveElement()
  ang = 270 + 60
  cx = ele["oHead.cx"] + rx * Math.Cos(ang / 180 * Math.Pi)
  cy = ele["oHead.cy"] - ry * Math.Sin(ang / 180 * Math.Pi)
  param = "name=oEye2;cx=" + Math.Floor(cx) + ";cy=" + Math.Floor(cy) + ";"
  MoveElement()
  param["name"] = "oClosedEye2"
  MoveElement()
  '------------------------------------------------------------------------
  x0= 510+150/2  '  body center-X
  y0= 200+150/2  '  body center-Y
EndSub

Sub AddEllipseToElement
  ' param["name"] - object name
  ' param["width"] - width of rectangle
  ' param["height"] - height of rectangle
  ' param scale - scale of size
  ele[param["name"] + ".width"] = param["width"] 
  ele[param["name"] + ".height"] = param["height"]
  ele[param["name"]] = Shapes.AddEllipse(ele[param["name"] + ".width"] * scale, ele[param["name"] + ".height"] * scale)
EndSub

Sub AddRectangleToElement
  ' param["name"] - object name
  ' param["width"] - width of rectangle
  ' param["height"] - height of rectangle
  ' param scale - scale of size
  ele[param["name"] + ".width"] = param["width"]
  ele[param["name"] + ".height"] = param["height"]
  ele[param["name"]] = Shapes.AddRectangle(ele[param["name"] + ".width"] * scale, ele[param["name"] + ".height"] * scale)
EndSub

Sub AddArcToElement
  ' param["name"] - object name    
  ' param["a1"] - start angle [degree]
  ' param["a2"] - end angle [degree]
  ' param["r"] - radius
  ' param["width"] - pen width
  name = param["name"]
  a1 = param["a1"]
  a2 = param["a2"]
  r = param["r"]
  width = param["width"]
  ele[name + ".a1"] = a1
  ele[name + ".a2"] = a2
  ele[name + ".r"] = r
  ele[name + ".width"] = width
  For a = a1 To a2
    ele[name + a] = Shapes.AddEllipse(width * scale, width * scale)
  EndFor
EndSub

Sub MoveArc
  ' param["name"] - object name    
  ' param["cx"] - center x position
  ' param["cy"] - center y position
  name = param["name"]
  cx = param["cx"]
  cy = param["cy"]
  a1 = ele[name + ".a1"]
  a2 = ele[name + ".a2"]
  r = ele[name + ".r"]
  width = ele[name + ".width"]
  For a = a1 To a2
    left = cx + r * Math.Cos(a * Math.Pi / 180) - width / 2
    top = cy - r * Math.Sin(a * Math.Pi / 180) - width / 2
    Shapes.Move(ele[name + a], left * scale, top * scale)
  EndFor
EndSub

Sub MoveElement
  ' param["name"] - object name
  ' param["cx"] - center x coordinate
  ' param["cy"] - center y coordinate
  ' param scale - scale of size
  ele[param["name"] + ".cx"] = param["cx"]
  ele[param["name"] + ".cy"] = param["cy"]
  Shapes.Move(ele[param["name"]], (ele[param["name"] + ".cx"] - ele[param["name"] + ".width"] / 2) * scale, (ele[param["name"] + ".cy"] - ele[param["name"] + ".height"] / 2) * scale)
EndSub

Sub DumpParam
  n = Array.GetItemCount(param)
  index = Array.GetAllIndices(param)
  For i = 1 To n
    TextWindow.WriteLine("param[" + index[i] + "]=" + param[index[i]])
  EndFor
EndSub

Sub DumpElements
  n = Array.GetItemCount(ele)
  index = Array.GetAllIndices(ele)
  For i = 1 To n
    TextWindow.WriteLine("ele[" + index[i] + "]=" + ele[index[i]])
  EndFor
EndSub
