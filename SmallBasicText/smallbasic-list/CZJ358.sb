' Cards - demo of cards
' Copyright (c) 2012 Nonki Takahashi.  All rights reserved.
'
' History : 
' 0.1 2012/08/21 Created.
'
GraphicsWindow.Title = "Cards 0.1"
Cards_Init()
While "True"
  ' Shuffle  cards
  For i = 1 To nSuites * nNumbers / 2
    i1 = Math.GetRandomNumber(nSuites * nNumbers)
    i2 = Math.GetRandomNumber(nSuites * nNumbers)
    Cards_Swap()
  EndFor
  ' Open cards
  For index = 1 To nSuites * nNumbers
    Cards_Open()
    Program.Delay(200)
  EndFor
  ' Close cards
  For index = 1 To nSuites * nNumbers
    Cards_Close()
    Program.Delay(200)
  EndFor
EndWhile

Sub Cards_Init
  ' return cards - array for cards properties
  ' return nSuites - number of suites
  ' return nNumbers - number of numbers
  width = 50
  height = 70
  cards["width"] = width
  cards["height"] = height
  cards["xs"] = 4  ' offset for suite in a card
  cards["ys"] = 30
  cards["xn"] = 4  ' offset for number in a card
  cards["yn"] = 5
  pattern = "color=DarkBlue;code=2591;"
  suites["club"] = "color=Black;code=2663;"
  suites["diamond"] = "color=#AA0000;code=2666;"
  suites["heart"] = "color=#AA0000;code=2665;"
  suites["spade"] = "color=Black;code=2660;"
  numbers = "1=A;2=2;3=3;4=4;5=5;6=6;7=7;8=8;9=9;10=10;11=J;12=Q;13=K;"
  nSuites = Array.GetItemCount(suites)
  nNumbers = Array.GetItemCount(numbers)
  iSuites = Array.GetAllIndices(suites)
  GraphicsWindow.Width = (width + 10) * nNumbers + 10
  GraphicsWindow.Height = (height + 10) * (nSuites + 1) + 10
  GraphicsWindow.BackgroundColor = "#004400"
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.FontName = "MS UI Gothic"
  col = 1
  row = 1
  x0 = 10
  y0 = 10
  sHex = pattern["code"]
  Math_Hex2Dec()
  pChar = Text.GetCharacter(iDec)
  For s = 1 To nSuites
    suite = iSuites[s]
    sHex = suites[suite]["code"]
    Math_Hex2Dec()
    sChar = Text.GetCharacter(iDec)
    For n = 1 To nNumbers
      index = index + 1
      GraphicsWindow.BrushColor = "White"
      cards[index]["oCard"] = Shapes.AddRectangle(width, height)
      GraphicsWindow.BrushColor = suites[suite]["color"]
      GraphicsWindow.FontSize = 28
      cards[index]["oSuite"] = Shapes.AddText(sChar)
      cards[index]["oNumber"] = Shapes.AddText(numbers[n])
      GraphicsWindow.BrushColor = "White"
      cards[index]["oCard2"] = Shapes.AddRectangle(width, height)
      GraphicsWindow.BrushColor = pattern["color"]
      GraphicsWindow.FontSize = 60
      cards[index]["oPattern"] = Shapes.AddText(pChar)
      Cards_Move()
    EndFor
  EndFor
  For index = 1 To nSuites * nNumbers
    col = Math.Remainder(index - 1, nNumbers) + 1
    row = Math.Floor((index - 1) / nNumbers) + 2
    Cards_Move()
    Program.Delay(100)
  EndFor
EndSub

Sub Cards_Close
  ' param index
  Shapes.ShowShape(cards[index]["oCard2"])
  Shapes.ShowShape(cards[index]["oPattern"])
EndSub

Sub Cards_Open
  ' param index
  Shapes.HideShape(cards[index]["oPattern"])
  Shapes.HideShape(cards[index]["oCard2"])
EndSub

Sub Cards_Move
  ' param index - index of a card
  ' param col, row - position to move
  cards[index]["col"] = col
  cards[index]["row"] = row
  x = x0 + (col - 1) * (width + 10)
  y = y0 + (row - 1) * (height + 10)
  Shapes.Move(cards[index]["oCard"], x, y)
  Shapes.Move(cards[index]["oSuite"], x + cards["xs"], y + cards["ys"])
  Shapes.Move(cards[index]["oNumber"], x + cards["xn"], y + cards["yn"])
  Shapes.Move(cards[index]["oCard2"], x, y)
  Shapes.Move(cards[index]["oPattern"], x + cards["xn"], y + cards["yn"])
EndSub

Sub Cards_Swap
  ' param i1, i2 - indices of two cards
  col1 = cards[i1]["col"]
  row1 = cards[i1]["row"]
  col = cards[i2]["col"]
  row = cards[i2]["row"]
  index = i1
  Cards_Move()
  index = i2
  col = col1
  row = row1
  Cards_Move()
EndSub

Sub Math_Hex2Dec
  ' Math | Convert hexadecimal to decimal
  ' param sHex
  ' return iDec
  iDec = 0
  iLen = Text.GetLength(sHex)
  For iPtr = 1 To iLen
    iDec = iDec * 16 + Text.GetIndexOf("0123456789ABCDEF", Text.GetSubText(sHex, iPtr, 1)) - 1
  EndFor
EndSub
