''' Binary and Hexadecimal
''' Copyright Â© 2016 Nonki Takahashi.  The MIT License.
''' Last update 2016-05-02
''' Challenge 2016-05
'
GraphicsWindow.Title = "Binary and Hexadecimal"
Form()
For dec = 255 To 0 Step -1
  ShowBinary()
  ShowHex()
  Program.Delay(30)
EndFor
While "True"
  dec = Math.GetRandomNumber(256) - 1
  ShowBinary()
  ShowHex()
  Shapes.SetOpacity(hex, 0)
  Program.Delay(3000)
  For op = 0 To 100
    Shapes.SetOpacity(hex, op)
    Program.Delay(30)
  EndFor
  Program.Delay(1000)
EndWhile
Sub Form
  GraphicsWindow.Width = 598
  GraphicsWindow.Height = 428
  size = 40
  x0 = 70
  y0 = 60
  GraphicsWindow.BackgroundColor = "Black"
  GraphicsWindow.BrushColor = "Lime"
  For i = 1 To 8
    bit[8 - i] = Shapes.AddEllipse(size, size)
    Shapes.Move(bit[8 - i], x0 + (i - 1) * size * 1.4, y0)
    Shapes.SetOpacity(bit[8 - i], 20)  
  EndFor
  GraphicsWindow.FontName = "Trebuchet MS"
  GraphicsWindow.FontSize = size * 5
  GraphicsWindow.BrushColor = "White"
  hex = Shapes.AddText("00")
  Shapes.Move(hex, x0 + size * 2.5, y0 + size * 1.6)
EndSub
Sub DecToBaseN
  ' Convert decimal number to notation system of base n 
  ' param dec - decimal number
  ' param n - base n
  ' return num - number in notation system of base n
  Stack.PushValue("local", dec)
  If dec = 0 Then
    num = 0
  Else
    num = ""
    While 0 < dec
      num = Text.Append(Text.GetSubText("0123456789ABCDEF", Math.Remainder(dec, n) + 1, 1), num)
      dec = Math.Floor(dec / n)
    EndWhile
  EndIf
  dec = Stack.PopValue("local")
EndSub
Sub ShowBinary
  ' param dec - decimal number
  n = 2
  DecToBaseN()
  len = Text.GetLength(num) ' binary
  If len < 8 Then
    num = Text.Append(Text.GetSubTextToEnd("0000000", len), num)
    len = 8
  EndIf
  For i = 1 To len
    If Text.GetSubText(num, i, 1) = "1" Then
      Shapes.SetOpacity(bit[len - i], 100)
    Else
      Shapes.SetOpacity(bit[len - i], 20)
    EndIf
  EndFor
EndSub
Sub ShowHex
  ' param dec - decimal number
  n = 16
  DecToBaseN()
  If Text.GetLength(num) = 1 Then
    num = Text.Append(0, num)
  EndIf
  Shapes.SetText(hex, num)
EndSub
  
