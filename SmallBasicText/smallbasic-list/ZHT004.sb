GraphicsWindow.BackgroundColor ="teal
GraphicsWindow.Title = "Pictionary"

While "true
  GraphicsWindow.Clear ()
  gw = 598
  gh = 428
  GraphicsWindow.Width = gw
  GraphicsWindow.Height = gh
  ' initialize shapes
  Shapes_Init()
  ' add shapes
  scale = 1
  iMin = 1
  iMax = 23
  angle=0
  Shapes_Add()
  Program.Delay (9999)
  doarr()
  
  Program.Delay (9999)
  dopen()
  
  Program.Delay (3999)
endwhile

Sub dopen
  GraphicsWindow.Clear ()
  
  gw = 598
  gh = 428
  GraphicsWindow.Width = gw
  GraphicsWindow.Height = gh
  ' initialize shapes
  Shapes_Init_Pen()
  ' add shapes
  scale = 1
  iMin = 1
  iMax = 12
  Shapes_Add()
  angle = -20
  iMax = 11
  Shapes_Rotate()
  y=150
  ox=30
  f260=20
  oy=f260
  For xx=0 to 200
    x=xx*3+30
    sn=ldmath.Sin(xx*4)*50
    y=f260+sn
    Shapes_Move ()
    GraphicsWindow.PenWidth=3
    GraphicsWindow.PenColor ="darkblue
    GraphicsWindow.DrawLine (ox-5 oy+110 x-5 y+110)
    ox=x
    oy=y
    Program.Delay (25)
  endfor
  
  For xx=200 to 0 step-1
    x=xx*3+30
    sn=ldmath.Sin(xx*4)*50
    y=40+sn
    Shapes_Move ()
    GraphicsWindow.PenWidth=3
    GraphicsWindow.PenColor ="darkblue
    GraphicsWindow.DrawLine (ox-5 oy+110 x-5 y+110)
    ox=x
    oy=y
    Program.Delay (25)
  endfor
  x=150
  y=220
  Shapes_Move ()
EndSub 

Sub Shapes_Init_Pen
  
  shX = 100 ' x offset
  shY = 165 ' y offset
  shape = ""
  shape[1] = "func=tri;x=2;y=17;x1=16;y1=0;x2=0;y2=39;x3=33;y3=39;angle=270;bc=#C2C2C2;pw=0;"
  shape[2] = "func=tri;x=41;y=17;x1=16;y1=0;x2=0;y2=39;x3=33;y3=39;angle=90;bc=#C2C2C2;pw=0;"
  shape[3] = "func=tri;x=11;y=19;x1=15;y1=0;x2=0;y2=35;x3=30;y3=35;angle=270;bc=#B9B141;pw=0;"
  shape[4] = "func=tri;x=64;y=0;x1=14;y1=0;x2=0;y2=72;x3=29;y3=72;angle=90;bc=#B9B141;pw=0;"
  shape[5] = "func=rect;x=74;y=20;width=178;height=30;bc=#000000;pw=0;"
  shape[6] = "func=ell;x=38;y=33;width=7;height=7;bc=#000000;pw=0;"
  shape[7] = "func=line;x=0;y=37;x1=0;y1=0;x2=40;y2=0;pc=#000000;pw=1;"
  shape[8] = "func=ell;x=370;y=15;width=45;height=39;bc=#000000;pw=0;"
  shape[9] = "func=rect;x=244;y=15;width=151;height=39;bc=#000000;pw=0;"
  shape[10] = "func=rect;x=252;y=15;width=9;height=39;bc=#B9B141;pw=0;"
  shape[11] = "func=rect;x=286;y=37;width=105;height=10;bc=#B9B141;pw=0;"
  shape[12] = "func=text;x=380;y=200;text=Pen;fn=Trebuchet MS;fs=50;bc=white"
EndSub


Sub Shapes_Init
  shX = 145 ' x offset
  shY = 68 ' y offset
  shape = ""
  shape[1] = "func=rect;x=-20;y=-20;width=356;height=281;bc=#333333;pw=0;"
  shape[2] = "func=rect;x=1;y=0;width=316;height=241;bc=#ABABAB;pw=0;"
  shape[3] = "func=tri;x=0;y=0;x1=34;y1=0;x2=0;y2=35;x3=68;y3=35;angle=180;bc=#8C8C8C;pw=0;"
  shape[4] = "func=tri;x=250;y=0;x1=34;y1=0;x2=0;y2=35;x3=68;y3=35;angle=180;bc=#8C8C8C;pw=0;"
  shape[5] = "func=rect;x=34;y=0;width=249;height=36;bc=#8C8C8C;pw=0;"
  shape[6] = "func=rect;x=35;y=205;width=249;height=36;bc=#BFBFBF;pw=0;"
  shape[7] = "func=tri;x=0;y=206;x1=34;y1=0;x2=0;y2=35;x3=68;y3=35;bc=#BFBFBF;pw=0;"
  shape[8] = "func=tri;x=250;y=206;x1=34;y1=0;x2=0;y2=35;x3=68;y3=35;bc=#BFBFBF;pw=0;"
  shape[9] = "func=ell;x=35;y=19;width=249;height=36;bc=#000000;pw=0;"
  shape[10] = "func=ell;x=33;y=186;width=249;height=36;bc=#000000;pw=0;"
  shape[11] = "func=ell;x=20;y=35;width=30;height=170;bc=#000000;pw=0;"
  shape[12] = "func=ell;x=266;y=35;width=30;height=170;bc=#000000;pw=0;"
  shape[13] = "func=rect;x=35;y=36;width=247;height=168;bc=#000000;pw=0;"
  shape[14] = "func=line;x=86;y=108;x1=0;y1=0;x2=1;y2=60;pc=#00FF00;pw=2
  shape[15] = "func=line;x=87;y=168;x1=0;y1=2;x2=143;y2=0;pc=#00FF00;pw=2
  shape[16] = "func=line;x=111;y=66;x1=0;y1=0;x2=94;y2=0;pc=#00FF00;pw=2
  shape[17] = "func=line;x=86;y=67;x1=25;y1=0;x2=0;y2=43;pc=#00FF00;pw=2
  shape[18] = "func=line;x=112;y=66;x1=0;y1=0;x2=25;y2=41;pc=#00FF00;pw=2
  shape[19] = "func=line;x=137;y=108;x1=0;y1=0;x2=0;y2=61;pc=#00FF00;pw=2
  shape[20] = "func=line;x=231;y=109;x1=0;y1=0;x2=0;y2=61;pc=#00FF00;pw=2
  shape[21] = "func=line;x=205;y=67;x1=0;y1=0;x2=25;y2=41;pc=#00FF00;pw=2
  shape[22] = "func=line;x=137;y=108;x1=0;y1=0;x2=94;y2=0;pc=#00FF00;pw=2
  shape[23] = "func=text;x=220;y=284;text=Graphics;fn=Trebuchet MS;fs=50;bc=lime
EndSub

Sub Shapes_Add
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  Shapes_CalcWidthAndHeight()
  s = scale
  For i = iMin To iMax
    shp = shape[i]
    GraphicsWindow.PenWidth = shp["pw"] * s
    If shp["pw"] > 0 Then
      GraphicsWindow.PenColor = shp["pc"]
    EndIf
    If Text.IsSubText("rect|ell|tri|text", shp["func"]) Then
      GraphicsWindow.BrushColor = shp["bc"]
    EndIf
    If shp["func"] = "rect" Then
      shp["obj"] = Shapes.AddRectangle(shp["width"] * s, shp["height"] * s)
    ElseIf shp["func"] = "ell" Then
      shp["obj"] = Shapes.AddEllipse(shp["width"] * s, shp["height"] * s)
    ElseIf shp["func"] = "tri" Then
      shp["obj"] = Shapes.AddTriangle(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s, shp["x3"] * s, shp["y3"] * s)
    ElseIf shp["func"] = "line" Then
      shp["obj"] = Shapes.AddLine(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s)
    ElseIf shp["func"] = "text" Then
      
      fs = shp["fs"]
      
      GraphicsWindow.FontSize = fs * s
      GraphicsWindow.FontName = shp["fn"]
      shp["obj"] = Shapes.AddText(shp["text"])
      LDEffect.DropShaddow ( shp["obj"] "")
    EndIf
    
    x = shp["x"]
    y = shp["y"]
    shp["rx"] = x
    shp["ry"] = y
    If arrm Then 
      LDShapes.AnimateZoom (shp["obj"] 1500 4 1.3 1.3)
    EndIf 
    Shapes.Move(shp["obj"], shX + x * s, shY + y * s)
    If Text.IsSubText("rect|ell|tri|text", shp["func"]) And (shp["angle"] <> 0) And (shp["angle"] <> "") Then
      Shapes.Rotate(shp["obj"], shp["angle"])
    EndIf
    shape[i] = shp
    If i>13 and i<imax Then
      LDShapes.AnimateOpacity (shp["obj"],1500 5)
      Program.Delay (255)
    EndIf 
  EndFor
  shAngle = 0
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub

Sub Shapes_CalcRotatePos
  _cx = param["x"] + param["width"] / 2
  _cy = param["y"] + param["height"] / 2
  aa=LDMath.Convert2Radial (param["cx"] param["cy"] _cx _cy)
  aa[2] = aa[2] + param["angle"]
  x = aa[1] * ldMath.Cos(aa[2])
  y = aa[1] * ldMath.Sin(aa[2])
  _cx = x + param["cx"]
  _cy = y + param["cy"]
  x = _cx - param["width"] / 2
  y = _cy - param["height"] / 2
EndSub

Sub Shapes_CalcWidthAndHeight
  For i = iMin To iMax
    shp = shape[i]
    If shp["func"] = "tri" Or shp["func"] = "line" Then
      xmin = shp["x1"]
      xmax = shp["x1"]
      ymin = shp["y1"]
      ymax = shp["y1"]
      If shp["x2"] < xmin Then
        xmin = shp["x2"]
      EndIf
      If xmax < shp["x2"] Then
        xmax = shp["x2"]
      EndIf
      If shp["y2"] < ymin Then
        ymin = shp["y2"]
      EndIf
      If ymax < shp["y2"] Then
        ymax = shp["y2"]
      EndIf
      If shp["func"] = "tri" Then
        If shp["x3"] < xmin Then
          xmin = shp["x3"]
        EndIf
        If xmax < shp["x3"] Then
          xmax = shp["x3"]
        EndIf
        If shp["y3"] < ymin Then
          ymin = shp["y3"]
        EndIf
        If ymax < shp["y3"] Then
          ymax = shp["y3"]
        EndIf
      EndIf
      shp["width"] = xmax - xmin
      shp["height"] = ymax - ymin
    EndIf
    If i = 1 Then
      shWidth = shp["x"] + shp["width"]
      shHeight = shp["y"] + shp["height"]
    Else
      If shWidth < shp["x"] + shp["width"] Then
        shWidth = shp["x"] + shp["width"]
      EndIf
      If shHeight < shp["y"] + shp["height"] Then
        shHeight = shp["y"] + shp["height"]
      EndIf
    EndIf
    shape[i] = shp
  EndFor
EndSub

Sub Shapes_Move
  
  Stack.PushValue("local", i)
  s = scale
  shX = x
  shY = y
  For i = iMin To iMax
    shp = shape[i]
    
    _x = shp["rx"]
    _y = shp["ry"]
    
    Shapes.Move(shp["obj"], shX + _x * s, shY + _y * s)
  EndFor
  i = Stack.PopValue("local")
EndSub

Sub Shapes_Rotate
  
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  s = scale
  param["angle"] = angle
  If cx <> "" Then
    param["cx"] = cx
  Else
    cx = ""   ' to avoid syntax error
    param["cx"] = shWidth / 2
  EndIf
  If cy <> "" Then
    param["cy"] = cy
  Else
    cy = ""   ' to avoid syntax error
    param["cy"] = shHeight / 2
  EndIf
  For i = iMin To iMax
    shp = shape[i]
    param["x"] = shp["x"]
    param["y"] = shp["y"]
    param["width"] = shp["width"]
    param["height"] = shp["height"]
    Shapes_CalcRotatePos()
    shp["rx"] = x
    shp["ry"] = y
    
    Shapes.Move(shp["obj"], shX + x * s, shY + y * s)
    Shapes.Rotate(shp["obj"], angle + shp["angle"])
    shape[i] = shp
  EndFor
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub

Sub doarr
  GraphicsWindow.Clear ()
  arrm="true
  shX = 0   ' x offset
  shY = 0   ' y offset
  shape = ""
  For f=1 To 54
    px= Math.Remainder (f-1 9)*50+90
    py= Math.Floor ((f-1)/9)*50+40 
    shape[f] = "pw=0;bc=white;func=rect;width=20;height=20;x="+px+";y="+py
    
  EndFor 
  shape[55] = "pw=0;bc=white;fs=50;fn=Trebuchet MS;fb=False;fi=False;func=text;text=Array;x=398;y=354
  
  angle = 0 ' dummy
  ' add shapes
  scale = 1
  iMin = 1
  iMax = 55
  Shapes_Add()
  arrm="false
EndSub 
