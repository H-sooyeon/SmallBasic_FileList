'Example of efficient ShellSort algorithm to sort a list, comparing with BubbleSort



'Create a random 500 element array

numVal = 500

For i = 1 To numVal

  val[i] = Math.GetRandomNumber(numVal) 

EndFor

valStore = val



'ShellSort it

TextWindow.Write("ShellSort ")

val = valStore

start = Clock.ElapsedMilliseconds

shellsort()

timing = 0.001*Math.Floor(0.5+(Clock.ElapsedMilliseconds-start)) 'Nearest 1000th of a second

TextWindow.WriteLine(timing+" sec")



'BubbleSort it

TextWindow.Write("BubbleSort ")

val = valStore

start = Clock.ElapsedMilliseconds

bubblesort()

timing = 0.001*Math.Floor(0.5+(Clock.ElapsedMilliseconds-start))

TextWindow.WriteLine(timing+" sec")



Sub shellsort

  inc = Math.Round(numVal/2)

  While inc > 0

    For i = inc To numVal

      temp = val[i]

      j = i

      while (j >= inc) and (val[j-inc] > temp)

        val[j] = val[j-inc]

        j = j - inc

      EndWhile

      val[j] = temp

    EndFor

    inc = Math.Round(inc/2.2)

  Endwhile

Endsub



Sub bubblesort

  For i = 1 To numVal

    For j = i+1 To numVal

      If (val[j] < val[i]) Then

        temp = val[i]

        val[i] = val[j]

        val[j] = temp

      EndIf

    EndFor

  EndFor

EndSub


