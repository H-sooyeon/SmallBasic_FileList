GraphicsWindow.Title = "Carousel
gw = 598
gh = 428
GraphicsWindow.Width = gw
GraphicsWindow.Height = gh
ldGraphicsWindow.BackgroundBrush (LDShapes.BrushGradient ("1=skyblue;2=darkblue" "V"))
' draw roof
GraphicsWindow.BrushColor = "#CCCCCC"
width = 440
height = 30
x1 = gw / 2
y1 = 20
x2 = (gw - width) / 2
y2 = 100
x3 = x2 + width
y3 = y2
GraphicsWindow.FillTriangle(x1, y1, x2, y2, x3, y3)
GraphicsWindow.BrushColor = "#CC0000"
x3 = x1 - width / 2 * Math.Sin(1 / 3 * Math.Pi)
GraphicsWindow.FillTriangle(x1, y1, x2, y2, x3, y3)
x2 = x1 - width / 2 * Math.Sin(2 * Math.Pi)
x3 = x1 - width / 2 * Math.Sin(5 / 3 * Math.Pi)
GraphicsWindow.FillTriangle(x1, y1, x2, y2, x3, y3)

' draw ground
y = 400
GraphicsWindow.BrushColor = "#666666"
GraphicsWindow.FillRectangle(0, y, gw, gh - y)

' initialize horse shapes
Shapes_Init()
angle = 240
nHorse = 3
For i = 1 To nHorse
  Stack.PushValue("local", shape)
  ' add horse
  name = "Horse" + i
  Group_Add()
  '  move horse
  r = 170
  a = 5
  Rotate()
  angle = angle - 360 / nHorse
  If angle < 0 Then
    angle = angle + 360
  EndIf
  Program.Delay(20)
  shape = Stack.PopValue("local")
EndFor

' add roof
x = shX
y = shY
GraphicsWindow.BrushColor = "#999999"
GraphicsWindow.PenWidth = 0
x = (gw - width) / 2
y = 100
rect = Shapes.AddRectangle(width, height)
Shapes.Move(rect, x, y)
LDShapes.ZIndex (rect 1000000)
GraphicsWindow.BrushColor = "DarkRed"
w = width / 2 - width / 2 * Math.Sin(1 / 3 * Math.Pi)
rect = Shapes.AddRectangle(w, height)
Shapes.Move(rect, x, y)
LDShapes.ZIndex (rect 1000000)
w = -width / 2 * Math.Sin(5 / 3 * Math.Pi)
rect = Shapes.AddRectangle(w, height)
Shapes.Move(rect, gw / 2, y)
LDShapes.ZIndex (rect 1000000)

' add floor
GraphicsWindow.BrushColor = "#999999"
y = 370
rect = Shapes.AddRectangle(width, height)
Shapes.Move(rect, x, y)
LDShapes.ZIndex (rect 1000000)
GraphicsWindow.BrushColor = "DarkRed"
w = width / 2 - width / 2 * Math.Sin(1 / 3 * Math.Pi)
rect = Shapes.AddRectangle(w, height)
Shapes.Move(rect, x, y)
LDShapes.ZIndex (rect 1000000)
w = -width / 2 * Math.Sin(5 / 3 * Math.Pi)
rect = Shapes.AddRectangle(w, height)
Shapes.Move(rect, gw / 2, y)
LDShapes.ZIndex (rect 1000000)
inn=300
' ------------------------------------------------main loop: move horses------------------------
While "True
  Program.Delay(50)
  For i = 1 To nGroup
    grp = group[i]
    angle = grp["flip"] + 4
    If 360 <= angle Then
      angle = angle - 360
    EndIf
    x = shX - r * ldMath.Sin(angle)
    y = shY - a * ldMath.Sin(angle * 6)
    Group_Move()
    Group_Flip()
    
  EndFor
EndWhile'========================================================

Sub Rotate  ' param angle - to rotate   ' param i - group index
  x = shX - r * ldMath.Sin(angle)
  y = shY - a * ldMath.Sin(angle * 6)
  Group_Move()
  Group_Flip()
EndSub

Sub Group_Add
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  nGroup = nGroup + 1
  grp = ""
  grp["name"] = name
  grp["x"] = shX
  grp["y"] = shY
  grp["angle"] = 0
  grp["dir"] = 1
  Shapes_CalcWidthAndHeight()
  grp["width"] = shWidth
  grp["cx"] = shWidth / 2
  grp["height"] = shHeight
  s = 1
  grp["scale"] = s
  For i = 1 To Array.GetItemCount(shape)
    shp = shape[i]
    GraphicsWindow.PenWidth = shp["pw"] * s
    If shp["pw"] > 0 Then
      GraphicsWindow.PenColor = shp["pc"]
    EndIf
    If Text.IsSubText("rect|ell|tri|text", shp["func"]) Then
      GraphicsWindow.BrushColor = shp["bc"]
    EndIf
    If shp["func"] = "rect" Then
      shp["obj"] = Shapes.AddRectangle(shp["width"] * s, shp["height"] * s)
    ElseIf shp["func"] = "ell" Then
      shp["obj"] = Shapes.AddEllipse(shp["width"] * s, shp["height"] * s)
    ElseIf shp["func"] = "tri" Then
      shp["obj"] = Shapes.AddTriangle(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s, shp["x3"] * s, shp["y3"] * s)
    ElseIf shp["func"] = "line" Then
      shp["obj"] = Shapes.AddLine(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s)
    EndIf
    x = shp["x"]
    y = shp["y"]
    shp["rx"] = x
    shp["ry"] = y
    
    Shapes.Move(shp["obj"], shX + x * s, shY + y * s)
    If Text.IsSubText("rect|ell|tri|text", shp["func"]) And (shp["angle"] <> 0) And (shp["angle"] <> "") Then
      Shapes.Rotate(shp["obj"], shp["angle"])
    EndIf
    shape[i] = shp
  EndFor
  grp["shape"] = shape
  group[nGroup] = grp
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub

Sub Group_Flip  ' param group[i] - group to flip    ' param angle - to flip
  ' return group[i] - flipped group
  Stack.PushValue("local", angle)
  grp = group[i]
  gx = grp["x"]
  gy = grp["y"]
  shape = grp["shape"]
  n = Array.GetItemCount(shape)
  angle = Math.Remainder(angle, 360)
  If angle < 0 Then
    angle = angle + 360
  EndIf
  If (angle <= 90) Or (angle>270) Then
    sign = 1
  Else
    sign = -1
  EndIf
  If (grp["flip"] <= 90) Or (270 < grp["flip"]) Then
    lastSign = 1
  Else
    lastSign = -1
  EndIf
  
  scaleX = ldMath.Cos(angle)
  For j = 1 To n
    shp = shape[j]
    Shapes.Zoom(shp["obj"], Math.Abs(scaleX), 1)
    cx = shp["x"] + shp["width"] / 2
    fx = (cx - grp["cx"]) * scaleX + grp["cx"]
    LDShapes.FastMove (shp["obj"], fx - shp["width"] / 2 + gx, shp["y"] + gy)
    LDShapes.BrushColour (shp["obj"] LDColours.HSLtoRGB (angle-90 .8 .2+Math.Abs(ldmath.Sin(angle/2)/2)))
    If angle>90 And angle<270 Then
      LDShapes.ZIndex (shp["obj"] inn)
      inn=inn+1
    EndIf 
    If sign <> lastSign Then
      If shp["angle"] <> "" Then
        shp["angle"] = -shp["angle"]
        Shapes.Rotate(shp["obj"], shp["angle"])
      EndIf
      _x = Math.Floor((cx - shp["width"] / 2) * 100) / 100
      shp["rx"] = _x
      shp["x"] = _x
      shape[j] = shp
    EndIf
  EndFor
  grp["flip"] = angle
  grp["shape"] = shape
  group[i] = grp
  angle = Stack.PopValue("local")
EndSub

Sub Group_Move  ' param group[i] - group to move
  ' param x, y - position to move     ' return group[i] - updated group
  grp = group[i]
  s = grp["scale"]
  grp["x"] = x
  grp["y"] = y
  shape = grp["shape"]
  n = Array.GetItemCount(shape)
  For j = 1 To n
    shp = shape[j]
    _x = shp["rx"]
    _y = shp["ry"]
  EndFor
  grp["shape"] = shape
  group[i] = grp
EndSub

Sub Shapes_CalcWidthAndHeight  ' param shape[] - shape array
  ' return shWidth, shHeight - total size of shapes
  For i = i To Array.GetItemCount(shape)
    shp = shape[i]
    If shp["func"] = "tri" Or shp["func"] = "line" Then
      xmin = shp["x1"]
      xmax = shp["x1"]
      ymin = shp["y1"]
      ymax = shp["y1"]
      If shp["x2"] < xmin Then
        xmin = shp["x2"]
      EndIf
      If xmax < shp["x2"] Then
        xmax = shp["x2"]
      EndIf
      If shp["y2"] < ymin Then
        ymin = shp["y2"]
      EndIf
      If ymax < shp["y2"] Then
        ymax = shp["y2"]
      EndIf
      If shp["func"] = "tri" Then
        If shp["x3"] < xmin Then
          xmin = shp["x3"]
        EndIf
        If xmax < shp["x3"] Then
          xmax = shp["x3"]
        EndIf
        If shp["y3"] < ymin Then
          ymin = shp["y3"]
        EndIf
        If ymax < shp["y3"] Then
          ymax = shp["y3"]
        EndIf
      EndIf
      shp["width"] = xmax - xmin
      shp["height"] = ymax - ymin
    EndIf
    If i = 1 Then
      shWidth = shp["x"] + shp["width"]
      shHeight = shp["y"] + shp["height"]
    Else
      If shWidth < shp["x"] + shp["width"] Then
        shWidth = shp["x"] + shp["width"]
      EndIf
      If shHeight < shp["y"] + shp["height"] Then
        shHeight = shp["y"] + shp["height"]
      EndIf
    EndIf
    shape[i] = shp
  EndFor
EndSub

Sub Shapes_Init
  shX = 217 ' x offset
  shY = 165 ' y offset
  tt="func=rect;x=85;y=-40;width=7;height=270;bc=#C0C0C0;pw=0|func=rect;x=36;y=78;width=126;height=47;bc=#FFFFFF;pw=0|func=rect;x=37;y=124;width=9;height=74;bc=#FFFFFF;pw=0|func=rect;x=50;y=124;width=9;height=74;bc=#FFFFFF;pw=0|func=rect;x=139;y=124;width=9;height=74;bc=#FFFFFF;pw=0|func=rect;x=152;y=124;width=9;height=74;bc=#FFFFFF;pw=0|func=rect;x=31;y=21;width=31;height=61;angle=348;bc=#FFFFFF;pw=0|func=rect;x=0;y=16;width=55;height=27;bc=#FFFFFF;pw=0|func=tri;x=59;y=12;x1=7;y1=0;x2=0;y2=24;x3=15;y3=24;angle=86;bc=#FFFFFF;pw=0|func=tri;x=61;y=24;x1=7;y1=0;x2=0;y2=24;x3=15;y3=24;angle=86;bc=#FFFFFF;pw=0|func=tri;x=64;y=35;x1=7;y1=0;x2=0;y2=24;x3=15;y3=24;angle=86;bc=#FFFFFF;pw=0|func=tri;x=67;y=47;x1=7;y1=0;x2=0;y2=24;x3=15;y3=24;angle=86;bc=#FFFFFF;pw=0|func=tri;x=69;y=59;x1=7;y1=0;x2=0;y2=24;x3=15;y3=24;angle=86;bc=#FFFFFF;pw=0|func=ell;x=39;y=0;width=9;height=22;bc=#FFFFFF;pw=0|func=ell;x=50;y=0;width=9;height=22;bc=#FFFFFF;pw=0|func=ell;x=168;y=75;width=9;height=39;angle=321;bc=#FFFFFF;pw=0
  shape = LDText.Split (tt "|")
endsub
