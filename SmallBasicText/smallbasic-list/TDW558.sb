GraphicsWindow.Title = "Trainz2
GraphicsWindow.BackgroundColor="teal
cars = 6
jointLength=4

Init()
DrawRails()
Init1()
DrawRails1()
pos=0
pos1=0
While "True
  pos=pos+1
  If pos>numRails Then
    pos=1
  EndIf 
  DrawTrain()
  pos1=pos1+1
  If pos1>numRails1 Then
    pos1=1
  EndIf 
  DrawTrain1()
  Program.Delay(55)
EndWhile'=========================mainloop end


Sub CalcNextPos
  p0_1 = p0 - 1
  If p0_1 <= 0 Then
    p0_1 = numRails
  EndIf
  rails_p0 = rails[p0]
  rails_p0_1 = rails[p0_1]
  x0 = rails_p0["x"] + r0 * (rails_p0_1["x"] - rails_p0["x"])
  y0 = rails_p0["y"] + r0 * (rails_p0_1["y"] - rails_p0["y"])
  p2 = p0_1
  rails_p2 = rails[p2]
  d = Math.SquareRoot(Math.Power(rails_p2["x"] - x0, 2) + Math.Power(rails_p2["y"] - y0, 2))
  While d < len
    p2 = p2 - 1
    If p2 <= 0 Then
      p2 = numRails
    EndIf
    rails_p2 = rails[p2]
    d = Math.SquareRoot(Math.Power(rails_p2["x"] - x0, 2) + Math.Power(rails_p2["y"] - y0, 2))
  EndWhile
  p1 = p2 + 1
  If numRails < p1 Then
    p1 = 1
  EndIf
  If p1 = p0 Then
    r1 = r0
  Else
    r1 = 0
  EndIf
  FindPos()
  xc = (x1 + x2) / 2
  yc = (y1 + y2) / 2
  
  pp=LDMath.Convert2Radial (x1, y1, x2, y2)
  a=pp[2]
  r=pp[1]
  
  r0 = r1
  p0 = p1
EndSub



Sub CalcNextPos1
  p0_1 = p0 - 1
  If p0_1 <= 0 Then
    p0_1 = numRails1
  EndIf
  rails_p0 = rails1[p0]
  rails_p0_1 = rails1[p0_1]
  x0 = rails_p0["x"] + r0 * (rails_p0_1["x"] - rails_p0["x"])
  y0 = rails_p0["y"] + r0 * (rails_p0_1["y"] - rails_p0["y"])
  p2 = p0_1
  rails_p2 = rails1[p2]
  d = Math.SquareRoot(Math.Power(rails_p2["x"] - x0, 2) + Math.Power(rails_p2["y"] - y0, 2))
  While d < len
    p2 = p2 - 1
    If p2 <= 0 Then
      p2 = numRails1
    EndIf
    rails_p2 = rails1[p2]
    d = Math.SquareRoot(Math.Power(rails_p2["x"] - x0, 2) + Math.Power(rails_p2["y"] - y0, 2))
  EndWhile
  p1 = p2 + 1
  If numRails1 < p1 Then
    p1 = 1
  EndIf
  If p1 = p0 Then
    r1 = r0
  Else
    r1 = 0
  EndIf
  FindPos1()
  xc = (x1 + x2) / 2
  yc = (y1 + y2) / 2
  
  pp=LDMath.Convert2Radial (x1, y1, x2, y2)
  a=pp[2]
  r=pp[1]
  
  r0 = r1
  p0 = p1
EndSub


Sub CalcCarPos1
  car_i = car1[i]
  x1 = car_i["x1"]   ' car head
  y1 = car_i["y1"]
  len = carLength
  CalcNextPos1()
  
  car_i["x2"] = x2   ' car end
  car_i["y2"] = y2
  car_i["xc"] = xc   ' car center
  car_i["yc"] = yc
  car_i["ac"] = a   ' car angle
  
  If i < cars Then
    x1 = car_i["x2"]
    y1 = car_i["y2"]
    len = jointLength
    p0 = p1
    CalcNextPos1()
    
    car_i1 = car1[i + 1]
    car_i1["x1"] = x2 ' next car head
    car_i1["y1"] = y2
    car1[i + 1] = car_i1
    car_i["xj"] = xc     ' joint center
    car_i["yj"] = yc
    car_i["aj"] = a      ' joint angle
  EndIf
  car1[i] = car_i
EndSub

Sub CalcCarPos
  car_i = car[i]
  x1 = car_i["x1"]   ' car head
  y1 = car_i["y1"]
  len = carLength
  CalcNextPos()
  car_i["x2"] = x2   ' car end
  car_i["y2"] = y2
  car_i["xc"] = xc   ' car center
  car_i["yc"] = yc
  car_i["ac"] = a   ' car angle
  If i < cars Then
    x1 = car_i["x2"]
    y1 = car_i["y2"]
    len = jointLength
    p0 = p1
    CalcNextPos()
    car_i1 = car[i + 1]
    car_i1["x1"] = x2 ' next car head
    car_i1["y1"] = y2
    car[i + 1] = car_i1
    car_i["xj"] = xc     ' joint center
    car_i["yj"] = yc
    car_i["aj"] = a      ' joint angle
  EndIf
  car[i] = car_i
EndSub

Sub DrawTrain1
  ' param cars - number of cars
  ' param pos - rail position index
  rails_pos = rails1[pos1]
  car_1 = car1[1]
  car_1["x1"] = rails_pos["x"]
  car_1["y1"] = rails_pos["y"]
  car1[1] = car_1
  r0 = 0
  p0 = pos1
  For i = 1 To cars
    GraphicsWindow.PenWidth = 0
    GraphicsWindow.BrushColor = "cyan
    car_i = car1[i]
    If car_i["obj"] = "" Then
      car_i["obj"] = Shapes.AddRectangle(carLength, carWidth)
      LDShapes.BrushColour (car_i["obj"] "cyan")
      car1[i] = car_i
    EndIf
    CalcCarPos1()
    Shapes.Move(car_i["obj"], car_i["xc"] - carLength / 2, car_i["yc"] - carWidth / 2)
    Shapes.Rotate(car_i["obj"], car_i["ac"])
   
  EndFor
EndSub

Sub DrawTrain
  ' param cars - number of cars
  ' param pos - rail position index
  rails_pos = rails[pos]
  car_1 = car[1]
  car_1["x1"] = rails_pos["x"]
  car_1["y1"] = rails_pos["y"]
  car[1] = car_1
  r0 = 0
  p0 = pos
  For i = 1 To cars
    GraphicsWindow.PenWidth = 0
    GraphicsWindow.BrushColor = "red
    car_i = car[i]
    If car_i["obj"] = "" Then
      car_i["obj"] = Shapes.AddRectangle(carLength, carWidth)
      LDShapes.BrushColour (car_i["obj"] "red")
      car[i] = car_i
    EndIf
    CalcCarPos()
    Shapes.Move(car_i["obj"], car_i["xc"] - carLength / 2, car_i["yc"] - carWidth / 2)
    Shapes.Rotate(car_i["obj"], car_i["ac"])
    
  EndFor
EndSub

Sub DrawRails
  GraphicsWindow.PenWidth = 2
  GraphicsWindow.PenColor = railColor
  For pos = 1 To numRails
    rails_pos = rails[pos]
    x2 = rails_pos["x"]
    y2 = rails_pos["y"]
    If 1 < pos Then
      GraphicsWindow.DrawLine(x1, y1, x2, y2)
    EndIf
    x1 = x2
    y1 = y2
    Program.Delay(20)
  EndFor
  rails_1 = rails[1]
  x2 = rails_1["x"]
  y2 = rails_1["y"]
EndSub


Sub DrawRails1
  GraphicsWindow.PenWidth = 2
  GraphicsWindow.PenColor = railColor
  For pos = 1 To numRails1
    rails_pos = rails1[pos]
    x2 = rails_pos["x"]
    y2 = rails_pos["y"]
    If 1 < pos Then
      GraphicsWindow.DrawLine(x1, y1, x2, y2)
    EndIf
    x1 = x2
    y1 = y2
    Program.Delay(20)
  EndFor
  rails_1 = rails1[1]
  x2 = rails_1["x"]
  y2 = rails_1["y"]
EndSub

Sub FindPos
  r2 = 1
  While 0.1 < (r2 - r1)
    r = (r1 + r2) / 2
    rails_p1 = rails[p1]
    rails_p2 = rails[p2]
    x2 = rails_p1["x"] + r * (rails_p2["x"] - rails_p1["x"])
    y2 = rails_p1["y"] + r * (rails_p2["y"] - rails_p1["y"])
    d = Math.SquareRoot(Math.Power(x2 - x0, 2) + Math.Power(y2 - y0, 2))
    If d < len Then
      r1 = r
    Else
      r2 = r
    EndIf
  EndWhile
EndSub

Sub FindPos1
  r2 = 1
  While 0.1 < (r2 - r1)
    r = (r1 + r2) / 2
    rails_p1 = rails1[p1]
    rails_p2 = rails1[p2]
    x2 = rails_p1["x"] + r * (rails_p2["x"] - rails_p1["x"])
    y2 = rails_p1["y"] + r * (rails_p2["y"] - rails_p1["y"])
    d = Math.SquareRoot(Math.Power(x2 - x0, 2) + Math.Power(y2 - y0, 2))
    If d < len Then
      r1 = r
    Else
      r2 = r
    EndIf
  EndWhile
EndSub

Sub rset
  rails_pos["x"] = x
  rails_pos["y"] = y
  rails[pos] = rails_pos
EndSub

Sub rset1
  rails_pos1["x"] = x
  rails_pos1["y"] = y
  rails1[pos] = rails_pos1
EndSub


Sub Init
  GraphicsWindow.Width = 900
  GraphicsWindow.Height = 800
  carLength = 40
  carWidth = carLength / 5
  
  railColor = "Silver"
  railLength = 10
 
  x = 410
  y = 90
  For pos = 1 To 21
    rset ()
    x = x - railLength
  EndFor
  
  a = 0
  For pos = 22 To 57
    rset ()
    _a = Math.GetRadians(a)
    x = x - railLength * Math.Cos(_a)
    y = y + railLength * Math.Sin(_a)
    a = a + 5
  EndFor
  
  For pos = 58 To 65
    rset ()
    x = x + railLength
  EndFor
  
  For pos = 66 To 82
    rset ()
    _a = Math.GetRadians(a)
    x = x - railLength * Math.Cos(_a)
    y = y - railLength * Math.Sin(_a)
    a = a + 5
  EndFor
  
  For pos = 83  To 98
    rset ()
    y = y + railLength
  EndFor
  
  For pos = 99 To 135
    rset ()
    _a = Math.GetRadians(a)
    x = x + railLength * Math.Cos(_a)
    y = y - railLength * Math.Sin(_a)
    a = a + 5
  EndFor
  
  For pos = 136 To 174
    rset ()
    y = y - railLength
  EndFor
  
  For pos = 175 To 194
    rset ()
    _a = Math.GetRadians(a)
    x = x + railLength * Math.Cos(_a)
    y = y - railLength * Math.Sin(_a)
    a = a + 5
  EndFor
  
  For pos = 195 To 203
    rset ()
    x = x - railLength
  EndFor
  
  
  numRails = pos - 1
  
EndSub

Sub Init1
  
  carLength = 40
  carWidth = carLength / 5
  
  railColor = "Silver"
  railLength = 10
  
  x = 610
  y = 190
  For pos = 1 To 21
    rset1 ()
    x = x - railLength
  EndFor
  
  a = 0
  For pos = 22 To 57
    rset1 ()
    _a = Math.GetRadians(a)
    x = x - railLength * Math.Cos(_a)
    y = y + railLength * Math.Sin(_a)
    a = a + 5
  EndFor
  
  For pos = 58 To 78
    rset1 ()
    x = x + railLength
  EndFor
  
  For pos = 79 To 133
    rset1 ()
    _a = Math.GetRadians(a)
    x = x - railLength * Math.Cos(_a)
    y = y + railLength * Math.Sin(_a)
    a = a + 5
  EndFor
  
  For pos = 134 To 164
    rset1 ()
    y = y + railLength
  EndFor
  
  For pos = 165 To 200
    rset1 ()
    _a = Math.GetRadians(a)
    x = x - railLength * Math.Cos(_a)
    y = y + railLength * Math.Sin(_a)
    a = a + 5
  EndFor
  
  For pos = 201 To 231
    rset1 ()
    y = y - railLength
  EndFor
  
  For pos = 232 To 249
    rset1 ()
    _a = Math.GetRadians(a)
    x = x - railLength * Math.Cos(_a)
    y = y + railLength * Math.Sin(_a)
    a = a + 5
  EndFor
  
  numRails1 = pos - 1
  
EndSub
