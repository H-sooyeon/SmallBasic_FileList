GraphicsWindow.BackgroundColor="darkred

GraphicsWindow.BrushColor="teal

GraphicsWindow.PenWidth=.7

GraphicsWindow.PenColor="black

GraphicsWindow.BrushColor="gold

GraphicsWindow.Title="2-Forces Field

sx=.9

sy=.9

sx1=10.1

sy1=10.1



For x=1 To 10

  For y=1 To 10

    aw=LDFigures.AddBlockArrow(70 140 .35 45 "Up")

    e[x][y]=aw

    SPS[aw][1]=x+.1

    SPS[aw][2]=y+.1

    Shapes.Zoom(e[x][y] .25 .25)

    Shapes.Move(e[x][y] x*35+55 y*35+55)

    LDEffect.DropShadow(e[x][y] "")

    nn=ldMath.Convert2Radial(x y 10.1 10.1)

    nn1=ldMath.Convert2Radial(x y .9 .9)

    f1=nn1[1]*math.power(nn[1], -1)

    f11=nn[1]*math.power(nn1[1], -1)

    Shapes.Rotate(e[x][y] ((nn[2]+90)*f1+(nn1[2]+90)*f11)*Math.Power(f1+f11, -1))

    LDShapes.SetShapeEvent(e[x][y])

  EndFor

EndFor

LDShapes.ShapeEvent=see



Sub see

  If LDShapes.LastEventType="MouseDown" Then

    ll=LDShapes.LastEventShape

    if Mouse.IsRightButtonDown then

      sx1=sps[ll][1]

      sy1=sps[ll][2]

    Else

      sx=sps[ll][1]

      sy=sps[ll][2]

    EndIf

    

    For x=1 To 10

      For y=1 To 10

        Shapes.Zoom(e[x][y] .25 .25)

        Shapes.Move(e[x][y] x*35+55 y*35+55)

        LDEffect.DropShadow(e[x][y] "")

        nn=ldMath.Convert2Radial(x y sx1 sy1)

        nn1=ldMath.Convert2Radial(x y sx sy)

        f1=nn1[1]*math.power(nn[1], -1)

        f11=nn[1]*math.power(nn1[1], -1)

        Shapes.Rotate(e[x][y] ((nn[2]+90)*f1+(nn1[2]+90)*f11)*Math.Power(f1+f11, -1))

        LDShapes.SetShapeEvent(e[x][y])

      EndFor

    EndFor

  EndIf

EndSub


