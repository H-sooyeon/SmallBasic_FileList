'   Gauss-Jordan Method

'==================



'  ZZF559-1



'http://social.msdn.microsoft.com/Forums/en-US/smallbasic/thread/

'4ded71e7-97dc-455f-97b7-c9b9246ff74d



'https://es.wikipedia.org/wiki/Eliminaci%C3%B3n_de_Gauss-Jordan



'  Section 0 - Initialization Procedures:



TAB = Text.GetCharacter(9)

LF  = Text.GetCharacter(10)



Start:



TextWindow.Clear()

TextWindow.ForegroundColor = "White"

TextWindow.WriteLine ("Gauss-Jordan Linear Equation Resolver")

TextWindow.ForegroundColor = "Gray"

TextWindow.WriteLine ("_____________________________________" + LF)



'  Section 1 - Requests User's Input for the 3 Linear Equations:



For i = 1 To 3

  TextWindow.ForegroundColor = "Magenta"

  TextWindow.Write     (LF + "Enter the following 4 values for -> x")

  TextWindow.WriteLine (i + " + y" + i + " + z" + i + " = t" + i + LF)

  TextWindow.ForegroundColor = "Cyan"

  

  Number = TextWindow.ReadNumber()

  TrimZeroEnds()                    '  <--  Sanitizes User's Inputs

  x[i]   = Number

  

  Number = TextWindow.ReadNumber()

  TrimZeroEnds()

  y[i]   = Number

  

  Number = TextWindow.ReadNumber()

  TrimZeroEnds()

  z[i]   = Number

  

  Number = TextWindow.ReadNumber()

  TrimZeroEnds()

  t[i]   = Number

  

  Sound.PlayClick()

EndFor



xx = x                              '  <--  Backups User's Inputs

yy = y

zz = z

tt = t



'  Section 2 - Displays Linear Equations:



TextWindow.Clear()

TextWindow.ForegroundColor = "Green"



For i = 1 To 3

  TextWindow.Write     ("|"  + TAB + x[i] + "x" + TAB + y[i] + "y" + TAB)

  TextWindow.WriteLine (z[i] + "z" + TAB  + "=" + TAB + t[i] + TAB + "|")

EndFor



'  Section 3 - Calculates by Gauss-Jordan Method:



y[1] =  y[1] / x[1]

z[1] =  z[1] / x[1]

t[1] =  t[1] / x[1]

x[1] =  x[1] / x[1]



For i = 2 To 3

  y[i] = -x[i] * y[1] + y[i]

  z[i] = -x[i] * z[1] + z[i]

  t[i] = -x[i] * t[1] + t[i]

  x[i] = -x[i] * x[1] + x[i]

EndFor



z[2] =  z[2] / y[2]

t[2] =  t[2] / y[2]

y[2] =  y[2] / y[2]



For i = 1 To 3 Step 2

  z[i] = -y[i] * z[2] + z[i]

  t[i] = -y[i] * t[2] + t[i]

  y[i] = -y[i] * y[2] + y[i]

EndFor



t[3] =  t[3] / z[3]

z[3] =  z[3] / z[3]



For i = 1 To 2

  t[i] = -z[i] * t[3] + t[i]

  z[i] = -z[i] * z[3] + z[i]

EndFor



For i = 1 to 3

  Number = t[i]

  TrimZeroEnds()                     ' <--  Sanitizes the Obtained Results

  

  If Number > 0 Then

    Number = "+" + Number            ' <--  Appends a Plus at the left If it is Positive

  EndIf

  

  t[i]   = Number

EndFor



'  Section 4 - Calculates and Displays the 3 Linear Equations Using the Obtained Results:



TextWindow.ForegroundColor = "Cyan"

TextWindow.WriteLine(LF)



For i = 1 To 3

  Number      = xx[i] * t[1] + yy[i] * t[2] + zz[i] * t[3]

  TrimZeroEnds()

  equation[i] = Number

  TextWindow.Write     ("|" + TAB + equation[i] + TAB)

  TextWindow.WriteLine ("=" + TAB + tt[i] + TAB + "|")

EndFor



'  Section 5 - Displays the 3 Results Which Satisfy the Linear Equation System:



TextWindow.ForegroundColor = "Yellow"

TextWindow.WriteLine(LF)

var = Text.GetCharacterCode("x")



For i = var To var+2

  TextWindow.WriteLine (Text.GetCharacter(i) + " = " + t[i - var + 1])

EndFor



'  Section 6 - Decides Whether to End or Restart Depending on the Key Pressed:



TextWindow.ForegroundColor= "Magenta

TextWindow.Write     (LF + LF + "Press 'Q' or 'Esc' to quit ")

TextWindow.WriteLine ("or any other to restart..." + LF)



For var = 13 To 13 Step 0  ' Loop breaks if anything but 'Enter' key is pressed!

  var = Text.GetCharacterCode(Text.ConvertToUpperCase( TextWindow.ReadKey() ))

EndFor



If var = Text.GetCharacterCode("Q") Or var = 27 Then

  Sound.PlayChimeAndWait()

  Program.End()

EndIf



Goto Start



'____________________________________________________________________'

Sub TrimZeroEnds

  ' ---  Trims any leftover fractional point zeros at the end of Number

  

  '  While there's still a zero at the end after the fractional point:

  While Text.IsSubText(Number  ".") And Text.EndsWith(Number   0)

    Number = Text.GetSubText(Number  1, Text.GetLength(Number)-1)

  EndWhile

  

  '  Sanitizes the result, making sure it's a valid numerical value:

  Number = Number * 1

  

EndSub

'____________________________________________________________________'


