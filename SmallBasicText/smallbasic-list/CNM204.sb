title = "Curves and lines"

zf=1'--------------------zoom

mod="RT" '------------wheel mode

ww=0

'listvars()



LDUtilities.ShowNoShapeErrors="False

GraphicsWindow.BackgroundColor="#aabbcc

cc=0

lsc=0

inn=0

inpn=0



'------------------------hsb params

hu=0

sa=0.9

br=0.5



mcurv=0

pp=0

op=90

lmd=1

nct=8'-----------------------------------------------active nodes+1

GraphicsWindow.DrawEllipse (0,0,2,2)



For x=1 to 200'---------------------------------------------------------max nodes nr!

  cs[x]=Shapes.AddEllipse(15,15)

  Shapes.HideShape (cs[x])

endfor



LDDialogs.AddRightClickMenu(LDText.Split ("All__OFF Nodes__ON Nd_________OFF Lines__ON Ln_________OFF Show__ON Sh_______OFF MakeObject MoveObj__ON Mv_________________OFF MAXnod --Addtxt-- RotMode ZoomMode HueMode SatMode LightMode OpactMode"," "),"")

LDDialogs.RightClickMenu =rmmn

GraphicsWindow.KeyDown=kdd

GraphicsWindow.Title = title 

Not = "False=True;True=False;"



Form()



rtt:

rst=0

i=1

px=0

py=0



lmd=1

For x=1 To lsc

  Shapes.Remove  (ls[x])

EndFor

cc=0

lsc=0

while i < nct

  tsl=0

  msg = "Add point "+i+" / "+(nct-1)

  ShowInstruction()

  GetPoint()

  If FCKeyboard.IsControlPressed and i>2 Then

    ox=px[i-2]

    nx=px[i-1]

    oy=py[i-2]

    ny=py[i-1]

    

    aag= mathplus.GetDegrees ( MathPlus.ATan2(nx-ox,ny-oy)+Math.Pi/2)

    If aag>180 Then

      aag=aag-360

    elseIf aag<-180 Then

      aag=aag+360

      

    endif

    aag=math.Round(aag)

    '   rr=ldmath.Convert2Radial (px[i-1],py[i-1],px[i-2],py[i-2])  

    dx=x-px[i-1]

    dy=y-py[i-1]

    dst=math.SquareRoot (dx*dx+dy*dy)

    qq= LDMath.Convert2Cartesian (px[i-1],py[i-1],dst,aag-90 )

    'GraphicsWindow.Title=aag+" : "+dst

    x=qq[1]

    y=qq[2]

  endif

  ShowPoint()

  px[i] = x

  py[i] = y

  i=i+1

Endwhile



msg = ""

ShowInstruction()

GraphicsWindow.PenColor = "Gray"



For c=0 to nct-4 step 2

  dpx[1]=px[1+c]

  dpy[1]=py[1+c]

  dpx[2]=px[2+c]

  dpy[2]=py[2+c]

  dpx[3]=px[3+c]

  dpy[3]=py[3+c]

  GraphicsWindow.PenColor="Gray

  lsc=lsc+1

  ls[lsc]=Shapes.AddLine (dpx[1], dpy[1], dpx[2], dpy[2])

  lsc=lsc+1

  ls[lsc]=Shapes.AddLine (dpx[2], dpy[2], dpx[3], dpy[3])

  GraphicsWindow.PenColor="Red

  crc=c+1

  DrawQuadraticBezier()

  

endfor

For f=1 to nct 

  LDShapes.ZIndex(cs[f],5000+f)

endfor

GraphicsWindow .MouseMove =mmww

LDShapes.ShapeEvent=sevv

LDEvents.MouseWheel =mwhh

While 1=1

  Program.Delay(5)

  If dopann=1 and inn=0 And inpn=0 Then

    inn=1

    mpan ()

    inn=0

    dopann =0

  ElseIf rst=1 then

    Goto rtt

  ElseIf mobj=1 then

    oo=0

    nn=1

    For f=1 to nct

      For g=0 to Array.GetItemCount (lmt[f]) 

        aa= LDText.Split (lmt[f][g],":")

        oo[nn][1]=aa[1]

        oo[nn][2]=aa[2]

        nn=nn+1

      endfor

    endfor

    mobj=0

    'TextWindow.WriteLine (oo)

    pp=pp+1

    pol[pp]=LDShapes.Addpolygon(oo)

    LDShapes.BrushColour (pol[pp],"Green")

    Shapes.SetOpacity (pol[pp],80)

    oo=0

  Endif

endwhile



'---------------------------------subs---------------------------------****************************************

Sub sevv

  If FCKeyboard.IsShiftPressed Then

    js= LDShapes.LastEventShape 

    jt= LDShapes.LastEventType

    

    If jt="MouseDown" Then

      vv=""

      For fx=1 To text.GetLength(js)

        ct=text.GetSubText (js,fx,1)

        If Text.IsSubText("0123456789",ct) then

          vv=TextPlus.Append (vv,ct)

        endif

      endfor

      tsl=vv

      ndsell ()

    endif 

  endif

EndSub



Sub hidenodes

  For zx=1 to 200

    Shapes.HideShape (cs[zx])

  endfor

EndSub 



Sub mwhh

  If mod="RT" Then 

    ann=ann+LDEvents.LastMouseWheelDelta*5 

    LDShapes.RotateAbout (pol[pp], GraphicsWindow.MouseX , GraphicsWindow.MouseY,ann )

  elseif mod="ZM" Then

    zf=zf+LDEvents.LastMouseWheelDelta/10

    Shapes.Zoom (pol[pp],zf,zf)

  elseif mod="HU" Then

    hu=hu+LDEvents.LastMouseWheelDelta*5 

  elseif mod="SA" Then

    sa=sa+LDEvents.LastMouseWheelDelta/20

    GraphicsWindow.Title ="S:"+sa

  elseif mod="BR" Then

    br=br+LDEvents.LastMouseWheelDelta/20

    GraphicsWindow.Title ="B:"+br

  elseif mod="OP" Then  

    op=op+LDEvents.LastMouseWheelDelta*5 

    If op>100 then 

      op=100

    ElseIf op<0 then

      op=0

    endif 

  EndIf

  hu=math.Remainder (hu,360)

  If sa<0 Then 

    sa=0

  ElseIf sa>1 then

    sa=1

  endif

  If br<0 Then 

    br=0

  ElseIf br>1 then

    br=1

  endif

  LDShapes.BrushColour (pol[pp], LDColours.HSLtoRGB(hu,sa,br))

  Shapes.SetOpacity (pol[pp],op)

EndSub 



Sub rmmn

  lm= LDDialogs.LastRightClickMenuItem 

  If lm=1 Then 

    For x=1 To cc

      Shapes.HideShape (cs[x])

    EndFor

    For x=1 To lsc

      Shapes.HideShape (ls[x])

    EndFor

    lmd=0

  elseIf lm=2 Then

    For x=1 To cc

      Shapes.ShowShape (cs[x])

    EndFor 

  elseIf lm=3 Then

    For x=1 To cc

      Shapes.HideShape (cs[x])

    EndFor

  elseIf lm=4 Then

    For xx=1 To lsc

      Shapes.showShape (ls[xx])

    EndFor

    lmd=1 

  elseIf lm=5 Then

    For x=1 To lsc

      Shapes.HideShape (ls[x])

    EndFor

    lmd=0

  elseIf lm=6 Then

    ssln=1

  elseIf lm=7 Then

    ssln=0

  elseIf lm=8 Then

    mobj=1

  elseIf lm=9 Then

    mcurv=1

  elseIf lm=10 Then

    mcurv=0

  elseIf lm=11 Then

    nd=fcDialogs.AskForTextLine("MAXnodes:")

    If nd="" then

      'nixx

    else

      nct=nd

      rst=1

      hidenodes ()

      unlins()

      

    endif 

  elseif lm=13 then 'RotMode ZoomMode HueMode SatMode LightMode OpactMode

    mod="RT

  elseif lm=14 then

    mod="ZM

  elseif lm=15 then

    mod="HU

  elseif lm=16 then

    mod="SA

  elseif lm=17 then

    mod="BR

  elseif lm=18 then

    mod="OP

    elseif lm=12 then

      cd=fcDialogs.AskForTextLine("Char:")

      Shapes.Remove(tx)

      tx=Shapes.AddText(cd)

      Shapes.SetOpacity (cd,60)

      LDShapes.Font (tx,"Arial",500,"True","False")

      Shapes.Move(tx,100,100)

      LDShapes.PenColour (tx,"Gray")

      LDShapes.ZIndex (tx,-100)

  endif

EndSub 



Sub kdd

  lky=GraphicsWindow.LastKey 

  'GraphicsWindow.Title =lky

  If lky="Back" Then

    Shapes.HideShape  (cs[cc])

    cc=cc-1

    i=i-1

    msg = "Add point "+i+" / "+(nct-1)

    ShowInstruction()

  ElseIf lky="Tab" then

    tsl=tsl+1

    If tsl=nct then 

      tsl=1

      

    endif

    ndsell()

  endif

EndSub 



Sub ndsell

  For kx=1 to nct-1

    If Math.Remainder (kx,2)=1 then

      LDShapes.BrushColour (cs[kx],"Blue")

    Else

      LDShapes.BrushColour (cs[kx],"Cyan")

    EndIf 

  endfor 

  If Math.Remainder (tsl,2)=1 then

    LDShapes.BrushColour (cs[tsl],"Red")

  Else

    LDShapes.BrushColour (cs[tsl],"Magenta")

  EndIf 

EndSub 



Sub Form

  gw = 598

  gh = 428

  GraphicsWindow.Width = gw

  GraphicsWindow.Height = gh

  GraphicsWindow.FontName = "Trebuchet MS"

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.FontSize = 20

  instruction = Shapes.AddText("")

  Shapes.Move(instruction, 10, 10)

  GraphicsWindow.MouseDown = OnMouseDown

  

EndSub



Sub DrawQuadraticBezier

  ' param px, py - array of three control points for quadratic Bezier curve

  ff=0

  For k = 0 To 1 Step 0.05

    x1 = dpx[1] + k * (dpx[2] - dpx[1])

    y1 = dpy[1] + k * (dpy[2] - dpy[1])

    x2 = dpx[2] + k * (dpx[3] - dpx[2])

    y2 = dpy[2] + k * (dpy[3] - dpy[2])

    GraphicsWindow.PenColor = "Gray"

    if ssln=1 then

      line = Shapes.AddLine(x1, y1, x2, y2)

      lmt[crc][0]=x1+":"+y1 

    EndIf 

    x = x1 + k * (x2 - x1)

    y = y1 + k * (y2 - y1)

    If 0 < k Then

      

      ff=ff+1

      lmt[crc][ff]=x+":"+y 

      GraphicsWindow.PenColor = "Red

      dline[crc][ff] = Shapes.AddLine(_x, _y, x, y)

      

    EndIf

    _x = x  ' last x

    _y = y  ' last y

    msg = "k = " + k

    

    If ssln=1 then 

      Program.Delay(30)

      Shapes.Remove(line)

    EndIf 

  EndFor

EndSub



Sub GetPoint

  ' return x, y - clicked point

  msDwn = "False"

  While Not[msDwn]

    Program.Delay(300)

  EndWhile

  x = GraphicsWindow.MouseX

  y = GraphicsWindow.MouseY

EndSub



Sub mmww

  if Mouse.IsLeftButtonDown  then

    

    mx= GraphicsWindow.MouseX 

    my= GraphicsWindow.MouseY 

    If (mx<>omx Or my<>omy) Then

      

      dopann=1

      

    endif

    omx=x

    omy=y

  EndIf 

EndSub 







Sub OnMouseDown

  msDwn = "True"

  If mcurv=1 And  mouse.IsLeftButtonDown Then

    

    ldShapes.Centre   (pol[pp],GraphicsWindow.MouseX,GraphicsWindow.MouseY ) 

    

    'mcurv=0

  elseif mouse.IsLeftButtonDown and not [FCKeyboard.IsShiftPressed ] then 

    mpan()

  endif

EndSub



Sub mpan

  If tsl>0 Then

    inpn=1

    x= GraphicsWindow.MouseX 

    y= GraphicsWindow.MouseY 

    If FCKeyboard.IsControlPressed and tsl>2 Then

      i=tsl

      ox=px[i-2]

      nx=px[i-1]

      oy=py[i-2]

      ny=py[i-1]

      

      aag= mathplus.GetDegrees ( MathPlus.ATan2(nx-ox,ny-oy)+Math.Pi/2)

      If aag>180 Then

        aag=aag-360

      elseIf aag<-180 Then

        aag=aag+360

        

      endif

      aag=math.Round(aag)

      '   rr=ldmath.Convert2Radial (px[i-1],py[i-1],px[i-2],py[i-2])  

      dx=x-px[i-1]

      dy=y-py[i-1]

      dst=math.SquareRoot (dx*dx+dy*dy)

      qq= LDMath.Convert2Cartesian (px[i-1],py[i-1],dst,aag-90 )

      'GraphicsWindow.Title=aag+" : "+dst

      x=qq[1]

      y=qq[2]

    ElseIf FCKeyboard.IsAltPressed and tsl>1 and tsl< nct-1 then

      i=tsl

      ox=px[i+1]

      nx=px[i-1]

      oy=py[i+1]

      ny=py[i-1]

      

      aag= mathplus.GetDegrees ( MathPlus.ATan2(nx-ox,ny-oy)+Math.Pi/2)

      If aag>180 Then

        aag=aag-360

      elseIf aag<-180 Then

        aag=aag+360

        

      endif

      aag=math.Round(aag)

      ' GraphicsWindow.Title =aag

      

      dx=px[i+1]-px[i-1]

      dy=py[i+1]-py[i-1]

      dst=math.SquareRoot (dx*dx+dy*dy)/2

      

      qq= LDMath.Convert2Cartesian (px[i+1],py[i+1],dst,aag-90 )

      'GraphicsWindow.Title=aag+" : "+dst

      x=qq[1]

      y=qq[2]

    endif

    

    px[tsl ] = x

    py[tsl ] = y

    ldShapes.Centre (cs[tsl], x,Y ) 

    Shapes.Remove (ls[tsl])

    Shapes.Remove (ls[tsl-1])

    If tsl>1 and lmd=1 then

      ls[tsl-1]=Shapes.AddLine (x,y,px[tsl-1],py[tsl-1])

    EndIf 

    If tsl<nct-1 And lmd=1 then

      ls[tsl]=Shapes.AddLine (x,y,px[tsl+1],py[tsl+1])

    endif

    LDShapes.PenColour (ls[tsl],"gray")

    LDShapes.PenColour (ls[tsl-1],"gray")

    

    If math.Remainder ( tsl,2)=0 Then

      dpx [1]=px[tsl-1]

      dpy [1]=py[tsl-1]

      dpx [2]=x

      dpy [2]=y

      dpx [3]=px[tsl+1]

      dpy [3]=py[tsl+1]  

      For d=1 To Array.GetItemCount(dline[tsl-1]) 

        

        Shapes.Remove(dline[tsl-1][d])

        

      EndFor

      crc=tsl-1

      DrawQuadraticBezier()

    Else

      For d=1 To Array.GetItemCount(dline[tsl-2]) 

        Shapes.Remove(dline[tsl-2][d])

        

      EndFor

      For d=1 To Array.GetItemCount(dline[tsl]) 

        Shapes.Remove(dline[tsl][d])

        

      EndFor

      

      dpx [1]=px[tsl-2]

      dpy [1]=py[tsl-2]

      dpx [3]=x

      dpy [3]=y

      dpx [2]=px[tsl-1]

      dpy [2]=py[tsl-1]

      crc=tsl-2

      If tsl>1 then

        DrawQuadraticBezier()

      endif

      

      dpx [3]=px[tsl+2]

      dpy [3]=py[tsl+2]

      dpx [1]=x

      dpy [1]=y

      dpx [2]=px[tsl+1]

      dpy [2]=py[tsl+1]  

      

      crc=tsl

      If tsl<nct-1 then

        DrawQuadraticBezier()

      endif

    EndIf 

    inpn=0

  EndIf 

EndSub 



Sub unlins

  For x=1 To lsc

    Shapes.HideShape (ls[x])   

    

  EndFor

  For t=1 To nct-1

    For d=1 To Array.GetItemCount(dline[t]) 

      Shapes.Remove(dline[t][d])

      

    EndFor

  EndFor 

EndSub 



Sub ShowInstruction

  ' param msg - instruction message to show

  Shapes.SetText(instruction, msg)

EndSub



Sub ShowPoint

  cc=cc+1

  Shapes.ShowShape (cs[cc])

  LDShapes.Centre (cs[cc],x,y)

  LDShapes.SetShapeEvent(cs[cc])

  Shapes.SetOpacity (cs[cc],70)

  If FCKeyboard.IsControlPressed  and cc>2 Then

    LDShapes.BrushColour (cs[cc],"Brown")

    

  Else

    LDShapes.BrushColour (cs[cc],"Blue")

  EndIf 

EndSub



Sub listvars

  sbb= (FCExtensions.GetAllSubs())

  ww=FCExtensions.GetAllVariables()

  TextWindow.WriteLine (ldtext.Replace (sbb,";",ESLText.CRLF)  )

  

  aa=LDArray.Create(Array.GetItemCount(ww))

  

  For f=1 to Array.GetItemCount(ww)

    LDArray.SetValue(aa,f,ww[f])

  endfor

  LDArray.Sort (aa)

  For f=1 to Array.GetItemCount(ww)

    TextWindow.WriteLine (f+":"+LDArray.GetValue (aa,f))

  endfor

EndSub 




