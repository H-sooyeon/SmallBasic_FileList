LF = Text.GetCharacter(10)

gw = 598

gh = 428

GraphicsWindow.BackgroundColor="#009988

GraphicsWindow.Width = gw

GraphicsWindow.Height = gh

GraphicsWindow.Title = "chibi:bit"



Shapes_Init()

' add shapes

scale = 1

angle = 0

iMin = 1

iMax = 115

Shapes_Add()



FindLEDs()

img = "" + LF

img = img + " . # # # . " + LF

img = img + " # . . . # " + LF

img = img + " # . . . # " + LF

img = img + " # . . . # " + LF

img = img + " . # # # . " + LF

ShowLEDs()

zz=1

LDEvents.MouseWheel=mww



While "true

  x = 2

  y = 2

  OnLED()

  Program.Delay(500)

  OffLED()

  Program.Delay(500)

endwhile



Sub mww

  If Mouse.IsRightButtonDown Then

    az=az+ LDEvents.LastMouseWheelDelta*3

  Else 

    zz=zz+ LDEvents.LastMouseWheelDelta/20

  EndIf 

  LDGraphicsWindow.Reposition (zz zz 0 0 az)

EndSub 



Sub FindLEDs

  For i = iMin To iMax

    shp = shape[i]

    If Text.StartsWith(shp["name"], "LED ") Then

      name = shp["name"]

      x = Text.GetSubText(name, 5, 1)

      y = Text.GetSubText(name, 7, 1)

      objLED[x][y] = shp["obj"]

    EndIf

  EndFor

EndSub



Sub ShowLEDs

  p = 1

  y = 0

  x = 0

  While p <= Text.GetLength(img)

    c = Text.GetSubText(img, p, 1)

    If c = "." Then

      Shapes.HideShape(objLED[x][y])

    ElseIf c = "#" Then

      Shapes.ShowShape(objLED[x][y])

    EndIf

    If Text.IsSubText(".#", c) THen

      x = x + 1

      If 4 < x Then

        x = 0

        y = y + 1

      EndIf

    EndIf

    p = p + 1

  EndWhile

EndSub



Sub OnLED

  Shapes.ShowShape(objLED[x][y])

EndSub



Sub OffLED

  Shapes.HideShape(objLED[x][y])

EndSub



Sub Shapes_Init

  sss="ff=rect;x=8;y=0;ww=150;hh=8;bc=#006666;pw=0;name=top/ff=ell;x=0;y=0;ww=16;hh=16;bc=#006666;pw=0;name=corner/ff=ell;x=150;y=0;ww=16;hh=16;bc=#006666;pw=0;name=corner/ff=rect;x=0;y=8;ww=166;hh=110;bc=#006666;pw=0;name=board/ff=text;x=168;y=177;text=chibi:bit;fs=20;fn=Trebuchet MS;bc=#000000/ff=line;x=0;y=26;x1=0;y1=0;x2=68;y2=0;pc=#FFFFFF;pw=3;name=line/ff=line;x=98;y=26;x1=0;y1=0;x2=68;y2=0;pc=#FFFFFF;pw=3;name=line/ff=ell;x=77;y=26;ww=14;hh=14;bc=Transparent;pc=#FFFFFF;pw=3;name=mouth/ff=rect;x=69;y=18;ww=28;hh=17;bc=#006666;pw=0;name=mouth/ff=ell;x=68;y=20;ww=12;hh=12;bc=Transparent;pc=#FFFFFF;pw=3;name=eye/ff=ell;x=88;y=20;ww=12;hh=12;bc=Transparent;pc=#FFFFFF;pw=3;name=eye/ff=line;x=77;y=12;x1=0;y1=9;x2=8;y2=0;pc=#FFFFFF;pw=3;name=switch/ff=rect;x=56;y=47;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=56;y=49;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 0,0/ff=rect;x=56;y=60;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=56;y=62;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 0,1/ff=rect;x=56;y=73;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=56;y=75;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 0,2/ff=rect;x=56;y=86;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=56;y=88;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 0,3/ff=rect;x=56;y=99;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=56;y=101;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 0,4/ff=rect;x=69;y=47;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=69;y=49;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 1,0/ff=rect;x=69;y=60;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=69;y=62;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 1,1/ff=rect;x=69;y=73;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=69;y=75;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 1,2/ff=rect;x=69;y=86;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=69;y=88;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 1,3/ff=rect;x=69;y=99;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=69;y=101;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 1,4/ff=rect;x=82;y=47;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=82;y=49;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 2,0/ff=rect;x=82;y=60;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=82;y=62;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 2,1/ff=rect;x=82;y=73;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=82;y=75;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 2,2/ff=rect;x=82;y=86;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=82;y=88;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 2,3/ff=rect;x=82;y=99;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=82;y=101;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 2,4/ff=rect;x=95;y=47;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=95;y=49;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 3,0/ff=rect;x=95;y=60;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=95;y=62;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 3,1/ff=rect;x=95;y=73;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=95;y=75;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 3,2/ff=rect;x=95;y=86;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=95;y=88;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 3,3/ff=rect;x=95;y=99;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=95;y=101;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 3,4/ff=rect;x=108;y=47;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=108;y=49;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 4,0/ff=rect;x=108;y=60;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=108;y=62;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 4,1/ff=rect;x=108;y=73;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=108;y=75;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 4,2/ff=rect;x=108;y=86;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=108;y=88;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 4,3/ff=rect;x=108;y=99;ww=4;hh=11;bc=#666666;pw=0;name=LED/ff=rect;x=108;y=101;ww=4;hh=7;bc=#FF0000;pw=0;name=LED 4,4/ff=rect;x=6;y=60;ww=18;hh=18;bc=#808080;pw=0;name=button A/ff=ell;x=10;y=64;ww=10;hh=10;bc=#000000;pw=0;name=button A/ff=rect;x=142;y=60;ww=18;hh=18;bc=#808080;pw=0;name=button B/ff=ell;x=146;y=64;ww=10;hh=10;bc=#000000;pw=0;name=button B/ff=rect;x=0;y=130;ww=166;hh=8;bc=#006666;pw=0;name=bottom/ff=rect;x=8;y=138;ww=150;hh=8;bc=#006666;pw=0;name=bottom/ff=ell;x=0;y=130;ww=16;hh=16;bc=#006666;pw=0;name=corner/ff=ell;x=150;y=130;ww=16;hh=16;bc=#006666;pw=0;name=corner/ff=rect;x=0;y=118;ww=6;hh=12;bc=#006666;pw=0;name=gap/ff=rect;x=17;y=118;ww=22;hh=12;bc=#006666;pw=0;name=gap/ff=rect;x=50;y=118;ww=27;hh=12;bc=#006666;pw=0;name=gap/ff=rect;x=88;y=118;ww=27;hh=12;bc=#006666;pw=0;name=gap/ff=rect;x=126;y=118;ww=22;hh=12;bc=#006666;pw=0;name=gap/ff=rect;x=160;y=118;ww=6;hh=12;bc=#006666;pw=0;name=gap/ff=ell;x=3;y=114;ww=18;hh=18;bc=Transparent;pc=#BFA95A;pw=4/ff=rect;x=6;y=128;ww=11;hh=18;bc=#BFA95A;pw=0;name=port 0/ff=ell;x=36;y=114;ww=18;hh=18;bc=Transparent;pc=#BFA95A;pw=4/ff=rect;x=39;y=128;ww=11;hh=18;bc=#BFA95A;pw=0;name=port 1/ff=ell;x=74;y=114;ww=18;hh=18;bc=Transparent;pc=#BFA95A;pw=4/ff=rect;x=77;y=128;ww=11;hh=18;bc=#BFA95A;pw=0;name=port 2/ff=ell;x=112;y=114;ww=18;hh=18;bc=Transparent;pc=#BFA95A;pw=4/ff=rect;x=115;y=128;ww=11;hh=18;bc=#BFA95A;pw=0;name=port 3V/ff=ell;x=145;y=114;ww=18;hh=18;bc=Transparent;pc=#BFA95A;pw=4/ff=rect;x=148;y=128;ww=11;hh=18;bc=#BFA95A;pw=0;name=port GND/ff=text;x=12;y=40;text=A;fs=12;fn=Trebuchet MS;bc=#FFFFFF/ff=text;x=148;y=40;text=B;fs=12;fn=Trebuchet MS;bc=#FFFFFF/ff=text;x=10;y=134;text=0;fs=6;fn=Trebuchet MS;bc=#000000/ff=text;x=43;y=134;text=1;fs=6;fn=Trebuchet MS;bc=#000000/ff=text;x=81;y=134;text=2;fs=6;fn=Trebuchet MS;bc=#000000/ff=text;x=117;y=134;text=3V;fs=6;fn=Trebuchet MS;bc=#000000/ff=text;x=148;y=134;text=GND;fs=6;fn=Trebuchet MS;bc=#000000/ff=rect;x=1;y=130;ww=3;hh=13;bc=#BFA95A;pw=0/ff=rect;x=19;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=24;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=29;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=34;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=52;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=57;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=62;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=67;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=72;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=90;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=95;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=100;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=105;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=110;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=128;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=133;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=138;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=143;y=130;ww=3;hh=16;bc=#BFA95A;pw=0/ff=rect;x=161;y=130;ww=3;hh=13;bc=#BFA95A;pw=0/ff=tri;x=0.879;y=142.379;x1=2.121;y1=0;x2=0;y2=2.121;x3=4.242;y3=2.121;bc=#BFA95A;pw=0;angle=45/ff=tri;x=159.879;y=142.379;x1=2.121;y1=0;x2=0;y2=2.121;x3=4.242;y3=2.121;bc=#BFA95A;pw=0;angle=-45

  sss=ldtext.Replace (sss "ff" "func")

  sss=ldtext.Replace (sss "ww" "width")

  sss=ldtext.Replace (sss "hh" "height")

  shape=ldtext.Split (sss "/")

  shX = 210 ' x offset

  shY = 130 ' y offset

EndSub



Sub Shapes_Add

  Stack.PushValue("local", i)

  Stack.PushValue("local", x)

  Stack.PushValue("local", y)

  Shapes_CalcWidthAndHeight()

  s = scale

  For i = iMin To iMax

    shp = shape[i]

    GraphicsWindow.PenWidth = shp["pw"] * s

    If shp["pw"] > 0 Then

      GraphicsWindow.PenColor = shp["pc"]

    EndIf

    If Text.IsSubText("rect|ell|tri|text", shp["func"]) Then

      GraphicsWindow.BrushColor = shp["bc"]

    EndIf

    If shp["func"] = "rect" Then

      shp["obj"] = Shapes.AddRectangle(shp["width"] * s, shp["height"] * s)

    ElseIf shp["func"] = "ell" Then

      shp["obj"] = Shapes.AddEllipse(shp["width"] * s, shp["height"] * s)

    ElseIf shp["func"] = "tri" Then

      shp["obj"] = Shapes.AddTriangle(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s, shp["x3"] * s, shp["y3"] * s)

    ElseIf shp["func"] = "line" Then

      shp["obj"] = Shapes.AddLine(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s)

    ElseIf shp["func"] = "text" Then

      fs = shp["fs"]

      GraphicsWindow.FontSize = fs * s

      GraphicsWindow.FontName = shp["fn"]

      shp["obj"] = Shapes.AddText(shp["text"])

    EndIf

    x = shp["x"]

    y = shp["y"]

    shp["rx"] = x

    shp["ry"] = y

    

    Shapes.Move(shp["obj"], shX + x * s, shY + y * s)

    If Text.IsSubText("rect|ell|tri|text", shp["func"]) And (shp["angle"] <> 0) And (shp["angle"] <> "") Then

      Shapes.Rotate(shp["obj"], shp["angle"])

    EndIf

    shape[i] = shp

  EndFor

  shAngle = 0

  y = Stack.PopValue("local")

  x = Stack.PopValue("local")

  i = Stack.PopValue("local")

EndSub



Sub Shapes_CalcRotatePos

  _cx = param["x"] + param["width"] / 2

  _cy = param["y"] + param["height"] / 2

  x = _cx - param["cx"]

  y = _cy - param["cy"]

  aa=ldmath.Convert2Radial (param["cx"] param["cy"] _cx _cy)

  a = aa[2] + param["angle"]

  x = aa[1] * Math.Cos(a * Math.Pi / 180)

  y = aa[1] * Math.Sin(a * Math.Pi / 180)

  _cx = x + param["cx"]

  _cy = y + param["cy"]

  x = _cx - param["width"] / 2

  y = _cy - param["height"] / 2

EndSub



Sub Shapes_CalcWidthAndHeight

  For i = iMin To iMax

    shp = shape[i]

    If shp["func"] = "tri" Or shp["func"] = "line" Then

      xmin = shp["x1"]

      xmax = shp["x1"]

      ymin = shp["y1"]

      ymax = shp["y1"]

      If shp["x2"] < xmin Then

        xmin = shp["x2"]

      EndIf

      If xmax < shp["x2"] Then

        xmax = shp["x2"]

      EndIf

      If shp["y2"] < ymin Then

        ymin = shp["y2"]

      EndIf

      If ymax < shp["y2"] Then

        ymax = shp["y2"]

      EndIf

      If shp["func"] = "tri" Then

        If shp["x3"] < xmin Then

          xmin = shp["x3"]

        EndIf

        If xmax < shp["x3"] Then

          xmax = shp["x3"]

        EndIf

        If shp["y3"] < ymin Then

          ymin = shp["y3"]

        EndIf

        If ymax < shp["y3"] Then

          ymax = shp["y3"]

        EndIf

      EndIf

      shp["width"] = xmax - xmin

      shp["height"] = ymax - ymin

    EndIf

    If i = 1 Then

      shWidth = shp["x"] + shp["width"]

      shHeight = shp["y"] + shp["height"]

    Else

      If shWidth < shp["x"] + shp["width"] Then

        shWidth = shp["x"] + shp["width"]

      EndIf

      If shHeight < shp["y"] + shp["height"] Then

        shHeight = shp["y"] + shp["height"]

      EndIf

    EndIf

    shape[i] = shp

  EndFor

EndSub



Sub Shapes_Move

  Stack.PushValue("local", i)

  s = scale

  shX = x

  shY = y

  For i = iMin To iMax

    shp = shape[i]

    _x = shp["rx"]

    _y = shp["ry"]

    Shapes.Move(shp["obj"], shX + _x * s, shY + _y * s)

  EndFor

  i = Stack.PopValue("local")

EndSub



Sub Shapes_Rotate

  Stack.PushValue("local", i)

  Stack.PushValue("local", x)

  Stack.PushValue("local", y)

  s = scale

  param["angle"] = angle

  If cx <> "" Then

    param["cx"] = cx

  Else

    cx = ""   ' to avoid syntax error

    param["cx"] = shWidth / 2

  EndIf

  If cy <> "" Then

    param["cy"] = cy

  Else

    cy = ""   ' to avoid syntax error

    param["cy"] = shHeight / 2

  EndIf

  For i = iMin To iMax

    shp = shape[i]

    param["x"] = shp["x"]

    param["y"] = shp["y"]

    param["width"] = shp["width"]

    param["height"] = shp["height"]

    Shapes_CalcRotatePos()

    shp["rx"] = x

    shp["ry"] = y

    

    Shapes.Move(shp["obj"], shX + x * s, shY + y * s)

    Shapes.Rotate(shp["obj"], angle + shp["angle"])

    shape[i] = shp

  EndFor

  y = Stack.PopValue("local")

  x = Stack.PopValue("local")

  i = Stack.PopValue("local")

EndSub


