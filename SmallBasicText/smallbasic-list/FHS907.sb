
GraphicsWindow.MouseUp = OnMouseUp
GraphicsWindow.MouseDown = OnMouseDown
GraphicsWindow.Width = 600
GraphicsWindow.Height = 600
GraphicsWindow.BackgroundColor = "Black"
GraphicsWindow.BrushColor = "White"
GraphicsWindow.DrawText(200,10,"Click and drag to add object")


G = 6.67 * Math.Power(10,-11)
'
x[1] = 300
y[1] = 300
ObjectStationary[1] = "True"
M[1] = 500
Width[1] = 50
Color[1] = "Yellow"

GraphicsWindow.BrushColor = Color[1]
Ball[1] = Shapes.AddEllipse(Width[1],Width[1])

NumOfObjects = 1



While 1 = 1
  Delay = 20 - Timeelapsed
  If Delay > 0 Then
    Program.Delay(Delay)
    EndIf
  
  
  If Mouse.IsLeftButtonDown Then
   GraphicsWindow.PenColor = "White
    Shapes.Remove(Line)
    Line = Shapes.AddLine(InitXpos,InitYPos,GraphicsWindow.MouseX,GraphicsWindow.MouseY)
    GraphicsWindow.PenColor = "Black"
    EndIf
    
    TimeStart = Clock.ElapsedMilliseconds
  For i = 1 To NumOfObjects
    Shapes.Move(Ball[i],x[i] - (Width[i] / 2),y[i] - (Width[i] / 2))
    If ObjectStationary[i] <> "True" Then
    For p = 1 to NumOfObjects
      If p <> i Then
        
        Object1 = i
        Object2 = p 
        
        
        
        '------------------------------------------------------------------------------------------------------------------V Get the distances between the two objects
        Distx[i] = (x[Object2] - x[Object1]) 
        Disty[i] = (y[Object2] - y[Object1])
        Dist[i] = Math.SquareRoot((Distx * Distx)+(Disty * Disty)) + .001 
        '-------------------------------------------------------------------------------------------------------------------/\
        
        FR[i] = G*(M[Object1]*M[Object2])/(Dist[i]*Dist[i]) '<---   Get the force on the object
        
        
        XF[i] = ((FR[i] * Distx[i]) / Dist[i])  '<--- Get the X Force
        XA[i] = (XF[i]/M[i]) '<--- Get the X Acceleration
        
        YF[i] = ((FR[i] * Disty[i]) / Dist[i]) '<--- Get the Y force
        YA[i] = (YF[i]/M[i]) '<--- Get the Y Acceleration
        
        
        If x[Object2] < x[i] Then     '<---  Make sure the Object is always is pushing in --V
          XA[i] = -Math.Abs(XA[i])
        Else
          XA[i] = Math.Abs(XA[i])
        EndIf
        
        If y[Object2] < y[i] Then 
          YA[i] = -Math.Abs(YA[i]) 
        Else
          YA[i] = Math.Abs(YA[i])
        EndIf '                                                ------------------------------------------------------------------- /\
        
        Vh[i] = Vh[i] + (XA[i] * 0.002) '<--- Find the Horizontal (y) Velocity
        Vv[i] = Vv[i] + (YA[i] * 0.002) '<--- Find the Vertical (x) Velocity

        
        x[i] = x[i] + (Vh[i] * .002) '<--- AdD the velocity onto the X Position
        y[i] = y[i] + (Vv[i] * .002) '<--- Add the Velocity onto the Y Position
        
        Shapes.Move(Ball[i],x[i] - (Width[i] / 2),y[i] - (Width[i] / 2))
      EndIf
      EndFor
      Endif
    EndFor
Timeelapsed = Clock.ElapsedMilliseconds - TimeStart
EndWhile

Sub OnMouseDown
      InitXpos = GraphicsWindow.MouseX
      InitYPos = GraphicsWindow.MouseY
  EndSub

Sub OnMouseUp
Shapes.Remove(Line)
MDistx = Math.Abs(GraphicsWindow.MouseX - InitXpos)
MDisty = Math.Abs(GraphicsWindow.MouseY - InitYPos)
MDist = Math.Round(Math.SquareRoot((MDistx * MDist) + (MDisty * MDisty)))


  Tx = InitXpos
  Ty = InitYPos
  Posx = GraphicsWindow.MouseX
  Posy = GraphicsWindow.MouseY
  If Posx > Tx Then 'Aims At Pos
    AngleRadians = Math.ArcTan((Posy - Ty) / (Posx - Tx)) + 1.57079 '90 Degs. In Radians
  ElseIf Posx < Tx Then
    AngleRadians = Math.ArcTan((Posy - Ty) / (Posx - Tx)) - 1.57079 '90 Degs. In Radians
  ElseIf Posx = Tx And Posy > Ty Then
    AngleRadians = Math.ArcTan((Posy - Ty) / (Posx - Tx)) + 3.14159
  ElseIf Posx = Tx And Posy < Ty Then 
    AngleRadians = 0
  EndIf
  Angle = Math.GetDegrees(AngleRadians)  

a = NumOfObjects + 1
x[a] = InitXpos
y[a] = InitYPos
Width[a] = 10
M[a] = 10
Vh[a] = Math.GetDegrees(Math.Cos(Math.GetRadians(Angle + 90))) * MDist / 10
Vv[a] = Math.GetDegrees(Math.Sin(Math.GetRadians(Angle + 90))) * MDist / 10
Color[a] = "Green"
GraphicsWindow.BrushColor = Color[a]
Ball[a] = Shapes.AddEllipse(Width[a],Width[a])
NumOfObjects = a
EndSub

  
