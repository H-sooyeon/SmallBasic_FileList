args=0

GraphicsWindow.Title = "BrickDraw"

GraphicsWindow.PenWidth=0

Init()

rx=1

' 

LDCall.Function("do","R:5")



' Draw roof

For row = 1 To 5

  LDCall.Function ("do","F:Red Dn Lf")

EndFor



LDCall.Function ("do","R:6 U:4")

For row = 1 To 4

  LDCall.Function ("do","F:Red Dn Rt")

EndFor



' Draw wall

LDCall.Function ("do","L:5 U:4")

ll=1

l1=0

For row = 1 To 2

  LDCall.Function ("do","F:White/R:"+ll)

  ll=ll+2

  LDCall.Function ("do","Dn R:"+l1)

  LDCall.Function ("do","F:White/L:"+ll)

  ll=ll+2

  LDCall.Function ("do","Dn L:"+l1)

EndFor



LDCall.Function ("do","Rt")

For row = 1 To 3

  LDCall.Function ("do","F:White/R:7")

  LDCall.Function ("do","Dn Lf")

  LDCall.Function ("do","F:White/L:7")

  LDCall.Function ("do","Dn Rt")

EndFor



' Draw windows

LDCall.Function ("do","R:1 U:6")

For col = 1 To 3

  LDCall.Function ("do","F:Blue/D:2")

  LDCall.Function ("do","Dn")

  If col=2 Then

    ' Draw door

    LDCall.Function ("do","F:Black/D:3")

    LDCall.Function ("do","R:2 U:6")    

  Else

    LDCall.Function ("do","F:Blue/D:2")

    If col<3 then

      LDCall.Function ("do","R:2 U:5")

    EndIf 

  EndIf 

EndFor



'Draw ground

LDCall.Function ("do","L:7 Dn")

LDCall.Function ("do","F:Green/R:16")



' Draw tree

LDCall.Function ("do","L:5 U:6")

LDCall.Function ("do","F:Green/R:3")

LDCall.Function ("do","Dn L:4")

LDCall.Function ("do","F:Green/R:5")

LDCall.Function ("do","Dn Lf")

LDCall.Function ("do","F:Green/L:5")

LDCall.Function ("do","Dn Rt")

LDCall.Function ("do","F:Green/R:5")

LDCall.Function ("do","Dn L:2")

LDCall.Function ("do","F:Green/L:3")

LDCall.Function ("do","R:2 Up")

LDCall.Function ("do", "F:SaddleBrown/D:3")



aac=Array.GetItemCount (rr)





Program.Delay (3333)

GraphicsWindow.Title =aac

For opp=100 to 10 step -2

  GraphicsWindow.BackgroundColor =LDColours.HSLtoRGB (220 1 opp*.8/100)

  For x=1 to aac

     Shapes.SetOpacity(rr[x],opp)

  endfor

Program.Delay (22)  

endfor



For x=1 to aac

  ldShapes.AnimateOpacity(rr[x] 500 5)

  Program.Delay (4)

endfor

Program.Delay (3333)

For opp=10 to 100 step 2

  GraphicsWindow.BackgroundColor =LDColours.HSLtoRGB (220 1 opp*.8/100)

  Program.Delay (22)

endfor



For x=1 to aac

  l=Shapes.GetLeft(rr[x])

  t=Shapes.GetTop(rr[x])

  c= LDGraphicsWindow.GetPixel (l+1 t+1)

  Shapes.Remove (rr[x])

  rr[x]= Shapes.AddEllipse (size size)

  Shapes.Move (rr[x] l t)

  LDShapes.BrushColour (rr[x] c)

endfor



For x=1 to aac

  ldShapes.Animatezoom(rr[x] 500 5 2 2)

  Program.Delay (4)

endfor



Program.Delay (3333)

aac=Array.GetItemCount (rr)



For x=1 to aac

  dx=Math.GetRandomNumber (900)-450

  dy=math.GetRandomNumber (1000)-500

  while dx>-size And dx<gw  

    dx=dx*2

  EndWhile 

  

  Shapes.Animate(rr[x] dx dy 500)

  Program.Delay (4)

endfor

GraphicsWindow.Title ="Finished."

Program.Delay (1111)

For opp=100 to 10 step -2

  GraphicsWindow.BackgroundColor =LDColours.HSLtoRGB (220 1 opp*.8/100)

  Program.Delay (22)

endfor

Program.End ()



Sub Do

  cmdd=ldtext.Split( args[1]," ")

  For f=1 To Array.GetItemCount (cmdd)

    cmd=cmdd[f]

    x = T_X

    y = T_Y   

    Program.Delay(33)

    If Text.StartsWith(cmd, "R:") Then

      GetOperand()

      T_x=x + operand * size 

      t_y=y

      If df=1 then 

        dfll()

      EndIf

      

    elseIf Text.StartsWith(cmd, "Rt") Then

      t_x=x + size

      t_y=y

      

    ElseIf Text.StartsWith(cmd, "Lf") Then

      T_x=x -  size

      t_y= y

      

    elseIf Text.StartsWith(cmd, "L:") Then

      GetOperand()

      T_x=x - operand * size 

      t_y=y

      If df=1 then 

        dfll()

      EndIf

      

    ElseIf Text.StartsWith(cmd, "Up") Then

      t_x=x

      t_y= y - size

      

    ElseIf Text.StartsWith(cmd, "U:") Then

      GetOperand ()

      t_x=x

      t_y= y - operand * size

      If df=1 then 

        dfll()

      EndIf

      

    ElseIf Text.StartsWith(cmd, "Dn") Then

      t_x=x

      t_y= y + size

      

    ElseIf Text.StartsWith(cmd, "D:") Then

      GetOperand ()

      t_x=x

      t_y= y + operand * size

      If df=1 then 

        dfll()

      EndIf

      

    ElseIf Text.StartsWith(cmd, "F") Then

      If Text.IsSubText (cmd,"/") then

        c1=LDText.Split(cmd,"/")

        cmd=c1[1]

        GetOperand()

        GraphicsWindow.BrushColor = operand

        cmd=c1[2]

        GetOperand()

        op=operand 

        df=1

        For t=1 to op  

          LDCall.Function ("do",cm0+":1")

        EndFor 

        df=0

      else

        GetOperand()

        If operand = "" Then

          operand = "Black"

        EndIf

        GraphicsWindow.BrushColor = operand

        dfll()

      EndIf 

    EndIf

  EndFor 

EndSub



Sub dfll

  rr[rx]=shapes.addRectangle( size size )

  Shapes.Move (rr[rx] x - size/2, y - size/2)

  rx=rx+1

EndSub 



Sub GetOperand

  sp = ldText.Split(cmd, ":")

  cm0=sp[1]

  operand = sp[2]

EndSub



Sub Init

  size = 40

  gw = 640

  gh = 480

  GraphicsWindow.Width = gw

  GraphicsWindow.Height = gh

  GraphicsWindow.BackgroundColor = LDColours.HSLtoRGB (220 1 0.8)

  T_X = size / 2

  T_Y = size / 2

EndSub


