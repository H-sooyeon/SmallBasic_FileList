'  Throw  Boomerang 
BMRShapes_Init()
BMRShapes_Add()        '  add  boomerang's shapes

GraphicsWindow.MouseDown=Onmousedown
GraphicsWindow.MouseMove=Onmousemove
GraphicsWindow.MouseUp=onmouseup

While ThrowBNMB<11
  NN=NN+1
  If Throw="True" Then 
    Fly_boomerang()                            '   boomerang  is throwed
  endif
  Program.Delay(20)
endwhile

Sub Fly_boomerang
  If  Shapes.GetTop(BMRshp[ThrowBNMB][1]["obj"])>-100  Then 
    k=k+dk                                 '  rotating angle 
    dZM=(1-K/ZM)                           '  zoom ratio
    dx=dx+dd["X"]                          '  sliding rate  X 
    dy=dy+dd["Y"]                          '  sliding rate  Y
    RK= Math.GetRadians(-k)                '  unclockwise   BMRX[j]
    '------------------------------------------------------------------------------
    Shapes.Zoom(BMRshp[ThrowBNMB][1]["obj"],dZM,dZM)  '  boomerang  size becomes smaller  gradually 
    Shapes.Move(BMRshp[ThrowBNMB][1]["obj"],BMRX[ThrowBNMB]+dZM*DR[1]*Math.Sin(-RK)-dZM*DW[1]+dx,BMRY[ThrowBNMB]+dZM*DR[1]*Math.cos(-RK)-dZM*DR[1]-dy)
    Shapes.Rotate(BMRshp[ThrowBNMB][1]["obj"],-k)
    '------------------------------------------------------------------------------
    RK2= Math.GetRadians(-(k-90))
    Shapes.Zoom(BMRshp[ThrowBNMB][2]["obj"],dZM,dZM)
    Shapes.Move(BMRshp[ThrowBNMB][2]["obj"],BMRX[ThrowBNMB]+dZM*DR[2]*Math.Sin(-RK2)-dZM*DW[2]+dx,BMRY[ThrowBNMB]+dZM*DR[2]*Math.cos(-RK2)-dZM*DR[2]-dy)
    Shapes.Rotate(BMRshp[ThrowBNMB][2]["obj"],-(k-90))
  Else 
    FlyBMR_NMB()
  endif
EndSub

Sub FlyBMR_NMB
  Throw="False"
  ThrowBNMB=ThrowBNMB+1                                '  next  boomerang 
  Shapes.SetOpacity(BMRshp[ThrowBNMB][1]["obj"],100)   '  next  boomerang  appears 
  Shapes.SetOpacity(BMRshp[ThrowBNMB][2]["obj"],100)
EndSub


Sub Onmouseup
  If catch<>"False" Then 
    Mx2= GraphicsWindow.MouseX
    My2= GraphicsWindow.MouseY
    BMRX[ThrowBNMB]=Mx2               '  released point  X
    BMRY[ThrowBNMB]=MY2               '  released point  Y
    MX1=MX2
    MY1=MY2 
  EndIf
  catch="false"
  dd="X="+(Mx1-MX)/10  +";Y="+ (MY-My1)/10   '   sliding  rate   
  Throw="True"
  k=0                                      '   angle 
  dx=0                                     '   sliding X
  dY=0                                     '   sliding Y 
  dk=20                                    '  rotating rate 
  ZM=3500                                  '  zoom rate 
  DR="1="+(BMRshp[ThrowBNMB][1]["height"]*s3/2)+";2="+(BMRshp[ThrowBNMB][2]["height"]*s3/2)        '  radius  length 
  DW="1="+(BMRshp[ThrowBNMB][1]["width"]*s3/2)+";2="+(BMRshp[ThrowBNMB][2]["width"]*s3/2)          '  width/2 
EndSub

Sub Onmousemove
  If catch="true" Then 
    Mx1= GraphicsWindow.MouseX
    My1= GraphicsWindow.MouseY
    Shapes.Move(BMRshp[ThrowBNMB][1]["obj"],Mx1,My1)                 '  moved by mouse
    Shapes.Move(BMRshp[ThrowBNMB][2]["obj"],Mx1-45*s3,My1-45*s3)
    Distance_r=Math.SquareRoot((Mx1-BMRX[ThrowBNMB])*(Mx1-BMRX[ThrowBNMB])+ (My1-BMRY[ThrowBNMB])*(My1-BMRY[ThrowBNMB])) 
    If Distance_r>150 Then              '  Distance_r=distance from initial position 
      BMRX[ThrowBNMB]=Mx1               '  released point  X
      BMRY[ThrowBNMB]=MY1               '  released point  Y
      catch="False"
      onmouseup()                       '  forced  throwing 
    endif 
  EndIf
EndSub

Sub Onmousedown
  Mx= GraphicsWindow.MouseX
  My= GraphicsWindow.MouseY
  If math.Abs(MX-BMRX[ThrowBNMB])<10 And math.Abs(MY-BMRY[ThrowBNMB])<30 Then '  if  boomerang is caught 
    catch="true"
  EndIf
EndSub



Sub BMRShapes_Init
  BNMB=10                                    '  Boomerang number 
  CLR="1=#B1300E;2=#B13FFE;3=#316745;4=#DCCB18;5=#8D6449;6=#494A41;7=#D4ACAD;8=#82AE46;9=#00A497;10=#165E83" '  Color  of boomerang
  For j=1 To BNMB
    CLR[j]=GraphicsWindow.GetRandomColor()
    BMRshp[j][1] = "func=ell;x=0;y=0;width=20;height=60;angle=0;bc="+CLR[j]+";pc="+CLR[j]+";pw=2;"
    BMRshp[j][2] = "func=ell;x=-45;y=-45;width=20;height=90;angle=-90;bc="+CLR[j]+";pc="+CLR[j]+";pw=2;"
  EndFor
EndSub


Sub BMRShapes_Add
  GraphicsWindow.Width=1200
  GraphicsWindow.Height=700
  GraphicsWindow.BackgroundColor="Darkgreen"
  
  BX0 = 450
  BY0 = 650 
  For j=BNMB To 1 Step -1
    s3=0.6                                       '  S3
    dx=dx+j*3
    dy=0 
    For i = 1 To 2
      GraphicsWindow.PenWidth = BMRshp[j][i]["pw"]*s3 
      GraphicsWindow.PenColor = BMRshp[j][i]["pc"]
      GraphicsWindow.BrushColor = BMRshp[j][i]["bc"]
      If BMRshp[j][i]["func"] = "ell" Then
        BMRshp[j][i]["obj"] = shapes.AddEllipse(BMRshp[j][i]["width"]*s3, BMRshp[j][i]["height"]*s3)
      EndIf
      Shapes.Move(BMRshp[j][i]["obj"], BX0 + BMRshp[j][i]["x"]*s3+dX, BY0 + BMRshp[j][i]["y"]*s3+dy)
      If BMRshp[j][i]["angle"] <> 0 Then
        Shapes.Rotate(BMRshp[j][i]["obj"], BMRshp[j][i]["angle"])
      EndIf
    EndFor
    Shapes.SetOpacity(BMRshp[j][1]["obj"],0)   '  boomerang  disappears 
    Shapes.SetOpacity(BMRshp[j][2]["obj"],0)
    BMRX[j]= Shapes.GetLeft(BMRshp[j][1]["obj"])+BMRshp[j][1]["width"]*s3/2      '   cross point  X
    BMRY[j]= Shapes.Gettop(BMRshp[j][1]["obj"])                                '   cross point  Y
  endfor
  dx=0
  ThrowBNMB=1
  Shapes.SetOpacity(BMRshp[1][1]["obj"],100)   '  boomerang  disappears 
  Shapes.SetOpacity(BMRshp[1][2]["obj"],100)
EndSub

