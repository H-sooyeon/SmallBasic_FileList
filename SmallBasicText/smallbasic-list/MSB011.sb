angle = 25

delta = 10

distance = 80

ar=0

GraphicsWindow.PenWidth=25

tx=300

ty=390

not["false"]="true"

not["true"]="false"

aa=Math.Pi/180

GraphicsWindow.BackgroundColor = "darkblue"



trr="true"

GraphicsWindow.Title="Wait, generating..."

For angle=-21 To -2.5 Step 0.5

  GraphicsWindow.PenColor = LDColours.HSLtoRGB(angle*2+90 1 .6)

  GraphicsWindow.Clear()

  DrawTree()

  ii=ii+1

  ff[ii]= LDGraphicsWindow.Capture("" "false")

  

EndFor

For angle=2.5 To 21 Step 0.5

  GraphicsWindow.PenColor = LDColours.HSLtoRGB(angle*2+90 1 .6)

  GraphicsWindow.Clear()

  DrawTree()

  ii=ii+1

  ff[ii]= LDGraphicsWindow.Capture("" "false")

  

EndFor

GraphicsWindow.Title="FractTree 3-brunch anim"

While 1=1

  For j=1 To ii

    GraphicsWindow.DrawImage(ff[j] 1 1)

    Program.Delay(33)

  EndFor

  For j=ii To 1 Step -1

    GraphicsWindow.DrawImage(ff[j] 1 1)

    Program.Delay(33)

  EndFor

EndWhile



Sub DrawTree '---------------------------recursion

    If (distance > 0) Then

    GraphicsWindow.PenWidth=GraphicsWindow.PenWidth/2

    TMove()

    TTurn= tturn+angle

    Stack.PushValue("distance", distance)

    distance = distance - delta

    DrawTree()

    TTurn= tturn-angle * 1.5

    DrawTree()

    TTurn= tturn+(-angle * 1.5)

    DrawTree()

    TTurn= tturn+(angle*2)

    distance = Stack.PopValue("distance")

    tmovebk()

    GraphicsWindow.PenWidth=GraphicsWindow.PenWidth*2

  EndIf

EndSub



Sub Convert2Cartesian

  ll[1]=ar[1]+ar[3]*math.cos(ar[4]*aa)

  ll[2]=ar[2]+ar[3]*math.sin(ar[4]*aa)

EndSub



Sub tmove

  ar[1]=tx

  ar[2]=ty

  ar[3]=distance

  ar[4]=TTurn-90

  Convert2Cartesian()

  GraphicsWindow.DrawLine(tx ty ll[1] ll[2])

  tx=ll[1]

  ty=ll[2]

EndSub



Sub tmovebk

  ar[1]=tx

  ar[2]=ty

  ar[3]=-distance

  ar[4]=TTurn-90

  Convert2Cartesian()

  GraphicsWindow.DrawLine(tx ty ll[1] ll[2])

  tx=ll[1]

  ty=ll[2]

EndSub


