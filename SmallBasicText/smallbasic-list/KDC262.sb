Initialise()

While "True"  'MAIN LOOP - processes your Events
  If buttonClicked Then
    lastButton = Controls.GetButtonCaption(Controls.LastClickedButton)
    
    If lastButton = "Add a new set of Shapes" Then
      RemoveAllShapes()
      InitialiseRandomShapes()
      AddAndPositionShapes()
    EndIf
    
    buttonClicked = "False"
  EndIf
  
  Program.Delay(100)
EndWhile

'=====================================================================
'SUBROUTINES
'=====================================================================
Sub Initialise
  LF = Text.GetCharacter(10)
  
  numberOfShapesToDraw = 6
  shapeType = "1=circle;2=square;3=triangle"
  
  space = 15  'refactored  Y for space
  shapeWidth = 40
  
  Controls.AddButton("Add a new set of Shapes", space, shapeWidth + space *2)
  
  Controls.ButtonClicked = OnButtonClicked
  
  InitialiseRandomShapes()
  AddAndPositionShapes()
EndSub

Sub OnButtonClicked
  buttonClicked = "True"
EndSub

Sub InitialiseRandomShapes
  myShape[1] = "rectangle"  'pre selected
  
  For i = 2 To numberOfShapesToDraw
    myShape[i] = shapeType[Math.GetRandomNumber(Array.GetItemCount(shapeType))]  
  EndFor
  
  For j = 1 To numberOfShapesToDraw
    rand = Math.GetRandomNumber(Array.GetItemCount(myShape))   
    
    randomOrder[j] = myShape[rand]  
    myShape[rand] = ""  
    
    getAll = Array.GetAllIndices(myShape)  
    
    For i = 1 To Array.GetItemCount(getAll)
      temp[i] = myShape[getAll[i]]    
    EndFor  
    myShape = temp  
    temp = ""  
  EndFor
  
  myShape = randomOrder 
EndSub

Sub AddAndPositionShapes
  For i = 1 To numberOfShapesToDraw
    If myShape[i] = "rectangle" Then
      AddRectangle()
    ElseIf myShape[i] = "circle" Then
      AddCircle()
    ElseIf myShape[i] = "square" Then
      AddSquare()
    ElseIf myShape[i] = "triangle" Then
      AddTriangle()
    EndIf  
    
    If i = 1 Then
      X = space
    Else
      X = Shapes.GetLeft(shp[i-1]) + shapeWidth + space
    EndIf 
    
    Shapes.Move(shp[i], X, space)  
  EndFor
EndSub

Sub RemoveAllShapes
  For i = 1 To Array.GetItemCount(shp)
    Shapes.Remove(shp[i])
    'shp[i] = ""     'clears the array as well. Not needed for this program, but good to know.
  EndFor  
EndSub

Sub AddTriangle  
  shp[i] = Shapes.AddTriangle(0, 0, shapeWidth/2, shapeWidth, shapeWidth, 0)
EndSub

Sub AddSquare
  shp[i] = Shapes.AddRectangle(shapeWidth, shapeWidth)
EndSub

Sub AddCircle
  shp[i] = Shapes.AddEllipse(shapeWidth, shapeWidth)
EndSub

Sub AddRectangle  
  shp[i] = Shapes.AddRectangle(shapeWidth, shapeWidth * 0.8)
EndSub
