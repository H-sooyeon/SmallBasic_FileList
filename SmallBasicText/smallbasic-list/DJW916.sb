'WIP Square Numbers
SetGUI()
ui = 1
buttonWidth = 80
IndexCaptions()
PositionButtons()
UIControl()
Controls.ButtonClicked = ButtonClicked
'------------------------------Button Control-------------------------------------
Sub IndexCaptions
  captionSet1 = "1=Home;2=Exit;3=Draw Flower;4=Card Game;5=Sq No's;6=Find Methods"
  captionSet2 = "7=Scale Up;8=Scale Down;9=Clear;10=Show Code;11=For Method;12=While Method"
  countCaptionSet1 = Array.GetItemCount(captionSet1)
  countCaptionSet2 = Array.GetItemCount(captionSet2)
  sumCountCaptionSet12 = countCaptionSet1 + countCaptionSet2
  For i = 1 To countCaptionSet1
    caption[i] = captionSet1[i]
  EndFor
  For i = countCaptionSet1+1 To sumCountCaptionSet12
    caption[i] = captionSet2[i]
  EndFor
EndSub

Sub ButtonClicked
  HideButtons()
  buttonCaption = Controls.GetButtonCaption(Controls.LastClickedButton)  
  If buttonCaption = "Home" Then
    ui = 1
    SetGUI()
    PositionButtons()   
    UIControl()
  ElseIf buttonCaption = "Exit" Then
    SetGUI()
    Exit()
  ElseIf buttonCaption = "Draw Flower" Then
    ui = 3 
    PositionButtons()   
    UIControl()
    DrawFlower()
  ElseIf buttonCaption = "Card Game" Then
    ui = 1 
    PositionButtons()   
    UIControl()
    GraphicsWindow.Hide()
    CardGame()
    GraphicsWindow.Show()
  ElseIf buttonCaption = "Sq No's" Then
    ui = 4
    SetSqNumGUI()
    bannerTitle()    
    PositionButtons()   
    UIControl()
  ElseIf buttonCaption = "Find Methods" Then
    ui = 1 
    PositionButtons()   
    UIControl()
    GraphicsWindow.Hide()
    FindMethods()
    GraphicsWindow.Show()
    FindMethods()
  ElseIf buttonCaption = "Scale Up" Then
    ui = 3
    PositionButtons()   
    UIControl()
    ScaleUp()
  ElseIf buttonCaption = "Scale Down" Then
    ui = 3
    PositionButtons()   
    UIControl()
    ScaleDown()
  ElseIf buttonCaption = "While Method" Or buttonCaption = "For Method" Then
    ui = 4
    SetSqNumGUI()    
    PositionButtons()   
    UIControl()
    SquareNumbers()
  ElseIf buttonCaption = "Show Code" Then
    ui = 4
    SetSqNumGUI()    
    PositionButtons()   
    UIControl()
    fillTextWindow()
  ElseIf buttonCaption = "Clear" Then
    ui = 4
    SetSqNumGUI()    
    PositionButtons()   
    UIControl()
    ClearSqNumScreen()
  ElseIf Controls.LastClickedButton = addCalcButton Then
    ui = 4
    SetSqNumGUI()    
    PositionButtons()   
    UIControl()
    SqNumberCalc()
  EndIf 
EndSub

Sub UIControl
  HideButtons()
  ShowStickyButtons()
  HideOtherFlowerShapes()  
  If ui = 1 Then    
    ShowHomeButtons()
    HideFlowerGraphics()
    Shapes.HideShape(title)
    ClearSqNumScreen()
  ElseIf ui = 3 Then
    ShowFlowerButtons()
  ElseIf ui = 4 Then
    ShowSqNumButtons()
  EndIf
EndSub

Sub AddButtons
  GraphicsWindow.BrushColor = "purple"
  GraphicsWindow.FontSize = 10 
  button[i] = Controls.AddButton(caption[i], x, 5)  
  Controls.SetSize(button[i], buttonWidth, 25)
EndSub

Sub PositionButtons   
  For i = 1 To 2  
    x = 5+((buttonWidth+5)*(i-1)) 'from left
    AddButtons()
  EndFor
  For i = 3 To 6
    x = (gw-(buttonWidth+5)*(i-2)) 'from right
    AddButtons()
  EndFor
  For i = 7 To 8
    x = (gw-(buttonWidth+5)*(i-6))
    AddButtons()
  EndFor
  For i = 9 To 12
    x = (gw-(buttonWidth+5)*(i-8))
    AddButtons()
  EndFor
EndSub

Sub ShowStickyButtons
  For i = 1 To 2
    Controls.ShowControl(button[i])
  EndFor
EndSub

Sub ShowHomeButtons
  For i = 3 To 6
    Controls.ShowControl(button[i])
  EndFor
EndSub

Sub ShowFlowerButtons
  For i = 7 To 8
    Controls.ShowControl(button[i])
  EndFor
EndSub

Sub ShowSqNumButtons
  For i = 9 To 12
    Controls.ShowControl(button[i])
  EndFor
EndSub

Sub HideButtons
  i=0
  While i <= Array.GetItemCount(caption)
    i = i +1
    Controls.HideControl(button[i])
  EndWhile
EndSub
'------------------------------------1st Level Subroutines---------------------------

Sub HideFlowerGraphics
  Shapes.HideShape(zoomTxt)
  Shapes.HideShape(txt)
  For i = 1 To Array.GetItemCount(ellipse)
    Shapes.HideShape(ellipse[i])
  EndFor
EndSub

Sub HideOtherFlowerShapes
  Shapes.HideShape(zoomTxt)
EndSub

Sub SetGUI
  gw = 600
  gh = 400
  GraphicsWindow.Width = gw
  GraphicsWindow.Height = gh
  GraphicsWindow.BackgroundColor = "black"
EndSub

Sub Exit
  GraphicsWindow.Clear()    
  GraphicsWindow.BrushColor = "cyan"
  bye = Shapes.AddText("Goodbye")
  Shapes.Zoom(bye, 2,2)
  Shapes.Move(bye, 5, gh/2) 
  z = 1   
  While z < 610
    Shapes.Move(bye, z, gh/2)
    z = z + 0.05
    Program.Delay(0.0001)    'needs fixing. See TIP in forum *?*
    If z = 610 Then
      Program.End()
    EndIf 
  EndWhile
EndSub
'----------------------------------2nd level Subroutines for Find Methods --------------------------------
'Intermediate Challenge 1 April 2013  <<Search & List Methods used in a SB program>>
'Write a program to take a SmallBasic file and display a list of all the (Standard SmallBasic) methods used.
'***BUG = changes target file, CAN CORRUPT file. (only changes last line, and adds a blank line each run)
'***Searches comments as well
Sub FindMethods
  TextWindow.WriteLine("Enter full file path c:\....\fileName.sb Or <enter> to quit")
  fileName = TextWindow.Read()
  'fileName = "C:\Users\Rick\My Programs\Small Basic\Tutorial\Challenges\2013_04\Sum SqNum less than 1000 in medGUI.sb"
  If fileName = "" Then
    TextWindow.WriteLine("empty")
    Goto bottom  'modified for run in gw
  EndIf
  
' The following line could be harmful and has been automatically commented.
'   File.AppendContents(fileName, "'xxEndxx") 'mark end of program
  While Text.IsSubText(string, "'xxEndxx") <> "True"
    lineNum = lineNum +1
' The following line could be harmful and has been automatically commented.
'     string = File.ReadLine(fileName, lineNum)
    TextWindow.WriteLine(string)
    While Text.IsSubText(string,  ".") = "true"
      dotIndex = Text.GetIndexOf(string, ".")
      string = Text.GetSubTextToEnd(string, dotIndex+1)   ' new string 1 after dot
      If Text.IsSubText(string,  "(") = "true" Then  'test for "("
        bracketIndex = Text.GetIndexOf(string, "(")
        testString = Text.GetSubText(string, 1, bracketIndex) 'test this for space
        If Text.IsSubText(testString, " ") <> "true" Then  'testing b/w start of newString and "(" for space
          method = Text.Append(testString, ")")
          TextWindow.ForegroundColor = "red"
          TextWindow.WriteLine("Line " + lineNum+": "+ method) 'list method
          TextWindow.ForegroundColor = "gray"
        EndIf
      EndIf
    EndWhile
  EndWhile
' The following line could be harmful and has been automatically commented.
'   File.WriteLine(fileName,lineNum, "")
  bottom: 'modified for run in gw
  TextWindow.Hide()
EndSub
'----------------------------------2nd level Subroutines for Sq Numbers--------------------------------
Sub SetSqNumGUI
  gw = 700
  gh = 450
  GraphicsWindow.Width = gw
  GraphicsWindow.Height = gh  
EndSub

Sub SquareNumbers
  fontTextBox()    
  addLimit = Controls.AddTextBox(270, 105)
  Controls.SetSize(addLimit, 100, 30)
  fontScreenText()
  addLimitText = Shapes.AddText("Sum of all the Square Numbers below")
  Shapes.Move(addLimitText, 10, 110)
  fontButton()
  addCalcButton = Controls.AddButton("Calculate", 380,105)
EndSub

Sub SqNumberCalc
  Shapes.HideShape(answerSumOfSquare)
  sqNum = 0
  int = 0
  sumSqNum = 0
  limit = Controls.GetTextBoxText(addLimit)
  While sqNum < limit 
    sumSqNum = sumSqNum + sqNum  ' uses last sqNum  < 1000
    sqNum = Math.Power(int, 2)  'last run returns next sqNum > 1000
    int = int + 1  
  EndWhile
  fontAnswer()
  answerSumOfSquare = Shapes.AddText("The Sum of all Square Numbers less than "+limit +" is "+sumSqNum)
  Shapes.Move(answerSumOfSquare, 10, 200)
EndSub

Sub ClearSqNumScreen
  Controls.HideControl(addLimit)
  Shapes.HideShape(addLimitText)
  Controls.HideControl(addCalcButton)
  Shapes.HideShape(answerSumOfSquare)  
EndSub

Sub fontAnswer
  GraphicsWindow.FontSize = 18
  GraphicsWindow.BrushColor = "SpringGreen"
EndSub

Sub fontScreenText
  GraphicsWindow.BrushColor = "silver"
  GraphicsWindow.FontName = "courier"
EndSub

Sub fontTextBox
  GraphicsWindow.FontSize = 15
  GraphicsWindow.FontBold = "false"
  GraphicsWindow.BrushColor = "black"
EndSub

Sub bannerTitle
  fontBannerTitle()
  title = Shapes.AddText("Calculating the Sum of Square Numbers")
  Shapes.Move(title,20,50)
EndSub

Sub fontBannerTitle
  GraphicsWindow.FontSize = 30
  GraphicsWindow.BrushColor = "SteelBlue"
EndSub

Sub fontButton
  GraphicsWindow.BrushColor = "blue"
  GraphicsWindow.FontName = "courier"
  GraphicsWindow.FontSize = 12
EndSub

Sub fillTextWindow
  TextWindow.WriteLine("While sqNum < limit")
  TextWindow.WriteLine(" sumSqNum = sumSqNum + sqNum")
  TextWindow.WriteLine(" sqNum = Math.Power(int, 2)")
  TextWindow.WriteLine(" int = int + 1 ")
  TextWindow.WriteLine("EndWhile")
  TextWindow.WriteLine("")
  TextWindow.WriteLine("For intB = 0 To limit")
  TextWindow.WriteLine(" If sqNumB >= limit Then")
  TextWindow.WriteLine("  TextWindow.WriteLine(sumSqNumB =  +(sumSqNumB-sqNumB))")
  TextWindow.WriteLine("  intB = limit + 1")
  TextWindow.WriteLine(" EndIf")
  TextWindow.WriteLine(" sqNumB = Math.Power(intB, 2)")
  TextWindow.WriteLine(" sumSqNumB = sumSqNumB + sqNumB")
  TextWindow.WriteLine("EndFor")
  TextWindow.WriteLine("")
  TextWindow.ForegroundColor = "red"
  TextWindow.Pause()
  TextWindow.Hide() 
EndSub
'----------------------------------2nd level Subroutines for Draw Flower--------------------------------
Sub DrawFlower
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "cyan"
  txt = Shapes.AddText("Chrysanthemum")
  Shapes.Zoom(txt, 1.5,1.5)
  Shapes.Move(txt, 25, gh-20)
  s = 1 'scale
  x = 0 'move 0 to centre for x & y
  y = 0
  a = 70*s
  b = 20*s
  c = 200*s
  d = 0 'init rotate angle
  GraphicsWindow.BrushColor = "white"
  For i = 2 To 20
    ellipse[i] = Shapes.AddEllipse(b,c)
    Shapes.Move(ellipse[i], ((gw/2)-(b/2))+x, ((gh/2)-(c/2))+y)
  EndFor
  GraphicsWindow.BrushColor = "yellow"
  ellipse[1] = Shapes.AddEllipse(a,a)
  Shapes.Move(ellipse[1], ((gw/2)-(a/2))+x, ((gh/2)-(a/2))+y)
  For i = 3 To 21 Step 2
    Shapes.SetOpacity(ellipse[i], 90)
  EndFor
  For i = 2 To 20
    Shapes.Rotate(ellipse[i], d)
    d = d + 10
  EndFor
EndSub 

Sub ScaleUp 
  If s < 2 Then
    s = s + 0.1
    zoom()
  Else
    ZoomMessage() '' Message is cleared in UIControl() by HideOtherShapes()
  EndIf
EndSub

Sub ScaleDown 
  If s > 0.1 Then
    s = s - 0.1    
    Zoom()
  Else
    ZoomMessage() ' Message is cleared in UIControl() by HideOtherShapes()
  EndIf
EndSub

Sub Zoom                                 
  For i = 1 To 20
    Shapes.zoom(ellipse[i], s,s)
  EndFor
EndSub

Sub ZoomMessage
  GraphicsWindow.BrushColor = "red"
  zoomTxt = Shapes.AddText("Scale Limit Reached")
  Shapes.Move(zoomTxt, gw-(95*3.5), 5+30)
  Shapes.Zoom(zoomTxt, 2,2)
  Sound.PlayBellRing()  
EndSub
'----------------------------------2nd level Subroutines for Card Game--------------------------------
Sub CardGame
  TextLogo()
  Begin()
  While beginProgram = "y"
    CreateDeck()
    Shuffle()
    BeginDealing()
    While deal = "y" And cardsRemaining > 1  'dealing
      BeginBetting()
      While cardsRemaining > 1 And bet = "r" Or bet = "b" And cardsRemaining > 1 'betting 
        PlaceBet()      
        DealCard()
        Result()
      EndWhile
      LastCard()    
    EndWhile 
    PlayAgain() 'clears Val for next shuffle
  EndWhile
  TextLogo()
  TheEnd()
EndSub

Sub Begin
  TextWindow.Title = "QuickDraw Red or Black (with card counting)"
  TextWindow.WriteLine("Welcome to QuickDraw Red or Black")
  TextWindow.Write("Press y to play ")
  beginProgram = Text.ConvertToLowerCase(TextWindow.ReadKey())
EndSub

Sub CreateDeck
  For i= 1 To 13                'create full deck
    card[i*4-3] = "bS" + i
    card[i*4-2] = "bC" + i
    card[i*4-1] = "rH" + i
    card[i*4-0] = "rD" + i
  EndFor
EndSub

Sub Shuffle
  i=1
  While i <= Array.GetItemCount(card)
    rand = Math.GetRandomNumber(Array.GetItemCount(card))
    If Array.ContainsValue(val, rand) = "False" Then    
      val[i] = rand
      shuffled[i] = card[val[i]]
      i = i+1
    EndIf
  EndWhile
EndSub

Sub BeginDealing
  deal = "y"
  cardsRemaining = 52
EndSub

Sub BeginBetting
  If cardsRemaining = 52 Then
    TextWindow.Write("Place a bet? y ")
    placeABet = Text.ConvertToLowerCase(TextWindow.ReadKey())
  Else
    TextWindow.Write("Continue betting? y ")
    placeABet = Text.ConvertToLowerCase(TextWindow.ReadKey())
  EndIf
  If placeABet = "y" And cardsRemaining > 1 Then
    bet = "r"   'to start While bet loop
  Else
    deal = "n"  'to end While deal loop
  EndIf  
EndSub

Sub PlaceBet
  bet = "n"
  TextWindow.Write("Place your Bet, r or b ") 'if  "n" then If bet in DeaLCard skips deal
  bet = TextWindow.ReadKey()
EndSub

Sub DealCard   'pick card and then get indices in the form of a new array i.e. (w/o the deleted value)
  If bet = "r" Or bet = "b" Then
    dealIndex = Math.GetRandomNumber(Array.GetItemCount(card))
    deltCard[53-Array.GetItemCount(card)] = card[dealIndex] 'WIP NEEDS RESET after 
    card[dealIndex] = ""      'remove card from Card array
    newDeck = Array.GetAllIndices(card) 'only gets indices with a value, not indices whose value is deleted  
    For j=1 To Array.GetItemCount(newDeck)
      newDeck[j] = card[newDeck[j]]   'assigns value to the newArray
    EndFor
    card = newDeck
  EndIf
EndSub

Sub Result 'show these results below 
  cardsRemaining = Array.GetItemCount(card)
  TextWindow.Clear() 
  TextWindow.WriteLine("<<Results>>")
  If Text.ConvertToLowerCase(bet) = "r" Then
    'WIP BECAREFUL DELETING TEXTWINDOW.WRITELINES buggie
    betRed = "RED"
    TextWindow.Write("You bet: ")
    TextWindow.BackgroundColor = "gray"
    TextWindow.ForegroundColor = "red"    
    TextWindow.WriteLine(betRed)   
    red = red + 1
  ElseIf Text.ConvertToLowerCase(bet) = "b" Then
    betBlack = "BLACK"
    TextWindow.Write("You bet: ")    
    TextWindow.BackgroundColor = "gray"
    TextWindow.ForegroundColor = "black"    
    TextWindow.WriteLine(betBlack)   
    black = black + 1
  EndIf  
  TextWindow.BackgroundColor = "Black"
  TextWindow.ForegroundColor = "gray"
  sumRed_Black = red + black
  TextWindow.WriteLine("Card delt: " + deltCard[sumRed_Black])  
  If Text.StartsWith(deltCard[sumRed_Black], Text.ConvertToLowerCase(bet)) = "True" Then
    TextWindow.WriteLine("You win")
  ElseIf Text.StartsWith(deltCard[sumRed_Black], Text.ConvertToLowerCase(bet)) = "False" Then
    TextWindow.WriteLine("You lose")
  EndIf  
  TextWindow.WriteLine("There's " + cardsRemaining + " cards Remaining.")
  If Text.ConvertToLowerCase(bet) = "r" Or Text.ConvertToLowerCase(bet) = "b" Then
    If Text.StartsWith(deltCard[sumRed_Black], "r") = "true" Then
      sumDeltRed = sumDeltRed +1
    Else
      sumDeltBlack = sumDeltBlack +1
    EndIf
  EndIf
  TextWindow.WriteLine("no of red delt: " +sumDeltRed)
  TextWindow.WriteLine("no of black delt: " +sumDeltBlack)
  TextWindow.WriteLine("Probability next card is Red = " +(26 - sumDeltRed)/cardsRemaining)
  TextWindow.WriteLine("Probability next card is Black = " +(26 - sumDeltBlack)/cardsRemaining)
  TextWindow.WriteLine("")
EndSub

Sub LastCard
  If cardsRemaining = 1 Then
    TextWindow.WriteLine("There's 1 card remaining")
    TextWindow.WriteLine("Place bet, double or nothing? y ")
    placeABetLastCard = Text.ConvertToLowerCase(TextWindow.ReadKey())
    If placeABetLastCard = "y" Then  'change name betLastCard
      TextWindow.WriteLine("last card is: " + card[1])
      TextWindow.Write("Place your Bet, r or b ")
      betLastCard = Text.ConvertToLowerCase(TextWindow.ReadKey())
      If Text.StartsWith(card[1], betLastCard) = "True" Then
        TextWindow.WriteLine("you win")
      Else
        TextWindow.WriteLine("you loose")
      EndIf      
    EndIf
    deal = "n"
    bet = "n"
  EndIf
EndSub

Sub PlayAgain
  TextWindow.Write("Play again y ")
  beginProgram = Text.ConvertToLowerCase(TextWindow.ReadKey())
  For i = 1 To 52   'clears Val for next shuffle
    val[i] = ""
    deltCard[i] = "" ' clears for play again
  EndFor
  red = 0
  black = 0
  sumDeltRed = 0
  sumDeltBlack = 0 
EndSub

Sub TheEnd
  TextWindow.Title = "The End"
  TextWindow.Clear()
  TextWindow.WriteLine("Goodbye")
  Program.Delay(600)
  TextWindow.Hide() 'Program.End()
EndSub

Sub TextLogo
  character[1] = "!"
  character[2] = "@"
  character[3] = "#"
  character[4] = "$"
  character[5] = "%"
  character[6] = "^"
  character[7] = "+"
  Colour[1] = "yellow"
  Colour[2] = "white"
  Colour[3] = "gray"
  Colour[4] = "red"
  Colour[5] = "Black"
  Colour[6] = "Blue"
  Colour[7] = "Cyan"
  Colour[8] = "Green"
  Colour[9] = "Magenta"
  Colour[10] = "DarkBlue"
  Colour[11] = "DarkCyan" 
  Colour[12] = "DarkGray"
  Colour[13] = "DarkGreen"
  Colour[14] = "DarkMagenta"
  Colour[15] = "DarkRed"
  Colour[16] = "DarkYellow"
  logoWord[1] = "Jibba"
  logoWord[2] = "Jabba"
  TextWindow.Clear()
  For i = 1 To 50
    TextWindow.BackgroundColor = (Colour[Math.GetRandomNumber(16)])
    TextWindow.Write(character[Math.GetRandomNumber(7)])
    Program.Delay(Math.GetRandomNumber(40))
  EndFor
  TextWindow.BackgroundColor = "black"
  TextWindow.ForegroundColor = "yellow"
  TextWindow.Write(" by " + logoWord[1] +" " + logoWord[2])
  Program.Delay(600)
  TextWindow.ForegroundColor = "gray"
  TextWindow.Clear()
EndSub

