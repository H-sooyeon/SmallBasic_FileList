GraphicsWindow.BackgroundColor ="teal
GraphicsWindow.MouseDown =mdd
os=""
mmm= LDText.Split("Generate;Run;Stop;Clear" ";")

LDDialogs.AddRightClickMenu (mmm "")
LDDialogs.RightClickMenu=rrr


ii=1

Sub mdd
  If Mouse.IsLeftButtonDown then
    s[ii]=Shapes.AddEllipse (8 8)
    Shapes.Move (s[ii] Math.Round (GraphicsWindow.MouseX/20)*20-4  Math.Round (GraphicsWindow.Mousey/20)*20-4)
    If os="" Then
    Else
      Shapes.AddLine (Shapes.GetLeft (os)+4 Shapes.GetTop (os)+4 Shapes.GetLeft (s[ii])+4 Shapes.GetTop (s[ii])+4)
      pp[ii]= LDMath.Convert2Radial (Shapes.GetLeft (os)+4 Shapes.GetTop (os)+4 Shapes.GetLeft (s[ii])+4 Shapes.GetTop (s[ii])+4)
      
    endif 
    os=s[ii]
    ii=ii+1
  EndIf 
EndSub

Sub rrr
  mi=LDDialogs.LastRightClickMenuItem 
  If mi=1 Then
    gnn="true
  elseIf mi=2 Then
    rnn="true
  elseIf mi=3 Then
    rnn="false
  elseIf mi=4 Then
    GraphicsWindow.Clear ()
    tr=0
    s=""
    ii=1
    os=""
    pp=0
  EndIf 
  
EndSub 
args=0
tr=0

While "true
  If gnn Then
    gnn="false
    y=1
    scc= LDColours.HSLtoRGB (hu 1 .6)
    hu=hu+20+Math.GetRandomNumber (30)
    For x=1 To ii-2
      
      dd=0
      ddd= pp[x+1][1]
      yy=1
      While dd<ddd-20
        cr[tr][y]= Shapes.AddRectangle (20 8)
        LDShapes.BrushColour (cr[tr][y] scc)
        Shapes.Rotate (cr[tr][y] pp[x+1][2])
        
        cc=LDMath.Convert2Cartesian (Shapes.GetLeft (s[x]) Shapes.GetTop (s[x]) 22*yy pp[x+1][2]) 
        Shapes.Move (cr[tr][y] cc[1] cc[2])
        Shapes.HideShape (cr[tr][y])
        dd=dd+22
        y=y+1
        yy=yy+1
        my[tr]=y-1
        GraphicsWindow.Title="pcs:  "+y
        
      EndWhile 
    EndFor 
    tr=tr+1
    s=""
    ii=1
    os=""
    pp=0
    
  ElseIf rnn then
    While rnn
      For trr=0 To tr-1
        t[trr]=t[trr]+1
        If t[trr]>my[trr] then
          t[trr]=1
        endif
        Shapes.ShowShape (cr[trr][t[trr]])
        Shapes.ShowShape (cr[trr][LDCall.Function ("ccc" t[trr]+1)])
        Shapes.ShowShape (cr[trr][LDCall.Function ("ccc" t[trr]+2)])
        Shapes.ShowShape (cr[trr][LDCall.Function ("ccc" t[trr]+3)])
      endfor
      Program.Delay (188)
      For trr=0 To tr
        Shapes.HideShape (cr[trr][t[trr]])
      EndFor 
      
    endwhile
  EndIf 
EndWhile 

Sub ccc
  ret=args[1]
  ' TextWindow.WriteLine (my[trr])
  If ret>my[trr] Then
    ret=Math.Remainder (ret my[trr])+1
  EndIf 
  return=ret
EndSub 
