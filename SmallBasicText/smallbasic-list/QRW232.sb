' Avatar Genarator
' Version 0.1
' Copyright Â© 2016 Nonki Takahashi.  The MIT License.

GraphicsWindow.Title = "Aavatar"
debug = "False"
size = 100
gw = 598
gh = 428
GraphicsWindow.Width = gw
GraphicsWindow.Height = gh
candidate[1] = "1=5;2=3;"
candidate[2] = "1=5;2=10;"
candidate[3] = "1=1;2=3;"
candidate[4] = "1=6;2=10;"
candidate[5] = "1=1;2=8;"
shape[1] = "type=rect;x=0;y=0;width=0.5;height=0.5;"
shape[2] = "type=rect;x=0.5;y=0;width=0.5;height=0.5;"
shape[3] = "type=rect;x=0.5;y=0.5;width=0.5;height=0.5;"
shape[4] = "type=rect;x=0;y=0.5;width=0.5;height=0.5;"
shape[5] = "type=tri;x1=0;y1=0;x2=0;y2=1;x3=1;y3=0;"
shape[6] = "type=tri;x1=0;y1=0;x2=0;y2=1;x3=0.5;y3=1;"
shape[7] = "type=tri;x1=0;y1=0;x2=0.5;y2=0;x3=0.5;y3=1;"
shape[8] = "type=tri;x1=0.5;y1=0;x2=0.5;y2=1;x3=1;y3=1;"
shape[9] = "type=tri;x1=0.5;y1=0;x2=1;y2=0;x3=1;y3=1;"
shape[10] = "type=tri;x1=1;y1=0;x2=0.5;y2=1;x3=1;y3=1;"
shape[11] = "type=tri;x1=0.5;y1=1;x2=1;y2=0;x3=1;y3=1;"
shape[12] = "type=tri;x1=0.5;y1=1;x2=1;y2=0;x3=1;y3=1;"
shape[13] = "type=tri;x1=0;y1=0;x2=1;y2=0;x3=0.5;y3=0.5;"
shape[14] = "type=tri;x1=0.5;y1=0.5;x2=0;y2=1;x3=1;y3=1;"
rotate[1] = "p=1;p2=3;angle=90;"
rotate[2] = "p=2;p2=6;angle=90;"
rotate[3] = "p=1;p2=9;angle=180;"
rotate[4] = "p=2;p2=8;angle=180;"
rotate[5] = "p=1;p2=7;angle=270;"
rotate[6] = "p=2;p2=4;angle=270;"
While "True"
  GraphicsWindow.Clear()
  DecidePattern()
  color = GraphicsWindow.GetRandomColor()
  x0 = (gw - 3 * size) / 2
  y0 = (gh - 3 * size) / 2
  cx = 0.5
  cy = 0.5
  s2 = Array.GetItemCount(shape) + 1
  For i = 1 To 6
    p = rotate[i]["p"]
    p2 = rotate[i]["p2"]
    angle = rotate[i]["angle"]
    RotatePattern()
  EndFor
  If debug Then
    For p = 1 To Array.GetItemCount(pattern)
      TextWindow.WriteLine("pattern[" + p + "]=" + pattern[p])
    EndFor
    For s = 1 To Array.GetItemCount(shape)
      TextWindow.WriteLine("shape[" + s + "]=" + shape[s])
    EndFor
  EndIf
  p = 1
  For y = y0 To y0 + 2 * size Step size
    For x = x0 To x0 + 2 * size Step size
      DrawPattern()
      p = p + 1
    EndFor
  EndFor
  Program.Delay(3000)
EndWhile
Sub DecidePattern
  n = Array.GetItemCount(candidate)
  For i = 1 To n
    indices[i] = i
  EndFor
  For p = 1 To 3
    n = Array.GetItemCount(indices)
    index = Array.GetAllIndices(indices)
    i = Math.GetRandomNumber(n)
    If p = 3 Then
      p = 5
    EndIf
    pattern[p] = candidate[index[i]]
    indices[index[i]] = ""
  EndFor
EndSub

Sub DrawPattern
  ' param p - patten number
  ' param color - fill color
  GraphicsWindow.BrushColor = color
  n = Array.GetItemCount(pattern[p])
  For s = 1 To n
    shp = shape[pattern[p][s]]
    If shp["type"] = "rect" Then
      _x = x + shp["x"] * size
      _y = y + shp["y"] * size
      _width = shp["width"] * size
      _height = shp["height"] * size
      GraphicsWindow.FillRectangle(_x, _y, _width, _height)
    ElseIf shp["type"] = "tri" Then
      _x1 = x + shp["x1"] * size
      _y1 = y + shp["y1"] * size
      _x2 = x + shp["x2"] * size
      _y2 = y + shp["y2"] * size
      _x3 = x + shp["x3"] * size
      _y3 = y + shp["y3"] * size
      GraphicsWindow.FillTriangle(_x1, _y1, _x2, _y2, _x3, _y3)
    EndIf
  EndFor
EndSub

Sub RotatePattern
  ' param p - patten number
  ' param p2 - rotated pattern
  ' param angle - rotate angle
  n = Array.GetItemCount(pattern[p])
  For s = 1 To n
    shp = shape[pattern[p][s]]
    shp2 = "type=" + shp["type"] + ";"
    If shp["type"] = "rect" Then
      If angle = 90 Then
        x = shp["x"]
        y = shp["y"] + shp["height"]
        RotatePoint()
        shp2["x"] = x
        shp2["y"] = y
        shp2["width"] = shp["height"]
        shp2["height"] = shp["width"]
      ElseIf angle = 180 Then
        x = shp["x"] + shp["width"]
        y = shp["y"] + shp["height"]
        RotatePoint()
        shp2["x"] = x
        shp2["y"] = y
        shp2["width"] = shp["width"]
        shp2["height"] = shp["height"]
      ElseIf angle = 270 Then
        x = shp["x"] + shp["width"]
        y = shp["y"]
        RotatePoint()
        shp2["x"] = x
        shp2["y"] = y
        shp2["width"] = shp["height"]
        shp2["height"] = shp["width"]
      EndIf
    ElseIf shp["type"] = "tri" Then
      x = shp["x1"]
      y = shp["y1"]
      RotatePoint()
      shp2["x1"] = x
      shp2["y1"] = y
      x = shp["x2"]
      y = shp["y2"]
      RotatePoint()
      shp2["x2"] = x
      shp2["y2"] = y
      x = shp["x3"]
      y = shp["y3"]
      RotatePoint()
      shp2["x3"] = x
      shp2["y3"] = y
    EndIf
    shape[s2] = shp2
    pattern[p2][s] = s2
    s2 = s2 + 1
  EndFor
EndSub
Sub RotatePoint
  ' param x, y - point to rotate
  ' param angle - rotate angle
  ' param cx, cy - rotate center
  ' return x, y - rotated point
  lx = x - cx
  ly = y - cy
  _a = Math.GetRadians(angle)
  x = Math.Round((Math.Cos(_a) * lx - Math.Sin(_a) * ly)*100)/100
  y = Math.Round((Math.Sin(_a) * lx + Math.Cos(_a) * ly)*100)/100
  x = x + cx
  y = y + cy
EndSub  
