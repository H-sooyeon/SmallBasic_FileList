GraphicsWindow.Title="SkyScrapers
LDUtilities.ShowNoShapeErrors="false
LDUtilities.ShowErrors="false
Shapes.AddEllipse (1,1)
GraphicsWindow.BrushColor="Black
GraphicsWindow.BackgroundColor="darkblue
fm=0

GraphicsWindow.Left =0
fc=""
xb=250
yb=90
xx=1
ss=2
GraphicsWindow.Width =1250
GraphicsWindow.Height =1000
GraphicsWindow.Top=10
sy=800
gucktheta=80/180*math.PI
guckphi=10/180*math.PI
pi=Math.pi
bw=700
bh=bw
dd=25
inn=0
drwsph()

www=1
args=0
redrw()
LDEvents.MouseWheel =mww
'-----------------------------------------------subs---------------------
Sub redrw
  
  qq=1
  cx=1
  
  GraphicsWindow.PenColor="Yellow
  GraphicsWindow.PenWidth =1
  ii=1
  
  wd=7
  hh=5
  
  
  uu=ldtext.Split ("2,3,2,1",",")
  for ax=219 To 179 step-10 
    h1=1.2 
    For py=80 To -5 Step -5
      h1=1.3+Math.GetRandomNumber (math.Abs(Math.Floor (LDMath.Cos (py)*5)+1))/10
       dboxx()
    endfor
  endfor
  
  uu=ldtext.Split ("1,4,2,1",",")
  for ax=120 To 170 step 10 
    h1=1.2 
    For py=80 To -5 Step -5
      h1=1.3+Math.GetRandomNumber (math.Abs(Math.Floor (LDMath.Cos (py)*5)+1))/10
      dboxx()
    endfor
  endfor
  
  uu=ldtext.Split ("3,4,2,3",",")
  for ax=219 To 179 step-10 
    h1=1.3
    For py=-80 To -10 Step 5
      h1=1.3+Math.GetRandomNumber (math.Abs(Math.Floor (LDMath.Cos (py)*5)+1))/10
      dboxx()
    endfor
  endfor
  
  
  uu=ldtext.Split ("3,4,1,4",",")
  for ax=120 To 170 step 10
    h1=1.3 
    For py=-80 To -10 Step 5
      h1=1.3+Math.GetRandomNumber (math.Abs(Math.Floor (LDMath.Cos (py)*5)+1))/10
      dboxx()
    endfor
  endfor
  
  
  
  
  
endsub

Sub dboxx
  dx[1]=ldcall.Function3 ("kx",1,math.GetRadians (py),math.GetRadians (ax))
  dy[1]=ldcall.Function3 ("ky",1,math.GetRadians (py),math.GetRadians (ax))
  dx[2]=ldcall.Function3 ("kx",1,math.GetRadians (py),math.GetRadians (ax-wd))
  dy[2]=ldcall.Function3 ("ky",1,math.GetRadians (py),math.GetRadians (ax-wd))
  dx[3]=ldcall.Function3 ("kx",1,math.GetRadians (py+hh),math.GetRadians (ax-wd))
  dy[3]=ldcall.Function3 ("ky",1,math.GetRadians (py+hh),math.GetRadians (ax-wd))
  dx[4]=ldcall.Function3 ("kx",1,math.GetRadians (py+hh),math.GetRadians (ax))
  dy[4]=ldcall.Function3 ("ky",1,math.GetRadians (py+hh),math.GetRadians (ax))
  
  dx1[1]=ldcall.Function3 ("kx",h1,math.GetRadians (py),math.GetRadians (ax))
  dy1[1]=ldcall.Function3 ("ky",h1,math.GetRadians (py),math.GetRadians (ax))
  dx1[2]=ldcall.Function3 ("kx",h1,math.GetRadians (py),math.GetRadians (ax-wd))
  dy1[2]=ldcall.Function3 ("ky",h1,math.GetRadians (py),math.GetRadians (ax-wd))
  dx1[3]=ldcall.Function3 ("kx",h1,math.GetRadians (py+hh),math.GetRadians (ax-wd))
  dy1[3]=ldcall.Function3 ("ky",h1,math.GetRadians (py+hh),math.GetRadians (ax-wd))
  dx1[4]=ldcall.Function3 ("kx",h1,math.GetRadians (py+hh),math.GetRadians (ax))
  dy1[4]=ldcall.Function3 ("ky",h1,math.GetRadians (py+hh),math.GetRadians (ax))
  
  For zz=1 To 2 
    u3=uu[zz*2-1]
    u4=uu[zz*2]
    pp[1][1]=dx[u3]
    pp[1][2]=dy[u3]
    pp[2][1]=dx1[u3]
    pp[2][2]=dy1[u3]
    pp[3][1]=dx1[u4]
    pp[3][2]=dy1[u4]
    pp[4][1]=dx[u4]
    pp[4][2]=dy[u4]
    ww[ii]=LDShapes .AddPolygon  (pp)
    LDShapes.PenWidth (ww[ii],0)
    LDShapes.BrushColour (ww[ii],LDColours.HSLtoRGB ((ax-120)*2,0.4,0.4+zz/15))
    ii=ii+1
  endfor
  
  pp[1][1]=dx1[4]
  pp[1][2]=dy1[4]
  pp[2][1]=dx1[3]
  pp[2][2]=dy1[3]
  pp[3][1]=dx1[2]
  pp[3][2]=dy1[2]
  pp[4][1]=dx1[1]
  pp[4][2]=dy1[1]
  
  ww[ii]=LDShapes .AddPolygon  (pp)
  LDShapes.PenWidth (ww[ii],0)
  LDShapes.BrushColour (ww[ii],LDColours.HSLtoRGB (30,0.4,math.Abs(ldmath.cos (py)/3)))
  ii=ii+1
endsub



Sub mww
  www=math.Remainder (www+ LDEvents.LastMouseWheelDelta,ii-1)
  If www<0 Then 
    www=ii-2
  endif
  Shapes.SetOpacity (ww[ow],50)
  LDShapes.PenWidth (ww[ow],0)
  Shapes.SetOpacity (ww[www+1],99)
  LDShapes.PenWidth (ww[www+1],1)
  LDShapes.PenColour (ww[www+1],"red")
  
  ow=www+1
EndSub 

Sub drwsph
  GraphicsWindow.PenWidth =1
  GraphicsWindow.PenColor =LDColours.HSLtoRGB (220,1,0.5)
  GraphicsWindow.PenWidth =2
  for i=90 to 270 step 10'------------------------meridians(x)
    ir= math.GetRadians (i)  
    ir1= math.GetRadians (i-10)  
    for j=-80 to 80 step 10'--------------------paralelles (y)
      jr= math.GetRadians (j)
      jr1= math.GetRadians (j-10)
      shapes.AddLine (  ldcall.Function3 ("kx",1,jr,ir), ldcall.Function3 ("ky",1,jr,ir), ldcall.Function3 ("kx",1,jr1,ir), ldcall.Function3 ("ky",1,jr1,ir))
      shapes.AddLine (  ldcall.Function3 ("kx",1,jr,ir1), ldcall.Function3 ("ky",1,jr,ir1), ldcall.Function3 ("kx",1,jr,ir), ldcall.Function3 ("ky",1,jr,ir ))
    endfor
  endfor
endsub

sub f'(x)
  qx=args[1]
  RETURN =ldmath.SIN(qx*6)*20-50
EndSub 

sub kx'(r,theta,phi)
  qr=args[1]
  theta=args[2]
  phi=args[3]
  qx=qr*math.cos(theta)*math.cos(phi)
  qy=qr*math.cos(theta)*math.sin(phi)
  qz=qr*math.sin(theta)
  qx=math.sin(guckphi)*qx+math.cos(guckphi)*qy
  RETURN= bw/2+qx*bw/2+dd+xb
ENDsub

sub ky'(r,theta,phi)
  qr=args[1]
  theta=args[2]
  phi=args[3]  
  qx=qr*math.cos(theta)*math.cos(phi)
  qy=qr*math.cos(theta)*math.sin(phi)
  qz=qr*math.sin(theta)
  qy=math.cos(guckphi)*qx-math.sin(guckphi)*qy
  qz=math.cos(gucktheta)*qy-math.sin(gucktheta)*qz
  RETURN= bh/2-qz*bh/2+dd+yb
ENDsub
