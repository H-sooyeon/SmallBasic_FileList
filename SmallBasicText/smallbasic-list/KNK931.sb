'There are 8 colors, but you can add as many as you like.

'Choose a color by clicking on it in the Color Palette



GraphicsWindow.MouseDown = OnMouseDown

GraphicsWindow.MouseMove = OnMouseMove

GraphicsWindow.KeyDown = OnKeyDown

GraphicsWindow.MouseUp = OnMouseUp

GraphicsWindow.KeyUp = OnKeyUp



' Serdan: The color array should be defined before creating the color boxes.



Colors = "1=Red;2=White;3=Blue;4=Green;5=Purple;6=Yellow;7=Orange;8=DarkBlue" 

Color_Amount = Array.GetItemCount(Colors)

Title_Bar_Height = 20



Color_Palette_X = 50

Color_Palette_Y = 50



'Dudeson: We have to find a way to automatically assign the horizontal and vertical box amounts based on the color_amount...

Box_Amount_Horizontal = 2

Box_Amount_Vertical = 4

Box_Amount = Box_Amount_Horizontal * Box_Amount_Vertical

Box_Width = 20

Box_Height = 20

AddColorPalette()

Penwidth = 4



GraphicsWindow.BackgroundColor = "Black"

GraphicsWindow.PenColor = "White"

GraphicsWindow.PenWidth = Penwidth

GraphicsWindow.BrushColor = GraphicsWindow.PenColor



Sub OnKeyDown

  key = GraphicsWindow.LastKey

  

  if (key = "LeftShift") Then

    Shift = 1

  ElseIf (key = "LeftCtrl") Then

    prevX = GraphicsWindow.MouseX

    prevY = GraphicsWindow.MouseY

  endif 

EndSub



Sub OnKeyUp

  key = GraphicsWindow.LastKey

  

  If (key = "LeftShift") Then

    Shift = 0

    Shift_Pressed = 0

  endif

EndSub



'Dudeson: This here can be deleted, right?

Sub OnMouseDown

  'prevX = GraphicsWindow.MouseX

  'prevY = GraphicsWindow.MouseY

EndSub



' Serdan: Check for collision with the color boxes and change brush and pen color accordingly.

Sub OnMouseUp

  For i = 1 To Box_Amount

    If (Mouse_X > Box_X[i] And Mouse_X < Box_X[i] + Box_Width And Mouse_Y > Box_Y[i] And Mouse_Y < Box_Y[i] + Box_Height) Then

      'Dudeson: I removed the text append function, because we dont need the keyboard for changing the colors anymore.

      GraphicsWindow.PenColor = Colors[i]

      GraphicsWindow.BrushColor = GraphicsWindow.PenColor

      i = Box_Amount

    EndIf

  EndFor

  UpdateRectangles()

EndSub



Sub OnMouseMove

  Mouse_X = GraphicsWindow.MouseX

  Mouse_Y = GraphicsWindow.MouseY

  

  If Shift = 1 then

    If Shift_Pressed = 0 then

      Shift_X = Mouse_X

      Shift_Y = Mouse_Y

      Brush = Shapes.AddEllipse(50,50)

      Shapes.Move(Brush,Shift_X-25,Shift_Y-25)

      Shift_Pressed = 1

    endif

    Penwidth = Math.SquareRoot((Mouse_X - Shift_X) * (Mouse_X - Shift_X) + (Mouse_Y - Shift_Y) * (Mouse_Y - Shift_Y))*2

    If Penwidth = 0 then

      Penwidth = 1

    endif

    Shapes.Zoom(Brush,50*(50/Penwidth),50*(50/Penwidth))

    GraphicsWindow.PenWidth = Penwidth

  Else

    Shapes.Remove(Brush)

  endif

  

  If (Mouse.IsLeftButtonDown) then

    If (Mouse_X > Color_Palette_X And Mouse_X < Color_Palette_X + Box_Width*Box_Amount_Horizontal And Mouse_Y > Color_Palette_Y And Mouse_Y < Color_Palette_Y + Title_Bar_Height) Then

      Color_Palette_X = Mouse_X - 10

      Color_Palette_Y= Mouse_Y - 10

      UpdateRectangles()

    EndIf

    GraphicsWindow.FillEllipse(prevX-Penwidth/2,prevY-Penwidth/2,Penwidth,Penwidth) ' This here is for getting rid of the corners in the lines.

    GraphicsWindow.DrawLine(prevX, prevY, Mouse_X, Mouse_Y)

  endif

  prevX = Mouse_X

  prevY = Mouse_Y

EndSub



Sub AddColorPalette

  GraphicsWindow.BrushColor = "Gray"

  GraphicsWindow.PenColor = "LightGray"

  Color_Palette = Shapes.AddRectangle(Box_Amount_Horizontal * Box_Width,Box_Amount_Vertical * Box_Height + Title_Bar_Height)

  Shapes.Move(Color_Palette, Color_Palette_X, Color_Palette_Y)

  

  For i = 1 To Box_Amount_Vertical

    For j = 1 To Box_Amount_Horizontal

      Box_Number = Box_Number + 1

      BoxPos_X[Box_Number] = j * Box_Width - Box_Width

      BoxPos_Y[Box_Number] = i * Box_Height - Box_Height + Title_Bar_Height

      

      ' Serdan: Get color from the color array.

      GraphicsWindow.BrushColor = Colors[Box_Number]

      

      Box[Box_Number] = Shapes.AddRectangle(Box_Width,Box_Height)

      Shapes.Move(Box[Box_Number],BoxPos_X[Box_Number],BoxPos_Y[Box_Number])

    endfor

  endfor

  UpdateRectangles()

endsub



Sub UpdateRectangles

  For i = 1 To Box_Amount

    ' Serdan: Remember box positions for collision detection.

    

    Box_X[i] = BoxPos_X[i] + Color_Palette_X

    Box_Y[i] = BoxPos_Y[i] + Color_Palette_Y

    

    Shapes.Move(Box[i], Box_X[i], Box_Y[i])

  endfor

  Shapes.Move(Color_Palette, Color_Palette_X, Color_Palette_Y)

endsub






