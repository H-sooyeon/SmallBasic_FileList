Sub init
  not="true=false;false=true
  LDGraphicsWindow.TransparentGW()
  insm="true
  mm["File"]="Main
  mm["New"]="File
  mm["Open"]="File
  mm["OpenDfs"]="File
  mm["Save"]="File
  mm["-"]="File
  mm["Exit"]="File
  mm["Edit"]="Main
  mm["Replace"]="Edit
  mm["List"]="Edit
  mm["ListDfs"]="Edit
  ch["ListDfs"]="false
  mm["AutoLinNr"]="Edit
  ch["AutoLinNr"]="true
  mm["UnMute"]="Edit
  ch["UnMute"]="true
  mm["Run"]="Main
  mm["Start"]="Run
  mm["Stop"]="Run
  
  sf=1.25
  GraphicsWindow.Left=5
  GraphicsWindow.top=5
  LDGraphicsWindow.TopMost="true
  Timer.Interval=250
  Timer.Tick=ttt
  TextWindow.Left=5
  TextWindow.Top=5
  
  ms=LDControls.AddMenu(500 30 mm "" ch)
  LDShapes.BrushColour(ms "SandyBrown")
  LDShapes.PenColour(ms "black")
  LDControls.MenuClicked=mcc
  LDControls.MenuBackground(ms "gold")
  TextWindow.BackgroundColor="darkblue
  TextWindow.Clear()
  TextWindow.Title="QBasic Editor
  LDTextWindow.SetColour(7 "#aaaaaa")
  TextWindow.ForegroundColor=7
  'TextWindow.WriteLine("Edit:")
  LDTextWindow.KeyDown=kkk
  LDTextWindow.Keyup=kuu
  not="false=true;true=false
  cps="false
  
  ldTextWindow.Encoding="Unicode
  
  'TextWindow.Write("░▒▓█┌─┐│┼┴┬┤├└┘")
  mem=LDFastArray.add()
  For wy=1 To 200
    For wx=1 To 160
      LDFastArray.set2D(mem wx wy " ")
    EndFor
  EndFor
  
  If LDControls.MenuChecked(ms "Autolinnr") Then
    lll=lll+10
    ldcall.function("twrt" lll+":")
  EndIf
EndSub
nnn=Text.GetCharacter(13)+Text.GetCharacter(10)
ttb=Text.GetCharacter(9)
args=0
init()

Sub wsetup
  If www="true" Then
  Else
    GraphicsWindow.Width=600
    GraphicsWindow.Height=400
    www="true
    GraphicsWindow.BrushColor="tan
    GraphicsWindow.FillRectangle(0 0 GraphicsWindow.Width GraphicsWindow.Height)
    GraphicsWindow.Show()
    GraphicsWindow.BackgroundColor="tan
  EndIf
EndSub

While 1=1'---------------mainloop===============
  If rnn Then
    TextWindow.Title="running >>>
    Timer.Pause()
    GraphicsWindow.Hide()
    indd="true
    arrmk()
    arr=LDText.Replace(arr "?" "print ")
    TextWindow.Clear()
    pl=LDText.Split(arr nnn)
    ln=1
    dfmk()
    For gg=1 To Array.GetItemCount(pl)'----------make gotolbl index-------
      li=LDText.Split(text.ConvertToLowerCase(pl[gg]) ":")
      pl[gg]=LDText.Replace(pl[gg] "msin" "Math.sin")
      For qq=1 To Array.GetItemCount(arrd)
        pl[gg]=LDText.Replace(pl[gg] arrd[qq][1] arrd[qq][2])
      EndFor
      
      gtt[li[1]]=gg
    EndFor
    'GraphicsWindow.ShowMessage(pl "")
    'TextWindow.WriteLine(gtt)
    While ln<=Array.GetItemCount(pl)'--------main run loop-------==================
      li=LDText.Split((pl[ln]) ":")
      
      For mi=2 To Array.GetItemCount(li)
        vi=LDText.Split(ldtext.replace(li[mi] "=" " = ") " ")
        vi[1]=text.ConvertToLowerCase(vi[1])
        If vi[2]="=" Then
          vi[2]=vi[1]
          vi[1]="set"
        EndIf
        
        If Text.StartsWith(vi[1]     "inpu") Then
          varr[vi[2]]=fcDialogs.AskForTextLine(vi[3])
          
        ElseIf Text.StartsWith(vi[1] "paus") Then
          Program.Delay(vi[2])
          
        ElseIf Text.StartsWith(vi[1] "sptr") Then
          memm[varr[vi[2]]]=varr[vi[3]]
          ' GraphicsWindow.ShowMessage(memm "")
          
        ElseIf Text.StartsWith(vi[1] "gosub") Then
          Stack.PushValue("gss" ln+1)
          ln=gtt[vi[2]]
          
          Goto ccc
          
        ElseIf Text.StartsWith(vi[1] "ret") Then
          If Stack.GetCount("gss")>0 Then
            ln=Stack.PopValue("gss")
            Goto ccc
          Else
            fcDialogs.ShowMessageAsError("ret w/o gosub on #"+ln+":"+gtt[ln])
          EndIf
          
        ElseIf Text.StartsWith(vi[1] "cp") or Text.StartsWith(vi[1] "cmp") Then
          oa=varr["a"]
          oa=oa-vi[2]
          If oa=0 Then
            zff="true
          Else
            zff="false
          EndIf
          
        ElseIf Text.StartsWith(vi[1] "push") Then
          Stack.PushValue("reg"  varr[vi[2]])
          
        ElseIf Text.StartsWith(vi[1] "pop") and Stack.GetCount("reg")>0 Then
          varr[vi[2]]=Stack.PopValue("reg")
          
        ElseIf Text.StartsWith(vi[1] "add") Then
          varr[vi[2]]=varr[vi[2]]+varr[vi[3]]
          
        ElseIf Text.StartsWith(vi[1] "sub") Then
          varr[vi[2]]=varr[vi[2]]-varr[vi[3]]
          
        ElseIf Text.StartsWith(vi[1] "schr") Then
          TextWindow.Write(Text.GetCharacter(ldcall.Function("eptr" vi[2])))
          
        ElseIf Text.StartsWith(vi[1] "inc") Then
          ii=vi[3]
          If ii=0 or ii="" Then
            ii=1
          EndIf
          varr[vi[2]]=varr[vi[2]]+ii
          
        ElseIf Text.StartsWith(vi[1] "dec") Then
          ii=vi[3]
          If ii=0 or ii="" Then
            ii=1
          EndIf
          varr[vi[2]]=varr[vi[2]]-ii
          
        ElseIf Text.StartsWith(vi[1] "djnz") Then
          varr["bc"]=varr["bc"]-1
          If varr["bc"]>0 Then
            ln=gtt[vi[2]]
            Goto ccc
          EndIf
        ElseIf Text.StartsWith(vi[1] "jpz") and zff Then
          ln=gtt[vi[2]]
          Goto ccc
          
        ElseIf Text.StartsWith(vi[1] "jpnz") and not[zff] Then
          ln=gtt[vi[2]]
          Goto ccc
          
        ElseIf Text.StartsWith(vi[1] "goto") Then
          ln=gtt[vi[2]]
          Goto ccc
          
        ElseIf Text.StartsWith(vi[1] "if") Then
          If LDMath.Evaluate3( LDCall.Function("wset" vi[2])) Then
            ln=gtt[vi[3]]
          Else
            ln=gtt[vi[4]]
          EndIf
          Goto ccc
          
        ElseIf Text.StartsWith(vi[1] "plot") Then
          wsetup()
          GraphicsWindow.SetPixel(LDMath.Evaluate2(LDCall.Function("wset" vi[2])+"+0") LDMath.Evaluate2(LDCall.Function("wset" vi[3])+"+0") vi[4])
        ElseIf Text.StartsWith(vi[1] "set")or Text.StartsWith(vi[1] "ld") or (vi[1]= "mov") Then
          varr[vi[2]]=LDMath.Evaluate2(LDCall.Function("wset" vi[3])+"+0")
          
        ElseIf Text.StartsWith(vi[1] "@pri") Then
          TextWindow.CursorLeft=vi[3]
          TextWindow.CursorTop=vi[4]
          Goto pp
          
        ElseIf Text.StartsWith(vi[1] "prin") Then
          pp:
          TextWindow.Write(ldtext.Replace(ldtext.Replace(ldtext.Replace(ldtext.Replace( LDCall.Function("numm" LDCall.Function("wset" vi[2])) "\n" nnn)"\t" ttb) "[" " = " )"\s" " "))
          
        EndIf
        
      EndFor
      ln=ln+1
      ccc:
    EndWhile
    TextWindow.Title="ok
    GraphicsWindow.ShowMessage("OK Done." "QBasic")
    GraphicsWindow.Show()
    www="false
    GraphicsWindow.Height=25
    GraphicsWindow.Width=300
    Timer.Resume()
    plist()
    rnn="false
    indd=rnn
  EndIf
  
EndWhile

Sub numm
  If FCExtensions.IsNumber(args[1]) Then
    return=LDMath.FixDecimal(args[1] 4)
  Else
    return=(args[1])
  EndIf
  
EndSub

Sub plist
  TextWindow.Clear()
  arrmk()
  arr=LDText.Replace(arr "?" "Print ")
  arr2mm()
  mwrt()
  TextWindow.CursorLeft=0
  TextWindow.CursorTop=1
EndSub

Sub wset
  ii=args[1]
  ac=Array.GetAllIndices(varr)
  For rt=1 To Array.GetItemCount(ac)
    ii=LDText.Replace(ii "#"+ac[rt] varr[ac[rt]])
  EndFor
  
  return=ii
EndSub

Sub eptr
  If Text.StartsWith(args[1] "$") Then
    return=memm[varr[text.GetSubTextToEnd( args[1] 2)]]
  Else
    return=args[1]
  EndIf
EndSub

Sub arrmk'---------------create array from edits
  arr=""
  For wy=1 To 200
    al=""
    For wx=1 To 158
      al=Text.Append(al LDFastArray.get2D(mem wx wy))
    EndFor
    arr=Text.Append(arr  al+nnn)
  EndFor
EndSub

Sub dfmk'---------------create array from defines
  arrd=""
  For wy=1 To 50
    al=""
    For wx=1 To 158
      al=Text.Append(al LDFastArray.get2D(memd wx wy))
    EndFor
    al=LDText.Trim(al)
    arrd[wy]=LDText.Split(al ":")
  EndFor
  ' GraphicsWindow.ShowMessage(arrd "")
EndSub

Sub arr2mm'--------------fastarray recreate
  in=0
  For wy=1 To 200
    For wx=1 To 158
      in=in+1
      LDFastArray.set2D(mem wx wy text.GetSubText(arr in 1))
    EndFor
    While text.GetCharacterCode(text.GetSubText(arr in 1))>31
      in=in+1
    EndWhile
    in=in+1
  EndFor
EndSub

Sub memdel
  For wy=1 To 200
    For wx=1 To 158
      LDFastArray.set2D(mem wx wy " ")
    EndFor
  EndFor
EndSub

Sub loadmem
  ca=LDText.Split(cc nnn)
  memdel()
  For wy=1 To Array.GetItemCount(ca)
    For fx=1 To Text.GetLength(ca[wy])
      LDFastArray.set2D(mem fx wy text.GetSubText(ca[wy] fx 1))
    EndFor
  EndFor
EndSub

Sub twrt'----------------memo&shw input
  px=TextWindow.CursorLeft+1
  py=TextWindow.CursorTop+1
  txx=args[1]
  If insm Then
    rr=""
    For tq=158 To px-1 Step -1
      ch=LDFastArray.get2D(mem tq py)
      LDFastArray.Set2D(mem tq+1 py ch)
      rr=text.Append(ch rr)
    EndFor
    TextWindow.Write(rr)
    TextWindow.CursorLeft=px-1
    Goto qss
  Else
    qss:
    For rw=1 To Text.GetLength(txx)
      LDFastArray.Set2D(mem px+rw-1 py Text.GetSubText(txx rw 1))
    EndFor
    TextWindow.Write(txx)
  EndIf
EndSub

Sub mcc'-----------------menu handling----------------
  ii=text.ConvertToLowerCase( LDControls.LastMenuItem)
  If ii="new" Then
    TextWindow.Clear()
    
  ElseIf ii="unmute" Then
    indd=not[LDControls.MenuChecked(ms "UnMute")]
    
  ElseIf ii="start" Then
    rnn="true
    
  ElseIf ii="stop" Then
    rnn="false
    
  ElseIf ii="exit" Then
    Program.End()
    
  ElseIf ii="list" Then
    plist()
    
  ElseIf ii="replace" Then
    indd="true
    tf=FCDialogs.AskForTextLine("text to fnd:")
    If tf="" Then
    Else
      tr=FCDialogs.AskForTextLine("text to replace:")
      arrmk()
      arr=LDText.Replace(arr tf tr)
      ' GraphicsWindow.ShowMessage(arr "")
      arr2mm()
      TextWindow.Clear()
      mwrt()
    EndIf
    indd="false
    
  ElseIf ii="save" Then
    indd="true
    ff=LDDialogs.saveFile("1=txt;2=bas;3=sb;4=itt" "e:\")
    mw=LDFastArray.ToArray(mem)
    
' The following line could be harmful and has been automatically commented.
'     File.WriteContents(ff mw)
    indd="false
    
  ElseIf ii="open" Then
    indd="true
    ff=LDDialogs.OpenFile("1=txt;2=bas;3=sb;4=itt" "e:\")
    
' The following line could be harmful and has been automatically commented.
'     If LDFile.Exists(ff) Then
      
' The following line could be harmful and has been automatically commented.
'       cc=File.ReadContents(ff)
      TextWindow.Clear()
      If Text.IsSubText(ff ".itt") Then
        mem=LDFastArray.CreateFromValues(cc)
        mwrt()
      Else
        loadmem()
        mwrt()
      EndIf
      indd="false
      TextWindow.Title=ff
    EndIf
  ElseIf ii="opendfs" Then
    indd="true
    ff=LDDialogs.OpenFile("1=itt;2=dff" "e:\")
' The following line could be harmful and has been automatically commented.
'     If LDFile.Exists(ff) Then
      
' The following line could be harmful and has been automatically commented.
'       cc=File.ReadContents(ff)
      TextWindow.Clear()
      
      memd=LDFastArray.CreateFromValues(cc)
      mwrt()
    EndIf
    indd="False
  EndIf
  
  'TextWindow.Title=ii
EndSub

Sub mwrt'----------------list cmd
  If LDControls.MenuChecked(ms "listdfs") Then
    p50=50
  Else
    p50=0
  EndIf
  
  For wy=1 To 200
    For wx=1 To 158
      TextWindow.CursorLeft=wx-1
      TextWindow.CursorTop=wy-1+p50
      TextWindow.Write(LDFastArray.Get2D(mem wx wy))
    EndFor
  EndFor
  If LDControls.MenuChecked(ms "listdfs") Then
    TextWindow.CursorLeft=0
    TextWindow.CursorTop=0
    TextWindow.Write("#defines:")
    For wy=1 To 50
      For wx=1 To 158
        TextWindow.CursorLeft=wx-1
        TextWindow.CursorTop=wy
        TextWindow.Write(LDFastArray.Get2D(memd wx wy))
      EndFor
    EndFor
  EndIf
  TextWindow.CursorLeft=0
  TextWindow.CursorTop=p50
EndSub

Sub ttt'-----------------Timer
  GraphicsWindow.Left=TextWindow.Left/sf+35
  GraphicsWindow.Top=TextWindow.Top/sf
EndSub

Sub kuu'-----------------kyup
  lky=text.ConvertToLowerCase( LDTextWindow.LastKey)
  If  Text.EndsWith(lky "iftkey") and not[cps] Then
    shh="false
  EndIf
  
EndSub

Sub kkk'-----------------keybrd-handling----------
  If indd Then
  Else
    lk=text.ConvertToLowerCase( LDTextWindow.LastKey)
    'TextWindow.WriteLine(lk)
    ' TextWindow.Title=lk
    If lk="return" Then
      'TextWindow.WriteLine("")
      TextWindow.CursorLeft=0
      TextWindow.CursorTop=TextWindow.CursorTop+1
      If LDControls.MenuChecked(ms "Autolinnr") Then
        lll=lll+10
        ldcall.function("twrt" lll+":")
      EndIf
      
    ElseIf lk="left" Then
      If  TextWindow.CursorLeft>0 Then
        TextWindow.CursorLeft=TextWindow.CursorLeft-1
      EndIf
      
      ElseIf lk="delete" Then
      dell:
      px=TextWindow.CursorLeft+1
      py=TextWindow.CursorTop+1
      rr=""
      For tq= px to 158 
        ch=LDFastArray.get2D(mem tq+1 py)
        LDFastArray.Set2D(mem tq py ch)
        rr=text.Append(rr ch)
      EndFor
      LDFastArray.Set2D(mem 159 py " ")     
       LDFastArray.Set2D(mem 160 py " ")
      rr=rr+"  "
      TextWindow.Write(rr)
      TextWindow.CursorLeft=px-1
      TextWindow.CursorTop=py-1
      
    ElseIf lk="insert" Then
      insm=not[insm]
      
    ElseIf lk="oemtilde" Then
      If shh Then
        
        ldcall.function("twrt" "@")
      Else
        ldcall.function("twrt" "#")
      EndIf
      
    ElseIf lk="tab" Then
      ldcall.function("twrt" ttb)
      
    ElseIf lk="oem5" Then
      ldcall.function("twrt" "\")
      
    ElseIf lk="oem7" Then
      ldcall.function("twrt" "'")
      
    ElseIf lk="oemplus" Then
      ldcall.function("twrt" "=")
      
    ElseIf lk="down" Then
      TextWindow.CursorTop=TextWindow.CursorTop+1
      
    ElseIf lk="up" Then
      If TextWindow.CursorTop>0 Then
        TextWindow.CursorTop=TextWindow.CursorTop-1
      EndIf
    ElseIf lk="right" Then
      TextWindow.CursorLeft=TextWindow.CursorLeft+1
    ElseIf Text.EndsWith(lk "iftkey") Then
      shh="true
      
    ElseIf Text.EndsWith(lk "uestion") Then
      If shh Then
        ldcall.function("twrt" "?")
      Else
        ldcall.function("twrt" "/")
      EndIf
      
    ElseIf Text.EndsWith(lk "kets") Then
      If shh Then
        ldcall.function("twrt" "[")
      Else
        ldcall.function("twrt" "(")
      EndIf
      
    ElseIf Text.EndsWith(lk "em6") Then
      If shh Then
        ldcall.function("twrt" "]")
      Else
        ldcall.function("twrt" ")")
      EndIf
      
    ElseIf Text.EndsWith(lk "em1") Then
      If shh Then
        ldcall.function("twrt" ";")
      Else
        ldcall.function("twrt" ":")
      EndIf
      
    ElseIf Text.EndsWith(lk "omma") Then
      If shh Then
        ldcall.function("twrt" "<")
      Else
        ldcall.function("twrt" ",")
      EndIf
      
    ElseIf Text.EndsWith(lk "iod") Then
      If shh Then
        ldcall.function("twrt" ">")
      Else
        ldcall.function("twrt" ".")
      EndIf
      
    ElseIf Text.EndsWith(lk "pital") Then
      
      cps=not[cps]
      If CPS Then
        shh="true
      Else
        shh="false
      EndIf
      
    ElseIf lk="space" Then
      ldcall.function("twrt" " ")
      'TextWindow.CursorLeft=TextWindow.CursorLeft-1
      
    ElseIf lk="add" Then
      ldcall.function("twrt" "+")
    ElseIf lk="subtract" Then
      ldcall.function("twrt" "-")
    ElseIf lk="multiply" Then
      ldcall.function("twrt" "*")
    ElseIf lk="divide" Then
      ldcall.function("twrt" "/")
      ElseIf lk="back" Then
      if insm and TextWindow.CursorLeft>0 Then
        TextWindow.CursorLeft=TextWindow.CursorLeft-1
        goto dell
      elseIf TextWindow.CursorLeft>0 Then
        TextWindow.CursorLeft=TextWindow.CursorLeft-1
        ldcall.function("twrt" " ")
        TextWindow.CursorLeft=TextWindow.CursorLeft-1
      EndIf
    Else
      If shh Then
        If lk="d1" Then
          ldcall.function("twrt" "$")
        Else
          ldcall.function("twrt" text.ConvertToUpperCase( Text.GetSubTextToEnd(lk Text.GetLength(lk))))
        EndIf
      Else
        ldcall.function2("twrt" Text.GetSubTextToEnd(lk Text.GetLength(lk)) insm)
      EndIf
      '  ldcall.function("twrt" "<")
      '  TextWindow.CursorLeft=TextWindow.CursorLeft-1
    EndIf
  EndIf
EndSub
