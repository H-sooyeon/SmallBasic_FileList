'N-Random-Walk v2.2 | non-interacting particles moving on the XY-plane | WWT307

' Nuno.Pereira | nsapereira@hotmail.com | Nov.2009 | with suggestions from litdev

' Random step size



SetGlobalVariables()

SetTextWindow()

DefineSystem()



If (InitialDistribution = 1) then

    CreatePlanar()

    Caption_Distribution = "Square"

  else

    CreateGlobular()

    Caption_Distribution = "Globular"

Endif



SetGraphicsWindow()



While (FlagRun = 1)

  For k = 1 To Nparticles

    xlast = x[k]

    ylast = y[k]

    GetDirection()

    x[k] = x[k] + walk_step * dx * Math.GetRandomNumber(walk_step)

    y[k] = y[k] + walk_step * dy * Math.GetRandomNumber(walk_step)

    GraphicsWindow.DrawLine(xlast,ylast,x[k],y[k])

    Shapes.Move(particle[k], x[k] - radius, y[k] - radius)

  EndFor

  CheckBorder()

  Program.Delay(30)

EndWhile



Sub GetDirection

  alfa = Math.GetRadians(Math.GetRandomNumber(360))

  dx = Math.Cos(alfa)

  dy = Math.Sin(alfa)

EndSub



Sub SetGlobalVariables

  FlagRun = 1

  radius = 6

  scale = 100

  gw_width = 640

  gw_height = 400

  averageDim = (gw_height + gw_width) / 2

  walk_step = averageDim / scale

  win_title = "N-Random Walk | Closed Universe (v2.2)"

EndSub



Sub SetTextWindow

  TextWindow.Title = win_title

EndSub



Sub DefineSystem

  TextWindow.Write("Input number of particles:")

  Nparticles = TextWindow.Read()

  While (InitialDistribution <> 0 and InitialDistribution <> 1)

    TextWindow.Write("Globular Cluster [0] / Planar [1]:")

    InitialDistribution = TextWindow.Read()

  EndWhile

EndSub



Sub SetGraphicsWindow 

  GraphicsWindow.BackgroundColor = "Black"

  GraphicsWindow.BrushColor = "SteelBlue"

  GraphicsWindow.PenColor = "#11ffffff"

  GraphicsWindow.PenWidth = 1

  GraphicsWindow.Width = gw_width

  GraphicsWindow.Height = gw_height

  GraphicsWindow.Title = win_title

  GraphicsWindow.DrawText(10,gw_height - 20, "Non-interacting particles | Initial distribution: " + Caption_Distribution)

EndSub



Sub CreateGlobular

  xo = gw_width / 2

  yo = gw_height / 2

  Rmax = averageDim * Math.Log(Nparticles) / Nparticles

  For k = 1 to Nparticles

    particle[k] = Shapes.AddEllipse(radius, radius)

    r = Math.GetRandomNumber(Rmax)

    alfa = Math.GetRadians(Math.GetRandomNumber(360))

    x[k] = xo + r * Math.Cos(alfa)

    y[k] = yo + r * Math.Sin(alfa)

  EndFor

EndSub



Sub CreatePlanar

  For k = 1 to Nparticles

    particle[k] = Shapes.AddEllipse(radius, radius)

    x[k] = Math.GetRandomNumber(gw_width - radius)

    y[k] = Math.GetRandomNumber(gw_height -radius)

  EndFor

EndSub



Sub CheckBorder

  For k=1 To Nparticles

    If ( x[k] > gw_width) Then

      x[k] = 0

    EndIf

    If ( y[k] > gw_height) Then

      y[k] = 0

    EndIf

      If ( x[k] < 0) Then

        x[k] = gw_width

    EndIf

    If ( y[k] < 0) Then

        y[k] = gw_height

    EndIf

  EndFor

EndSub






