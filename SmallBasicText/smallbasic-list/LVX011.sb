Ball_Diameter = 40

GraphicsWindow.Title = "Bouncing Balls"

Run = 0

GraphicsWindow.MouseDown = MouseDown

Controls.ButtonClicked = Init

GraphicsWindow.BrushColor = "Black"

GraphicsWindow.FontSize = 40

GraphicsWindow.DrawText(5,5,"Enter Initial amount of balls")

GraphicsWindow.FontSize = 100

textbox = Controls.AddTextBox(40,100)

Controls.SetSize(textbox, GraphicsWindow.Width - 80,130)

button = Controls.AddButton("Start",40,250)

Controls.SetSize(button , GraphicsWindow.Width - 80,130)

Sub Init

  Ball_Number = Controls.GetTextBoxText(textbox)

  GraphicsWindow.Clear()

  GraphicsWindow.FontSize = 14

  GraphicsWindow.DrawText(5,5,"To add a ball, Left Click.")

  GraphicsWindow.DrawText(5,25,"To remove a ball, Right Click.")

  BallText = Shapes.AddText("Number of balls: " + Ball_Number)

  Shapes.Move(balltext,5,45)

  For i = 1 To Ball_Number

    GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()

    Ball[i] = Shapes.AddEllipse(Ball_Diameter, Ball_Diameter)  

    Ball_X[i] = (Math.GetRandomNumber(GraphicsWindow.Width - Ball_Diameter))

    Ball_Y[i] = (Math.GetRandomNumber(GraphicsWindow.Height - Ball_Diameter)) 

    Ball_vX[i] = Math.GetRandomNumber(6) - 2

    Ball_vY[i] = Math.GetRandomNumber(6) - 2

  EndFor

  Run = 1

  While "True"

    Shapes.SetText(BallText,"Number of balls: " + Ball_Number)

    MoveBalls()

    BounceCheck()

    CollisionCheck()

    Program.Delay(5)

  EndWhile

endsub

Sub MoveBalls

  For i = 1 To Ball_Number

    Ball_X[i] = Ball_X[i] + Ball_vX[i]

    Ball_Y[i] = Ball_Y[i] + Ball_vY[i]

    Shapes.Move(Ball[i], Ball_X[i], Ball_Y[i])

  EndFor

  energyInc = 0

EndSub

Sub BounceCheck

  For i = 1 To Ball_Number

    If (Ball_X[i] + Ball_Diameter) > GraphicsWindow.Width Then

      Ball_vX[i] = -Ball_vX[i]

    EndIf

    If (Ball_X[i]) < 0 Then

      Ball_vX[i] = -Ball_vX[i]

    EndIf

    If (Ball_Y[i] + Ball_Diameter) > Graphicswindow.Height then

      Ball_vY[i] = -Ball_vY[i]

    EndIf

    If Ball_Y[i] < 0 Then

      Ball_vY[i] = -Ball_vY[i]

    EndIf

  EndFor

EndSub

Sub AddBall

  num = Ball_Number + 1

  GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()

  Ball[num] = Shapes.AddEllipse(Ball_Diameter, Ball_Diameter)

  If addBallAtMouse = "True" then  

    Ball_X[num] = GraphicsWindow.MouseX

    Ball_Y[num] = GraphicsWindow.MouseY

    addBallAtMouse = "False"

  Else

    Ball_X[num] = (Math.GetRandomNumber(GraphicsWindow.Width - Ball_Diameter))

    Ball_Y[num] = (Math.GetRandomNumber(GraphicsWindow.Height - Ball_Diameter)) 

  EndIf

  Ball_vX[num] = Math.GetRandomNumber(6) - 2

  Ball_vY[num] = Math.GetRandomNumber(6) - 2

  Ball_Number = Ball_Number + 1

EndSub

Sub CollisionCheck

  For i = 1 To (Ball_Number - 1)

    For j = i+1 To Ball_Number

      dx = Ball_X[i] - Ball_X[j]

      dy = Ball_Y[i] - Ball_Y[j]

      Distance = Math.SquareRoot(dx * dx + dy * dy)

      If Distance < Ball_Diameter Then

        Cx = (Ball_vX[i]+ball_vX[j])/2

        Cy = (Ball_vY[i]+ball_vY[j])/2

        Relative_vX[i] = Ball_vX[i] - Cx

        Relative_vY[i] = Ball_vY[i] - Cy

        Relative_vX[j] = Ball_vX[j] - Cx

        Relative_vY[j] = Ball_vY[j] - Cy

        Nx = dx / Distance

        Ny = dy / Distance

        L[i] = Nx * Relative_vX[i] + Ny * Relative_vY[i]

        L[j] = Nx * Relative_vX[j] + Ny * Relative_vY[j]

        

        Relative_vX[i] = Relative_vX[i] - (2 * L[i] * Nx)

        Relative_vY[i] = Relative_vY[i] - (2 * L[i] * Ny)

        Relative_vX[j] = Relative_vX[j] - (2 * L[j] * Nx)

        Relative_vY[j] = Relative_vY[j] - (2 * L[j] * Ny)

        

        Ball_vX[i] = (Relative_vX[i] + Cx) 

        Ball_vY[i] = (Relative_vY[i] + Cy)

        Ball_vX[j] = (Relative_vX[j] + Cx)

        Ball_vY[j] = (Relative_vY[j] + Cy)

      EndIf

    EndFor

  EndFor

EndSub

Sub MouseDown

  If Run <> 0 then

    If  Mouse.IsLeftButtonDown = "True" Then

      addBallAtMouse = "True"

      AddBall()

    ElseIf Mouse.IsRightButtonDown = "True" and Ball_Number <> 1 then

      Ball_Number = Ball_Number - 1

      Shapes.Remove(Ball[Ball_Number + 1])

    EndIf

  EndIf

EndSub


