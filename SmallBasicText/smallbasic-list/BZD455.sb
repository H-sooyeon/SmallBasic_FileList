' Sundial 0.1

' published as 

' Copyright (c) 2012 Nonki Takahashi.  All rights reserved.

'

' History :

' 0.1 2012/07/10 Created from Cat's Eyes Clock 0.2.

'

itx = 60

ity = 100

rx = GraphicsWindow.Width / 2 ' x pos of rod

ry = ity * 3 - 10             ' y pos of rod

rw = 10                       ' rod width

rl = 200                      ' rod length

sBGColor = "LightGray"

sFGColor = "Black"

sTitle = "Sundial 0.1"

GraphicsWindow.Title = sTitle

GraphicsWindow.BrushColor = sFGColor

GraphicsWindow.BackgroundColor = sBGColor

DrawSundial()

InitClock()

bTicked = "False"

Timer.Interval = 1000

Timer.Tick = OnTick

While "True"

  Program.Delay(500)

  If bTicked Then

    DrawClock()

    DrawShadow()

    bTicked = "False"

  EndIf

EndWhile



Sub DrawSundial

  ' param rx, ry - rod center position

  ' param rw, rl - rod width and length

  GraphicsWindow.BrushColor = "Gray"

  GraphicsWindow.PenColor = "Gray"

  oBody = Shapes.AddRectangle(rl, rw)

  Shapes.Move(oBody, rx, ry - rw / 2)

  oHead = Shapes.AddEllipse(rw, rw)

  Shapes.Move(oHead, rx + rl - rw / 2, ry - rw / 2)

  GraphicsWindow.BrushColor = "Black"

  ch = 18

  cw = 12

  GraphicsWindow.FontSize = ch

  For h = 6 To 18

    a = 90 + 360 * h / 24

    x = rx + rl * Math.Cos(a / 180 * Math.Pi) - rw / 2

    y = ry + rl * Math.Sin(a / 180 * Math.Pi) - rw / 2

    oHour = Shapes.AddText(h)

    If h < 10 Then

      x = x - cw * 0.5

    Else

      x = x - cw

    EndIf

    Shapes.Move(oHour, x, y - ch * 0.65)

  EndFor    

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.PenColor = "White"

  oTop = Shapes.AddEllipse(rw, rw)

  Shapes.Move(oTop, rx - rw / 2, ry - rw / 2)

EndSub



Sub DrawShadow

  ' param rx, ry - rod center position

  ' param rw, rl - rod width and length

  ' param iHour, iMin, iSec - current time

  ' If iHour < 6 Or 18 <= iHour Then

    ' GraphicsWindow.BackgroundColor = "Gray"

  ' Else

    ' GraphicsWindow.BackgroundColor = "LightGray"

  ' EndIf

  sec = iHour * 3600 + iMin * 60 + iSec

  a = 90 + 360 * sec / (24 * 3600)

  If a > 360 Then

    a = a - 360

  EndIf

  Shapes.Zoom(oHead, 1, 1)

  x = rx + rl * Math.Cos(a / 180 * Math.Pi) - rw / 2

  y = ry + rl * Math.Sin(a / 180 * Math.Pi) - rw / 2

  Shapes.Move(oHead, x, y)

  Shapes.Rotate(oHead, a)

  Shapes.Zoom(oBody, 1, 1)

  x = rx + rl * Math.Cos(a / 180 * Math.Pi) / 2 - rl / 2

  y = ry + rl * Math.Sin(a / 180 * Math.Pi) / 2 - rw / 2

  Shapes.Move(oBody, x, y)

  Shapes.Rotate(oBody, a)

EndSub



Sub InitClock

  ' return oClock - text object for clock

  GraphicsWindow.FontSize = ity

  GraphicsWindow.BrushColor = sFGColor

  oClock = Shapes.AddText("")

  Shapes.Move(oClock, itx * 1.4, ity * 3)

EndSub



Sub DrawClock

  ' param iHour - hour

  ' param iMin - minute

  ' param iSec - second

  If iHour < 10 Then

    sTime = Text.Append("0", iHour) + ":"

  Else

    sTime = iHour + ":"

  EndIf

  If iMin < 10 Then

    sTime = sTime + "0" + iMin + ":"

  Else

    sTime = sTime + iMin + ":"

  EndIf

  If iSec < 10 Then

    sTime = sTime + "0" + iSec

  Else

    sTime = sTime + iSec

  EndIf

  Shapes.SetText(oClock, sTime)

EndSub



Sub OnTick

  iHour = Clock.Hour

  iMin = Clock.Minute

  iSec = Clock.Second

  bTicked = "True"

EndSub


