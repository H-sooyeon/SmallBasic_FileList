' SmallBasic Version 1.2
' Program: FlipCard Clock
' Changelog: 15.12
' Author: Pappa Lapub
' Website: https://social.msdn.microsoft.com/Forums/en-US/ca8db35c-abc7-4a9f-9e92-a1e4ae7c4ea4/colors-shapes-and-brushes
' ImportURL: http://smallbasic.com/program/?
' Extension: 
' Comment: http://fliqlo.com/  or  http://9031.com/goodies/#fliqlo
' 
' Sounds: http://www.pond5.com/sound-effects/1/card-flip.html
'  http://www.pond5.com/sound-effect/8726775/cards.html  (https://d3macfshcnzosd.cloudfront.net/008726775_prev.mp3)
' Variables: 
' ToDo: 
' ================================================================================
mode = 24     ' 24 or 12  hour display
testMode = "" ' TestMode?  (True/False; Test mode counts up time on 'Space' key -> 1 minute up)
countUp = ""  ' FUN effect (True/False;  counts up minutes from 0 to current OS time on start)

playSound = "True"  ' (Flip)Sound when minute changes?  (True/False;  Toggle with 'S' key)
flipSound = Program.Directory + "\Sounds\FlipClock.mp3"   ' 008726775-cards.mp3
' The following line could be harmful and has been automatically commented.
' exists = LDLogic.Switch(LDFile.Exists(flipSound), "True", "")

fontSize = 200  ' 360  ' 100
tCycl = 1000    ' duration for a single flip cycle

' -------------------------------------
tChange = tCycl/2

'' Clock.Time  eg. HH:mm:ss,  with leading zeros & depends on OS settings/culture  (12/24) ??
hh = Math.Remainder(Clock.Hour, mode) '' Clock.Hour always 0-23 ??
mm = Clock.Minute                   '' no leading zero
sec = Clock.Second                  '' no leading zero

mm = LDLogic.Switch(countUp, 0,mm)  '' just 4FUN effect, calls OnTimerTick until time is equal to OS time (minutes)

'If hh < 10 Then
'  hh = Text.Append("0", hh)
'EndIf
'If mm < 10 Then
'  mm = Text.Append("0", mm)
'EndIf
hh = Text.Append(LDLogic.Switch(LDMath.Evaluate3(hh+"<10"), "0",""), hh)  ' or  .. 0,""), hh)
mm = Text.Append(LDLogic.Switch(LDMath.Evaluate3(mm+"<10"), "0",""), mm)  ' or  .. 0,""), mm)


BuildGUI()

GraphicsWindow.MouseDown = OnMouseDown
GraphicsWindow.MouseUp = OnMouseUp
GraphicsWindow.MouseMove = OnMouseMove
GraphicsWindow.KeyDown = OnKeyDown

Timer.Interval = 1000
Timer.Tick = OnTimerTick

While "True"
  If countUp Then
    countUp = ""
    If playSound Then
      If exists Then
        Sound.Play(flipSound)     ' together with Sound.Stop(flipSound)  @ EndIf
      Else
        Sound.PlayClick()         ' alternative if no flipSound file available
      EndIf
    EndIf
    
    LDShapes.AnimateZoom(shpCardMM, tCycl, 1, 1,0)
    
    mm = mm+1
    If mm >= 60 Then                  ' Update hh and mm
      lastH = hh
      hh = Math.Remainder(hh+1, mode)
      mm = Math.Remainder(mm, 60)
      LDShapes.AnimateZoom(shpCardHH, tCycl, 1, 1,0)
    EndIf
    
    If Text.GetLength(hh) < 2 Then    ' If hh < 10 Then
      hh = Text.Append("0", hh)
    EndIf
    If Text.GetLength(mm) < 2 Then    ' If mm < 10 Then
      mm = Text.Append("0", mm)
    EndIf
    
    Program.Delay(tChange)
    Shapes.SetText(shpCardMM, mm)
    If 1*hh <> 1*lastH Then           ' hh was updated
      Shapes.SetText(shpCardHH, hh)
    EndIf
    
    If exists Then
      Sound.Stop(flipSound)
    EndIf
  EndIf
  
  Program.Delay(20)
EndWhile


' //////////  EVENTs  \\\\\\\\\\
Sub OnMouseDown
  If Mouse.IsRightButtonDown Then
    '' LDGraphicsWindow.State = 1        ' Minimize to taskbar, or ...
    LDGraphicsWindow.TopMost = LDLogic.Not(LDGraphicsWindow.TopMost)  '  .. Toggle TopMost/Normal
    Shapes.SetText(shpPin, LDLogic.Switch(LDGraphicsWindow.TopMost, pin, ""))
  Else
    xOff = GraphicsWindow.MouseX  ' Drag with mouse
    yOff = GraphicsWindow.MouseY
    dragOn = "True"
  EndIf
EndSub

Sub OnMouseUp
  dragOn = ""
EndSub

Sub OnMouseMove
  If dragOn Then
    GraphicsWindow.Left = Mouse.MouseX - xOff
    GraphicsWindow.Top = Mouse.MouseY - yOff
  EndIf  
EndSub


Sub OnKeyDown
  lastKey = GraphicsWindow.LastKey
  
  If lastKey = "Escape" Then        ' Exit
    Program.End()
    
  ElseIf lastKey = "S" Then         ' Toggle click sound On/Off
    playSound = LDLogic.Not(playSound)
    Shapes.SetText(shpNote, LDLogic.Switch(playSound, note, ""))
    
  ElseIf lastKey = "Space" And testMode Then  ' count minutes up (only if in TestMode)
    countUp = "True"
  EndIf
EndSub

Sub OnTimerTick
  If 1*mm <> Clock.Minute And testMode <> "True" Then
    countUp = "True"
  EndIf
EndSub

' //////////  SUB  \\\\\\\\\\
Sub BuildGUI
  LDGraphicsWindow.TransparentGW()
  GraphicsWindow.Title = "Flipcard Clock"   ' in taskbar (AeroPeek)
  'LDGraphicsWindow.Icon = Program.Directory + "\Icons\FlipClock_ico.png"   '' icon for taskbar only (AeroPeek)
  
  'GraphicsWindow.FontName = "Segoe UI Symbol"    ' default Tahoma
  GraphicsWindow.FontBold = ""
  GraphicsWindow.FontSize = fontSize
  GraphicsWindow.BrushColor = "Silver"
  
  '' Hour card
  shpCardHH = Shapes.AddText(hh)
  cardW = LDShapes.Width(shpCardHH)
  cardH = LDShapes.Height(shpCardHH)
  GraphicsWindow.Width = 2 * cardW + 20
  GraphicsWindow.Height = cardH
  
  brush = LDShapes.BrushImage(LDImage.NewImage(cardW,cardH, "#101010"))  ' or ...
  ''brush = LDShapes.BrushGradient("1=#101010;2=#101010;","")      ' ... as Alternative
  LDShapes.BrushRoundedRectangle(brush, 0,0, cardW,cardH, 30)
  
  '' Minute card
  shpCardMM = Shapes.AddText(mm)
  Shapes.Move(shpCardMM, cardW+20,0)
  LDShapes.BrushRoundedRectangle(brush, cardW+20,0, cardW,cardH, 30)
  
  '' Middle bar
  GraphicsWindow.BrushColor = "Black"
  shpBarHH = Shapes.AddRectangle(cardW, 10)     ' perhaps 10 looks too thick with a low fontSize
  Shapes.Move(shpBarHH, 0, cardH/2 - 5)         ' -10/2)
  shpBarMM = Shapes.AddRectangle(cardW, 10)     ' 10)
  Shapes.Move(shpBarMM, cardW+20, cardH/2 - 5)  ' -10/2)
  
  GraphicsWindow.BrushColor = "Orange"  '"Red"
  GraphicsWindow.FontSize = 20
  GraphicsWindow.FontName = "Webdings"
  pin = "ë"
  shpPin = Shapes.AddText("")
  Shapes.Move(shpPin, cardW, 20)
  note = "¯"
  shpNote = Shapes.AddText(note)
  Shapes.Move(shpNote, cardW, cardH-40)
EndSub
