'Drag & Drop - Sample set up.
'************************************************
Initialise()

'MAIN LOOP
While 0=0
  UpdateProgram()
  UpdateFrame()  
  FrameRate()
EndWhile
'=======================================

'MAIN SUBROUTINES
Sub UpdateProgram  
  If mouseDown Then
    SelectBox()    
    mouseDown = "False"
  EndIf
  
  If mouseUp Then 
    DropBox()    
    mouseUp = "False"
  EndIf
  
  If mouseMove Then
    DragBox()    
    mouseMove = "False"
  EndIf
EndSub

Sub UpdateFrame
  Shapes.Move(dragMe, toX, toY)
EndSub

Sub FrameRate
  delay = 20 - (Clock.ElapsedMilliseconds - start)  
  If delay > 0 Then
    Program.Delay(delay)
  EndIf   
  start = Clock.ElapsedMilliseconds
EndSub
'=============================================================

'PROCESS IMPACT OF MOUSE EVENTS ON BOXES
Sub SelectBox
  GetMousePosition() 
  
  'Loop thru all boxes   
  boxCount = Array.GetItemCount(box) 
  
  'Z-Order: highest index is on Top
  For i = boxCount To 1 Step -1
    If mouseX >= Shapes.GetLeft(box[i]) And mouseX <= Shapes.GetLeft(box[i]) + boxSize Then
      If mouseY >= Shapes.GetTop(box[i]) And mouseY <= Shapes.GetTop(box[i]) + boxSize Then
        
        boxLeft = Shapes.GetLeft(box[i])  'remember where the box was before removing it        
        boxTop = Shapes.GetTop(box[i]) 
        
        'This removes and then re-adds the Shape placing it on top of other Shapes
        Shapes.Remove(box[i])
        box[i] = ""
        GraphicsWindow.BrushColor = boxColor[i] 
        box[boxCount + 1] = Shapes.AddRectangle(boxSize, boxSize)
        Shapes.Move(box[boxCount + 1], boxLeft, boxTop)        
        
        boxColor[boxCount + 1] = boxColor[i]
        boxColor[i] = ""
        
        'Reindex Shapes & their Colors after Z-order changed
        getAllIndexes = Array.GetAllIndices(box)
        For j = 1 To boxCount
          newColorArray[j] = boxColor[getAllIndexes[j]]
          newBoxArray[j] = box[getAllIndexes[j]]
        EndFor  
        boxColor = newColorArray
        box = newBoxArray
        
        dragMe = box[boxCount] 
        
        'Move Mouse to Centre of Shape        
        Mouse.MouseX = Mouse.MouseX - GraphicsWindow.MouseX + boxLeft + boxSize /2
        Mouse.MouseY = Mouse.MouseY - GraphicsWindow.MouseY + boxTop + boxSize /2
        
        'Workaround. Bug is: moved mouse using Mouse Object then use GraphicsWindow Object to locate
        Mouse.HideCursor()
        Mouse.ShowCursor() 'Bug is avoided by re-presenting the Mouse to GraphicsWindow         
        
        i = 0 'Break Loop as soon as the Shape with highest Index/Z-order is selected   
      EndIf      
    EndIf 
  EndFor
EndSub 

Sub DropBox  
  dragMe = ""
EndSub

Sub DragBox
  GetMousePosition()
  If dragMe <> "" And Mouse.IsLeftButtonDown Then
    toX = mouseX - boxSize / 2
    toY = mouseY - boxSize / 2  
  EndIf
EndSub
'====================================================

'OTHER SUBROUTINES
Sub GetMousePosition
  mouseX = GraphicsWindow.MouseX
  mouseY = GraphicsWindow.MouseY  
EndSub
'==========================================

'INITIALISE PROGRAM
Sub Initialise
  gw = GraphicsWindow.Width
  gh = GraphicsWindow.Height  
  
  'Add Colorful Boxes anywhere
  boxSize = 50
  boxColor = "1=Blue;2=Red;3=DeepPink;4=Yellow;5=Green;6=Black;7=Lime;8=Purple;9=Cyan;10=DeepSkyBlue"  
  For i = 1 To 10
    GraphicsWindow.BrushColor = boxColor[i]
    box[i] = Shapes.AddRectangle(boxSize, boxSize)
    Shapes.Move(box[i], Math.GetRandomNumber(gw - boxSize) , Math.GetRandomNumber(gh - boxSize))
  EndFor   
  
  'Register Events
  GraphicsWindow.MouseDown = OnMouseDown
  GraphicsWindow.MouseUp = OnMouseUp
  GraphicsWindow.MouseMove = OnMouseMove  
EndSub

'EVENT HANDLERS
Sub OnMouseDown
  mouseDown = "True"
EndSub

Sub OnMouseUp
  mouseUp = "True"
EndSub

Sub OnMouseMove
  mouseMove = "True"
EndSub

'----------------------------------------------------------------------------
