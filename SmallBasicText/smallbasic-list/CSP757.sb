gwWidth = 480
gwHeight = 600
gwBorderWidth = 12

padPosX = gwWidth * 0.5 - 40
padPosY = gwHeight * 0.8

LDPhysics.SetBoundaries(gwBorderWidth, gwWidth - gwBorderWidth, gwBorderWidth, gwHeight- gwBorderWidth)

GraphicsWindow.Width = gwWidth
GraphicsWindow.Height= gwHeight
GraphicsWindow.Left = 220
GraphicsWindow.Top = 140
GraphicsWindow.BackgroundColor ="DarkSeaGreen"
GraphicsWindow.BrushColor = "LightSteelBlue"
GraphicsWindow.PenColor = "SteelBlue"
GraphicsWindow.PenWidth = 2
GraphicsWindow.Show()

wall_left = Shapes.AddRectangle(gwBorderWidth,gwHeight - gwBorderWidth)
Shapes.Move(wall_left, 0, gwBorderWidth)
LDPhysics.AddFixedShape(wall_left, 1, 0)

wall_right = Shapes.AddRectangle(gwBorderWidth, gwHeight - gwBorderWidth)
Shapes.Move(wall_right, gwWidth-gwBorderWidth, gwBorderWidth)
LDPhysics.AddFixedShape(wall_right, 1, 0)

wall_top = Shapes.AddRectangle(gwWidth, gwBorderWidth)
Shapes.Move(wall_top,0,0)
LDPhysics.AddFixedShape(wall_top, 1, 0)

points[0]["X"] = 8
points[0]["Y"] = 0
points[1]["X"] = 72
points[1]["Y"] = 0
points[2]["X"] = 80
points[2]["Y"] = 8
points[3]["X"] = 80
points[3]["Y"] = 16
points[4]["X"] = 72
points[4]["Y"] = 24
points[5]["X"] = 8
points[5]["Y"] = 24
points[6]["X"] = 0
points[6]["Y"] = 16
points[7]["X"] = 0
points[7]["Y"] = 8

GraphicsWindow.BrushColor = "Brown"
GraphicsWindow.PenColor = "Maroon"

paddle = LDShapes.AddPolygon(points)
shapes.Move(paddle, padPosX, padPosY )

LDPhysics.AddFixedShape(paddle,1,1)
LDPhysics.SetPosition(paddle, padPosX, padPosY,0)
'LDPhysics.SetForce(paddle,1,1)
GraphicsWindow.BrushColor = "LightRed"
GraphicsWindow.PenColor = "Red"
LDPhysics.DoTimestep()


GraphicsWindow.MouseMove = onMouseMove
GraphicsWindow.MouseDown = onMouseDown

While GraphicsWindow.LastKey <> "Escape"
  
  LDPhysics.DoTimestep()
  LDPhysics.SetPosition(paddle, padPosX, padPosY, 0 )
  Program.Delay(10)
  
endwhile

Program.End()

Sub onMouseMove
  padPosX = GraphicsWindow.MouseX 
  If padPosX < gwBorderWidth + 40 Then
    padPosX = gwBorderWidth + 40
  ElseIf padPosX > gwWidth - 40 - gwBorderWidth then
    padPosX = gwWidth - 40 - gwBorderWidth
  EndIf
  
EndSub

Sub onMouseDown
  ball = Shapes.AddEllipse(40,40)
  LDPhysics.AddMovingShape(ball, 1, 1, 1)
  LDPhysics.SetBullet(ball)
  LDPhysics.SetPosition(ball, padPosX, gwBorderWidth + 24, 0)
  
EndSub
  
