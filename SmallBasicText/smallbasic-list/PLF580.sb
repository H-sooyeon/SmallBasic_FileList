'Variables
dWidth = Desktop.Width
dHeight = Desktop.Height
wWidth = 1000
wHeight = 600
wTop = (dHeight - wHeight - 74) / 2
wLeft = (dWidth - wWidth) / 2
CurrentMenu = "MainPaint"
CurrentColor = "First"
CurrentTool = "Pencil"
xPosRedSlide = 25
xPosGreenSlide = 25
xPosBlueSlide = 25
xPrevRed = 25
xPrevGreen = 25
xPrevBlue = 25
xPrevRed2 = 230
xPrevGreen2 = 230
xPrevBlue2 = 230
RedValue = 0
GreenValue = 0
BlueValue = 0
DropDownSizeShown = "False"
DropDownTool = "None"
DdPencilSize = 1
DdBrushSize = 7
DdEraserSize = 10
DdSpraySize = 10
DdBrushLeft = 20
DdBrushTop = 70
DdEraserLeft = 19
DdEraserTop = 69
DdSprayLeft = 30
DdSprayTop = 55
DdSprayBordersZoom = 0.5
DdDotSize = 1
xColorIndicator = 138
ToolAdded = "False"
CanMoveRedSlide = "False"
CanMoveGreenSlide = "False"
CanMoveBlueSlide = "Falase"
PencilSize = 1.5
BrushSize = 6
EraserSize = 10
SpraySize = 15
SprayColors = 2
SpraySpeed = 10
SprayDotSize = 2
BrushColor = "Black"
SecondColor = GraphicsWindow.GetColorFromRGB(225, 225, 225)
ColorPickerLoaded = "False"
CpLeft = 0
CpTop = 0
CanMoveCp = "False"
CanGetPixel = "True"
xSpraySpeedIndi = 378
DdSpraySizeIndiTop = 115
DdDotSizeIndiLeft = 414
CanMoveTxtIndies = "False"
OldTxtBody = "This program was developed using Microsoft Small Basic"
OldTxtName = "Microsoft Sans Serif"
OldTxtSize = 12
OldTxtBold = "Yes"
OldTxtFontBold = "False"
OldTxtFontItalic = "False"
OldTxtSolid = "False"
OldTxtTransparent = "True"
TxtName = OldTxtName
TxtBody = OldTxtBody
TxtSize = 12
CurrentShape = "Line"
BackgroundShapes = "Solid"
PenWidthShapes = 2
xIndiPenWidthSh = 535.5
CurrentMirror = "None"
MirrorAdded = "False"
CanAddSelectLm = "False"
CanMoveIndiSelect = "False"
CanAddIndiSelect = "True"

'Window
GraphicsWindow.Width = wWidth
GraphicsWindow.Height = wHeight
GraphicsWindow.Left = wLeft
GraphicsWindow.Top = wTop
GraphicsWindow.Title = "Paint"
GraphicsWindow.BrushColor = "#FFFFFF"
GraphicsWindow.FillRectangle(0, 0, dWidth, dHeight)
GraphicsWindow.FontBold = "False"
GraphicsWindow.FontName = "Microsoft Sans Serif"
GraphicsWindow.PenWidth = 1

'Colors
ClrBasicDark = GraphicsWindow.GetColorFromRGB(50 50 50)
ClrBackDark = GraphicsWindow.GetColorFromRGB(100 100 100)
ClrBorderDark = GraphicsWindow.GetColorFromRGB(150 150 150)
ClrTextDark = GraphicsWindow.GetColorFromRGB(200 200 200)
ClrLightGray = GraphicsWindow.GetColorFromRGB(245, 245, 245)

'Main
LoadResources()
LoadMainGUI()
Mouse.HideCursor()
AddTool()
Shapes.Move(IndicatorPencil, GraphicsWindow.MouseX - 38, GraphicsWindow.MouseY - 38)
If GraphicsWindow.MouseY > 50 Then
  Shapes.HideShape(ToolIndicator)
Else
  Shapes.HideShape(IndicatorPencil)
  Mouse.ShowCursor()
EndIf

'Subroutines - Custom
'********************
'LoadResources
Sub LoadResources
  Load_ImgColors = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Colors.png")
  Load_ImgPencil = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Pencil.png")
  Load_ImgBrush = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Brush.png")
  Load_ImgEraser = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Eraser.png")
  Load_ImgColorPicker = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Color Picker.png")
  Load_ImgCloseCp = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Close Color Picker.png")
  Load_ImgSpray = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Spray.png")
  Load_ImgCloseSm = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Close Spray Menu.png")
  Load_ImgText = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Text.png")
  Load_ImgFill = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Fill.png")
  Load_ImgShapes = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Shapes.png")
  Load_ImgMirror = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Mirror.png")
  Load_ImgHorizontal = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Horizontal.png")
  Load_ImgVertical = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Vertical.png")
  Load_ImgSelect = ImageList.LoadImage("C:\Users\Θανάσης\Documents\Small Basic\Images\Paint\Select.png")
EndSub

'LoadMainGUI
Sub LoadMainGUI
  GraphicsWindow.PenWidth = 2
  For Times = 1 To 49
    GraphicsWindow.PenColor = GraphicsWindow.GetColorFromRGB(Times + 50, Times + 50, Times + 50)
    Shapes.AddLine(0, 0 + Times, dWidth, 0 + Times)
  EndFor
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = ClrTextDark
  GraphicsWindow.PenWidth = 3
  For Times = 1 To 5
    DdBorders[Times] = Shapes.AddEllipse(46, 46)
    Shapes.HideShape(DdBorders[Times])
  EndFor
  GraphicsWindow.PenColor = "Cyan"
  GraphicsWindow.BrushColor = "DarkTurquoise"
  SizeIndicator = Shapes.AddEllipse(50, 50)
  Shapes.HideShape(SizeIndicator)
  GraphicsWindow.PenWidth = 1.5
  ToolIndicator = Shapes.AddEllipse(50, 50)
  Shapes.HideShape(ToolIndicator)
  GraphicsWindow.PenWidth = 3
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = ClrTextDark
  For Times = 1 To 11
    RecBorders[Times] = Shapes.AddEllipse(46, 46)
    Shapes.Move(RecBorders[Times], Times * 55 - 51, 2)
    Shapes.Zoom(RecBorders[Times], 0.9, 0.9)
  EndFor
  hSeparator = Shapes.AddLine(dWidth / 2, 50, dWidth / 2, dHeight)
  Shapes.HideShape(hSeparator)
  vSeparator = Shapes.AddLine(0, dHeight / 2 - 10, dWidth, dHeight / 2 - 10)
  Shapes.HideShape(vSeparator)
  ImgColors = Shapes.AddImage(Load_ImgColors)
  Shapes.Move(ImgColors, 7, 5)
  Shapes.Zoom(ImgColors, 0.8, 0.8)
  ImgPencil = Shapes.AddImage(Load_ImgPencil)
  Shapes.Move(ImgPencil, 61, 5)
  ImgBrush = Shapes.AddImage(Load_ImgBrush)
  Shapes.Move(ImgBrush, 116, 5)
  ImgEraser = Shapes.AddImage(Load_ImgEraser)
  Shapes.Move(ImgEraser, 171, 5)
  ImgColorPicker = Shapes.AddImage(Load_ImgColorPicker)
  Shapes.Move(ImgColorPicker, 229, 10)
  ImgSpray = Shapes.AddImage(Load_ImgSpray)
  Shapes.Move(ImgSpray, 286, 9)
  ImgText = Shapes.AddImage(Load_ImgText)
  Shapes.Move(ImgText, 340, 10)
  ImgFill = Shapes.AddImage(Load_ImgFill)
  Shapes.Move(ImgFill, 387, 1)
  Shapes.Zoom(ImgFill, 0.9, 0.9)
  ImgShapes = Shapes.AddImage(Load_ImgShapes)
  Shapes.Move(ImgShapes, 442, 2)
  Shapes.Zoom(ImgShapes, 0.85, 0.85)
  ImgMirror = Shapes.AddImage(Load_ImgMirror)
  Shapes.Move(ImgMirror, 498, 1)
  ImgSelect = Shapes.AddImage(Load_ImgSelect)
  Shapes.Move(ImgSelect, 561, 9)
  GraphicsWindow.PenWidth = 1
  GraphicsWindow.PenColor = "Black"
  GraphicsWindow.BrushColor = "White"
  IndicatorPencil = Shapes.AddImage(Load_ImgPencil)
  IndicatorBrush = Shapes.AddImage(Load_ImgBrush)
  IndicatorEraser = Shapes.AddRectangle(EraserSize, EraserSize)
  IndicatorColorPicker = Shapes.AddImage(Load_ImgColorPicker)
  IndicatorSpray = Shapes.AddImage(Load_ImgSpray)
  IndicatorFill = Shapes.AddImage(Load_ImgFill)
EndSub

'AddTool
Sub AddTool
  RemoveAllIndicatorIcons()
  xCurrentMousePos = GraphicsWindow.MouseX
  yCurrentMousePos = GraphicsWindow.MouseY
  If CurrentTool = "Pencil" Then
    Shapes.ShowShape(IndicatorPencil)
  ElseIf CurrentTool = "Brush" Then
    Shapes.ShowShape(IndicatorBrush)
  ElseIf CurrentTool = "Eraser" Then
    If EraserSize = 10 Then
      Controls.SetSize(IndicatorEraser, 10, 10)
    ElseIf EraserSize = 15 Then
      Controls.SetSize(IndicatorEraser, 15, 15)
    ElseIf EraserSize = 20 Then
      Controls.SetSize(IndicatorEraser, 20, 20)
    ElseIf EraserSize = 25 Then
      Controls.SetSize(IndicatorEraser, 25, 25)
    ElseIf EraserSize = 30 Then
      Controls.SetSize(IndicatorEraser, 30, 30)
    EndIf
    Shapes.ShowShape(IndicatorEraser)
  ElseIf CurrentTool = "ColorPicker" Then
    Shapes.ShowShape(IndicatorColorPicker)
  ElseIf CurrentTool = "Spray" Then
    Shapes.ShowShape(IndicatorSpray)
  ElseIf CurrentTool = "Text" Then
    Mouse.ShowCursor()
  ElseIf CurrentTool = "Fill" Then
    Shapes.ShowShape(IndicatorFill)
  ElseIf CurrentTool = "Shapes" Then
    Mouse.ShowCursor()
  EndIf
EndSub

'RemoveAllIndicatorIcons
Sub RemoveAllIndicatorIcons
  Shapes.HideShape(IndicatorPencil)
  Shapes.HideShape(IndicatorBrush)
  Shapes.HideShape(IndicatorEraser)
  Shapes.HideShape(IndicatorColorPicker)
  Shapes.HideShape(IndicatorSpray)
  Shapes.HideShape(IndicatorFill)
EndSub

'AddIndicatorIcon
Sub AddIndicatorIcon
  xCurrentMousePos = GraphicsWindow.MouseX
  yCurrentMousePos = GraphicsWindow.MouseY
  If CurrentTool = "Text" Or CurrentTool = "Shapes" Or CurrentTool = "Mirror" Or CurrentTool = "Select" Then
  Else
    Mouse.HideCursor()
  EndIf
  If CurrentTool = "Pencil" Then
    Shapes.Move(IndicatorPencil, xCurrentMousePos - 2, yCurrentMousePos - 38)
    Shapes.ShowShape(IndicatorPencil)
  ElseIf CurrentTool = "Brush" Then
    Shapes.Move(IndicatorBrush, xCurrentMousePos - 3, yCurrentMousePos - 33)
    Shapes.ShowShape(IndicatorBrush)
  ElseIf CurrentTool = "Eraser" Then
    Shapes.Move(IndicatorEraser, xCurrentMousePos - (EraserSize / 2), yCurrentMousePos - (EraserSize / 2))
    Shapes.ShowShape(IndicatorEraser)
  ElseIf CurrentTool = "ColorPicker" Then
    Shapes.Move(IndicatorColorPicker, xCurrentMousePos - 32, yCurrentMousePos - 32)
    Shapes.ShowShape(IndicatorColorPicker)
    If ColorPickerLoaded = "False" Then
      LoadColorPicker()
      ColorPickerLoaded = "True"
    EndIf
  ElseIf CurrentTool = "Spray" Then
    Shapes.Move(IndicatorSpray, xCurrentMousePos - 20, yCurrentMousePos - 20)
    Shapes.ShowShape(IndicatorSpray)
  ElseIf CurrentTool = "Fill" Then
    Shapes.Move(IndicatorFill, xCurrentMousePos - 20, yCurrentMousePos - 20)
    Shapes.ShowShape(IndicatorFill)
  EndIf
EndSub

'ChooseColor
Sub ChooseColor
  If Mouse.IsLeftButtonDown = "True" Then
    GraphicsWindow.BrushColor = BrushColor
    GraphicsWindow.PenColor = BrushColor
  ElseIf Mouse.IsRightButtonDown = "True" Then
    GraphicsWindow.BrushColor = SecondColor
    GraphicsWindow.PenColor = SecondColor
  EndIf
EndSub

'Draw
Sub Draw
  If yMove > 0 And yMove < 50 Then
    RemoveAllIndicatorIcons()
    Mouse.ShowCursor()
  Else
    AddIndicatorIcon()
    If CanDraw = "True" Then
      If CurrentTool = "Pencil" Then
        ChooseColor()
        GraphicsWindow.PenWidth = PencilSize
        GraphicsWindow.DrawLine(xMove, yMove, xMoveNew, yMoveNew)
        If MirrorAdded = "True" Then
          If CurrentMirror = "Horizontal" Then
            If xDown < (dWidth / 2) Then
              GraphicsWindow.DrawLine(dWidth - xMove, yMove, dWidth - xMoveNew, yMoveNew)
            ElseIf xDown > (dWidth / 2) Then
              xPosPencil = xMove - (dWidth / 2)
              xPosPencil2 = xMoveNew - (dWidth / 2)
              GraphicsWindow.DrawLine((dWidth / 2) - xPosPencil, yMove, (dWidth / 2) - xPosPencil2, yMoveNew)
            EndIf
          ElseIf CurrentMirror = "Vertical" Then
            xPosVSeparator = dHeight / 2 - 10
            If yDown < xPosVSeparator Then
              GraphicsWindow.DrawLine(xMove, dHeight - yMove - 20, xMoveNew, dHeight - yMoveNew - 20)
            Else
              yPosPencil = yMove - (dHeight / 2)
              yPosPencil2 = yMoveNew - (dHeight / 2)
              GraphicsWindow.DrawLine(xMove, (dHeight / 2) - yPosPencil - 20, xMoveNew, (dHeight / 2) - yPosPencil2 - 20)
            EndIf
          EndIf
        EndIf
      ElseIf CurrentTool = "Brush" Then
        ChooseColor()
        GraphicsWindow.PenWidth = BrushSize
        GraphicsWindow.FillEllipse(xMove - (BrushSize / 2), yMove - (BrushSize / 2), BrushSize, BrushSize)
        GraphicsWindow.DrawLine(xMove, yMove, xMoveNew, yMoveNew)
        If MirrorAdded = "True" Then
          If CurrentMirror = "Horizontal" Then
            If xDown < (dWidth / 2) Then
              GraphicsWindow.FillEllipse(dWidth - xMove - (BrushSize / 2), yMove - (BrushSize / 2), BrushSize, BrushSize)
              GraphicsWindow.DrawLine(dWidth - xMove, yMove, dWidth - xMoveNew, yMoveNew)
            ElseIf xDown > (dWidth / 2) Then
              xPosBrush = xMove - (dWidth / 2)
              xPosBrush2 = xMoveNew - (dWidth / 2)
              GraphicsWindow.FillEllipse(dWidth - xMove - (BrushSize / 2), yMove - (BrushSize / 2), BrushSize, BrushSize)
              GraphicsWindow.DrawLine((dWidth / 2) - xPosBrush, yMove, (dWidth / 2) - xPosBrush2, yMoveNew)
            EndIf
          ElseIf CurrentMirror = "Vertical" Then
            xPosVSeparator = dHeight / 2 - 10
            yPosBrush = yMove - (dHeight / 2)
            yPosBrush2 = yMoveNew - (dHeight / 2)
            If yDown < xPosVSeparator Then
              GraphicsWindow.FillEllipse(xMove - (BrushSize / 2), dHeight - 20 - yMove - (BrushSize / 2), BrushSize, BrushSize)
              GraphicsWindow.DrawLine(xMove, (dHeight / 2) - yPosbrush - 20, xMoveNew, (dHeight / 2) - yPosBrush2 - 20)
            Else
              GraphicsWindow.FillEllipse(xMove - (BrushSize / 2), (dHeight / 2) - yPosBrush - 20 - (BrushSize / 2), BrushSize, BrushSize)
              GraphicsWindow.DrawLine(xMove, (dHeight / 2) - yPosBrush - 20, xMoveNew, (dHeight / 2) - yPosBrush2 - 20)
            EndIf
          EndIf
        EndIf
      ElseIf CurrentTool = "Eraser" Then
        If Mouse.IsLeftButtonDown = "True" Then
          GraphicsWindow.PenColor = "White"
          GraphicsWindow.BrushColor = "White"
        ElseIf Mouse.IsRightButtonDown = "True" Then
          GraphicsWindow.PenColor = BrushColor
          GraphicsWindow.BrushColor = BrushColor
        EndIf
        GraphicsWindow.PenWidth = (EraserSize * 100) / 80
        GraphicsWindow.FillRectangle(xMove - (EraserSize / 2), yMove - (EraserSize / 2), EraserSize, EraserSize)
        GraphicsWindow.DrawLine(xMove, yMove, xMoveNew, yMoveNew)
        If MirrorAdded = "True" Then
          If CurrentMirror = "Horizontal" Then
            If xDown < (dWidth / 2) Then
              GraphicsWindow.FillRectangle(dWidth - xMove - (EraserSize / 2), yMove - (EraserSize / 2), EraserSize, EraserSize)
              GraphicsWindow.DrawLine(dWidth - xMove, yMove, dWidth - xMoveNew, yMoveNew)
            ElseIf xDown > (dWidth / 2) Then
              xPosEraser = xMove - (dWidth / 2)
              xPosEraser2 = xMoveNew - (dWidth / 2)
              GraphicsWindow.FillRectangle((dWidth / 2) - xPosEraser - (EraserSize / 2), yMove - (EraserSize / 2), EraserSize, EraserSize)
              GraphicsWindow.DrawLine((dWidth / 2) - xPosEraser, yMove, (dWidth / 2) - xPosEraser2, yMoveNew)
            EndIf
          ElseIf CurrentMirror = "Vertical" Then
            xPosVSeparator = dHeight / 2 - 10
            yPosEraser = yMove - (dHeight / 2)
            yPosEraser2 = yMoveNew - (dHeight / 2)
            If yDown < xPosVSeparator Then
              GraphicsWindow.FillRectangle(xMove - (EraserSize / 2), dHeight - 20 - yMove - (EraserSize / 2), EraserSize, EraserSize)
              GraphicsWindow.DrawLine(xMove, dHeight - 20 - yMove, xMoveNew, dHeight - 20 - yMoveNew)
            Else
              GraphicsWindow.FillRectangle(xMove - (EraserSize / 2), (dHeight / 2) - yPosEraser - 20 - (EraserSize / 2), EraserSize, EraserSize)
              GraphicsWindow.DrawLine(xMove, (dHeight / 2) - yPosEraser - 20, xMoveNew, (dHeight / 2) - yPosEraser2 - 20)
            EndIf
          EndIf
        EndIf
      ElseIf CurrentTool = "Fill" Then
        ChooseColor()
        GraphicsWindow.FillRectangle(0, 0, dWidth, dHeight)
      EndIf
    EndIf
  EndIf
EndSub

'RemoveAllSubMenus
Sub RemoveAllSubMenus
  If CurrentMenu = "TextMenu" Then
    TxtBody = Controls.GetTextBoxText(TmShape[4])
    TxtName = Controls.GetTextBoxText(TmShape[9])
    TxtSize = Controls.GetTextBoxText(TmShape[13])
    OldTxtBody = TxtBody
    OldTxtName = TxtName
    OldTxtSize = TxtSize
  EndIf
  For Times = 1 To 5
    Shapes.HideShape(DdBorders[Times])
    Shapes.Remove(PencilSizes[Times])
    Shapes.Remove(BrushSizes[Times])
    Shapes.Remove(EraserSizes[Times])
  EndFor
  Shapes.HideShape(SizeIndicator)
  RemoveColorDialog()
  CloseColorPicker()
  CloseSprayMenu()
  CloseTextMenu()
  CloseShapesMenu()
  CloseMirrorMenu()
  AddTool()
  DropDownTool = "None"
  CurrentMenu = "MainPaint"
EndSub

'ShowDropDown
Sub ShowDropDown
  RemoveAllIndicatorIcons()
  GraphicsWindow.PenWidth = 0
  For Times = 1 To 5
    Shapes.Move(DdBorders[Times], dDownPosX + 1, Times * 47 + 3)
    Shapes.ShowShape(DdBorders[Times])
  EndFor
  If CurrentColor = "First" Then
    GraphicsWindow.PenColor = BrushColor
    GraphicsWindow.BrushColor = BrushColor
  Else
    GraphicsWindow.PenColor = SecondColor
    GraphicsWindow.BrushColor = SecondColor
  EndIf
  If DropDownTool = "Pencil" Then
    For Times = 1 To 5
      PencilSizes[Times] = Shapes.AddRectangle(DdPencilSize, DdPencilSize)
      Shapes.Move(PencilSizes[Times], dDownPosX + 22, Times * 47 + 25)
      DdPencilSize = DdPencilSize + 1
    EndFor
    DdPencilSize = 1
  ElseIf DropDownTool = "Brush" Then
    For Times = 1 To 5
      BrushSizes[Times] = Shapes.AddEllipse(DdBrushSize, DdBrushSize)
      Shapes.Move(BrushSizes[Times], dDownPosX + DdBrushLeft, DdBrushTop)
      DdBrushLeft = DdBrushLeft - 2
      DdBrushTop = DdBrushTop + 45
      DdBrushSize = DdBrushSize + 4
    EndFor
    DdBrushSize = 7
    DdBrushLeft = 20
    DdBrushTop = 70
  ElseIf DropDownTool = "Eraser" Then
    GraphicsWindow.PenColor = "Black"
    GraphicsWindow.BrushColor = "White"
    GraphicsWindow.PenWidth = 1
    For Times = 1 To 5
      EraserSizes[Times] = Shapes.AddRectangle(DdEraserSize, DdEraserSize)
      Shapes.Move(EraserSizes[Times], dDownPosX + DdEraserLeft, DdEraserTop)
      DdEraserSize = DdEraserSize + 5
      DdEraserTop = DdEraserTop + 44
      DdEraserLeft = DdEraserLeft - 2
    EndFor
    GraphicsWindow.PenWidth = 0
    Shapes.Move(EraserSizes[4], dDownPosX + DdEraserLeft + 3, DdEraserTop - 88)
    Shapes.Move(EraserSizes[5], dDownPosX + DdEraserLeft, DdEraserTop - 44)
    DdEraserTop = 69
    DdEraserSize = 10
    DdEraserLeft = 19
  ElseIf DropDownTool = "Spray" Then
    LoadSprayMenu()
  EndIf
  Shapes.Move(SizeIndicator, dDownPosX - 1.15, 48)
  Shapes.ShowShape(SizeIndicator)
  CurrentMenu = "DropDownSize"
EndSub

'LoadColorDialog
Sub LoadColorDialog
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = ClrBasicDark
  CdShape[1] = Shapes.AddRectangle(340, 350)
  Shapes.Move(CdShape[1], 0, 50)
  GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(255, 90, 90)
  CdShape[2] = Shapes.AddRectangle(280, 5)
  Shapes.Move(CdShape[2], 25, 80)
  GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(50, 230, 50)
  CdShape[3] = Shapes.AddRectangle(280, 5)
  Shapes.Move(CdShape[3], 25, 130)
  GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(100, 100, 255)
  CdShape[4] = Shapes.AddRectangle(280, 5)
  Shapes.Move(CdShape[4], 25, 180)
  GraphicsWindow.BrushColor = ClrBasicDark
  CdShape[5] = Shapes.AddEllipse(25, 25)
  Shapes.Move(CdShape[5], xPosRedSlide, 70)
  CdShape[6] = Shapes.AddEllipse(25, 25)
  Shapes.Move(CdShape[6], xPosGreenSlide, 120)
  CdShape[7] = Shapes.AddEllipse(25, 25)
  Shapes.Move(CdShape[7], xPosBlueSlide, 170)
  CdShape[8] = Shapes.AddRectangle(280, 1)
  Shapes.Move(CdShape[8], 25, 220)
  GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(255, 90, 90)
  CdShape[9] = Shapes.AddText("Red:")
  Shapes.Move(CdShape[9], 25, 250)
  GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(50, 230, 50)
  CdShape[10] = Shapes.AddText("Green:")
  Shapes.Move(CdShape[10], 25, 280)
  GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(100, 100, 255)
  CdShape[11] = Shapes.AddText("Blue:")
  Shapes.Move(CdShape[11], 25, 310)
  GraphicsWindow.BrushColor = "Black"
  CdShape[12] = Controls.AddTextBox(70, 248)
  Controls.SetSize(CdShape[12], 60, 20)
  CdShape[13] = Controls.AddTextBox(70, 278)
  Controls.SetSize(CdShape[13], 60, 20)
  CdShape[14] = Controls.AddTextBox(70, 308)
  Controls.SetSize(CdShape[14], 60, 20)
  GraphicsWindow.PenColor = "Cyan"
  GraphicsWindow.BrushColor = "Cyan"
  CdShape[15] = Shapes.AddRectangle(67, 82)
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = BrushColor
  CdShape[16] = Shapes.AddRectangle(65, 80)
  Shapes.Move(CdShape[16], 165, 248)
  GraphicsWindow.BrushColor = SecondColor
  CdShape[17] = Shapes.AddRectangle(65, 80)
  Shapes.Move(CdShape[17], 240, 248)
  GraphicsWindow.BrushColor = "Black"
  CdShape[18] = Controls.AddButton("Restore", 25, 355)
  Controls.SetSize(CdShape[18], 280, 23)
  UpdateColorDialog()
  xOldRed = xPrevRed
  xOldGreen = xPrevGreen
  xOldBlue = xPrevBlue
  xOldRed2 = xPrevRed2
  xOldGreen2 = xPrevGreen2
  xOldBlue2 = xPrevBlue2
  CurrentMenu = "ColorDialog"
EndSub

'RemoveColorDialog
Sub RemoveColorDialog
  For Times = 1 To Array.GetItemCount(CdShape)
    Shapes.Remove(CdShape[Times])
  EndFor
EndSub

'UpdateColorDialog
Sub UpdateColorDialog
  GetSlideData()
  If CurrentColor = "First" Then
    Shapes.Move(CdShape[15], 164, 247)
    RedValue = xPosRedSlide - 25
    GreenValue = xPosGreenSlide - 25
    BlueValue = xPosBlueSlide - 25
    Controls.SetTextBoxText(CdShape[12], RedValue)
    Controls.SetTextBoxText(CdShape[13], GreenValue)
    Controls.SetTextBoxText(CdShape[14], BlueValue)
    BrushColor = GraphicsWindow.GetColorFromRGB(RedValue, GreenValue, BlueValue)
  ElseIf CurrentColor = "Second" Then
    Shapes.Move(CdShape[15], 239, 247)
    RedValue = xPosRedSlide - 25
    GreenValue = xPosGreenSlide - 25
    BlueValue = xPosBlueSlide - 25
    Controls.SetTextBoxText(CdShape[12], RedValue)
    Controls.SetTextBoxText(CdShape[13], GreenValue)
    Controls.SetTextBoxText(CdShape[14], BlueValue)
    SecondColor = GraphicsWindow.GetColorFromRGB(RedValue, GreenValue, BlueValue)
  EndIf
EndSub

'UpdateColorIndicators
Sub UpdateColorIndicators
  Shapes.Remove(CdShape[16])
  Shapes.Remove(CdShape[17])
  GraphicsWindow.BrushColor = BrushColor
  CdShape[16] = Shapes.AddRectangle(65, 80)
  Shapes.Move(CdShape[16], 165, 248)
  GraphicsWindow.BrushColor = SecondColor
  CdShape[17] = Shapes.AddRectangle(65, 80)
  Shapes.Move(CdShape[17], 240, 248)
EndSub

'GetSlideData
Sub GetSlideData
  xPosRedSlide = Shapes.GetLeft(CdShape[5])
  yPosRedSlide = Shapes.GetTop(CdShape[5])
  xPosGreenSlide = Shapes.GetLeft(CdShape[6])
  yPosGreenSlide = Shapes.GetTop(CdShape[6])
  xPosBlueSlide = Shapes.GetLeft(CdShape[7])
  yPosBlueSlide = Shapes.GetTop(CdShape[7])
EndSub

'CheckSlideColision
Sub CheckSlideColision
  If xPosRedSlide <= 25 Then
    Shapes.Move(CdShape[5], 25, yPosRedSlide)
    xPosRedSlide = 25
  ElseIf xPosRedSlide >= 280 Then
    Shapes.Move(CdShape[5], 280, yPosRedSlide)
    xPosRedSlide = 255
  EndIf
  If xPosGreenSlide <= 25 Then
    Shapes.Move(CdShape[6], 25, yPosGreenSlide)
    xPosGreenSlide = 25
  ElseIf xPosGreenSlide >= 280 Then
    Shapes.Move(CdShape[6], 280, yPosGreenSlide)
    xPosGreenSlide = 255
  EndIf
  If xPosBlueSlide <= 25 Then
    Shapes.Move(CdShape[7], 25, yPosBlueSlide)
    xPosBlueSlide = 25
  ElseIf xPosBlueSlide >= 280 Then
    Shapes.Move(CdShape[7], 280, yPosBlueSlide)
    xPosBlueSlide = 255
  EndIf
EndSub

'LoadColorPicker
Sub LoadColorPicker
  ColorPickerLoaded = "True"
  PreviousTool = CurrentTool
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = ClrBasicDark
  CpShape[1] = Shapes.AddRectangle(130, 155)
  GraphicsWindow.BrushColor = ClrTextDark
  CpShape[2] = Shapes.AddText("Hex:")
  GraphicsWindow.SetPixel(0, 0, BrushColor)
  PixelPicked = GraphicsWindow.GetPixel(0, 0)
  GraphicsWindow.BrushColor = "SandyBrown"
  CpShape[3] = Shapes.AddText(PixelPicked)
  GraphicsWindow.BrushColor = BrushColor
  CpShape[4] = Shapes.AddRectangle(110, 110)
  CpShape[5] = Shapes.AddImage(Load_ImgCloseSm)
  MoveColorPicker()
EndSub

'CloseColorPicker
Sub CloseColorPicker
  For Times = 1 To Array.GetItemCount(CpShape)
    Shapes.Remove(CpShape[Times])
  EndFor
  If PreviousTool = "" Then
  Else
    CurrentTool = PreviousTool
    PreviousTool = ""
  EndIf
  AddTool()
  CpLeft = 0
  CpTop = 0
  ColorPickerLoaded = "False"
  CurrentMenu = "MainPaint"
EndSub

'MoveColorPicker
Sub MoveColorPicker
  Shapes.Move(CpShape[1], CpLeft, CpTop + 50)
  Shapes.Move(CpShape[2], CpLeft + 10, CpTop + 60)
  Shapes.Move(CpShape[3], CpLeft + 40, CpTop + 61)
  Shapes.Move(CpShape[4], CpLeft + 10, CpTop + 85)
  Shapes.Move(CpShape[5], CpLeft + 99, CpTop + 49)
EndSub

'LoadSprayMenu
Sub LoadSprayMenu
  For Times = 1 To 5
    Shapes.HideShape(DdBorders[Times])
  EndFor
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = ClrBasicDark
  GraphicsWindow.PenWidth = 1
  SmShape[1] = Shapes.AddRectangle(90, 290)
  Shapes.Move(SmShape[1], dDownPosX - 10, 50)
  GraphicsWindow.BrushColor = ClrBasicDark
  SmShape[2] = Shapes.AddRectangle(210, 290)
  Shapes.Move(SmShape[2], dDownPosX + 79, 50)
  GraphicsWindow.BrushColor = "Cyan"
  SmShape[20] = Shapes.AddEllipse(34, 34)
  Shapes.Move(SmShape[20], DdDotSizeIndiLeft, 218)
  SmShape[21] = Shapes.AddRectangle(84, 29)
  SmShape[22] = Shapes.AddRectangle(84, 29)
  Shapes.Move(SmShape[21], xSpraySpeedIndi, 298)
  For Times = 1 To 5
    GraphicsWindow.PenColor = "Black"
    GraphicsWindow.BrushColor = ClrBackDark
    SmShape[3][Times] = Shapes.AddEllipse(50, 50)
    Shapes.Move(SmShape[3][Times], dDownPosX + 10, Times * 50 + 15)
    GraphicsWindow.BrushColor = ClrBackDark
    SmShape[4][Times] = Shapes.AddEllipse(30, 30)
    Shapes.Move(SmShape[4][Times], 55 + dDownPosX + 190 * Times / 5, 220)
  EndFor
  GraphicsWindow.PenWidth = 3
  GraphicsWindow.PenColor = "Cyan"
  GraphicsWindow.BrushColor = "DarkTurquoise"
  SmShape[23] = Shapes.AddEllipse(50, 50)
  Shapes.Move(SmShape[23], dDownPosX + 10, DdSpraySizeIndiTop)
  GraphicsWindow.PenWidth = 1
  For Times = 1 To 5
    GraphicsWindow.PenColor = "Black"
    If CurrentColor = "First" Then
      GraphicsWindow.PenColor = BrushColor
      GraphicsWindow.BrushColor = BrushColor
    Else
      GraphicsWindow.PenColor = SecondColor
      GraphicsWindow.BrushColor = SecondColor
    EndIf
    SmShape[19][Times] = Shapes.AddEllipse(DdDotSize, DdDotSize)
    Shapes.Move(SmShape[19][Times], 68 + dDownPosX + 190 * Times / 5, 233)
    SmShape[5][Times] = Shapes.AddEllipse(DdSpraySize, DdSpraySize)
    Shapes.Move(SmShape[5][Times], dDownPosX + DdSprayLeft, DdSprayTop + 30)
    DdSpraySize = DdSpraySize + 8
    DdSprayBordersZoom = DdSprayBordersZoom + 0.1
    DdSprayLeft = DdSprayLeft - 4
    DdSprayTop = DdSprayTop + 46
    DdDotSize = DdDotSize + 1
    SmShape[24][Times] = Controls.AddButton("", dDownPosX + 10, Times * 50 + 15)
    Controls.SetSize(SmShape[24][Times], 50, 50)
    Shapes.SetOpacity(SmShape[24][Times], 0)
    SmShape[25][Times] = Controls.AddButton("", 55 + dDownPosX + 190 * Times / 5, 220)
    Controls.SetSize(SmShape[25][Times], 30, 30)
    Shapes.SetOpacity(SmShape[25][Times], 0)
  EndFor
  DdSpraySize = 10
  DdSprayLeft = 30
  DdSprayTop = 55
  DdDotSize = 1
  GraphicsWindow.BrushColor = ClrTextDark
  SmShape[6] = Shapes.AddText("Amount of colors to use:")
  SmShape[7] = Shapes.AddText("Size of dots:")
  SmShape[8] = Shapes.AddText("Spraying speed:")
  Shapes.Move(SmShape[6], dDownPosX + 90, 60)
  Shapes.Move(SmShape[7], dDownPosX + 90, 190)
  Shapes.Move(SmShape[8], dDownPosX + 90, 270)
  GraphicsWindow.BrushColor = "Black"
  SmShape[9] = Controls.AddButton("One", dDownPosX + 100, 100)
  SmShape[10] = Controls.AddButton("Two", dDownPosX + 100, 135)
  SmShape[11] = Controls.AddButton("Normal", dDownPosX + 95, 300)
  SmShape[12] = Controls.AddButton("Fast", dDownPosX + 190, 300)
  For Times = 9 To 12
    Controls.SetSize(SmShape[Times], 80, 25)
  EndFor
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.PenWidth = 2
  SmShape[13] = Shapes.AddRectangle(155, 1)
  SmShape[14] = Shapes.AddRectangle(185, 1)
  SmShape[15] = Shapes.AddRectangle(185, 1)
  Shapes.Move(SmShape[13], dDownPosX + 90, 80)
  Shapes.Move(SmShape[14], dDownPosX + 90, 210)
  Shapes.Move(SmShape[15], dDownPosX + 90, 290)
  GraphicsWindow.PenWidth = 1
  GraphicsWindow.BrushColor = SecondColor
  GraphicsWindow.PenColor = ClrBorderDark
  SmShape[17] = Shapes.AddRectangle(60, 60)
  Shapes.Move(SmShape[17], dDownPosX + 215, 115)
  GraphicsWindow.BrushColor = BrushColor
  SmShape[16] = Shapes.AddRectangle(60, 60)
  Shapes.Move(SmShape[16], dDownPosX + 195, 100)
  If SprayColors = 1 Then
    Shapes.HideShape(SmShape[17])
    Shapes.Move(SmShape[22], dDownPosX + 98, 98)
  Else
    Shapes.ShowShape(SmShape[17])
    Shapes.Move(SmShape[22], dDownPosX + 98, 133)
  EndIf
  SmShape[18] = Shapes.AddImage(Load_ImgCloseSm)
  Shapes.Move(SmShape[18], dDownPosX + 258, 49)
  CurrentMenu = "SprayMenu"
EndSub

'CloseSprayMenu
Sub CloseSprayMenu
  For Times = 1 To Array.GetItemCount(SmShape)
    Shapes.Remove(SmShape[Times])
  EndFor
  For Loop = 3 To 5
    For Times = 1 To 5
      Shapes.Remove(SmShape[Loop][Times])
    EndFor
  EndFor
  For Times = 1 To 5
    Shapes.Remove(SmShape[19][Times])
    Controls.Remove(SmShape[24][Times])
    Controls.Remove(SmShape[25][Times])
  EndFor
  CurrentMenu = "MainPaint"
EndSub

'LoadTextMenu
Sub LoadTextMenu
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = ClrBasicDark
  TmShape[1] = Shapes.AddRectangle(300, 460)
  Shapes.Move(TmShape[1], dDownPosX, 50)
  GraphicsWindow.BrushColor = ClrTextDark
  TmShape[2] = Shapes.AddText("Text to draw:")
  Shapes.Move(TmShape[2], dDownPosX + 10, 60)
  TmShape[3] = Shapes.AddRectangle(250, 1)
  Shapes.Move(TmShape[3], dDownPosX + 10, 75)
  GraphicsWindow.BrushColor = "Black"
  TmShape[4] = Controls.AddMultiLineTextBox(dDownPosX + 10, 85)
  Controls.SetSize(TmShape[4], 280, 150)
  Controls.SetTextBoxText(TmShape[4], OldTxtBody)
  TmShape[5] = Controls.AddButton("Clear", dDownPosX + 10, 240)
  Controls.SetSize(TmShape[5], 280, 23)
  GraphicsWindow.BrushColor = ClrTextDark
  TmShape[6] = Shapes.AddText("Font name:")
  Shapes.Move(TmShape[6], dDownPosX + 10, 270)
  TmShape[7] = Shapes.AddRectangle(280, 1)
  Shapes.Move(TmShape[7], dDownPosX + 10, 285)
  GraphicsWindow.BrushColor = "Black"
  TmShape[9] = Controls.AddTextBox(dDownPosX + 10, 295)
  Controls.SetSize(TmShape[9], 280, 20)
  Controls.SetTextBoxText(TmShape[9], OldTxtName)
  GraphicsWindow.BrushColor = ClrTextDark
  TmShape[10] = Shapes.AddText("Font size:")
  Shapes.Move(TmShape[10], dDownPosX + 10, 330)
  TmShape[11] = Shapes.AddRectangle(280, 1)
  Shapes.Move(TmShape[11], dDownPosX + 10, 345)
  GraphicsWindow.BrushColor = "Black"
  TmShape[13] = Controls.AddTextBox(dDownPosX + 10, 355)
  Controls.SetSize(TmShape[13], 280, 20)
  Controls.SetTextBoxText(TmShape[13], OldTxtSize)
  TmShape[15] = Shapes.AddImage(Load_ImgCloseSm)
  Shapes.Move(TmShape[15], dDownPosX + 269, 49)
  xCloseTm = Shapes.GetLeft(TmShape[15])
  yCloseTm = Shapes.GetTop(TmShape[15])
  GraphicsWindow.BrushColor = ClrTextDark
  TmShape[16] = Shapes.AddText("Font style:")
  Shapes.Move(TmShape[16], dDownPosX + 10, 390)
  TmShape[17] = Shapes.AddRectangle(280, 1)
  Shapes.Move(TmShape[17], dDownPosX + 10, 405)
  GraphicsWindow.BrushColor = "Cyan"
  TmShape[21] = Shapes.AddRectangle(139, 27)
  Shapes.Move(TmShape[21], dDownPosX + 8, 413)
  TmShape[22] = Shapes.AddRectangle(139, 27)
  Shapes.Move(TmShape[22], dDownPosX + 153, 413)
  TmShape[23] = Shapes.AddRectangle(139, 27)
  Shapes.Move(TmShape[23], dDownPosX + 8, 473)
  TmShape[24] = Shapes.AddRectangle(139, 27)
  Shapes.Move(TmShape[24], dDownPosX + 153, 473)
  ConfigureOldTxtFontStyle()
  ConfigureTmBackground()
  GraphicsWindow.BrushColor = "Black"
  TmShape[19] = Controls.AddButton("Bold", dDownPosX + 10, 415)
  Controls.SetSize(TmShape[19], 135, 23)
  TmShape[20] = Controls.AddButton("Italic", dDownPosX + 155, 415)
  Controls.SetSize(TmShape[20], 135, 23)
  GraphicsWindow.BrushColor = ClrTextDark
  TmShape[8] = Shapes.AddText("Background:")
  Shapes.Move(TmShape[8], dDownPosX + 10, 450)
  TmShape[12] = Shapes.AddRectangle(280, 1)
  Shapes.Move(TmShape[12], dDownPosX + 10, 465)
  GraphicsWindow.BrushColor = "Black"
  TmShape[18] = Controls.AddButton("Solid", dDownPosX + 10, 475)
  Controls.SetSize(TmShape[18], 135, 23)
  TmShape[14] = Controls.AddButton("Transparent", dDownPosX + 155, 475)
  Controls.SetSize(TmShape[14], 135, 23)
  CurrentMenu = "TextMenu"
EndSub

'CloseTextMenu
Sub CloseTextMenu
  For Times = 1 To Array.GetItemCount(TmShape)
    Shapes.Remove(TmShape[Times])
  EndFor
EndSub

'ConfigureOldTxtFontStyle
Sub ConfigureOldTxtFontStyle
  If OldTxtFontBold = "False" And OldTxtFontItalic = "False" Then
    OldTxtFontStyle = "None"
    Shapes.HideShape(TmShape[21])
    Shapes.HideShape(TmShape[22])
  ElseIf OldTxtFontBold = "True" And OldTxtFontItalic = "True" Then
    OldTxtFontStyle = "Bold, Italic"
    Shapes.ShowShape(TmShape[21])
    Shapes.ShowShape(TmShape[22])
  ElseIf OldTxtFontBold = "True" And OldTxtFontItalic = "False" Then
    OldTxtFontStyle = "Bold"
    Shapes.ShowShape(TmShape[21])
    Shapes.HideShape(TmShape[22])
  Else
    OldTxtFontStyle = "Italic"
    Shapes.HideShape(TmShape[21])
    Shapes.ShowShape(TmShape[22])
  EndIf
EndSub

'ConfigureTmBackground
Sub ConfigureTmBackground
  If OldTxtSolid = "True" Then
    Shapes.ShowShape(TmShape[23])
  Else
    Shapes.HideShape(TmShape[23])
  EndIf
  If OldTxtTransparent = "True" Then
    Shapes.ShowShape(TmShape[24])
  Else
    Shapes.HideShape(TmShape[24])
  EndIf
EndSub

'LoadShapesMenu
Sub LoadShapesMenu
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = ClrBasicDark
  ShMShape[1] = Shapes.AddRectangle(230, 360)
  Shapes.Move(ShMShape[1], dDownPosX, 50)
  GraphicsWindow.BrushColor = ClrTextDark
  ShMShape[2] = Shapes.AddText("Shape:")
  Shapes.Move(ShMShape[2], dDownPosX + 10, 60)
  ShMShape[3] = Shapes.AddRectangle(180, 1)
  Shapes.Move(ShMShape[3], dDownPosX + 10, 75)
  GraphicsWindow.BrushColor = "Cyan"
  ShMShape[12] = Shapes.AddRectangle(104, 84)
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = ClrBackDark
  ShMShape[4] = Shapes.AddRectangle(100, 80)
  Shapes.Move(ShMShape[4], dDownPosX + 10, 85)
  ShMShape[5] = Shapes.AddRectangle(100, 80)
  Shapes.Move(ShMShape[5], dDownPosX + 120, 85)
  ShMShape[6] = Shapes.AddRectangle(100, 80)
  Shapes.Move(ShMShape[6], dDownPosX + 10, 175)
  ShMShape[7] = Shapes.AddRectangle(100, 80)
  Shapes.Move(ShMShape[7], dDownPosX + 120, 175)
  GraphicsWindow.PenColor = BrushColor
  ShMShape[8] = Shapes.AddLine(dDownPosX + 20, 95, dDownPosX + 100, 155)
  ShMShape[9] = Shapes.AddRectangle(60, 60)
  Shapes.Move(ShMShape[9], dDownPosX + 140, 95)
  ShMShape[10] = Shapes.AddEllipse(60, 60)
  Shapes.Move(ShMShape[10], dDownPosX + 30, 185)
  ShMShape[11] = Shapes.AddTriangle(dDownPosX + 170, 185, dDownPosX + 140, 245, dDownPosX + 200, 245)
  GraphicsWindow.BrushColor = ClrTextDark
  ShMShape[13] = Shapes.AddText("Background:")
  Shapes.Move(ShMShape[13], dDownPosX + 10, 270)
  GraphicsWindow.PenColor = ClrBorderDark
  ShMShape[14] = Shapes.AddRectangle(210, 1)
  Shapes.Move(ShMShape[14], dDownPosX + 10, 285)
  GraphicsWindow.BrushColor = "Cyan"
  ShMShape[17] = Shapes.AddRectangle(104, 27)
  GraphicsWindow.BrushColor = "Black"
  ShMShape[15] = Controls.AddButton("Solid", dDownPosX + 10, 295)
  Controls.SetSize(ShMShape[15], 100, 23)
  ShMShape[16] = Controls.AddButton("Transparent", dDownPosX + 120, 295)
  Controls.SetSize(ShMShape[16], 100, 23)
  GraphicsWindow.BrushColor = ClrTextDark
  ShMShape[18] = Shapes.AddText("Border thickness:")
  Shapes.Move(ShMShape[18], dDownPosX + 10, 335)
  ShMShape[19] = Shapes.AddRectangle(210, 1)
  Shapes.Move(ShMShape[19], dDownPosX + 10, 350)
  GraphicsWindow.BrushColor = "Cyan"
  ShMShape[22] = Shapes.AddEllipse(38, 38)
  Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
  GraphicsWindow.BrushColor = ClrBackDark
  For Times = 1 To 5
    GraphicsWindow.PenWidth = 1
    GraphicsWindow.PenColor = "Black"
    ShMShape[20][Times] = Shapes.AddEllipse(35, 35)
    Shapes.Move(ShMShape[20][Times], dDownPosX + 42 * Times - 29, 360)
    GraphicsWindow.PenWidth = Times - 1
    GraphicsWindow.PenColor = BrushColor
    ShMShape[21][Times] = Shapes.AddLine(0, 0, 20, 0)
    Shapes.Move(ShMShape[21][Times], dDownPosX + 42 * Times - 22, 377)
    ShMShape[23][Times] = Controls.AddButton("", dDownPosX + 42 * Times - 29, 360)
    Controls.SetSize(ShMShape[23][Times], 35, 35)
    Shapes.SetOpacity(ShMShape[23][Times], 0)
  EndFor
  ShMShape[0] = Shapes.AddImage(Load_ImgCloseSm)
  Shapes.Move(ShMShape[0], dDownPosX + 199, 49)
  UpdateShapesDialog()
  CurrentMenu = "ShapesMenu"
EndSub

'CloseShapesMenu
Sub CloseShapesMenu
  For Times = 0 To Array.GetItemCount(ShMShape)
    Shapes.Remove(ShMShape[Times])
  EndFor
  For Times = 1 To 5
    Shapes.Remove(ShMShape[20][Times])
    Shapes.Remove(ShMShape[21][Times])
    Controls.Remove(ShMShape[23][Times])
  EndFor
  GraphicsWindow.PenWidth = 1
EndSub

'UpdateShapesDialog
Sub UpdateShapesDialog
  For Times = 8 To 11
    Shapes.Remove(ShMShape[Times])
  EndFor
  If CurrentShape = "Line" Then
    Shapes.Move(ShMShape[12], dDownPosX + 8, 83)
  ElseIf CurrentShape = "Rectangle" Then
    Shapes.Move(ShMShape[12], dDownPosX + 118, 83)
  ElseIf CurrentShape = "Ellipse" Then
    Shapes.Move(ShMShape[12], dDownPosX + 8, 173)
  ElseIf CurrentShape = "Triangle" Then
    Shapes.Move(ShMShape[12], dDownPosX + 118, 173)
  EndIf
  If BackgroundShapes = "Solid" Then
    GraphicsWindow.BrushColor = SecondColor
  ElseIf BackgroundShapes = "Transparent" Then
    GraphicsWindow.BrushColor = ClrBackDark
  EndIf
  GraphicsWindow.PenWidth = PenWidthShapes + 1
  ShMShape[8] = Shapes.AddLine(dDownPosX + 20, 95, dDownPosX + 100, 155)
  GraphicsWindow.PenWidth = PenWidthShapes
  ShMShape[9] = Shapes.AddRectangle(60, 60)
  Shapes.Move(ShMShape[9], dDownPosX + 140, 95)
  ShMShape[10] = Shapes.AddEllipse(60, 60)
  Shapes.Move(ShMShape[10], dDownPosX + 30, 185)
  ShMShape[11] = Shapes.AddTriangle(dDownPosX + 170, 185, dDownPosX + 140, 245, dDownPosX + 200, 245)
  GraphicsWindow.BrushColor = ClrTextDark
  If BackgroundShapes = "Solid" Then
    Shapes.Move(ShMShape[17], dDownPosX + 8, 293)
  ElseIf BackgroundShapes = "Transparent" Then
    Shapes.Move(ShMShape[17], dDownPosX + 118, 293)
  EndIf
EndSub

'LoadMirrorMenu
Sub LoadMirrorMenu
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = ClrBasicDark
  MmShape[1] = Shapes.AddRectangle(210, 180)
  Shapes.Move(MmShape[1], dDownPosX, 50)
  GraphicsWindow.BrushColor = "Cyan"
  MmShape[4] = Shapes.AddRectangle(94, 94)
  If CurrentMirror = "Horizontal" Then
    Shapes.Move(MmShape[4], dDownPosX + 8, 83)
  ElseIf CurrentMirror = "Vertical" Then
    Shapes.Move(MmShape[4], dDownPosX + 108, 83)
  Else
    Shapes.HideShape(MmShape[4])
  EndIf
  GraphicsWindow.BrushColor = ClrBackDark
  MmShape[2] = Shapes.AddRectangle(90, 90)
  Shapes.Move(MmShape[2], dDownPosX + 10, 85)
  MmShape[3] = Shapes.AddRectangle(90, 90)
  Shapes.Move(MmShape[3], dDownPosX + 110, 85)
  MmShape[7] = Shapes.AddImage(Load_ImgHorizontal)
  Shapes.Move(MmShape[7], dDownPosX + 25, 100)
  MmShape[8] = Shapes.AddImage(Load_ImgVertical)
  Shapes.Move(MmShape[8], dDownPosX + 125, 100)
  MmShape[5] = Controls.AddButton("", dDownPosX + 10, 90)
  Controls.SetSize(MmShape[5], 90, 90)
  Shapes.SetOpacity(MmShape[5], 0)
  MmShape[6] = Controls.AddButton("", dDownPosX + 110, 90)
  Controls.SetSize(MmShape[6], 90, 90)
  Shapes.SetOpacity(MmShape[6], 0)
  GraphicsWindow.BrushColor = "Black"
  MmShape[9] = Controls.AddButton("Remove all mirrors", dDownPosX + 10, 190)
  Controls.SetSize(MmShape[9], 190, 23)
  GraphicsWindow.BrushColor = ClrTextDark
  MmShape[10] = Shapes.AddText("Mirror type:")
  Shapes.Move(MmShape[10], dDownPosX + 10, 60)
  MmShape[11] = Shapes.AddRectangle(160, 1)
  Shapes.Move(MmShape[11], dDownPosX + 10, 75)
  MmShape[12] = Shapes.AddImage(Load_ImgCloseSm)
  Shapes.Move(MmShape[12], dDownPosX + 179, 49)
  CurrentMenu = "MirrorMenu"
EndSub

'CloseMirrorMenu
Sub CloseMirrorMenu
  For Times = 1 To Array.GetItemCount(MmShape)
    Shapes.Remove(MmShape[Times])
  EndFor
  CurrentMenu = "MainPaint"
EndSub

'AddHorizontalMirror
Sub AddHorizontalMirror
  CloseMirrorMenu()
  RemoveMirrors()
  CurrentMirror = "Horizontal"
  Shapes.ShowShape(hSeparator)
  MirrorAdded = "True"
EndSub

'AddVerticalMirror
Sub AddVerticalMirror
  CloseMirrorMenu()
  RemoveMirrors()
  CurrentMirror = "Vertical"
  Shapes.ShowShape(vSeparator)
  MirrorAdded = "True"
EndSub

'RemoveMirrors
Sub RemoveMirrors
  CloseMirrorMenu()
  Shapes.HideShape(hSeparator)
  Shapes.HideShape(vSeparator)
  CurrentMirror = "None"
  MirrorAdded = "False"
EndSub

'LoadSelectLoadingMenu
Sub LoadSelectLoadingMenu
  GraphicsWindow.PenWidth = 1
  GraphicsWindow.PenColor = ClrBorderDark
  GraphicsWindow.BrushColor = ClrBasicDark
  wWidth2 = GraphicsWindow.Width
  wHeight2 = GraphicsWindow.Height
  SlmShape[1] = Shapes.AddRectangle(400, 150)
  Shapes.Move(SlmShape[1], (wWidth2 - 400) / 2, (wHeight2 - 100) / 2)
  GraphicsWindow.BrushColor = ClrBackDark
  SlmShape[2] = Shapes.AddRectangle(380, 110)
  Shapes.Move(SlmShape[2], (wWidth2 - 380) / 2, (wHeight2 - 40) / 2)
  GraphicsWindow.BrushColor = "White"
  SlmShape[3] = Shapes.AddText("Selecting area")
  Shapes.Move(SlmShape[3], (wWidth2 - 90) / 2 (wHeight2 / 2) - 40)
  GraphicsWindow.BrushColor = ClrTextDark
  SlmShape[4] = Shapes.AddText("Please wait while the area is being selected.")
  Shapes.Move(SlmShape[4], (wWidth2 - 250) / 2 (wHeight2 / 2) + 10)
  GraphicsWindow.BrushColor = ClrBasicDark
  SlmShape[5] = Shapes.AddRectangle(300, 10)
  Shapes.Move(SlmShape[5], (wWidth2 - 300) / 2, (wHeight2 / 2) + 40)
  GraphicsWindow.PenColor = "Cyan"
  GraphicsWindow.BrushColor = "DarkTurquoise"
  SlmShape[6] = Shapes.AddRectangle(50, 8)
  Shapes.Move(SlmShape[6], (wWidth2 - 300) / 2 + 1, (wHeight2 / 2) + 41)
  CurrentMenu = "SelectLoadingMenu"
EndSub

'LoadSelectedArea
Sub LoadSelectedArea
  MaxSelectedPixels = (xUp - xDown) * (yUp - yDown)
  LbWidthAddition = 298 / MaxSelectedPixels
  LbWidth = 0
  Shapes.SetOpacity(IndiSelect, 10)
  For Loop = 1 To xUp - xDown
    For Times = 1 To yUp - yDown
      SelectedPixel[Loop][Times] = GraphicsWindow.GetPixel(Loop, Times)
      LbWidth = LbWidth + LbWidthAddition
      Controls.SetSize(SlmShape[6], LbWidth, 8)
    EndFor
  EndFor
  Sound.PlayAndWait("C:\Windows\Media\Windows Default.wav")
  Shapes.Remove(SlmShape[4])
  Shapes.Remove(SlmShape[5])
  Shapes.Remove(SlmShape[6])
  Shapes.SetOpacity(IndiSelect, 30)
EndSub

'Subroutines - System
'********************
'ButtonDown
Controls.ButtonClicked = ButtonClicked
Sub ButtonClicked
  LastBtn = Controls.LastClickedButton
  If LastBtn = CdShape[18] Then
    If CurrentColor = "First" Then
      Shapes.Move(CdShape[5], xOldRed, yPosRedSlide)
      Shapes.Move(CdShape[6], xOldGreen, yPosGreenSlide)
      Shapes.Move(CdShape[7], xOldBlue, yPosBlueSlide)
      Controls.SetTextBoxText(CdShape[12], xOldRed - 25)
      Controls.SetTextBoxText(CdShape[13], xOldGreen - 25)
      Controls.SetTextBoxText(CdShape[14], xOldBlue - 25)
      UpdateColorIndicators()
    ElseIf CurrentColor = "Second" Then
      Shapes.Move(CdShape[5], xOldRed2, yPosRedSlide)
      Shapes.Move(CdShape[6], xOldGreen2, yPosGreenSlide)
      Shapes.Move(CdShape[7], xOldBlue2, yPosBlueSlide)
      Controls.SetTextBoxText(CdShape[12], xOldRed2 - 25)
      Controls.SetTextBoxText(CdShape[13], xOldGreen2 - 25)
      Controls.SetTextBoxText(CdShape[14], xOldBlue2 - 25)
      UpdateColorIndicators()
    EndIf
  ElseIf LastBtn = SmShape[9] Then
    SprayColors = 1
    Shapes.HideShape(SmShape[17])
    Shapes.Move(SmShape[22], dDownPosX + 98, 98)
  ElseIf LastBtn = SmShape[10] Then
    SprayColors = 2
    Shapes.ShowShape(SmShape[17])
    Shapes.Move(SmShape[22], dDownPosX + 98, 133)
  ElseIf LastBtn = SmShape[11] Then
    SpraySpeed = 10
    xSpraySpeedIndi = dDownPosX + 93
    Shapes.Move(SmShape[21], xSpraySpeedIndi, 298)
  ElseIf LastBtn = SmShape[12] Then
    SpraySpeed = 1
    xSpraySpeedIndi = dDownPosX + 188
    Shapes.Move(SmShape[21], xSpraySpeedIndi, 298)
  ElseIf LastBtn = SmShape[24][1] Then
    Controls.Move(SmShape[23], dDownPosX + 10, 65)
    DdSpraySizeIndiTop = 65
    SpraySize = 10
  ElseIf LastBtn = SmShape[24][2] Then
    Controls.Move(SmShape[23], dDownPosX + 10, 115)
    DdSpraySizeIndiTop = 115
    SpraySize = 15
  ElseIf LastBtn = SmShape[24][3] Then
    Controls.Move(SmShape[23], dDownPosX + 10, 165)
    DdSpraySizeIndiTop = 165
    SpraySize = 20
  ElseIf LastBtn = SmShape[24][4] Then
    Controls.Move(SmShape[23], dDownPosX + 10, 215)
    DdSpraySizeIndiTop = 215
    SpraySize = 25
  ElseIf LastBtn = SmShape[24][5] Then
    Controls.Move(SmShape[23], dDownPosX + 10, 265)
    DdSpraySizeIndiTop = 265
    SpraySize = 30
  ElseIf LastBtn = SmShape[25][1] Then
    Shapes.Move(SmShape[20], dDownPosX + 91, 218)
    DdDotSizeIndiLeft = dDownPosX + 91
    SprayDotSize = 1
  ElseIf LastBtn = SmShape[25][2] Then
    Shapes.Move(SmShape[20], dDownPosX + 129, 218)
    DdDotSizeIndiLeft = dDownPosX + 129
    SprayDotSize = 2
  ElseIf LastBtn = SmShape[25][3] Then
    Shapes.Move(SmShape[20], dDownPosX + 167, 218)
    DdDotSizeIndiLeft = dDownPosX + 167
    SprayDotSize = 3
  ElseIf LastBtn = SmShape[25][4] Then
    Shapes.Move(SmShape[20], dDownPosX + 205, 218)
    DdDotSizeIndiLeft = dDownPosX + 205
    SprayDotSize = 4
  ElseIf LastBtn = SmShape[25][5] Then
    Shapes.Move(SmShape[20], dDownPosX + 243, 218)
    DdDotSizeIndiLeft = dDownPosX + 243
    SprayDotSize = 5
  ElseIf LastBtn = TmShape[5] Then
    Controls.SetTextBoxText(TmShape[4], "")
  ElseIf LastBtn = TmShape[19] Then
    If OldTxtFontBold = "False" Then
      OldTxtFontBold = "True"
      Shapes.ShowShape(TmShape[21])
    Else
      OldTxtFontBold = "False"
      Shapes.HideShape(TmShape[21])
    EndIf
  ElseIf LastBtn = TmShape[20] Then
    If OldTxtFontItalic = "False" Then
      OldTxtFontItalic = "True"
      Shapes.ShowShape(TmShape[22])
    Else
      OldTxtFontItalic = "False"
      Shapes.HideShape(TmShape[22])
    EndIf
  ElseIf LastBtn = TmShape[18] Then
    OldTxtSolid = "True"
    OldTxtTransparent = "False"
    Shapes.ShowShape(TmShape[23])
    Shapes.HideShape(TmShape[24])
  ElseIf LastBtn = TmShape[14] Then
    OldTxtTransparent = "True"
    OldTxtSolid = "False"
    Shapes.ShowShape(TmShape[24])
    Shapes.HideShape(TmShape[23])
  ElseIf LastBtn = ShMShape[23][1] Then
    If BackgroundShapes = "Transparent" Then
      GraphicsWindow.ShowMessage("The thickness of the border can't be 0 when the background of the shape is transparent.", "Information")
    Else
      xIndiPenWidthSh = 451.5
      PenWidthShapes = 0
      Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
      UpdateShapesDialog()
    EndIf
  ElseIf LastBtn = ShMShape[23][2] Then
    xIndiPenWidthSh = 493.5
    PenWidthShapes = 1
    Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
    UpdateShapesDialog()
  ElseIf LastBtn = ShMShape[23][3] Then
    xIndiPenWidthSh = 535.5
    PenWidthShapes = 2
    Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
    UpdateShapesDialog()
  ElseIf LastBtn = ShMShape[23][4] Then
    xIndiPenWidthSh = 577.5
    PenWidthShapes = 3
    Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
    UpdateShapesDialog()
  ElseIf LastBtn = ShMShape[23][5] Then
    xIndiPenWidthSh = 619.5
    PenWidthShapes = 4
    Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)
    UpdateShapesDialog()
  ElseIf LastBtn = ShMShape[15] Then
    BackgroundShapes = "Solid"
    UpdateShapesDialog()
  ElseIf LastBtn = ShMShape[16] Then
    If PenWidthShapes = 0 Then
      GraphicsWindow.ShowMessage("The background of the shape can't be transparent when the thickness of the border is 0.", "Information")
    Else
      BackgroundShapes = "Transparent"
      UpdateShapesDialog()
    EndIf
  ElseIf LastBtn = MmShape[5] Then
    AddHorizontalMirror()
  ElseIf LastBtn = MmShape[6] Then
    AddVerticalMirror()
  ElseIf LastBtn = MmShape[9] Then
    RemoveMirrors()
  EndIf
EndSub

'MouseDown
GraphicsWindow.MouseDown = MouseDown
Sub MouseDown
  xDown = GraphicsWindow.MouseX
  yDown = GraphicsWindow.MouseY
  If CurrentMenu = "MainPaint" Then
    If yDown > 0 And yDown < 50 Then
      If xDown > 0 And xDown < 50 Then
        Sound.PlayClick()
        dDownPosX = 0
        LoadColorDialog()
      ElseIf xDown > 55 And xDown < 105 Then
        Sound.PlayClick()
        CurrentTool = "Pencil"
        AddTool()
        If Mouse.IsRightButtonDown Then
          dDownPosX = 57
          DropDownTool = "Pencil"
          ShowDropDown()
        EndIf
      ElseIf  xDown > 110 and xDown < 160 then
        Sound.PlayClick()
        CurrentTool = "Brush"
        AddTool()
        If Mouse.IsRightButtonDown Then
          dDownPosX = 112
          DropDownTool = "Brush"
          ShowDropDown()
        EndIf
      ElseIf  xDown > 165 and xDown < 215 then
        Sound.PlayClick()
        CurrentTool = "Eraser"
        AddTool()
        If Mouse.IsRightButtonDown Then
          dDownPosX = 167
          DropDownTool = "Eraser"
          ShowDropDown()
        EndIf
      ElseIf xDown > 220 And xDown < 270 Then
        If Mouse.IsLeftButtonDown = "True" Then
          LoadColorPicker()
          Sound.PlayClick()
          Mouse.HideCursor()
          CurrentTool = "ColorPicker"
          CurrentMenu = "ColorPicker"
          AddTool()
        EndIf
      ElseIf xDown > 275 And xDown < 325 Then
        Sound.PlayClick()
        CurrentTool = "Spray"
        If Mouse.IsRightButtonDown Then
          dDownPosX = 285
          LoadSprayMenu()
        EndIf
      ElseIf xDown > 330 And xDown < 380 Then
        Sound.PlayClick()
        CurrentTool = "Text"
        AddTool()
        If Mouse.IsRightButtonDown = "True" Then
          dDownPosX = 330
          RemoveAllIndicatorIcons()
          LoadTextMenu()
        EndIf
      ElseIf xDown > 385 And xDown < 435 Then
        Sound.PlayClick()
        CurrentTool = "Fill"
        AddTool()
        RemoveAllIndicatorIcons()
      ElseIf xDown > 440 And xDown < 490 Then
        Sound.PlayClick()
        CurrentTool = "Shapes"
        AddTool()
        If Mouse.IsRightButtonDown = "True" Then
          dDownPosX = 440
          LoadShapesMenu()
        EndIf
      ElseIf xDown > 495 And xDown < 545 Then
        Sound.PlayClick()
        dDownPosX = 495
        CurrentTool = "Mirror"
        LoadMirrorMenu()
      EndIf
    Else
      CanDraw = "True"
      Draw()
    EndIf
    If yDown > 50 Then
      If CurrentTool = "Select" And CanAddIndiSelect = "True" Then
        GraphicsWindow.PenColor = "Black"
        GraphicsWindow.BrushColor = "SkyBlue"
        IndiSelect = Shapes.AddRectangle(0, 0)
        Shapes.Move(IndiSelect, xDown, yDown)
        Shapes.SetOpacity(IndiSelect, 30)
        CanMoveIndiSelect = "True"
      ElseIf CurrentTool = "Text" Then
        GraphicsWindow.PenWidth = 2
        GraphicsWindow.PenColor = "Black"
        TxtIndiLineH = Shapes.AddLine(xDown, yDown, xDown + 50, yDown)
        TxtIndiLineV = Shapes.AddLine(xDown, yDown, xDown, yDown + 50)
        TxtIndiLineH2 = Shapes.AddLine(0, 0, 50, 0)
        TxtIndiLineV2 = Shapes.AddLine(0, 0, 0, 50)
        CanMoveTxtIndies = "True"
      ElseIf CurrentTool = "Shapes" Then
        GraphicsWindow.PenColor = BrushColor
        GraphicsWindow.BrushColor = SecondColor
        GraphicsWindow.PenWidth = PenWidthShapes
        If CurrentShape = "Rectangle" Or CurrentShape = "Triangle" Then
          IndiDrawRec = Shapes.AddRectangle(0, 0)
          Shapes.Move(IndiDrawRec, xDown, yDown)
        ElseIf CurrentShape = "Ellipse" Then
          IndiDrawEl = Shapes.AddEllipse(0, 0)
          Shapes.Move(IndiDrawEl, xDown, yDown)  
        ElseIf CurrentShape = "Line" Then
          GraphicsWindow.PenWidth = 1
          IndiDrawLine1 = Shapes.AddEllipse(10, 10)
          IndiDrawLine2 = Shapes.AddEllipse(10, 10)
          Shapes.Move(IndiDrawLine1, xDown - 5, yDown - 5)
          Shapes.Move(IndiDrawLine2, xDown, yDown)
        EndIf
      EndIf
    EndIf
  ElseIf CurrentMenu = "ColorDialog" Then
    If Mouse.IsLeftButtonDown = "True" Then
      GetSlideData()
      xFirstColor = Shapes.GetLeft(CdShape[16])
      yFirstColor = Shapes.GetTop(CdShape[16])
      xSecondColor = Shapes.GetLeft(CdShape[17])
      ySecondColor = Shapes.GetTop(CdShape[17])
      If xDown > xPosRedSlide And xDown < xPosRedSlide + 23 And yDown > yPosRedSlide And yDown < yPosRedSlide + 23 Then
        CanMoveRedSlide = "True"
      ElseIf xDown > xPosGreenSlide And xDown < xPosGreenSlide + 23 And yDown > yPosGreenSlide And yDown < yPosGreenSlide + 23 Then
        CanMoveGreenSlide = "True"
      ElseIf xDown > xPosBlueSlide And xDown < xPosBlueSlide + 23 And yDown > yPosBlueSlide And yDown < yPosBlueSlide + 23 Then
        CanMoveBlueSlide = "True"  
      EndIf
      If xDown > xFirstColor And xDown < xFirstColor + 65 And yDown > yFirstColor And yDown < yFirstColor + 80 Then
        CurrentColor = "First"
        Shapes.Move(CdShape[15], 164, 247)
        Shapes.Move(CdShape[5], xPrevRed, yPosRedSlide)
        Shapes.Move(CdShape[6], xPrevGreen, yPosGreenSlide)
        Shapes.Move(CdShape[7], xPrevBlue, yPosBlueSlide)
        Controls.SetTextBoxText(CdShape[12], xPrevRed - 25)
        Controls.SetTextBoxText(CdShape[13], xPrevGreen - 25)
        Controls.SetTextBoxText(CdShape[14], xPrevBlue - 25)
      ElseIf xDown > xSecondColor And xDown < xSecondColor + 65 And yDown > ySecondColor And yDown < ySecondColor + 80 Then
        CurrentColor = "Second"
        Shapes.Move(CdShape[15], 239, 247)
        Shapes.Move(CdShape[5], xPrevRed2, yPosRedSlide)
        Shapes.Move(CdShape[6], xPrevGreen2, yPosGreenSlide)
        Shapes.Move(CdShape[7], xPrevBlue2, yPosBlueSlide)
        Controls.SetTextBoxText(CdShape[12], xPrevRed2 - 25)
        Controls.SetTextBoxText(CdShape[13], xPrevGreen2 - 25)
        Controls.SetTextBoxText(CdShape[14], xPrevBlue2 - 25)
      EndIf
    ElseIf Mouse.IsRightButtonDown = "True" Then
      RemoveAllSubMenus()
    EndIf
  ElseIf CurrentMenu = "ColorPicker" Then
    If Mouse.IsLeftButtonDown = "True" Then
      xCpBorder = Shapes.GetLeft(CpShape[1])
      yCpBorder = Shapes.GetTop(CpShape[1])
      xCloseCp = Shapes.GetLeft(CpShape[5])
      yCloseCp = Shapes.GetTop(CpShape[5])
      If xDown > xCpBorder And xDown < xCpBorder + 130 And yDown > yCpBorder And yDown < yCpBorder + 155 Then
        If xDown > xCloseCp And xDown < xCloseCp + 32 And yDown > yCloseCp And yDown < yCloseCp + 32 Then
          RemoveAllSubMenus()
        Else  
          CanMoveCp = "True"
        EndIf
      EndIf
      If CanGetPixel = "True" Then
        PixelPicked = GraphicsWindow.GetPixel(xDown, yDown)
        GraphicsWindow.PenColor = ClrBorderDark
        GraphicsWindow.BrushColor = PixelPicked
        Shapes.Remove(CpShape[4])
        CpShape[4] = Shapes.AddRectangle(110, 110)
        Shapes.Move(CpShape[4], CpLeft + 10, CpTop + 85)
        Shapes.SetText(CpShape[3], PixelPicked)
        BrushColor = PixelPicked
        GraphicsWindow.PenColor = PixelPicked
      EndIf
    ElseIf Mouse.IsRightButtonDown = "True" Then
      PixelPicked = GraphicsWindow.GetPixel(xDown, yDown)
      GraphicsWindow.PenColor = ClrBorderDark
      GraphicsWindow.BrushColor = PixelPicked
      Shapes.Remove(CpShape[4])
      CpShape[4] = Shapes.AddRectangle(110, 110)
      Shapes.Move(CpShape[4], CpLeft + 10, CpTop + 85)
      Shapes.SetText(CpShape[3], PixelPicked)
      GraphicsWindow.PenColor = PixelPicked
      SecondColor = PixelPicked
    EndIf
  ElseIf CurrentMenu = "SprayMenu" Then
    xCloseSm = Shapes.GetLeft(SmShape[18])
    yCloseSm = Shapes.GetTop(SmShape[18])
    If xDown > xCloseSm And xDown < xCloseSm + 32 And yDown > yCloseSm And yDown < yCloseSm + 32 Then
      Sound.PlayClick()
      CloseSprayMenu()
    EndIf
  ElseIf CurrentMenu = "TextMenu" Then
    If xDown > xCloseTm And xDown < xCloseTm + 32 And yDown > yCloseTm And yDown < yCloseTm + 32 Then
      Sound.PlayClick()
      TxtBody = Controls.GetTextBoxText(TmShape[4])
      TxtName = Controls.GetTextBoxText(TmShape[9])
      TxtSize = Controls.GetTextBoxText(TmShape[13])
      If TxtBody = "" Or TxtName = "" Or TxtSize = "" Then
        GraphicsWindow.ShowMessage("Please enter all the data in order to proceed.", "Information")
      Else
        If TxtSize < 8 Then
          TxtSize = 8
        EndIf
        OldTxtBody = TxtBody
        OldTxtName = TxtName
        OldTxtSize = TxtSize
        RemoveAllSubMenus()
      EndIf
    EndIf
  ElseIf CurrentMenu = "ShapesMenu" Then
    xCloseShM = Shapes.GetLeft(ShMShape[0])
    yCloseShM = Shapes.GetTop(ShMShape[0])
    If xDown > xCloseShM And xDown < xCloseShM + 32 And yDown > yCloseShM And yDown < yCloseShM + 32 Then
      Sound.PlayClick()
      RemoveAllSubMenus()
    EndIf
    If xDown > dDownPosX + 10 And xDown < dDownPosX + 110 And yDown > 85 And yDown < 165 Then
      Sound.PlayClick()
      CurrentShape = "Line"
      UpdateShapesDialog()
    ElseIf xDown > dDownPosX + 120 And xDown < dDownPosX + 220 And yDown > 85 And yDown < 165 Then
      Sound.PlayClick()
      CurrentShape = "Rectangle"
      UpdateShapesDialog()
    ElseIf xDown > dDownPosX + 10 And xDown < dDownPosX + 110 And yDown > 175 And yDown < 255 Then
      Sound.PlayClick()
      CurrentShape = "Ellipse"
      UpdateShapesDialog()
    ElseIf xDown > dDownPosX + 120 And xDown < dDownPosX + 220 And yDown > 175 And yDown < 255 Then
      Sound.PlayClick()
      CurrentShape = "Triangle"
      UpdateShapesDialog()
    EndIf
  ElseIf CurrentMenu = "MirrorMenu" Then
    xCloseMm = Shapes.GetLeft(MmShape[12])
    yCloseMm = Shapes.GetTop(MmShape[12])
    If xDown > xCloseMm And xDown < xCloseMm + 32 And yDown > yCloseMm And yDown < yCloseMm + 32 Then
      Sound.PlayClick()
      RemoveAllSubMenus()
    EndIf
  EndIf
  If DropDownTool = "Pencil" Then
    If xDown > dDownPosX And xDown < dDownPosX + 47 Then
      If yDown > 50 And yDown < 97 Then
        PencilSize = 1.5
        RemoveAllSubMenus()
      ElseIf yDown > 97 And yDown < 144 Then
        PencilSize = 2.5
        RemoveAllSubMenus()
      ElseIf yDown > 144 And yDown < 191 Then
        PencilSize = 3.5
        RemoveAllSubMenus()
      ElseIf yDown > 191 And yDown < 238 Then
        PencilSize = 4.5
        RemoveAllSubMenus()
      ElseIf yDown > 238 And yDown < 285 Then
        PencilSize = 5.5
        RemoveAllSubMenus()
      EndIf
    EndIf 
  ElseIf DropDownTool = "Brush" Then
    If xDown > dDownPosX And xDown < dDownPosX + 47 Then
      If yDown > 50 And yDown < 97 Then
        BrushSize = 6
        RemoveAllSubMenus()
      ElseIf yDown > 97 And yDown < 144 Then
        BrushSize = 10
        RemoveAllSubMenus()
      ElseIf yDown > 144 And yDown < 191 Then
        BrushSize = 14
        RemoveAllSubMenus()
      ElseIf yDown > 191 And yDown < 238 Then
        BrushSize = 18
        RemoveAllSubMenus()
      ElseIf yDown > 238 And yDown < 285 Then
        BrushSize = 22
        RemoveAllSubMenus()
      EndIf
    EndIf
  ElseIf DropDownTool = "Eraser" Then
    If xDown > dDownPosX And xDown < dDownPosX + 47 Then
      If yDown > 50 And yDown < 97 Then
        EraserSize = 10
        RemoveAllSubMenus()
      ElseIf yDown > 97 And yDown < 144 Then
        EraserSize = 15
        RemoveAllSubMenus()
      ElseIf yDown > 144 And yDown < 191 Then
        EraserSize = 20
        RemoveAllSubMenus()
      ElseIf yDown > 191 And yDown < 238 Then
        EraserSize = 25
        RemoveAllSubMenus()
      ElseIf yDown > 238 And yDown < 285 Then
        EraserSize = 30
        RemoveAllSubMenus()
      EndIf
    EndIf
  ElseIf DropDownTool = "Spray" Then
    If xDown > dDownPosX And xDown < dDownPosX + 47 Then
      If yDown > 50 And yDown < 97 Then
        SpraySize = 10
        RemoveAllSubMenus()
      ElseIf yDown > 97 And yDown < 144 Then
        SpraySize = 15
        RemoveAllSubMenus()
      ElseIf yDown > 144 And yDown < 191 Then
        SpraySize = 20
        RemoveAllSubMenus()
      ElseIf yDown > 191 And yDown < 238 Then
        SpraySize = 25
        RemoveAllSubMenus()
      ElseIf yDown > 238 And yDown < 285 Then
        SpraySize = 30
        RemoveAllSubMenus()
      EndIf
    EndIf    
  EndIf
EndSub

'MouseMove
GraphicsWindow.MouseMove = MouseMove
Sub MouseMove
  xMove = GraphicsWindow.MouseX
  yMove = GraphicsWindow.MouseY
  If CurrentMenu = "MainPaint" Then
    Draw()
    If yMove < 50 Then
      Shapes.ShowShape(ToolIndicator)
      If xMove > 0 And xMove < 50 Then
        Shapes.Move(ToolIndicator, 2, 0)
      ElseIf xMove > 55 And xMove < 105 Then
        Shapes.Move(ToolIndicator, 57, 0)
      ElseIf  xMove > 110 and xMove < 160 Then
        Shapes.Move(ToolIndicator, 112, 0)
      ElseIf  xMove > 165 and xMove < 215 Then
        Shapes.Move(ToolIndicator, 167, 0)
      ElseIf xMove > 220 And xMove < 270 Then
        Shapes.Move(ToolIndicator, 222, 0)
      ElseIf xMove > 275 And xMove < 325 Then
        Shapes.Move(ToolIndicator, 277, 0)
      ElseIf xMove > 330 And xMove < 380 Then
        Shapes.Move(ToolIndicator, 332, 0)
      ElseIf xMove > 385 And xMove < 435 Then
        Shapes.Move(ToolIndicator, 387, 0)
      ElseIf xMove > 440 And xMove < 490 Then
        Shapes.Move(ToolIndicator, 442, 0)
      ElseIf xMove > 495 And xMove < 545 Then
        Shapes.Move(ToolIndicator, 497, 0)
      ElseIf xMove > 550 And xMove < 600 Then
        Shapes.Move(ToolIndicator, 552, 0)
      EndIf
    Else
      Shapes.HideShape(ToolIndicator)
      If CurrentTool = "Select" Then
        If xMove > xDown And yMove > yDown And CanMoveIndiSelect = "True" Then
          Controls.SetSize(IndiSelect, xMove - xDown, yMove - yDown)
        EndIf
      ElseIf CurrentTool = "Text" Then
        If xMove > xDown And yMove > yDown And CanMoveTxtIndies = "True" Then
          Shapes.Move(TxtIndiLineH2, xMoveNew - 50, yMoveNew)
          Shapes.Move(TxtIndiLineV2, xMoveNew, yMoveNew - 50)
        EndIf
      ElseIf CurrentTool = "Shapes" Then
        If xMove > xDown And yMove > yDown Then
          Controls.SetSize(IndiDrawRec, xMove - xDown, yMove - yDown)
          Controls.SetSize(IndiDrawEl, xMove - xDown, yMove - yDown)
        EndIf
        Shapes.Move(IndiDrawLine2, xMove - 5, yMove - 5)
      EndIf
    EndIf
  ElseIf CurrentMenu = "ColorDialog" Then
    If CanMoveRedSlide = "True" Then
      Shapes.Move(CdShape[5], xMove - 12, yPosRedSlide)
    ElseIf CanMoveGreenSlide = "True" Then
      Shapes.Move(CdShape[6], xMove - 12, yPosGreenSlide)
    ElseIf CanMoveBlueSlide = "True" Then
      Shapes.Move(CdShape[7], xMove - 12, yPosBlueSlide)
    EndIf
    If CurrentColor = "First" Then
      xPrevRed = Shapes.GetLeft(CdShape[5])
      xPrevGreen = Shapes.GetLeft(CdShape[6])
      xPrevBlue = Shapes.GetLeft(CdShape[7])
    ElseIf CurrentColor = "Second" Then
      xPrevRed2 = Shapes.GetLeft(CdShape[5])
      xPrevGreen2 = Shapes.GetLeft(CdShape[6])
      xPrevBlue2 = Shapes.GetLeft(CdShape[7])
    EndIf
    If CanMoveRedSlide = "True" Or CanMoveGreenSlide = "True" Or CanMoveBlueSlide = "True" Then
      GetSlideData()
      CheckSlideColision()
      UpdateColorDialog()
    EndIf
  ElseIf CurrentMenu = "ColorPicker" Then
    If yMove > 50 Then
      Mouse.HideCursor()
      CanGetPixel = "True"
      If xMove > CpLeft And xMove < CpLeft + 130 And yMove > CpTop And yMove < CpTop + 205 Then
        CanGetPixel = "False"
        RemoveAllIndicatorIcons()
        Mouse.ShowCursor()
        ToolAdded = "False"
      Else
        If ToolAdded = "False" Then
          AddTool()
          ToolAdded = "True"
        EndIf
      EndIf
    Else
      CanGetPixel = "False"
    EndIf
    If CanMoveCp = "True" Then
      Mouse.ShowCursor()
      CpLeft = xMove - 62
      CpTop = yMove - 60
      MoveColorPicker()
    EndIf
  EndIf
  If DropDownTool = "None" Then
  Else
    If xMove > dDownPosX And xMove < dDownPosX + 47 Then
      If yMove > 50 And yMove < 97 Then
        Shapes.Move(SizeIndicator, dDownPosX - 1.15, 48)
      ElseIf yMove > 97 And yMove < 144 Then
        Shapes.Move(SizeIndicator, dDownPosX - 1.15, 95)
      ElseIf yMove > 144 And yMove < 191 Then
        Shapes.Move(SizeIndicator, dDownPosX - 1.15, 142)
      ElseIf yMove > 191 And yMove < 238 Then
        Shapes.Move(SizeIndicator, dDownPosX - 1.15, 189)
      ElseIf yMove > 238 And yMove < 285 Then
        Shapes.Move(SizeIndicator, dDownPosX - 1.15, 236)
      EndIf
    EndIf
  EndIf
  Shapes.Move(IndicatorPencil, xMove - 2, yMove - 38)
  Shapes.Move(IndicatorBrush, xMove - 3, yMove - 33)
  Shapes.Move(IndicatorEraser, xMove - EraserSize / 2, yMove - EraserSize / 2)
  Shapes.Move(IndicatorColorPicker, xMove, yMove - 29)
  xMoveNew = GraphicsWindow.MouseX
  yMoveNew = GraphicsWindow.MouseY
EndSub

'MouseUp
GraphicsWindow.MouseUp = MouseUp
Sub MouseUp
  xUp = GraphicsWindow.MouseX
  yUp = GraphicsWindow.MouseY
  CanDraw = "False"
  If CurrentMenu = "MainPaint" And yDown < 50 Then
    If xDown > 550 And xDown < 600 Then
      CurrentTool = "Select"
      CanAddSelectLm = "True"
    EndIf
  EndIf
  If CurrentMenu = "ColorDialog" Then
    CanMoveRedSlide = "False"
    CanMoveGreenSlide = "False"
    CanMoveBlueSlide = "False"
    UpdateColorDialog()
    UpdateColorIndicators()
  ElseIf CurrentMenu = "ColorPicker" Then
    CanMoveCp = "False"
  ElseIf CurrentMenu = "MainPaint" Then
    If yUp > 50 Then
      If CurrentTool = "Select" Then
        CanMoveIndiSelect = "False"
        CanAddIndiSelect = "False"
        LoadSelectLoadingMenu()
        LoadSelectedArea()
      ElseIf CurrentTool = "Text" Then
        If xDown >= xUp Or yDown >= yUp Then
          CanMoveTxtIndies = "False"
        Else
          If OldTxtFontBold = "True" Then
            GraphicsWindow.FontBold = "True"
          Else
            GraphicsWindow.FontBold = "False"
          EndIf
          If OldTxtFontItalic = "True" Then
            GraphicsWindow.FontItalic = "True"
          Else
            GraphicsWindow.FontItalic = "False"
          EndIf
          GraphicsWindow.BrushColor = BrushColor
          GraphicsWindow.FontName = TxtName
          GraphicsWindow.FontSize = TxtSize
          If OldTxtTransparent = "True" Then
            GraphicsWindow.DrawBoundText(xDown, yDown, xUp - xDown, TxtBody)
          ElseIf OldTxtSolid = "True" Then
            GraphicsWindow.BrushColor = SecondColor
            GraphicsWindow.FillRectangle(xDown, yDown, xUp - xDown, yUp - yDown)
            GraphicsWindow.BrushColor = BrushColor
            GraphicsWindow.DrawBoundText(xDown, yDown, xUp - xDown, TxtBody)
          EndIf
          CanMoveTxtIndies = "False"
        EndIf
      EndIf
    EndIf
  EndIf
  If CurrentMenu = "MainPaint" Then
    If CurrentTool = "Shapes" And yUp > 50 And yDown > 50 Then
      GraphicsWindow.PenWidth = PenWidthShapes
      GraphicsWindow.PenColor = BrushColor
      GraphicsWindow.BrushColor = SecondColor
      If CurrentShape = "Line" Then
        If PenWidthShapes = 0 Then
          GraphicsWindow.PenWidth = 1
        Else
          GraphicsWindow.PenWidth = PenWidthShapes + 1
        EndIf
        GraphicsWindow.DrawLine(xDown, yDown, xUp, yUp)
      EndIf
      If CurrentTool = "Shapes" And xDown < xUp And yDown < yUp Then
        GraphicsWindow.PenWidth = PenWidthShapes
        GraphicsWindow.PenColor = BrushColor
        GraphicsWindow.BrushColor = SecondColor
        If CurrentShape = "Rectangle" Then
          If BackgroundShapes = "Solid" Then
            GraphicsWindow.FillRectangle(xDown, yDown, xUp - xDown, yUp - yDown)
            GraphicsWindow.DrawRectangle(xDown, yDown, xUp - xDown, yUp - yDown)
          ElseIf BackgroundShapes = "Transparent" Then
            GraphicsWindow.DrawRectangle(xDown, yDown, xUp - xDown, yUp - yDown)
          EndIf
        ElseIf CurrentShape = "Ellipse" Then
          If BackgroundShapes = "Solid" Then
            GraphicsWindow.FillEllipse(xDown, yDown, xUp - xDown, yUp - yDown)
            GraphicsWindow.DrawEllipse(xDown, yDown, xUp - xDown, yUp - yDown)
          ElseIf BackgroundShapes = "Transparent" Then
            GraphicsWindow.DrawEllipse(xDown, yDown, xUp - xDown, yUp - yDown)
          EndIf
        ElseIf CurrentShape = "Triangle" Then
          TriangleWidth = xUp - xDown
          If BackgroundShapes = "Solid" Then
            GraphicsWindow.FillTriangle(xDown + (TriangleWidth / 2), yDown, xDown, yUp, xUp, yUp)
            GraphicsWindow.DrawTriangle(xDown + (TriangleWidth / 2), yDown, xDown, yUp, xUp, yUp)
          ElseIf BackgroundShapes = "Transparent" Then
            GraphicsWindow.DrawTriangle(xDown + (TriangleWidth / 2), yDown, xDown, yUp, xUp, yUp)
          EndIf
        EndIf
      EndIf
    EndIf
  EndIf
  Shapes.Remove(TxtIndiLineH)
  Shapes.Remove(TxtIndiLineH2)
  Shapes.Remove(TxtIndiLineV)
  Shapes.Remove(TxtIndiLineV2)
  Shapes.Remove(IndiDrawRec)
  Shapes.Remove(IndiDrawLine1)
  Shapes.Remove(IndiDrawLine2)
  Shapes.Remove(IndiDrawEl)
  GraphicsWindow.FontBold = "False"
  GraphicsWindow.FontItalic = "False"
  GraphicsWindow.FontName = "Microsoft Sans Serif"
  GraphicsWindow.FontSize = 12
  GraphicsWindow.PenWidth = 1
EndSub

'KeyDown
GraphicsWindow.KeyDown = KeyDown
Sub KeyDown
  LastKey = GraphicsWindow.LastKey
  If LastKey = "Escape" Then
    If CurrentMenu = "SelectLoadingMenu" Then
    Else
      RemoveAllSubMenus()
    EndIf
  ElseIf LastKey = "Delete" Then
    GraphicsWindow.BrushColor = "White"
    GraphicsWindow.FillRectangle(0, 0, dWidth, dHeight)
    Sound.PlayClick()
  EndIf
  If CurrentMenu = "ColorDialog" Then
    UpdateColorIndicators()
  EndIf
EndSub

'Timer
Timer.Interval = SpraySpeed
Timer.Tick = SprayCanvas
Sub SprayCanvas
  If CurrentMenu = "MainPaint" And CurrentTool = "Spray" And CanDraw = "True" Then
    If SprayColors = 1 Then
      xSpot = Math.GetRandomNumber(SpraySize)
      ySpot = Math.GetRandomNumber(SpraySize)
      GraphicsWindow.BrushColor = BrushColor
      GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
      If MirrorAdded = "True" Then
        If CurrentMirror = "Horizontal" Then
          If xDown < (dWidth / 2) Then
            GraphicsWindow.FillEllipse(dWidth - xMove + xSpot - SpraySize / 2 + 14, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
          ElseIf xDown > (dWidth / 2) Then
            xPosSprayOne = xMove - (dWidth / 2)
            GraphicsWindow.FillEllipse((dWidth / 2) - xPosSprayOne + xSpot - SpraySize / 2 + 14, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
          EndIf
        ElseIf CurrentMirror = "Vertical" Then
          yPosVSeparator = dHeight / 2
          If yDown < yPosVSeparator Then
            GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, dHeight - yMove + ySpot - SpraySize / 2 - 8, SprayDotSize, SprayDotSize)
          ElseIf yDown > yPosVSeparator Then
            yPosSprayOne = yMove - (dHeight / 2)
            GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, (dHeight / 2) - yPosSprayOne + ySpot - SpraySize / 2 - 7, SprayDotSize, SprayDotSize)
          EndIf
        EndIf
      EndIf
    ElseIf SprayColors = 2 Then
      xSpot = Math.GetRandomNumber(SpraySize)
      ySpot = Math.GetRandomNumber(SpraySize)
      xSpot2 = Math.GetRandomNumber(SpraySize)
      ySpot2 = Math.GetRandomNumber(SpraySize)
      GraphicsWindow.BrushColor = BrushColor
      GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
      GraphicsWindow.BrushColor = SecondColor
      GraphicsWindow.FillEllipse(xMove + xSpot2 - SpraySize / 2 - 16, yMove + ySpot2 - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
      If MirrorAdded = "True" Then
        If CurrentMirror = "Horizontal" Then
          If xDown < (dWidth / 2) Then
            GraphicsWindow.BrushColor = BrushColor
            GraphicsWindow.FillEllipse(dWidth - xMove + xSpot - SpraySize / 2 + 14, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
            GraphicsWindow.BrushColor = SecondColor
            GraphicsWindow.FillEllipse(dWidth - xMove + xSpot2 - SpraySize / 2 + 14, yMove + ySpot2 - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
          ElseIf xDown > (dWidth / 2) Then
            xPosSprayOne = xMove - (dWidth / 2)
            GraphicsWindow.BrushColor = BrushColor
            GraphicsWindow.FillEllipse((dWidth / 2) - xPosSprayOne + xSpot - SpraySize / 2 + 14, yMove + ySpot - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
            GraphicsWindow.BrushColor = SecondColor
            GraphicsWindow.FillEllipse((dWidth / 2) - xPosSprayOne + xSpot2 - SpraySize / 2 + 14, yMove + ySpot2 - SpraySize / 2 - 16, SprayDotSize, SprayDotSize)
          EndIf
        ElseIf CurrentMirror = "Vertical" Then
          yPosVSeparator = dHeight / 2
          If yDown < yPosVSeparator Then
            GraphicsWindow.BrushColor = BrushColor
            GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, dHeight - yMove + ySpot - SpraySize / 2 - 8, SprayDotSize, SprayDotSize)
            GraphicsWindow.BrushColor = SecondColor
            GraphicsWindow.FillEllipse(xMove + xSpot2 - SpraySize / 2 - 16, dHeight - yMove + ySpot2 - SpraySize / 2 - 8, SprayDotSize, SprayDotSize)
          ElseIf yDown > yPosVSeparator Then
            yPosSprayOne = yMove - (dHeight / 2)
            GraphicsWindow.BrushColor = BrushColor
            GraphicsWindow.FillEllipse(xMove + xSpot - SpraySize / 2 - 16, (dHeight / 2) - yPosSprayOne + ySpot - SpraySize / 2 - 7, SprayDotSize, SprayDotSize)
            GraphicsWindow.BrushColor = SecondColor
            GraphicsWindow.FillEllipse(xMove + xSpot2 - SpraySize / 2 - 16, (dHeight / 2) - yPosSprayOne + ySpot2 - SpraySize / 2 - 7, SprayDotSize, SprayDotSize)
          EndIf
        EndIf
      EndIf
    EndIf
  EndIf
EndSub
