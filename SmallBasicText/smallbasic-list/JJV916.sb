Sub main'------------------------------------------------------

  GraphicsWindow.Title = "Rocket Flying in Space"

  bg = "#000055

  GraphicsWindow.BackgroundColor = bg

  gw = 598

  gh = 428

  GraphicsWindow.Width = gw

  GraphicsWindow.Height = gh

  DrawStars()

  Shapes_Init_TB3()

  angle = 0

  scale = 0.8

  name = "TB3"

  gpAdd()

  i = nGroup

  cx = ""

  cy = ""

  angle = 60+75

  gpRotate()

EndSub



Sub DrawStars'-------------------------------------------------

  GraphicsWindow.Width=Desktop.Width

  GraphicsWindow.Height=Desktop.Height

  For i = 1 To 1500

    h = Text.GetSubText("456789ABCDEF", Math.GetRandomNumber(12), 1)

    GraphicsWindow.BrushColor = "#" + h + h + "FFFFFF"

    x = Math.GetRandomNumber(gw*2) - 1

    y = Math.GetRandomNumber(gh*2) - 1

    s = Math.GetRandomNumber(3)

    GraphicsWindow.FillEllipse(x, y, s, s)

  EndFor

  

  sff=LDGraphicsWindow.Capture("" "false")

  GraphicsWindow.Width=gw

  GraphicsWindow.Height=gh

  GraphicsWindow.Clear()

  ii=Shapes.AddImage(sff)

  Shapes.Animate(ii, -gw*2, -gh*1.5 90000) 

EndSub



Sub gpAdd'-----------------------------------------------------

  nGroup = nGroup + 1

  grp = ""

  grp["name"] = name

  grp["x"] = shX

  grp["y"] = shY

  grp["angle"] = 0

  grp["dir"] = 1

  Shapes_CalcWidthAndHeight()

  grp["width"] = shWidth

  grp["height"] = shHeight

  s = scale

  grp["scale"] = s

  For i = 1 To Array.GetItemCount(shape)

    shp = shape[i]

    GraphicsWindow.PenWidth = shp["pw"] * s

    If shp["pw"] > 0 Then

      GraphicsWindow.PenColor = shp["pc"]

    EndIf

    If Text.IsSubText("rect|ell|tri", shp["func"]) Then

      GraphicsWindow.BrushColor = shp["bc"]

    EndIf

    If shp["func"] = "rect" Then

      shp["obj"] = Shapes.AddRectangle(shp["width"] * s, shp["height"] * s)

    ElseIf shp["func"] = "ell" Then

      shp["obj"] = Shapes.AddEllipse(shp["width"] * s, shp["height"] * s)

      

    ElseIf shp["func"] = "tri" Then

      shp["obj"] = Shapes.AddTriangle(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s, shp["x3"] * s, shp["y3"] * s)

      shp["width"] = shp["x3"] - shp["x2"]

      shp["height"] = shp["y2"] - shp["y1"]

      

    ElseIf shp["func"] = "line" Then

      shp["obj"] = Shapes.AddLine(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s)

      shp["width"] = Math.Max(shp["x1"], shp["x2"]) - Math.Min(shp["x1"], shp["x2"])

      shp["height"] = Math.Max(shp["y1"], shp["y2"]) - Math.Min(shp["y1"], shp["y2"])

    EndIf

    

    _pr["x"] = shp["x"]

    _pr["y"] = shp["y"]

    _pr["cx"] = shWidth / 2

    _pr["cy"] = shHeight / 2

    _pr["width"] = shp["width"]

    _pr["height"] = shp["height"]

    _pr["scale"] = s

    _pr["angle"] = 0

    Shapes_CalcRotateZoomPos()

    shp["rx"] = x

    shp["ry"] = y

    Shapes.Move(shp["obj"], shX + x, shY + y)

    

    If Text.IsSubText("rect|ell|tri", shp["func"]) And (shp["angle"] <> 0) And (shp["angle"] <> "") Then

      Shapes.Rotate(shp["obj"], shp["angle"])

    EndIf

    shape[i] = shp

  EndFor

  grp["shape"] = shape

  group[nGroup] = grp

EndSub



Sub gpMove'----------------------------------------------------

  Stack.PushValue("local", j)

  grp = group[i]

  s = grp["scale"]

  grp["x"] = x

  grp["y"] = y

  shape = grp["shape"]

  n = Array.GetItemCount(shape)

  For j = 1 To n

    shp = shape[j]

    _x = shp["rx"]

    _y = shp["ry"]

    Shapes.Move(shp["obj"], grp["x"] + _x, grp["y"] + _y)

  EndFor

  group[i] = grp

  j = Stack.PopValue("local")

EndSub



Sub gpRotate'--------------------------------------------------

  grp = group[i]

  shape = grp["shape"]

  moved = "False"

  If cx = "" Then

  Else

    moved = "True"

  EndIf

  

  If cy = "" Then

  Else

    moved = "True"

  EndIf

  

  If moved Then

    _pr["x"] = grp["x"]

    _pr["y"] = grp["y"]

    _pr["cx"] = cx

    _pr["cy"] = cy

    _pr["width"] = grp["width"]

    _pr["height"] = grp["height"]

    _pr["scale"] = 1

    _pr["angle"] = angle

    Shapes_CalcRotateZoomPos()

    grp["x"] = x

    grp["y"] = y

  EndIf

  

  _pr["cx"] = grp["width"] / 2

  _pr["cy"] = grp["height"] / 2

  _pr["scale"] = grp["scale"]

  grp["angle"] = grp["angle"] + angle

  _pr["angle"] = grp["angle"]

  n = Array.GetItemCount(shape)

  

  For ii = 1 To n

    shp = shape[ii]

    _pr["x"] = shp["x"]

    _pr["y"] = shp["y"]

    _pr["width"] = shp["width"]

    _pr["height"] = shp["height"]

    Shapes_CalcRotateZoomPos()

    shp["rx"] = x

    shp["ry"] = y

    

    Shapes.Move(shp["obj"], grp["x"] + x, grp["y"] + y)

    Shapes.Rotate(shp["obj"], shp["angle"] + grp["angle"])

    shape[ii] = shp

  EndFor

  

  grp["shape"] = shape

  group[i] = grp

EndSub



Sub Shapes_CalcRotateZoomPos'----------------------------------

  _cx = _pr["x"] + _pr["width"] / 2

  _cy = _pr["y"] + _pr["height"] / 2

  

  pp=  LDMath.Convert2Radial(_cx _cy  _pr["cx"]  _pr["cy"])

  a=pp[2]+180

  r=pp[1]

  a = a + _pr["angle"]

  x = r * Math.Cos(a * Math.Pi / 180) * _pr["scale"]

  y = r * Math.Sin(a * Math.Pi / 180) * _pr["scale"]

  _cx = x + _pr["cx"]

  _cy = y + _pr["cy"]

  x = _cx - _pr["width"] / 2 * _pr["scale"]

  y = _cy - _pr["height"] / 2 * _pr["scale"]

EndSub



Sub Shapes_CalcWidthAndHeight'---------------------------------

  For i = 1 To Array.GetItemCount(shape)

    shp = shape[i]

    If shp["func"] = "tri" Or shp["func"] = "line" Then

      xmin = shp["x1"]

      xmax = shp["x1"]

      ymin = shp["y1"]

      ymax = shp["y1"]

      If shp["x2"] < xmin Then

        xmin = shp["x2"]

      EndIf

      If xmax < shp["x2"] Then

        xmax = shp["x2"]

      EndIf

      If shp["y2"] < ymin Then

        ymin = shp["y2"]

      EndIf

      If ymax < shp["y2"] Then

        ymax = shp["y2"]

      EndIf

      If shp["func"] = "tri" Then

        If shp["x3"] < xmin Then

          xmin = shp["x3"]

        EndIf

        If xmax < shp["x3"] Then

          xmax = shp["x3"]

        EndIf

        If shp["y3"] < ymin Then

          ymin = shp["y3"]

        EndIf

        If ymax < shp["y3"] Then

          ymax = shp["y3"]

        EndIf

      EndIf

      shp["width"] = xmax - xmin

      shp["height"] = ymax - ymin

    EndIf

    

    If i = 1 Then

      shWidth = shp["x"] + shp["width"]

      shHeight = shp["y"] + shp["height"]

    Else

      If shWidth < shp["x"] + shp["width"] Then

        shWidth = shp["x"] + shp["width"]

      EndIf

      If shHeight < shp["y"] + shp["height"] Then

        shHeight = shp["y"] + shp["height"]

      EndIf

    EndIf

    shape[i] = shp

  EndFor

EndSub



Sub Shapes_Init_TB3'-------------------------------------------

  shX = 249 ' x offset

  shY = 50.74 ' y offset

  sha = "func=ell;x=35;y=26.92;width=30;height=130;pw=0;bc=OrangeRed|func=tri;x=39.39;y=0.00;x1=10.6;y1=0;x2=0;y2=45.96;x3=21.21;y3=45.96;pw=0;bc=OrangeRed|func=rect;x=35;y=91.92;width=30;height=160;pw=0;bc=OrangeRed|func=ell;x=42;y=276.92;width=10;height=40;pw=0;bc=OrangeRed|func=tri;x=43.46;y=268.64;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;pw=0;bc=OrangeRed|func=tri;x=43.46;y=311.06;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;angle=180;pw=0;bc=OrangeRed|func=rect;x=47;y=283.92;width=6;height=40;pw=0;bc=OrangeRed|func=ell;x=48;y=276.92;width=10;height=40;pw=0;bc=OrangeRed|func=tri;x=49.46;y=268.64;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;pw=0;bc=OrangeRed|func=tri;x=49.46;y=311.06;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;angle=180;pw=0;bc=OrangeRed|func=tri;x=44;y=316.92;x1=2;y1=0;x2=0;y2=8;x3=4;y3=8;angle=180;pw=0;bc=#DDDDDD|func=rect;x=46;y=316.92;width=8;height=8;angle=180;pw=0;bc=#DDDDDD|func=tri;x=52;y=316.92;x1=2;y1=0;x2=0;y2=8;x3=4;y3=8;angle=180;pw=0;bc=#DDDDDD|func=rect;x=30;y=91.92;width=40;height=10;pw=0;bc=White|func=ell;x=25;y=291.92;width=50;height=20;pw=0;bc=Gray|func=rect;x=25;y=251.92;width=50;height=50;pw=0;bc=OrangeRed|func=tri;x=25;y=231.92;x1=10;y1=0;x2=0;y2=20;x3=20;y3=20;pw=0;bc=OrangeRed|func=tri;x=55;y=231.92;x1=10;y1=0;x2=0;y2=20;x3=20;y3=20;pw=0;bc=OrangeRed|func=rect;x=65;y=279.92;width=30;height=20;angle=30;pw=0;bc=OrangeRed|func=rect;x=5;y=279.92;width=30;height=20;angle=-30;pw=0;bc=OrangeRed|func=ell;x=0;y=276.92;width=10;height=40;pw=0;bc=OrangeRed|func=tri;x=1.46;y=268.64;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;pw=0;bc=OrangeRed|func=tri;x=1.46;y=311.06;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;angle=180;pw=0;bc=OrangeRed|func=ell;x=6;y=276.92;width=10;height=40;pw=0;bc=OrangeRed|func=tri;x=7.46;y=268.64;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;pw=0;bc=OrangeRed|func=tri;x=7.46;y=311.06;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;angle=180;pw=0;bc=OrangeRed|func=ell;x=90;y=276.92;width=10;height=40;pw=0;bc=OrangeRed|func=tri;x=91.46;y=268.64;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;pw=0;bc=OrangeRed|func=tri;x=91.46;y=311.06;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;angle=180;pw=0;bc=OrangeRed|func=ell;x=84;y=276.92;width=10;height=40;pw=0;bc=OrangeRed|func=tri;x=85.46;y=268.64;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;pw=0;bc=OrangeRed|func=tri;x=85.46;y=311.06;x1=3.53;y1=0;x2=0;y2=14.14;x3=7.07;y3=14.14;angle=180;pw=0;bc=OrangeRed|func=line;x=8;y=171.92;x1=0;y1=0;x2=0;y2=150;pw=4;pc=OrangeRed|func=line;x=92;y=171.92;x1=0;y1=0;x2=0;y2=150;pw=4;pc=OrangeRed|func=line;x=7.92;y=135.77;x1=32.14;y1=0;x2=0.00;y2=38.3;pw=4;pc=OrangeRed|func=line;x=59.92;y=135.77;x1=0.00;y1=0;x2=32.14;y2=38.3;pw=4;pc=OrangeRed|func=tri;x=18;y=119.92;x1=5;y1=0;x2=0;y2=60;x3=10;y3=60;angle=-144;pw=0;bc=OrangeRed|func=tri;x=72;y=119.92;x1=5;y1=0;x2=0;y2=60;x3=10;y3=60;angle=144;pw=0;bc=OrangeRed|func=tri;x=2;y=269.92;x1=2;y1=0;x2=0;y2=8;x3=4;y3=8;pw=0;bc=White|func=rect;x=4;y=269.92;width=8;height=8;pw=0;bc=White|func=tri;x=10;y=269.92;x1=2;y1=0;x2=0;y2=8;x3=4;y3=8;pw=0;bc=White|func=tri;x=2;y=316.92;x1=2;y1=0;x2=0;y2=8;x3=4;y3=8;angle=180;pw=0;bc=White|func=rect;x=4;y=316.92;width=8;height=8;angle=180;pw=0;bc=White|func=tri;x=10;y=316.92;x1=2;y1=0;x2=0;y2=8;x3=4;y3=8;angle=180;pw=0;bc=White|func=tri;x=86;y=269.92;x1=2;y1=0;x2=0;y2=8;x3=4;y3=8;pw=0;bc=White|func=rect;x=88;y=269.92;width=8;height=8;pw=0;bc=White|func=tri;x=94;y=269.92;x1=2;y1=0;x2=0;y2=8;x3=4;y3=8;pw=0;bc=White|func=tri;x=86;y=316.92;x1=2;y1=0;x2=0;y2=8;x3=4;y3=8;angle=180;pw=0;bc=White|func=rect;x=88;y=316.92;width=8;height=8;angle=180;pw=0;bc=White|func=tri;x=94;y=316.92;x1=2;y1=0;x2=0;y2=8;x3=4;y3=8;angle=180;pw=0;bc=White|func=tri;x=30;y=176.92;x1=5;y1=0;x2=0;y2=10;x3=10;y3=10;pw=0;bc=Gray|func=rect;x=35;y=176.92;width=30;height=10;pw=0;bc=Gray|func=tri;x=60;y=176.92;x1=5;y1=0;x2=0;y2=10;x3=10;y3=10;pw=0;bc=Gray|func=tri;x=20;y=186.92;x1=10;y1=0;x2=0;y2=35;x3=20;y3=35;pw=0;bc=DimGray|func=rect;x=30;y=186.92;width=40;height=35;pw=0;bc=DimGray|func=tri;x=60;y=186.92;x1=10;y1=0;x2=0;y2=35;x3=20;y3=35;pw=0;bc=DimGray|func=tri;x=20;y=221.92;x1=15;y1=0;x2=0;y2=5;x3=30;y3=5;angle=180;pw=0;bc=DimGray|func=rect;x=35;y=221.92;width=30;height=5;angle=180;pw=0;bc=DimGray|func=tri;x=50;y=221.92;x1=15;y1=0;x2=0;y2=5;x3=30;y3=5;angle=180;pw=0;bc=DimGray|func=line;x=21.01;y=186.91;x1=9.66;y1=0.00;x2=0.00;y2=35.00;pw=2;pc=Gray|func=line;x=28.77;y=186.91;x1=7.08;y1=0.00;x2=0.00;y2=35.00;pw=2;pc=Gray|func=line;x=42.23;y=186.91;x1=2.58;y1=0.00;x2=0;y2=35.00;pw=2;pc=Gray|func=line;x=55.17;y=186.91;x1=0;y1=0.00;x2=2.58;y2=35.00;pw=2;pc=Gray|func=line;x=64.13;y=186.91;x1=0.00;y1=0.00;x2=7.08;y2=35.00;pw=2;pc=Gray|func=line;x=69.31;y=186.91;x1=0;y1=0.00;x2=9.65;y2=35.00;pw=2;pc=Gray|func=line;x=32;y=126.92;x1=0;y1=0;x2=0;y2=13;pw=2;pc=Gray|func=line;x=27;y=135.92;x1=0;y1=0;x2=0;y2=11;pw=2;pc=Gray|func=line;x=22;y=144.92;x1=0;y1=0;x2=0;y2=9;pw=2;pc=Gray|func=line;x=17;y=153.92;x1=0;y1=0;x2=0;y2=7;pw=2;pc=Gray|func=line;x=12;y=162.92;x1=0;y1=0;x2=0;y2=5;pw=2;pc=Gray|func=line;x=68;y=126.92;x1=0;y1=0;x2=0;y2=13;pw=2;pc=Gray|func=line;x=73;y=135.92;x1=0;y1=0;x2=0;y2=11;pw=2;pc=Gray|func=line;x=78;y=144.92;x1=0;y1=0;x2=0;y2=9;pw=2;pc=Gray|func=line;x=83;y=153.92;x1=0;y1=0;x2=0;y2=7;pw=2;pc=Gray|func=line;x=88;y=162.92;x1=0;y1=0;x2=0;y2=5;pw=2;pc=Gray

  shape=LDText.Split(sha "|")

EndSub



main()


