' Permutations
' Copyright Â© 2020 Nonki Takahashi.  The MIT License.
' Last update 2020-02-29

While "True"
  TextWindow.Write("order? ")
  order = TextWindow.Read()
  If 0 < order Then
    Permutations_Get()
    Permutations_Dump()
  EndIf
EndWhile

Sub Permutations_Dump
  ' param p[] - array of permutations
  np = Array.GetItemCount(p)
  For j = 1 To np
    l = p[j]
    i = 0
    While 0 < l[i]
      If 0 < i Then
        TextWindow.Write(",")
      EndIf
      TextWindow.Write(l[i])
      i = l[i]
    EndWhile
    If sgn[j] = -1 Then
      TextWindow.Write(" -")
    EndIf
    TextWindow.WriteLine("")
  EndFor
EndSub

Sub Permutations_Get
  ' param order - order of permutations
  ' return p[] - array of permutations
  If order = 1 Then
    l = "0=1;1=0;"  ' initialize list for a permutation
    p = ""
    p[1] = l
    sgn[1] = 1
  Else
    order = order - 1
    Permutations_Get()
    _order = order
    order = order + 1
    _p = p
    _sgn = sgn
    _np = Array.GetItemCount(_p)
    np = 0
    p = ""
    sgn = ""
    For _ip = 1 To _np
      s = _sgn[_ip]
      For _i = _order To 0 Step -1
        InsertOrder()
        sgn[np] = s
        s = -s
      EndFor
    EndFor
  EndIf
EndSub

Sub InsertOrder
  ' insert order at _i in _p[_ip]
  ' return p[np] - inserted permutation
  c = 0
  i = 0
  l = _p[_ip]
  While c < _i
    i = l[i]
    c = c + 1
  EndWhile
  x = l[i]
  l[i] = order
  l[order] = x
  np = np + 1
  p[np] = l
EndSub
