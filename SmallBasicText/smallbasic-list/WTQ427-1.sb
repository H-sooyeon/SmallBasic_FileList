'Dynamic Shadows by Dudeson >:C



Game_Width = 600

Game_Height = 600

GraphicsWindow.Width = Game_Width

GraphicsWindow.Height = Game_Height

TextWindow.Left = GraphicsWindow.Left + Game_Width + 15

GraphicsWindow.BackgroundColor = "White"



GraphicsWindow.MouseMove = OnMouseMove

moving = 1

Sub OnMouseMove

  moving = 1

EndSub



Corner_X[1] = 300

Corner_Y[1] = 300

Corner_X[2] = 400

Corner_Y[2] = 300



GraphicsWindow.PenColor = "Blue"

GraphicsWindow.PenWidth = 5

Shapes.AddLine(Corner_X[1],Corner_Y[1],Corner_X[2],Corner_Y[2])

GraphicsWindow.PenWidth = 2

GraphicsWindow.PenColor = "Black"

'Light = ImageList.LoadImage(Program.Directory+"\light.png")



While "True"

  If (moving = 1) Then

    Light_X = GraphicsWindow.MouseX

    Light_Y = GraphicsWindow.MouseY

    'Light_X = 250

    'Light_Y = 150

    

    GraphicsWindow.BrushColor = GraphicsWindow.BackgroundColor

    GraphicsWindow.FillRectangle(0,0,Game_Width,Game_Height)

    GraphicsWindow.BrushColor = "Gray"

    

    'For b = 1 To 1

    'Light_X = GraphicsWindow.MouseX/b

    'Light_Y = GraphicsWindow.MouseY/b

    'GraphicsWindow.DrawImage(Light,Light_X-300,Light_Y-300)

    For i = 1 To 2

      LC_X = Corner_X[i]-Light_X 'X distance between the Light the corner.

      LC_Y = Corner_Y[i]-Light_Y 'Y distance between the Light the corner.

      LW = Light_X-Game_Width 'X distance between the Light the Game_Width.

      LH = Game_Height-Light_Y 'Y distance between the Light the Game_Height.

      

      If Light_X > Corner_X[i] Then

        Shadow_Y[i] = Light_Y - (LC_Y/LC_X)*Light_X

      ElseIf Light_X < Corner_X[i] Then

        Shadow_Y[i] = Light_Y-(LC_Y/LC_X)*LW

      endif

      If Light_Y < Corner_Y[i] Then

        Shadow_X[i] = Light_X+(LC_X/LC_Y)*LH

      ElseIf Light_Y > Corner_Y[i] Then

        Shadow_X[i] = Light_X-(LC_X/LC_Y)*Light_Y

      endif

      If Shadow_Y[i] > Game_Height Then

        Shadow_Y[i] = Game_Height

      ElseIf Shadow_Y[i] < 0 Then

        Shadow_Y[i] = 0

      endif

      If Shadow_X[i] > Game_Width Then

        Shadow_X[i] = Game_Width

      ElseIf Shadow_X[i] < 0 Then

        Shadow_X[i] = 0

      endif

      

      GraphicsWindow.DrawLine(Light_X,Light_Y,Shadow_X[i],Shadow_Y[i])

      

      dX = Shadow_X[i]-Corner_X[i]

      dY = Shadow_Y[i]-Corner_Y[i]

      Shadow_Frac = 1000000/Math.SquareRoot(dX*dX+dY*dY)

      Shadow_X[i] = Corner_X[i] + Shadow_Frac*dX

      Shadow_Y[i] = Corner_Y[i] + Shadow_Frac*dY

      

    EndFor

    'endfor

    

    GraphicsWindow.FillTriangle(Corner_X[1],Corner_Y[1],Shadow_X[1],Shadow_Y[1],Corner_X[2],Corner_Y[2])

    GraphicsWindow.FillTriangle(Corner_X[2],Corner_Y[2],Shadow_X[2],Shadow_Y[2],Shadow_X[1],Shadow_Y[1])

    GraphicsWindow.PenColor = "Gray"

    GraphicsWindow.DrawLine(Corner_X[2],Corner_Y[2],Shadow_X[1],Shadow_Y[1])

    

    moving = 0

  EndIf

  

  Program.Delay(15)

  TextWindow.Clear()

  TextWindow.WriteLine("Shadow_X[1]: "+Shadow_X[1])

  TextWindow.WriteLine("Shadow_Y[1]: "+Shadow_Y[1])

  TextWindow.WriteLine("Corner_X[1]: "+Corner_X[1])

  TextWindow.WriteLine("Corner_Y[1]: "+Corner_Y[1])

  TextWindow.WriteLine("Light_X: "+Light_X)

  TextWindow.WriteLine("Light_Y: "+Light_Y)

  

EndWhile




