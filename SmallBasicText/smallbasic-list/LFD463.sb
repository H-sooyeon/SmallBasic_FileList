' Database v0.1
' Copyright (c) 2012 Nonki Takahashi
NL = Text.GetCharacter(13) + Text.GetCharacter(10)
HELPTEXT = "<id>.<property>=<data> - set data" + NL
HELPTEXT = HELPTEXT + "help - shows this" + NL
HELPTEXT = HELPTEXT + "quit - end program" + NL
HELPTEXT = HELPTEXT + "? - show all data"
PROMPT = ">"
TextWindow.WriteLine("Database v0.1")
ShowHelp()
continue = "True"
' The following line could be harmful and has been automatically commented.
' File.CopyFile("db.txt", "db.bak")
' The following line could be harmful and has been automatically commented.
' db = File.ReadContents("db.txt")
While continue
  TextWindow.WriteLine("")
  TextWindow.Write(PROMPT)
  cmd = TextWindow.Read()
  ParseCommand()
  If match = "False" Then
    ShowHelp()
  EndIf
EndWhile
' The following line could be harmful and has been automatically commented.
' File.WriteContents("db.txt", db)
TextWindow.WriteLine("")
' end program

Sub ParseCommand
  ' param cmd - command line
  cmdptr = 1
  ParseQuit()
  If match Then
    Goto pcexit
  EndIf
  ParseHelp()
  If match Then
    Goto pcexit
  EndIf
  ParseSet()
  If match Then
    Goto pcexit
  EndIf
  ParseQuery()
pcexit:
EndSub

Sub ShowHelp
  ' const HELPTEXT - help text
  TextWindow.WriteLine(HELPTEXT)
EndSub

Sub ParseSet
  ' param cmd - command line
  ' param cmdptr - command pointer
  ' return match - "True" if cmd is set
  ptrsaved = cmdptr
  ParseId()
  If match Then
    c = "."
    LexChar()
  Else
    cmdptr = ptrsaved
    Goto psexit
  EndIf
  If match Then
    ParseProperty()
  Else
    cmdptr = ptrsaved
    Goto psexit
  EndIf
  If match Then
    c = "="
    LexChar()
  Else
    cmdptr = ptrsaved
    Goto psexit
  EndIf
  If match Then
    ParseData()
  Else
    cmdptr = ptrsaved
    Goto psexit
  EndIf
  db[id][property] = data
  match = "True"
psexit:
EndSub

Sub ParseHelp
  ' param cmd - command line
  ' param cmdptr - command pointer
  ' return match - "True" if cmd is help
  match = "False"
  If Text.GetSubText(cmd, cmdptr, 4) = "help" Then
    ShowHelp()
    match = "True"
  EndIf
EndSub

Sub ParseQuit
  ' param cmd - command line
  ' param cmdptr - command pointer
  ' return match - "True" if cmd is quit
  ' return continue - "False" if cmd is quit
  match = "False"
  If Text.GetSubText(cmd, cmdptr, 4) = "quit" Then
    match = "True"
    continue = "False"
  EndIf
EndSub

Sub ParseID
  ' param cmd - command line
  ' param cmdptr - command pointer
  ' return match - "True" if cmd is quit
  ' return id - input id
  match = "False"
  ptr = Text.GetIndexOf(cmd, ".")
  If ptr > 0 Then
    id = Text.GetSubText(cmd, cmdptr, ptr - cmdptr)
    cmdptr = ptr
    match = "True"
  EndIf
EndSub

Sub ParseProperty
  ' param cmd - command line
  ' param cmdptr - command pointer
  ' return match - "True" if cmd is quit
  ' return property - input property
  match = "False"
  ptr = Text.GetIndexOf(cmd, "=")
  If ptr > 0 Then
    property = Text.GetSubText(cmd, cmdptr, ptr - cmdptr)
    cmdptr = ptr
    match = "True"
  EndIf
EndSub

Sub ParseData
  ' param cmd - command line
  ' param cmdptr - command pointer
  ' return match - "True" if cmd is quit
  ' return data - input data
  match = "True"
  data = Text.GetSubTextToEnd(cmd, cmdptr)
  cmdptr = cmdptr + Text.GetLength(data)
EndSub
  
Sub LexChar
  ' param cmd - command line
  ' param cmdptr - command pointer
  ' param c - character
  ' return match - "True" if cmd is quit
  match = "False"
  If Text.GetSubText(cmd, cmdptr, 1) = c Then
    cmdptr = cmdptr + 1
    match = "True"
  EndIf
EndSub
  
Sub ParseQuery
  ' param cmd - command line
  ' param cmdptr - command pointer
  ' param c - character
  ' return match - "True" if cmd is quit
  c = "?"
  LexChar()
  If match Then
    nid = Array.GetItemCount(db)
    ix = Array.GetAllIndices(db)
    For i = 1 To nid
      nprop = Array.GetItemCount(db[ix[i]])
      jx = Array.GetAllIndices(db[ix[i]])
      TextWindow.WriteLine(ix[i])
      For j = 1 To nprop
        TextWindow.WriteLine("." + jx[j] + "=" + db[ix[i]][jx[j]])
      EndFor
    EndFor
  EndIf
EndSub
