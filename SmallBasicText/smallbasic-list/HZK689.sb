Bx = 200

By = 200







RearWheel = Shapes.AddEllipse(120,120)

Shapes.Move(RearWheel,Bx-190,by-18)

FrontWheel = Shapes.AddEllipse(120,120)

Shapes.Move(FrontWheel,Bx+200,by+70)

Spar = Shapes.AddRectangle(150,20)

Shapes.Move(Spar,Bx-140,By+30)

Spar2 = Shapes.AddRectangle(20,150)

Shapes.Move(Spar2,Bx+220,By)

Shapes.Rotate(Spar2,-30)

Bike = Shapes.AddRectangle(200,50)

Shapes.Move(Bike,Bx,By)



SparAncor = LDPhysics.AddMovingAnchor(Bx+5,By+40)

DistAncor = LDPhysics.AddMovingAnchor(Bx+195,By)

LDPhysics.AddMovingShape(Spar,0.5,0.5,0.5)

LDPhysics.AddMovingShape(Spar2,0.5,0.5,0.5)

LDPhysics.LoadImagesAsCircles = "True"

LDPhysics.AddMovingShape(RearWheel,0.5,0.5,0.5)

LDPhysics.AddMovingShape(FrontWheel,0.5,0.5,0.5)

LDPhysics.LoadImagesAsCircles = "False"

LDPhysics.AddMovingShape(Bike,0.5,0.5,1)

LDPhysics.GroupShapes(Bike,DistAncor)

LDPhysics.GroupShapes(Bike,SparAncor)



'LDPhysics.SetGravity(0,0)



'LDPhysics.ToggleMoving(Bike)



Param[1] = -Math.GetRadians(15)

Param[2] = Math.GetRadians(11)

Param2[1] = LDMath.Cos(60)

Param2[2] = LDMath.Sin(60)

Param2[3] = -40

Param2[4] = 10

Joint1 = LDPhysics.AttachShapesWithJoint(SparAncor,Spar,"Revolute","False",Param)

Joint2 = LDPhysics.AttachShapesWithJoint(Bike,Spar2,"Prismatic_V","False",Param2)

WheelJoint = LDPhysics.AttachShapesWithJoint(RearWheel,Spar,"Revolute","False","")

WheelJoint = LDPhysics.AttachShapesWithJoint(FrontWheel,Spar2,"Revolute","False","")



'LDPhysics.SetAngle(Spar2,180)

GraphicsWindow.MouseDown = Mouse

GraphicsWindow.MouseUp = MouseUp



While 1 = 1

  Program.Delay(10)

  LDPhysics.DoTimestep()

  

  

  Pos = LDPhysics.GetPosition(Spar2)

  PosA = LDPhysics.GetPosition(DistAncor)



  Distx = Math.Abs(Pos[1]-PosA[1])

  Disty = Math.Abs(Pos[2]-PosA[2])

  OldDist = Dist

  Dist = Math.SquareRoot((Distx*Distx)+(Disty*Disty))

  

  pjs = Dist - OldDist

  pjt = Dist-260



  If (pjt * 100) + (pjs * 10) < 0 Then

    Sine = 1

  Else

    Sine = -1

  EndIf

  LDPhysics.SetJointMotor(Joint2,1000*Sine,Math.abs((pjt * 100) + (pjs * 10))*10)



  rja = LDPhysics.GetAngle(Spar) - LDPhysics.GetAngle(Bike)+14

  rjs = LDPhysics.GetRotation(Spar) - LDPhysics.GetRotation(Bike)

  If (rja * 5000) + (rjs * 100) < 0 Then

    Sine = 1

  Else

    Sine = -1

  EndIf

  LDPhysics.SetJointMotor(Joint1,1000*Sine,Math.abs((rja * 5000) + (rjs * 100))*10)

EndWhile



Sub Mouse

  Shape = LDShapes.GetAllShapesAt(GraphicsWindow.MouseX,GraphicsWindow.MouseY)

  MJoint = LDPhysics.AttachShapesWithJoint(Shape[1],Shape[1],"Mouse","False","")

EndSub



Sub MouseUp

  LDPhysics.DetachJoint(MJoint)

EndSub


