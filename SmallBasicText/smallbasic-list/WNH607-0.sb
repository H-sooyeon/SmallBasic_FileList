GraphicsWindow.Width = 1200

GraphicsWindow.Height = 400

GraphicsWindow.FontSize = 80

GraphicsWindow.BackgroundColor = "teal

cll=ldtext.Split ("lime yellow lightblue red orange pink cyan"," ")

txx=ldtext.Split ("l o r e m y p"," ")

For f=1 to 7

  zmm[f]=1

  GraphicsWindow.BrushColor = cll[f]

  shape[f] = Shapes.AddText(txx[f])

  Shapes.Move(shape[f] Math.GetRandomNumber (800) Math.GetRandomNumber (300))

endfor



GraphicsWindow.MouseDown = OnMouseDown

GraphicsWindow.MouseUp = OnMouseUp

LDEvents.MouseWheel =mww

mouseMoving = 0



While ("True")

  For f=1 To 7

    If (shapeMoving[f] = 1) Then

      Shapes.Move(shape[f],GraphicsWindow.MouseX-shape_X[f],GraphicsWindow.MouseY-shape_Y[f])

    EndIf

  EndFor 

  Program.Delay(20) 'Don't mash cpu in game loop

EndWhile



Sub mww

  If Mouse.IsRightButtonDown  then

    For f=1 To 7

      If (shapeMoving[f] = 1) Then

        zmm[f]=zmm[f]+ LDEvents.LastMouseWheelDelta /10

        Shapes.zoom (shape[f] ,zmm[f] zmm[f])

      EndIf 

    EndFor 

  else

    For f=1 To 7

      If (shapeMoving[f] = 1) Then

        ann[f]=ann[f]+ LDEvents.LastMouseWheelDelta *3

        Shapes.Rotate (shape[f] ,ann[f])

      EndIf 

    EndFor 

  endif

EndSub 



Sub OnMouseDown

  mx = GraphicsWindow.MouseX

  my = GraphicsWindow.MouseY

  

  'Relative coordinates of mouse to shape - we use these in the drag movement so the shape doesn't recenter, but just drag from current mouse position

  For f=1 To 7

    shape_X[f] = mx-Shapes.GetLeft(shape[f]) 

    shape_Y[f] = my-Shapes.GetTop(shape[f])

    If (shape_X[f] >= 0 And shape_X[f] <= 40 And shape_Y[f] >= 0 And shape_Y[f] <= 100) Then

      shapeMoving[f] = 1

    EndIf

    

  EndFor 

EndSub



Sub OnMouseUp

  For f=1 To 7

    shapeMoving[f] = 0

  EndFor 

EndSub

    


