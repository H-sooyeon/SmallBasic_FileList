'TODO

'Fix enemy game over

'Difficulty select

'Seeds?

'Level changer

'Boss at top / boss level?

'Enemy types: Normal, Reverse, Ghost, Fire

'To do: Boss

beginning:

GraphicsWindow.Clear()

ready = "False"

fpath = "D:\dk\"

GraphicsWindow.Title = "Tower Trouble"

GraphicsWindow.Height = 650

GraphicsWindow.Width = 800

GraphicsWindow.Left = 0

GraphicsWindow.Top = 0

GraphicsWindow.BackgroundColor = "Black"

GraphicsWindow.PenColor = "White"

GraphicsWindow.BrushColor = "White"

GraphicsWindow.FontSize = 25

logo = Shapes.AddImage(fpath + "logo1.png")

Shapes.Rotate(logo,30)

logoR = 30

Shapes.Move(logo, 250, 200)

GraphicsWindow.FontSize = 14

GraphicsWindow.DrawText(200,500,"Level:")

GraphicsWindow.BrushColor = "Black"

begin = Controls.AddButton("Click to begin",500,500)

FAQ = Controls.AddButton("Help",700,500)

Controls.ButtonClicked = BtnClickEventDK

GraphicsWindow.BrushColor = "Black"

choice = Controls.AddTextBox(250,500)

While ready = "False"

  Shapes.Remove(logo)

  If Controls.LastClickedButton = begin Then

    ready = "True"

  EndIf  

  logo = Shapes.AddImage(fpath + "logo1.png")

  Shapes.Rotate(logo,30)

  Shapes.Move(logo, 250, 200)

  For i = 1 To 60 

    If Controls.LastClickedButton <> begin Then

    Program.Delay(10)

    logoR = logoR - 1

    Shapes.Rotate(logo,logoR)

    EndIf

  EndFor

    Shapes.Remove(logo)

    logo = Shapes.AddImage(fpath + "logo2.png")

    Shapes.Rotate(logo,-30)

    Shapes.Move(logo, 250, 200)

  For i = 1 To 60 

    If Controls.LastClickedButton <> begin Then  

    Program.Delay(10)

    logoR = logoR + 1

    Shapes.Rotate(logo,logoR)

    EndIf

  EndFor  

EndWhile

Sub BtnClickEventDK

  If Controls.LastClickedButton = FAQ Then

    GraphicsWindow.BrushColor = "White"

    GraphicsWindow.FontSize = 12

    GraphicsWindow.DrawImage(fpath + "char.png",100,50)

    GraphicsWindow.DrawText(10,100,"Use arrow keys to move and climb ladders.")

    GraphicsWindow.DrawText(10,120,"Climb up the top ladder on each level to win.")

    GraphicsWindow.DrawText(10,140,"Use the spacebar to jump over enemies!!!")

    GraphicsWindow.DrawText(10,160,"Avoid these:")

    GraphicsWindow.DrawText(10,180,"Reddies fall down")

    GraphicsWindow.DrawImage(fpath + "enemy.png",200,170)

    GraphicsWindow.DrawText(10,200,"Blooies climb up")

    GraphicsWindow.DrawImage(fpath + "reverse.png",200,190)

    GraphicsWindow.DrawText(10,220,"Charges fall and spawn foes")

    GraphicsWindow.DrawImage(fpath + "charged.png",200,210)

    GraphicsWindow.DrawText(10,240,"Fireballs try to chase you")

    GraphicsWindow.DrawImage(fpath + "fire.png",200,230)

    GraphicsWindow.DrawText(10,260,"Ghosts target you")

    GraphicsWindow.DrawImage(fpath + "ghost.png",200,250)

    GraphicsWindow.DrawText(10,280,"Collect these:")

    GraphicsWindow.DrawText(10,300,"This gives you speed!")

    GraphicsWindow.DrawImage(fpath + "powerup.png",200,290)

    GraphicsWindow.DrawText(10,320,"This gives you invincibility!")

    GraphicsWindow.DrawImage(fpath + "star.png",200,310)

  EndIf  

EndSub  

Sub MouseDownEventDK

  ready = "True"

EndSub  

waitTime = 10

length = 15 '15 default

lChance = 5 '5 default

bChance = 1 '1 default

bMax = 0 '0 default

rate = 5 '5 default

starRate = 50

shoeRate = 30

rainbow = "False"

Timer.Interval = 5000 '5000 default

levels = Controls.GetTextBoxText(choice)

If levels = "steve" Then

  rainbow = "True"

EndIf

If levels = "GOTTA GO FAST" Then

  waitTime = 5

EndIf  

If levels = "YOU'RE TOO SLOW" Then

  waitTime = 20

EndIf  

startLevel = levels

For g = 1 To startLevel

  If g > 1 And g <= 21 Then

    shoeRate = shoeRate - 1

  EndIf 

  If g > 21 And g <= 51 Then

    starRate = starRate - 1

  EndIf 

  If Math.Remainder(g,5) = 0 And g <= 45 Then

    bChance = bChance + 1

  EndIf

  If Math.Remainder(g,20) = 0 And g <= 80 Then

    lChance = lChance - 1

  EndIf

  If Math.Remainder(g,5) = 0 And g > 45 And g <= 70 Then

    bChance = bChance - 1

    bMax = bMax + 1

  EndIf  

  If Math.Remainder(g,5) = 0 And g <= 100 Then

    Timer.Interval = Timer.Interval - 100

  EndIf  

EndFor

Start:

Rotation = 0

GraphicsWindow.Clear()

GraphicsWindow.BackgroundColor = "Black"

GraphicsWindow.BrushColor = "White"

GraphicsWindow.FontSize = 12



If Math.Round(levels) = 0 Or levels <= 0 Then

  levels = 1

  startLevel = 1

EndIf  

GraphicsWindow.DrawText(10,610,"Level : " + levels)

If levels <> startLevel Then

  If levels > 1 And levels <= 21 Then

    shoeRate = shoeRate - 1

  EndIf 

  If levels > 21 And levels <= 51 Then

    starRate = starRate - 1

  EndIf 

  If Math.Remainder(levels,5) = 0 And levels <= 45 Then

    bChance = bChance + 1

  EndIf

  If Math.Remainder(levels,20) = 0 And levels <= 80 Then

    lChance = lChance - 1

  EndIf

  If Math.Remainder(levels,5) = 0 And levels > 45 And levels <= 70 Then

    bChance = bChance - 1

    bMax = bMax + 1

  EndIf

  If Math.Remainder(levels,5) = 0 And levels <= 100 Then

    Timer.Interval = Timer.Interval - 100

  EndIf  

EndIf 

levels = levels + 1

For l = 1 To 6 'Level generator

  fmt[l] = ""

  lAmt = Math.GetRandomNumber(lChance)

  bAmt = Math.GetRandomNumber(bChance + 1) - 1 + bMax

  pAmt = length - lAmt - bAmt

  For p = 1 To length

    choice = Math.GetRandomNumber(lAmt+bAmt+pAmt)

    If choice >= 1 And choice <= lAmt Then

      fmt[l] = fmt[l] + "H"

      lAmt = lAmt - 1

    ElseIf choice > lAmt And choice <= lAmt + bAmt Then

      fmt[l] = fmt[l] + "X"

      bAmt = bAmt - 1

    ElseIf choice > lAmt + bAmt And choice <= lAmt + bAmt + pAmt Then 

      fmt[l] = fmt[l] + "#"

      pAmt = pAmt - 1  

    EndIf

  EndFor

EndFor

fmt[0] = "###############"

'fmt[2] = "###X###H##"

'fmt[3] = "##H##H##X#"

'fmt[4] = "###X#H##H#"

'fmt[5] = "##H###H###"

'fmt[6] = "####X###H#"

spaceJam = "False"

GraphicsWindow.PenColor = "Black"

theme = Math.GetRandomNumber(6)



For i = 0 To Array.GetItemCount(fmt) 'Level parser

  For k = 1 To Text.GetLength(fmt[i])

    If Math.Remainder(i,2) = 1 Then 'Odd

      If Text.GetSubText(fmt[i], k, 1) = "#" Then

        GraphicsWindow.BrushColor = "Red"

        If rainbow = "False" Then

          platform[i][k] = Shapes.AddImage(fpath + "platform" + theme + ".png")

        Else

          platform[i][k] = Shapes.AddImage(fpath + "platform" + Math.GetRandomNumber(6) + ".png")

        EndIf  

        brokenvar[i][k] = "False"

        laddervar[i][k] = "False"

        Shapes.Move(platform[i][k], 10 + 50 * (k-1), 100 * i)

        If Math.GetRandomNumber(shoeRate) = 1 Then

          powerup[i][k] = Shapes.AddImage(fpath + "powerup.png")

          powerupvar[i][k] = "Shoes"

          Shapes.Move(powerup[i][k], 10 + 50 * (k-1), 100 * i - 25)

        ElseIf Math.GetRandomNumber(starRate) = 1 Then

          powerup[i][k] = Shapes.AddImage(fpath + "star.png")

          powerupvar[i][k] = "Star"

          Shapes.Move(powerup[i][k], 10 + 50 * (k-1), 100 * i - 25)  

        Else

          powerupvar[i][k] = "False"

        EndIf

      ElseIf Text.GetSubText(fmt[i], k, 1) = "X" Then  

        GraphicsWindow.BrushColor = "Purple"

        If rainbow = "False" Then

          platform[i][k] = Shapes.AddImage(fpath + "platform" + theme + ".png")

        Else

          platform[i][k] = Shapes.AddImage(fpath + "platform" + Math.GetRandomNumber(6) + ".png")

        EndIf

        Shapes.Move(platform[i][k], 10 + 50 * (k-1), 100 * i)

        If rainbow = "False" Then

          broken[i][k] = Shapes.AddImage(fpath + "broken" + theme + ".png")

        Else

          broken[i][k] = Shapes.AddImage(fpath + "broken" + Math.GetRandomNumber(6) + ".png")

        EndIf

        brokenvar[i][k] = "True"

        laddervar[i][k] = "False"

        Shapes.Move(broken[i][k], 10 + 50 * (k-1), 100 * i-100)

        powerupvar[i][k] = "False"

      ElseIf Text.GetSubText(fmt[i], k, 1) = "H" Then  

        GraphicsWindow.BrushColor = "Lime"

        If rainbow = "False" Then

          platform[i][k] = Shapes.AddImage(fpath + "platform" + theme + ".png")

        Else

          platform[i][k] = Shapes.AddImage(fpath + "platform" + Math.GetRandomNumber(6) + ".png")

        EndIf

        Shapes.Move(platform[i][k], 10 + 50 * (k-1), 100 * i)

        If rainbow = "False" Then

          ladder[i][k] = Shapes.AddImage(fpath + "ladder" + theme + ".png")

        Else

          ladder[i][k] = Shapes.AddImage(fpath + "ladder" + Math.GetRandomNumber(6) + ".png")

        EndIf

        brokenvar[i][k] = "False"

        laddervar[i][k] = "True"

        Shapes.Move(ladder[i][k], 10 + 50 * (k-1), 100 * i-100)

        powerupvar[i][k] = "False"

      EndIf

    ElseIf Math.Remainder(i,2) = 0 Then 'Even 

      If Text.GetSubText(fmt[i], k, 1) = "#" Then

        GraphicsWindow.BrushColor = "Blue"

        If rainbow = "False" Then

          platform[i][k] = Shapes.AddImage(fpath + "platform" + theme + ".png")

        Else

          platform[i][k] = Shapes.AddImage(fpath + "platform" + Math.GetRandomNumber(6) + ".png")

        EndIf

        brokenvar[i][k] = "False"

        laddervar[i][k] = "False"

        Shapes.Move(platform[i][k], 10 + 50 * (k-1), 100 * i)

        If Math.GetRandomNumber(shoeRate) = 1 Then

          powerup[i][k] = Shapes.AddImage(fpath + "powerup.png")

          powerupvar[i][k] = "Shoes"

          Shapes.Move(powerup[i][k], 10 + 50 * (k-1), 100 * i - 25)

        ElseIf Math.GetRandomNumber(starRate) = 1 Then

          powerup[i][k] = Shapes.AddImage(fpath + "star.png")

          powerupvar[i][k] = "Star"

          Shapes.Move(powerup[i][k], 10 + 50 * (k-1), 100 * i - 25)  

        Else

          powerupvar[i][k] = "False"

        EndIf

      ElseIf Text.GetSubText(fmt[i], k, 1) = "X" Then  

        GraphicsWindow.BrushColor = "Purple"

        If rainbow = "False" Then

          platform[i][k] = Shapes.AddImage(fpath + "platform" + theme + ".png")

        Else

          platform[i][k] = Shapes.AddImage(fpath + "platform" + Math.GetRandomNumber(6) + ".png")

        EndIf

        Shapes.Move(platform[i][k], 10 + 50 * (k-1), 100 * i)

        If rainbow = "False" Then

          broken[i][k] = Shapes.AddImage(fpath + "broken" + theme + ".png")

        Else

          broken[i][k] = Shapes.AddImage(fpath + "broken" + Math.GetRandomNumber(6) + ".png")

        EndIf

        brokenvar[i][k] = "True"

        laddervar[i][k] = "False"

        Shapes.Move(broken[i][k], 10 + 50 * (k-1), 100 * i-100)

        powerupvar[i][k] = "False"

      ElseIf Text.GetSubText(fmt[i], k, 1) = "H" Then  

        GraphicsWindow.BrushColor = "Lime"

        If rainbow = "False" Then

          platform[i][k] = Shapes.AddImage(fpath + "platform" + theme + ".png")

        Else

          platform[i][k] = Shapes.AddImage(fpath + "platform" + Math.GetRandomNumber(6) + ".png")

        EndIf

        Shapes.Move(platform[i][k], 10 + 50 * (k-1), 100 * i)

        If rainbow = "False" Then

          ladder[i][k] = Shapes.AddImage(fpath + "ladder" + theme + ".png")

        Else

          ladder[i][k] = Shapes.AddImage(fpath + "ladder" + Math.GetRandomNumber(6) + ".png")

        EndIf

        brokenvar[i][k] = "False"

        laddervar[i][k] = "True"

        Shapes.Move(ladder[i][k], 10 + 50 * (k-1), 100 * i-100)  

        powerupvar[i][k] = "False"

      EndIf

    EndIf    

  EndFor  

EndFor  

gameover = "False"

spawnX = Shapes.GetLeft(platform[6][2])

spawnY = Shapes.GetTop(platform[6][2]) - 25

GraphicsWindow.BrushColor = "Black"



player = Shapes.AddImage(fpath + "char.png")

Shapes.Move(player,spawnX,spawnY)

playerX = spawnX

playerY = spawnY

currentLevel = 6

currentPlatform = 2

changed = "False"

chargedSpawn = "False"

ghostSpawn = "False"

fireSpawn = "False"

numGhost = 0

numFire = 0

prevSpawn = 0

prevSpawn2 = 0

onLadder = "False"

direction = "none"

q = 0

GraphicsWindow.KeyDown = KeyDownEventDK

GraphicsWindow.KeyUp = KeyUpEventDK

Timer.Tick = TickEventDK

spawn = "False"

rspawn = "False"

numEnemies = 0

numREnemies = 0

shoeTimer = 0

starTimer = 0

invinci = "False"

pSpeed = 1



While gameover = "False"

  'Enemy AI

  Program.Delay(waitTime)

  If shoeTimer > 0 Then

    If shoeTimer - 1 <= 0 Then

      Shapes.Remove(shoeTimerText)

      pSpeed = 1

    EndIf

    shoeTimer = shoeTimer - 1

    Shapes.SetText(shoeTimerText,"SpeedUP: " + shoeTimer)

  EndIf

  If starTimer > 0 Then

    If starTimer - 1 <= 0 Then

      Shapes.Remove(starTimerText)

      invinci = "False"

    EndIf

    starTimer = starTimer - 1

    Shapes.SetText(starTimerText,"Invinci: " + starTimer)

  EndIf  

  If powerupvar[currentLevel][currentPlatform] <> "False" Then

    If Shapes.GetLeft(powerup[currentLevel][currentPlatform]) + 50 >= playerX And Shapes.GetLeft(powerup[currentLevel][currentPlatform]) <= playerX + 50 And Shapes.GetTop(powerup[currentLevel][currentPlatform]) + 25 >= playerY And Shapes.GetTop(powerup[currentLevel][currentPlatform]) <= playerY + 25 Then

      If powerupvar[currentLevel][currentPlatform] = "Shoes" Then

        shoeTimer = 1000

        GraphicsWindow.BrushColor = "White"

        Shapes.Remove(shoeTimerText)

        pSpeed = 2

        shoeTimerText = Shapes.AddText("SpeedUP: " + shoeTimer)

        Shapes.Move(shoeTimerText, 110, 610)

      ElseIf powerupvar[currentLevel][currentPlatform] = "Star" Then

        starTimer = 1000

        GraphicsWindow.BrushColor = "White"

        Shapes.Remove(starTimerText)

        invinci = "True"

        starTimerText = Shapes.AddText("Invinci: " + starTimer)

        Shapes.Move(starTimerText, 210, 610)

      EndIf

      powerupvar[currentLevel][currentPlatform] = "False"

      Shapes.Move(powerup[currentLevel][currentPlatform],1000000,1000000)

    EndIf 

  EndIf  

  If (spawn = "True") Then 'Spawn enemy

    numEnemies = numEnemies + 1

    GraphicsWindow.BrushColor = "Brown"

    enemy[numEnemies] = Shapes.AddImage(fpath + "enemy.png")

    enemySpeed[numEnemies] = Math.GetRandomNumber(2)

    enemyLadder[numEnemies] = "False"

    enemyPlatform[numEnemies] = 2

    enemyLevel[numEnemies] = 1

    enemyR[numEnemies] = 0

    enemyX[numEnemies] = Shapes.GetLeft(platform[1][2]) + 10

    enemyY[numEnemies] = Shapes.GetTop(platform[1][2]) - 25

    Shapes.Move(enemy[numEnemies],enemyX[numEnemies],enemyY[numEnemies])

    spawn = "False"

  EndIf  

  If (rspawn = "True") Then 'Spawn enemy

    numREnemies = numREnemies + 1

    GraphicsWindow.BrushColor = "Brown"

    renemy[numREnemies] = Shapes.AddImage(fpath + "reverse.png")

    renemySpeed[numREnemies] = Math.GetRandomNumber(2)

    renemyLadder[numREnemies] = "False"

    renemyPlatform[numREnemies] = length-1

    renemyLevel[numREnemies] = 6

    renemyR[numREnemies] = 0

    renemyX[numREnemies] = Shapes.GetLeft(platform[6][length-1]) + 10

    renemyY[numREnemies] = Shapes.GetTop(platform[6][length-1]) - 25

    renemymode[numREnemies] = "Left"

    Shapes.Move(renemy[numREnemies],renemyX[numREnemies],renemyY[numREnemies])

    rspawn = "False"

  EndIf  

  If Math.Remainder(numEnemies, rate) = 0 And numEnemies <> 0 And prevSpawn <> numEnemies And levels > 10 And numREnemies = 0 Then 'Spawned charged shot

    charged = Shapes.AddImage(fpath + "charged.png")

    chargedR = 0

    pos = Math.GetRandomNumber(length)

    chargedX = Shapes.GetLeft(platform[1][pos]) + 10

    chargedY = Shapes.GetTop(platform[1][pos]) - 25

    chargedSpawn = "True"

    prevSpawn = numEnemies

    Shapes.Move(charged, chargedX, chargedY)

  EndIf 

  If Math.Remainder(numREnemies, rate) = 0 And numREnemies <> 0 And prevSpawn2 <> numREnemies And levels > 10 Then 'Spawned charged shot

    charged = Shapes.AddImage(fpath + "charged.png")

    chargedR = 0

    pos = Math.GetRandomNumber(length)

    chargedX = Shapes.GetLeft(platform[1][pos]) + 10

    chargedY = Shapes.GetTop(platform[1][pos]) - 25

    chargedSpawn = "True"

    prevSpawn2 = numREnemies

    Shapes.Move(charged, chargedX, chargedY)

  EndIf 

  If chargedSpawn = "True" Then

    chargedR = chargedR + 10

    chargedY = chargedY + 2

    If invinci = "False" And ((chargedX + 25) >= playerX And chargedX <= (playerX + 25)) And ((chargedY + 25) >= playerY And chargedY <= (playerY + 25)) Then

      gameover = "True"

    EndIf 

    If chargedY < Shapes.GetTop(platform[6][pos]) - 25 Then

      Shapes.Move(charged,chargedX,chargedY)

      Shapes.Rotate(charged,chargedR)

    Else

      chargedSpawn = "False"

      If levels <= 50 Then

        fireSpawn = "True"

      ElseIf levels <= 70 Then

        ghostSpawn = "True"

      Else

        fireSpawn = "True"

        ghostSpawn = "True"

      EndIf  

      chargedX = 100000

      chargedY = 100000

      Shapes.Remove(charged)

    EndIf

  EndIf 

  If ghostSpawn = "True" Then

    numGhost = numGhost + 1

    GraphicsWindow.BrushColor = "Brown"

    ghost[numGhost] = Shapes.AddImage(fpath + "ghost.png")

    ghostLadder[numGhost] = "False"

    ghostPlatform[numGhost] = pos

    ghostLevel[numGhost] = 6

    ghostR[numGhost] = 0

    ghostX[numGhost] = Shapes.GetLeft(platform[6][pos]) + 10

    ghostY[numGhost] = Shapes.GetTop(platform[6][pos]) - 25

    Shapes.Move(ghost[numGhost],ghostX[numGhost],ghostY[numGhost])

    ghostSpawn = "False"

  EndIf 

  If (fireSpawn = "True") Then 'Spawn enemy

    numFire = numFire + 1

    GraphicsWindow.BrushColor = "Brown"

    fire[numFire] = Shapes.AddImage(fpath + "fire.png")

    fireLadder[numFire] = "False"

    fireLadder2[numFire] = "False"

    firePlatform[numFire] = pos

    fireLevel[numFire] = 6

    fireR[numFire] = 0

    fireX[numFire] = Shapes.GetLeft(platform[6][pos]) + 10

    fireY[numFire] = Shapes.GetTop(platform[6][pos]) - 25

    dec = Math.GetRandomNumber(2)

    If dec = 1 Then

      firemode[numFire] = "Left"

    Else

      firemode[numFire] = "Right"

    EndIf  

    Shapes.Move(fire[numFire],fireX[numFire],fireY[numFire])

    fireSpawn = "False"

  EndIf  

  For y = 1 To numEnemies

    If enemyLevel[y] = 7 Then

      Shapes.Move(enemy[y],100000,100000)

      Shapes.Remove(enemy[y])

      enemyX[y] = 100000

      enemyY[y] = 100000

    EndIf

    If invinci = "False" And ((enemyX[y] + 25) >= playerX And enemyX[y] <= (playerX + 25)) And ((enemyY[y] + 25) >= playerY And enemyY[y] <= (playerY + 25)) Then

      gameover = "True"

    EndIf 

    If Math.Remainder(enemyLevel[y],2) = 0 Then 'Even

      If Math.Remainder((enemyX[y] - enemySpeed[y])-10,50) = 0 And enemyPlatform[y] <> 1 And enemyChanged[y] <> "True" Then 

        enemyPlatform[y] = enemyPlatform[y] - 1

        enemyChanged[y] = "True"

      Else

        enemyChanged[y] = "False"

      EndIf

      If (brokenvar[enemyLevel[y]+1][enemyPlatform[y]] = "True" Or laddervar[enemyLevel[y]+1][enemyPlatform[y]] = "True") And enemyLadder[y] = "False" And enemyPlatform[y] <> 1 And enemyStop[y][enemyPlatform[y]][enemyLevel[y]] <> "True" And enemyX[y] = Shapes.GetLeft(platform[enemyLevel[y]][enemyPlatform[y]]) + 12 Then

        If Math.GetRandomNumber(2) = 2 Then

          enemyLadder[y] = "True"

          enemyStop[y][enemyPlatform[y]][enemyLevel[y]] = "True"

          enemyY[y] = enemyY[y] + enemySpeed[y]

        Else  

          enemyStop[y][enemyPlatform[y]][enemyLevel[y]] = "True"

          enemyX[y] = enemyX[y] + enemySpeed[y]

          enemyR[y] = enemyR[y] + 5

        EndIf

      EndIf    

      If (enemyLadder[y] = "True") Or (enemyPlatform[y] <= 1 And enemyX[y] = Shapes.GetLeft(platform[enemyLevel[y]][enemyPlatform[y]]) + 12) Then 

        If (enemyY[y] + enemySpeed[y]) <= Shapes.GetTop(platform[(enemyLevel[y]+1)][enemyPlatform[y]])-25 Then

          enemyLadder[y] = "True"

          enemyY[y] = enemyY[y] + enemySpeed[y]

        Else

          enemyLevel[y] = enemyLevel[y] + 1

          enemyLadder[y] = "False" 

        EndIf    

      ElseIf (enemyLadder[y] = "False") Then

        enemyX[y] = enemyX[y] - enemySpeed[y] 

        enemyR[y] = enemyR[y] - 5

      EndIf  

      Shapes.Move(enemy[y],enemyX[y],enemyY[y])

      Shapes.Rotate(enemy[y],enemyR[y])

      'Program.Delay(10)

    ElseIf Math.Remainder(enemyLevel[y],2) = 1 Then 'Odd

      If Math.Remainder((enemyX[y] + enemySpeed[y])-10,50) = 0 And enemyPlatform[y] <> length And enemyChanged[y] <> "True" Then 

        enemyPlatform[y] = enemyPlatform[y] + 1

        enemyChanged[y] = "True"

      Else

        enemyChanged[y] = "False"

      EndIf

      If (brokenvar[enemyLevel[y]+1][enemyPlatform[y]] = "True" Or laddervar[enemyLevel[y]+1][enemyPlatform[y]] = "True") And enemyLadder[y] = "False" And enemyPlatform[y] <> length And enemyStop[y][enemyPlatform[y]][enemyLevel[y]] <> "True" And enemyX[y] = Shapes.GetLeft(platform[enemyLevel[y]][enemyPlatform[y]]) + 12 Then

        If Math.GetRandomNumber(2) = 2 Then

          enemyLadder[y] = "True"

          enemyStop[y][enemyPlatform[y]][enemyLevel[y]] = "True"

          enemyY[y] = enemyY[y] + enemySpeed[y]

        Else  

          enemyStop[y][enemyPlatform[y]][enemyLevel[y]] = "True"

          enemyX[y] = enemyX[y] + enemySpeed[y]

          enemyR[y] = enemyR[y] + 5

        EndIf

      EndIf    

      If (enemyLadder[y] = "True") Or (enemyPlatform[y] >= length And enemyX[y] = Shapes.GetLeft(platform[enemyLevel[y]][enemyPlatform[y]]) + 12) Then 

        If (enemyY[y] + enemySpeed[y]) <= Shapes.GetTop(platform[(enemyLevel[y]+1)][enemyPlatform[y]])-25 Then

          enemyLadder[y] = "True"

          enemyY[y] = enemyY[y] + enemySpeed[y]

        Else

          enemyLevel[y] = enemyLevel[y] + 1

          enemyLadder[y] = "False" 

        EndIf    

      ElseIf (enemyLadder[y] = "False") Then

        enemyX[y] = enemyX[y] + enemySpeed[y]  

        enemyR[y] = enemyR[y] + 5

      EndIf  

      Shapes.Move(enemy[y],enemyX[y],enemyY[y])

      Shapes.Rotate(enemy[y],enemyR[y])

      'Program.Delay(10)

    EndIf

  EndFor  

  For y = 1 To numREnemies

    If renemyLevel[y] = 0 Then

      renemyX[y] = 100000

      renemyY[y] = 100000

      Shapes.Move(renemy[y],100000,100000)

      Shapes.Remove(renemy[y])

    EndIf

    If invinci = "False" And ((renemyX[y] + 25) >= playerX And renemyX[y] <= (playerX + 25)) And ((renemyY[y] + 25) >= playerY And renemyY[y] <= (playerY + 25)) Then

      gameover = "True"

    EndIf

    If (brokenvar[renemyLevel[y]][renemyPlatform[y]] = "True" Or laddervar[renemyLevel[y]][renemyPlatform[y]] = "True") And renemyLadder[y] = "False" And renemyStop[y][renemyPlatform[y]][renemyLevel[y]] <> renemymode[y] And renemyX[y] = Shapes.GetLeft(platform[renemyLevel[y]][renemyPlatform[y]]) + 12 Then

      If Math.GetRandomNumber(2) = 2 Then

        renemyLadder[y] = "True"

        renemyStop[y][renemyPlatform[y]][renemyLevel[y]] = renemymode[y]

        renemyY[y] = renemyY[y] - renemySpeed[y]

      Else  

        renemyStop[y][renemyPlatform[y]][renemyLevel[y]] = renemymode[y]

        If renemymode[y] = "Right" Then

          renemyX[y] = renemyX[y] + renemySpeed[y]

          renemyR[y] = renemyR[y] + 5

          If Math.Remainder((renemyX[y] + renemySpeed[y])-10,50) = 0 And renemyChanged[y] <> "True" Then 

            renemyPlatform[y] = renemyPlatform[y] + 1

            renemyChanged[y] = "True"

          Else

            renemyChanged[y] = "False"

          EndIf

        ElseIf renemymode[y] = "Left" Then

          renemyX[y] = renemyX[y] - renemySpeed[y]

          renemyR[y] = renemyR[y] - 5

          If Math.Remainder((renemyX[y] - renemySpeed[y])-10,50) = 0 And renemyChanged[y] <> "True" Then 

            renemyPlatform[y] = renemyPlatform[y] - 1

            renemyChanged[y] = "True"

          Else

            renemyChanged[y] = "False"

          EndIf

        EndIf  

      EndIf

    EndIf    

    If (renemyLadder[y] = "True") Then 

      If (renemyY[y] - renemySpeed[y]) >= Shapes.GetTop(platform[(renemyLevel[y]-1)][renemyPlatform[y]])-25 Then

        renemyLadder[y] = "True"

        renemyY[y] = renemyY[y] - renemySpeed[y]

      Else

        renemyLevel[y] = renemyLevel[y] - 1

        renemyLadder[y] = "False" 

      EndIf    

    ElseIf (renemyLadder[y] = "False") Then

      If renemymode[y] = "Right" Then

        renemyX[y] = renemyX[y] + renemySpeed[y]

        renemyR[y] = renemyR[y] + 5

        If Math.Remainder((renemyX[y] + renemySpeed[y])-10,50) = 0 And renemyChanged[y] <> "True" Then 

          renemyPlatform[y] = renemyPlatform[y] + 1

          renemyChanged[y] = "True"

        Else

          renemyChanged[y] = "False"

        EndIf

      ElseIf renemymode[y] = "Left" Then

        renemyX[y] = renemyX[y] - renemySpeed[y]

        renemyR[y] = renemyR[y] - 5

        If Math.Remainder((renemyX[y] - renemySpeed[y])-10,50) = 0 And renemyChanged[y] <> "True" Then 

          renemyPlatform[y] = renemyPlatform[y] - 1

          renemyChanged[y] = "True"

        Else

          renemyChanged[y] = "False"

        EndIf

      EndIf

    EndIf  

    If renemyPlatform[y] = 1 And renemyX[y] = Shapes.GetLeft(platform[renemyLevel[y]][renemyPlatform[y]]) + 12 Then

      renemymode[y] = "Right"

    ElseIf renemyPlatform[y] = length And renemyX[y] = Shapes.GetLeft(platform[renemyLevel[y]][renemyPlatform[y]]) + 12 Then 

      renemymode[y] = "Left"

    EndIf

    Shapes.Move(renemy[y],renemyX[y],renemyY[y])

    Shapes.Rotate(renemy[y],renemyR[y])

  EndFor 

  For y = 1 To numFire

    If fireLevel[y] = 0 Then

      fireX[y] = 100000

      fireY[y] = 100000

      Shapes.Move(fire[y],100000,100000)

      Shapes.Remove(fire[y])

    EndIf

    If invinci = "False" And ((fireX[y] + 25) >= playerX And fireX[y] <= (playerX + 25)) And ((fireY[y] + 25) >= playerY And fireY[y] <= (playerY + 25)) Then

      gameover = "True"

    EndIf

    If (brokenvar[fireLevel[y]][firePlatform[y]] = "True" Or laddervar[fireLevel[y]][firePlatform[y]] = "True") And fireLadder[y] = "False" And fireLadder2[y] = "False" And fireStop[y][firePlatform[y]][fireLevel[y]] <> firemode[y] And fireX[y] = Shapes.GetLeft(platform[fireLevel[y]][firePlatform[y]]) + 12 Then

      If Math.GetRandomNumber(10) > 3 Then

        fireLadder[y] = "True"

        fireStop[y][firePlatform[y]][fireLevel[y]] = firemode[y]

        fireY[y] = fireY[y] - 0.5

      Else  

        fireStop[y][firePlatform[y]][fireLevel[y]] = firemode[y]

        If firemode[y] = "Right" Then

          fireX[y] = fireX[y] + 0.5

          fireR[y] = fireR[y] + 5

          If Math.Remainder((fireX[y] + 0.5)-10,50) = 0 And fireChanged[y] <> "True" Then 

            firePlatform[y] = firePlatform[y] + 1

            fireChanged[y] = "True"

          Else

            fireChanged[y] = "False"

          EndIf

        ElseIf firemode[y] = "Left" Then

          fireX[y] = fireX[y] - 0.5

          fireR[y] = fireR[y] - 5

          If Math.Remainder((fireX[y] - 0.5)-10,50) = 0 And fireChanged[y] <> "True" Then 

            firePlatform[y] = firePlatform[y] - 1

            fireChanged[y] = "True"

          Else

            fireChanged[y] = "False"

          EndIf

        EndIf  

      EndIf

    EndIf

    If (brokenvar[fireLevel[y]+1][firePlatform[y]] = "True" Or laddervar[fireLevel[y]+1][firePlatform[y]] = "True") And fireLadder[y] = "False" And fireLadder2[y] = "False" And fireStop[y][firePlatform[y]][fireLevel[y]] <> firemode[y] And fireX[y] = Shapes.GetLeft(platform[fireLevel[y]][firePlatform[y]]) + 12 Then

      If Math.GetRandomNumber(10) > 8 Then

        fireLadder2[y] = "True"

        fireStop[y][firePlatform[y]][fireLevel[y]] = firemode[y]

        fireY[y] = fireY[y] + 0.5

      Else  

        fireStop[y][firePlatform[y]][fireLevel[y]] = firemode[y]

        If firemode[y] = "Right" Then

          fireX[y] = fireX[y] + 0.5

          fireR[y] = fireR[y] + 5

          If Math.Remainder((fireX[y] + 0.5)-10,50) = 0 And fireChanged[y] <> "True" Then 

            firePlatform[y] = firePlatform[y] + 1

            fireChanged[y] = "True"

          Else

            fireChanged[y] = "False"

          EndIf

        ElseIf firemode[y] = "Left" Then

          fireX[y] = fireX[y] - 0.5

          fireR[y] = fireR[y] - 5

          If Math.Remainder((fireX[y] - 0.5)-10,50) = 0 And fireChanged[y] <> "True" Then 

            firePlatform[y] = firePlatform[y] - 1

            fireChanged[y] = "True"

          Else

            fireChanged[y] = "False"

          EndIf

        EndIf  

      EndIf

    EndIf     

    If (fireLadder[y] = "True") Then 

      If (fireY[y] - 0.5) >= Shapes.GetTop(platform[(fireLevel[y]-1)][firePlatform[y]])-25 Then

        fireLadder[y] = "True"

        fireY[y] = fireY[y] - 0.5

      Else

        fireLevel[y] = fireLevel[y] - 1

        fireLadder[y] = "False" 

      EndIf 

    ElseIf (fireLadder2[y] = "True") Then

      If (fireY[y] + 0.5) <= Shapes.GetTop(platform[(fireLevel[y]+1)][firePlatform[y]])-25 Then

        fireLadder2[y] = "True"

        fireY[y] = fireY[y] + 0.5

      Else

        fireLevel[y] = fireLevel[y] + 1

        fireLadder2[y] = "False" 

      EndIf 

    ElseIf (fireLadder[y] = "False" And fireLadder2[y] = "False") Then

      If firemode[y] = "Right" Then

        fireX[y] = fireX[y] + 0.5

        fireR[y] = fireR[y] + 5

        If Math.Remainder((fireX[y] + 0.5)-10,50) = 0 And fireChanged[y] <> "True" Then 

          firePlatform[y] = firePlatform[y] + 1

          fireChanged[y] = "True"

        Else

          fireChanged[y] = "False"

        EndIf

      ElseIf firemode[y] = "Left" Then

        fireX[y] = fireX[y] - 0.5

        fireR[y] = fireR[y] - 5

        If Math.Remainder((fireX[y] - 0.5)-10,50) = 0 And fireChanged[y] <> "True" Then 

          firePlatform[y] = firePlatform[y] - 1

          fireChanged[y] = "True"

        Else

          fireChanged[y] = "False"

        EndIf

      EndIf

    EndIf  

    If firePlatform[y] = 1 And fireX[y] = Shapes.GetLeft(platform[fireLevel[y]][firePlatform[y]]) + 12 Then

      firemode[y] = "Right"

    ElseIf firePlatform[y] = length And fireX[y] = Shapes.GetLeft(platform[fireLevel[y]][firePlatform[y]]) + 12 Then 

      firemode[y] = "Left"

    EndIf

    Shapes.Move(fire[y],fireX[y],fireY[y])

    Shapes.Rotate(fire[y],fireR[y])

  EndFor 

  For y = 1 To numGhost

    'If no player find nearest climb

    'If player above take up ladder

    'If player down take down ladder

    'If player

    'If player left go left

    'If player right go right

    If ((ghostX[y] + 25) >= playerX And ghostX[y] <= (playerX + 25)) And ((ghostY[y] + 25) >= playerY And ghostY[y] <= (playerY + 25)) Then

      gameover = "True"

    EndIf

    If ghostLevel[y] = currentLevel Then

      If ghostX[y] < playerX Then

        If Math.Remainder((ghostX[y] + 0.25)-10,50) = 0 And ghostChanged[y] <> "True" Then 

          ghostPlatform[y] = ghostPlatform[y] + 1

          ghostChanged[y] = "True"

        Else

          ghostChanged[y] = "False"

        EndIf

        ghostX[y] = ghostX[y] + 0.5

        ghostR[y] = ghostR[y] + 5

      ElseIf ghostX[y] > playerX Then

        If Math.Remainder((ghostX[y] - 0.25)-10,50) = 0 And ghostChanged[y] <> "True" Then 

          ghostPlatform[y] = ghostPlatform[y] - 1

          ghostChanged[y] = "True"

        Else

          ghostChanged[y] = "False"

        EndIf

        ghostX[y] = ghostX[y] - 0.25

        ghostR[y] = ghostR[y] - 5

      EndIf 

    ElseIf ghostLevel[y] > currentLevel Then

      max[y] = 100

      For w = 1 To length

        If brokenvar[ghostLevel[y]][w] = "True" or laddervar[ghostLevel[y]][w] = "True" Then

          dist[y][w] = w - ghostPlatform[y]  

          If Math.Abs(dist[y][w]) < max[y] Then

            max[y] = Math.Abs(dist[y][w])

            target[y] = w

          EndIf

        EndIf

      EndFor

      If ghostX[y] < Shapes.GetLeft(platform[ghostLevel[y]][target[y]]) + 12 Then

        If Math.Remainder((ghostX[y] - 0.25)-10,50) = 0 And ghostChanged[y] <> "True" Then 

          ghostPlatform[y] = ghostPlatform[y] + 1

          ghostChanged[y] = "True"

        Else

          ghostChanged[y] = "False"

        EndIf

        ghostX[y] = ghostX[y] + 0.25

        ghostR[y] = ghostR[y] + 5

      EndIf

      If ghostX[y] > Shapes.GetLeft(platform[ghostLevel[y]][target[y]]) + 12 Then

        If Math.Remainder((ghostX[y] - 0.25)-10,50) = 0 And ghostChanged[y] <> "True" Then 

          ghostPlatform[y] = ghostPlatform[y] - 1

          ghostChanged[y] = "True"

        Else

          ghostChanged[y] = "False"

        EndIf

        ghostX[y] = ghostX[y] - 0.25

        ghostR[y] = ghostR[y] - 5

      EndIf

      If ghostX[y] = Shapes.GetLeft(platform[ghostLevel[y]][target[y]]) + 12 Then

        If ghostY[y]-0.25 > Shapes.GetTop(platform[ghostLevel[y]-1][target[y]])-25 Then

          ghostY[y] = ghostY[y] - 0.25

        Else

          ghostLevel[y] = ghostLevel[y] - 1  

        EndIf

      EndIf

    ElseIf ghostLevel[y] < currentLevel Then  

      max[y] = 100

      For w = 1 To length

        If brokenvar[ghostLevel[y]+1][w] = "True" or laddervar[ghostLevel[y]+1][w] = "True" Then

          dist[y][w] = w - ghostPlatform[y]  

          If Math.Abs(dist[y][w]) < max[y] Then

            max[y] = Math.Abs(dist[y][w])

            target[y] = w

          EndIf

        EndIf

      EndFor

      If ghostX[y] < Shapes.GetLeft(platform[ghostLevel[y]][target[y]]) + 12 Then

        If Math.Remainder((ghostX[y] - 0.25)-10,50) = 0 And ghostChanged[y] <> "True" Then 

          ghostPlatform[y] = ghostPlatform[y] + 1

          ghostChanged[y] = "True"

        Else

          ghostChanged[y] = "False"

        EndIf

        ghostX[y] = ghostX[y] + 0.25

        ghostR[y] = ghostR[y] + 5

      EndIf

      If ghostX[y] > Shapes.GetLeft(platform[ghostLevel[y]][target[y]]) + 12 Then

        If Math.Remainder((ghostX[y] - 0.25)-10,50) = 0 And ghostChanged[y] <> "True" Then 

          ghostPlatform[y] = ghostPlatform[y] - 1

          ghostChanged[y] = "True"

        Else

          ghostChanged[y] = "False"

        EndIf

        ghostX[y] = ghostX[y] - 0.25

        ghostR[y] = ghostR[y] - 5

      EndIf

      If ghostX[y] = Shapes.GetLeft(platform[ghostLevel[y]][target[y]]) + 12 Then

        If ghostY[y]+0.25 < Shapes.GetTop(platform[ghostLevel[y]+1][target[y]])-25 Then

          ghostY[y] = ghostY[y] + 0.25

        Else

          ghostLevel[y] = ghostLevel[y] + 1  

        EndIf

      EndIf

    EndIf  

    Shapes.Move(ghost[y],ghostX[y],ghostY[y])

    Shapes.Rotate(ghost[y],ghostR[y])

  EndFor

  If (keyPress = "Right" Or direction = "right") And onLadder = "False" And spaceJam = "False"  And playerX+25 < Shapes.GetLeft(platform[1][length])+50 Then 

    direction = "right"

    If Math.Remainder(currentLevel,2) = 0 Then 'Even movement

      If Math.Remainder((playerX + pSpeed)+10,50) = 0 Then 'New offset

        offset = (playerX + pSpeed + 10)/50

        If changed = "False" Then

          currentPlatform = currentPlatform + 1

          changed = "True"

        EndIf  

      Else

        changed = "False"  

      EndIf  

      playerX = playerX + pSpeed

      Shapes.Move(player, playerX, playerY)

      'Program.Delay(10)

    ElseIf Math.Remainder(currentLevel,2) = 1 Then 'Odd movement

      If Math.Remainder((playerX + pSpeed)-10,50) = 0 Then 'New offset

        offset = Text.GetLength(fmt[currentLevel]) - (playerX + pSpeed + 10)/50

        If changed = "False" Then

          currentPlatform = currentPlatform + 1

          changed = "True"

        EndIf  

      Else

        changed = "False"  

      EndIf  

      playerX = playerX + pSpeed

      Shapes.Move(player, playerX, playerY)

      'Program.Delay(10)

    EndIf    

    Rotation = Rotation + 5

    Shapes.Rotate(player,Rotation)  

  ElseIf (keyPress = "Left" Or direction = "left") And onLadder = "False" And spaceJam = "False" And playerX > Shapes.GetLeft(platform[1][1]) Then

    direction = "left"

    If Math.Remainder(currentLevel,2) = 0 Then 'Even movement

      If Math.Remainder((playerX - pSpeed)+10,50) = 0 Then 'New offset

        offset = (playerX - pSpeed + 10)/50

        If changed = "False" Then

          currentPlatform = currentPlatform - 1

          changed = "True"

        EndIf  

      Else

        changed = "False"  

      EndIf  

      playerX = playerX - pSpeed

      Shapes.Move(player, playerX, playerY)

      'Program.Delay(10)

    ElseIf Math.Remainder(currentLevel,2) = 1 Then 'Odd movement

      If Math.Remainder((playerX - pSpeed)-10,50) = 0 Then 'New offset

        offset = Text.GetLength(fmt[currentLevel]) - (playerX - pSpeed + 10)/50

        If changed = "False" Then

          currentPlatform = currentPlatform - 1

          changed = "True"

        EndIf  

      Else

        changed = "False"  

      EndIf  

      playerX = playerX - pSpeed

      Shapes.Move(player, playerX, playerY)

      'Program.Delay(10)

    EndIf 

    Rotation = Rotation - 5

    Shapes.Rotate(player,Rotation)  

  EndIf  

  If (keyPress = "Up" Or direction = "up") And spaceJam = "False" And playerX > Shapes.GetLeft(platform[currentLevel][currentPlatform]) + 5 And playerX + 25 < Shapes.GetLeft(platform[currentLevel][currentPlatform]) + 45 Then

    direction = "up"

    If laddervar[currentLevel][currentPlatform] = "True" Then

      currentTop = Shapes.GetTop(ladder[currentLevel][currentPlatform])

      If Shapes.GetTop(player) > currentTop - 25 Then

        onLadder = "True"

        playerY = playerY - pSpeed

      EndIf  

      If Shapes.GetTop(player) <= currentTop - 25 Then

        onLadder = "False"

        currentLevel = currentLevel - 1

      EndIf

    EndIf

    Shapes.Move(player, playerX, playerY)

    ' Program.Delay(10)

  ElseIf (keyPress = "Down" Or direction = "down") And spaceJam = "False" And playerX > Shapes.GetLeft(platform[currentLevel][currentPlatform]) + 5 And playerX + 25 < Shapes.GetLeft(platform[currentLevel][currentPlatform]) + 45 Then

    direction = "down"

    If onLadder = "False" Then

      If laddervar[currentLevel+1][currentPlatform] = "True" Then

        currentTop = Shapes.GetTop(platform[currentLevel+1][currentPlatform])

        If Shapes.GetTop(player) <= currentTop - 25 Then

          onLadder = "True"

          currentLevel = currentLevel + 1

          playerY = playerY + pSpeed

        EndIf  

        If Shapes.GetTop(player) > currentTop - 25 Then

          onLadder = "False"

        EndIf

      EndIf

    ElseIf onLadder = "True" Then

      If laddervar[currentLevel][currentPlatform] = "True" Then

        currentTop = Shapes.GetTop(platform[currentLevel][currentPlatform])

        If Shapes.GetTop(player) <= currentTop - 25 Then

          onLadder = "True"

          playerY = playerY + pSpeed

        EndIf  

        If Shapes.GetTop(player) > currentTop - 25 Then

          onLadder = "False"

        EndIf

      EndIf

    EndIf  

    Shapes.Move(player, playerX, playerY)

    'Program.Delay(10) 

  EndIf  

  If keyPress = "none" Then

    direction = "none"

  EndIf  

  If (keyPress = "Space" or spaceJam = "True") And onLadder = "False" Then

    q = q + 1

    If q < 41 Then

      spaceJam = "True"

      playerY = playerY - 2 + (q/40)

      Shapes.Move(player, playerX, playerY)

    EndIf

    'Program.Delay(10) 

    If q > 40 And q <= 70 Then 

    ElseIf q > 70 Then

      spaceJam = "True"

      playerY = playerY + 2 - ((q-70)/40)

      Shapes.Move(player, playerX, playerY)

      keyPress = direction

      If q = 110 Then 

        q = 0

        spaceJam = "False"

      EndIf

    EndIf

  EndIf  

  If currentLevel = 0 Then

    Goto Start

  EndIf  

EndWhile

GraphicsWindow.Clear()

GraphicsWindow.BrushColor = "White"

GraphicsWindow.FontSize = 20

GraphicsWindow.DrawText(10,10,"GAME OVER")

GraphicsWindow.DrawText(10,50,"Final Level : " + (levels-1))

GraphicsWindow.BrushColor = "Black"

clickme = Controls.AddButton("Click to restart",10,90)

ready = "False"

While ready = "False"

  If Controls.LastClickedButton = clickme Then

    ready = "True"

  EndIf  

EndWhile

Goto beginning



Sub KeyDownEventDK

  keyPress = GraphicsWindow.LastKey

EndSub  



Sub KeyUpEventDK

  keyUnpress = GraphicsWindow.LastKey

  If keyUnpress = "Right" Or keyUnpress = "Left" Then

    direction = "none"

  EndIf  

  keyPress = "none"

EndSub  



Sub TickEventDK

  If levels <= 50 Then 

    spawn = "True"

  ElseIf levels <= 90 Then  

    rspawn = "True"

  Else

    spawn = "True"

    rspawn = "True"

  EndIf  

EndSub  


