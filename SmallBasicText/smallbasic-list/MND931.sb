GW=600
GraphicsWindow.Height=GW
GraphicsWindow.Width=GW
GraphicsWindow.PenWidth=0
GraphicsWindow.BrushColor="Blue"
Box=Shapes.AddRectangle(100,100)
x=0

While "True"
  Program.Delay(10)
  BoxX=Shapes.GetLeft(Box)
  BoxY=Shapes.GetTop(Box)
  GraphicsWindow.BrushColor="#10FFFFFF" 'The white transparent color to fade out the blue rectangles.
  GraphicsWindow.FillRectangle(0,0,GW,GW) 'Fade out the rectangles a bit.
  If x<BoxX-10 Or x>BoxX+10 or y<BoxY-10 Or y>BoxY+10 then 'checks if the box has moved more than 10 pixels.
    GraphicsWindow.BrushColor="#0000FF" 'All the rectangles here are for anti aliasing, because otherwise it would look pretty pixelated.
    GraphicsWindow.FillRectangle(BoxX,BoxY,100,100)
    GraphicsWindow.BrushColor="#550000FF"
    GraphicsWindow.FillRectangle(BoxX-1,BoxY-1,102,102)
    GraphicsWindow.BrushColor="#440000FF"
    GraphicsWindow.FillRectangle(BoxX-2,BoxY-2,104,104)
    GraphicsWindow.BrushColor="#330000FF"
    GraphicsWindow.FillRectangle(BoxX-3,BoxY-3,106,106)
    GraphicsWindow.BrushColor="#220000FF"
    GraphicsWindow.FillRectangle(BoxX-4,BoxY-4,108,108)
    x=BoxX' set the old x position to the new one so it can be compared again.
    y=BoxY' set the old y position to the new one so it can be compared again.
  endif
  MouseControl()
endwhile

Sub MouseControl ' used for dragging around the box. i wont further explain it, because its not important atm since i want just to fix the lag.
  If Mouse.IsLeftButtonDown = "True" Then 'Drag and drop the Emitter
    MX=GraphicsWindow.MouseX
    MY=GraphicsWindow.MouseY
    If dragging = 0 Then
      If MX >= BoxX And MX <= BoxX+50 And MY >= BoxY And MY <= BoxY+50 then
        dragging = 1
      endif
    EndIf
    If dragging = 1 Then
      BoxX = MX-25
      BoxY = MY-25
      Shapes.Move(Box,BoxX,BoxY)
    EndIf
  Else
    dragging = 0
  endif
endsub

