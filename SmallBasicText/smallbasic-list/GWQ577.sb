args=0

Sub merge
  i  = 1
  j  = 1
  k  = 1 
  mmerge=""
  left=args[1]
  right=args[2]
  
  While i<=Array.GetItemCount(left)+Array.GetItemCount(right)
    If ((left[j] <= right[k]) and (j <= Array.GetItemCount(left))) or (k > Array.GetItemCount(right)) Then
      mmerge[i]  = left[j] 
      j=j+1 
      
    Else
      mmerge[i]  = right[k] 
      k=k+1 
    EndIf 
    
    i=i+1 
  EndWhile
  return=mmerge
EndSub

Sub StrandSort 
  strand=""
  i0  = 1 
  mStrandSort=""
  repeat0:
  mStrandSort[i0]  = s[i0] 
  i0=i0+1 
  If (s[i0] >= s[i0-1]) Then
    Goto repeat0
  EndIf
  
  repeat1:
  strand=""
  j0  = 1 
  strand[j0]  = s[i0] 
  
  While (s[i0+1] > s[i0]) and (i0 < Array.GetItemCount(s))
    i0=i0+1 
    j0=j0+1 
    Strand[j0]  = s[i0] 
  EndWhile 
  
  mStrandSort  = ldcall.Function2( "merge" mStrandSort, strand) 
  i0=i0+1 
  If  (i0 <=Array.GetItemCount(s)) Then
    Goto repeat1
  EndIf
EndSub

TextWindow.WriteLine("The data before sorting:") 
For i  = 1 To 90
  mm:
  n=Math.GetRandomNumber(90)+9
  If Array.ContainsValue(s n) Then
    Goto mm
  EndIf
  s[i]  = n
  TextWindow.Write(s[i]+", ") 
EndFor 
os=s
TextWindow.WriteLine("")
TextWindow.WriteLine("")

StrandSort()
TextWindow.WriteLine("The data after sorting:") 
For i  = 1 To 90
  TextWindow.Write(mStrandSort[i]+", ") 
EndFor 
GraphicsWindow.Title="GraphSort"
GraphicsWindow.BackgroundColor="tan
GraphicsWindow.Width=1500
GraphicsWindow.Top=400
for x=1 to 90
  t=Shapes.AddText(os[x])
  Shapes.Rotate(t, -90)
  Shapes.Move(t x*15 20)
EndFor
Program.Delay(1555)
ss= LDShapes.GetAllShapes()
for x=1 to 90
  Shapes.Animate(ss[x] (os[x]-9)*15 250 1500)
  Program.Delay(75)
EndFor

