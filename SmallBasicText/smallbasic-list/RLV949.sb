Largest = 999999999999999

TextWindow.WriteLine(Largest)
Largest = Largest - 1
TextWindow.WriteLine(Largest)
Largest = Largest + 2
TextWindow.WriteLine(Largest)
For a = 1 To 13
  Largest = Largest * 10
  TextWindow.WriteLine(Largest)  
EndFor
TextWindow.WriteLine("123456789012345678901234567890")

'My conclusions are that the largest number Small Basic will accept as input
'is 15 digits :- 999,999,999,999,999.  But it appears to write up to 29 digits as a 
'result of calculations. Therefor my GUESS is that the answer to the challenge is
'99,999,999,999,999,999,999,999,999,999.  I don't know any way to cope with a 
'run-time error in Small Basic, so this is also a request for any help with that. I would 
'like to set the test going with a high number and add one until the limit was reached.
'If I increase the a loop above to 14 the program crashes, so I assume 30 digits are too many.
