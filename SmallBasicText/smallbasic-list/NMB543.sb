dw=1200
dh=900
args=0
grr=1.61803398875


GraphicsWindow.BackgroundColor ="darkblue
GraphicsWindow.width=dw
GraphicsWindow.Height=dh
GraphicsWindow.Top=0
GraphicsWindow.Left=0
While "true
  f5=math.GetRandomNumber (5)+3
  GraphicsWindow.Clear ()
  GraphicsWindow.BrushColor ="yellow
  
  For x= 1 To 150
    ss=math.GetRandomNumber (7)/2.5
    GraphicsWindow.FillEllipse (Math.GetRandomNumber (1200) Math.GetRandomNumber (700) ss ss)
    EndFor 
    GraphicsWindow.FillEllipse (1000,50 120 120)
    GraphicsWindow.BrushColor ="darkblue
    GraphicsWindow.FillEllipse (1030,50 120 120)
    
    For x=2 To 256*2-1
    If ESLMaths.Primality(x) then
      col=0 
      angle=0
      c=""
      a=x
      'height and width
      move=20
      width =250
      vv[x]=0.05
      For n=1 To 9
        b=Math.GetRandomNumber (10)
        If b <f5 Then
          c=c+"L" 
        else 
          c=c+"R" 
        endif
        a=Math.Floor(a/2)
      EndFor
      'start position of turtle
      T_X=dw/2
      T_y=dh-100
      
      For n=9 To 1 Step -1
        For v=1 To 14
          col=col+0.02
          GraphicsWindow.PenWidth=width
          vv[x]=vv[x]+0.01
          GraphicsWindow.brushColor=LDColours.HSLtoRGB (30,0.5,vv[x])
          ldcall.Function("t_Move",move)
          GraphicsWindow.FillEllipse(t_x-width/2,t_y-width/2,width,width)
          d = Text.GetSubText(c, n, 1)
          If d="R" Then
            'angle of branches
            angle=angle-3
            T_Angle=angle
          Else
            angle=angle+4
            T_Angle=angle
          EndIf
          width = width*0.96
        EndFor
        'golden ratio
        move = move/grr
      EndFor
      T_Angle=0
    endif
  endfor
  Program.Delay (4444)
endwhile

sub t_Move
  ds=args[1]
  mm=LDMath.Convert2Cartesian  (t_x,t_y,ds, t_Angle-90 )
  t_x= (mm[1])
  t_y= (mm[2])
  
EndSub
  
