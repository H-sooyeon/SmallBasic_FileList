'Eigenschaften

Warte = 1000 'je kleiner desto schneller

GBall = 50   'Größe des Balles

MaxBewegung = 150 'Maximaler Bewegungsradius des Balles

GraphicsWindow.PenWidth = GBall/5 'Stiftdicke bestimmen

GraphicsWindow.PenColor = "DarkBlue" 'Stiftfarbe für Ballhülle

Ball = Shapes.AddEllipse(GBall, GBall)  'Ball erstellen

Shapes.HideShape(Ball) 'Ball nicht sichtbar

GraphicsWindow.PenColor = "SteelBlue" 'Farbe für Stift und Kern des Balles

'Zufallsposition innerhalb des Fensters ermitteln

randomX = Math.GetRandomNumber(GraphicsWindow.Width - GBall)

randomY = Math.GetRandomNumber(GraphicsWindow.Height - GBall)

GraphicsWindow.Show()  'Grafikfenster anzeigen

Shapes.ShowShape(Ball) 'Ball sichtbar

While 1 = 1 'Endlosschleife

  GetNewPosition()  'Subroutine für neue Position aufrufen

  Shapes.Move(Ball, randomX, randomY) 'Ball auf die neue Position setzen

  Program.Delay(Warte/10) '50 Milisekunden warten damit ball langsam ist

'Zurückgelegte Strecke des Balls anzeigen

  GraphicsWindow.DrawLine(oldrandomX+GBall/2, oldrandomY+GBall/2, randomX+GBall/2, randomY+GBall/2)

  Program.Delay(Warte) '50 Milisekunden warten damit ball langsam ist

EndWhile 



Sub GetNewPosition

    von = randomX - MaxBewegung   'der Ball soll sich maximal MaxBewegung Bildpunkte bewegen

    bis = randomX + MaxBewegung

    If von < GBall Then       'damit der Ball im Fenster bleibt

      von = GBall

    EndIf 

    If bis > GraphicsWindow.Width - GBall Then

      bis = GraphicsWindow.Width - GBall

    EndIf 

    max = bis - von  'Maximalwert für Zufallszahl

    oldrandomX = randomX

    randomX = Math.GetRandomNumber(max) + von 'Zufallszahl um von erhöhen 

' das gleiche wie oben für die y-Koordinate

    von = randomY - MaxBewegung

    bis = randomY + MaxBewegung

    If von < GBall Then 

      von = GBall

    EndIf 

    If bis > GraphicsWindow.Height - 50 Then

      bis = GraphicsWindow.Height - 50

    EndIf 

    max = bis - von

    oldrandomY = randomY

    randomY = Math.GetRandomNumber(max) + von

EndSub 


