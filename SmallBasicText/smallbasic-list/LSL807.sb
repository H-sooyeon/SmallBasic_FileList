'==================================================================================
' Graphical explosion example - using arrays and Shape manipulation
' Also random numbers and RGB colours and Clock delays
'==================================================================================

'Size and center GraphicsWindow
gw = 800
gh = 600
GraphicsWindow.Width = gw
GraphicsWindow.Height = gh
GraphicsWindow.Top = (Desktop.Height-gh)/2
GraphicsWindow.Left = (Desktop.Width-gw)/2
GraphicsWindow.BackgroundColor = "Black" 'Night background

'Main control parameters
nbit = 25 'Number of bits in explosion
rad = 2 'Effective radius (half width) of shapes
nstep = 20 ' Number of animation steps

While ("True") 'Keep looping new explosions for ever
  
  GraphicsWindow.Clear() ' Also removes all shapes so the Shapes.Remove isn't really needed
  GraphicsWindow.PenWidth = 0 'No pen borders on shapes
  
  'Create the shapes
  cenX = gw/8 + Math.GetRandomNumber(gw*3/4) 'Initial position X - centre of shape is at (X,Y), top left corner at (X-rad,Y-rad)
  cenY = gh/8 + Math.GetRandomNumber(gh*3/4) 'Initial position Y
  For i = 1 To nbit
    GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(255,Math.GetRandomNumber(255),0) 'A random red/yellow colour - red and bits of green is orange!
    Shapes.Remove(bit[i]) 'Remove any existing shapes before creating a new one
    bit[i] = Shapes.AddRectangle(2*rad,2*rad) 'New rectangle shape with random colour 10x10 pixels
    X[i]= cenX
    Y[i]= cenY
    velX[i] = (Math.GetRandomNumber(201)-101)/100*300/nstep 'Velocity to fly away X (pixels per step) (-15 to 15) in 201 steps
    velY[i] = (Math.GetRandomNumber(201)-101)/100*300/nstep 'Velocity to fly away Y (pixels per step) (-15 to 15) in 201 steps
    angle[i] = Math.GetRandomNumber(360) 'Random rotation in degrees
    rotation[i] = Math.GetRandomNumber(61)-31 'Random rotation speed (degrees per step) (-30 to 30)
    Shapes.Rotate(bit[i],angle[i]) 'Random rotation
    Shapes.Move(bit[i],X[i]-rad,Y[i]-rad) 'Position the bit in start position
  EndFor
  
  'Move, rotate etc to do the explosion in nstep steps
  GraphicsWindow.PenWidth = 0.1 ' Thin tracer
  GraphicsWindow.PenColor = "#55555588" 'A gray/blue colour with some transparency ARGB
  For t = 1 To nstep 'nstep steps to fly away the explosion
    start = Clock.ElapsedMilliseconds
    For i = 1 To nbit
      X[i] = X[i]+velX[i] 'New position X
      Y[i] = Y[i]+velY[i] 'New position Y
      Shapes.Move(bit[i],X[i]-rad,Y[i]-rad) 'Move the bit
      scale = t/nstep*10 'Scale to zoom shape (max value is 10)
      Shapes.Zoom(bit[i],scale,scale) 'Zoom the fragment a little
      angle[i] = angle[i]+rotation[i] 'Update angle of rotation
      Shapes.Rotate(bit[i],angle[i]) 'Rotate the bit
      Shapes.SetOpacity(bit[i],(nstep-t)/nstep*100) 'Fade the bit (0 is transparent)
      GraphicsWindow.DrawLine(cenX,cenY,X[i],Y[i]) ' A tracer - this slows things a bit
    EndFor
    delay = 50 - (Clock.ElapsedMilliseconds-start) ' up to 50ms delay depending on how long the drawing update took
    If (delay > 0) Then
      Program.Delay(delay) 'Small delay for each step of the explosion
    EndIf
  EndFor
  
  Program.Delay(500) 'A longer delay between explosions
EndWhile
