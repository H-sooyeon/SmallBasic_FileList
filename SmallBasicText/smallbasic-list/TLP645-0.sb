' Troris

' Version 0.2a

' Copyright Â© 2014-2015 Nonki Takahashi.  The MIT License.

' Program ID TLP645-0

' Last update 2015-06-29

'

GraphicsWindow.Title = "Troris 0.2a"

Not = "False=True;True=False;"

WQ = Text.GetCharacter(34)

gw = 598

gh = 428

GraphicsWindow.Width = gw

GraphicsWindow.Height = gh

GraphicsWindow.BackgroundColor = "DimGray"

InitPiece()

ClearBoard()

t = 0

nDropped = 0

inGame = "True"

While inGame

  If Math.Remainder(t, 5) = 0 Then

    DropPiece()

  EndIf

  DrawBoard()

  UpdatePiece()

  t = t + 1

  Program.Delay(500)

  'DumpBoard()

EndWhile

GameOver()

Sub GameOver

  GraphicsWindow.BrushColor = "#80000000"

  GraphicsWindow.FillRectangle(0, 0, gw, gh)

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontName = "Trebuchet MS"

  fx = 542

  fy = 100

  GraphicsWindow.FontSize = fy

  x = Math.Floor((gw - fx) / 2)

  y = Math.Floor((gh - fy) / 2) - 20

  GraphicsWindow.DrawText(x, y, "GAME OVER")

EndSub

Sub DumpBoard

  For r = 1 To maxRow

    For c = 1 To maxCol

      TextWindow.Write(board[r][c])

    EndFor

    TextWindow.WriteLine("")

  EndFor

  TextWindow.WriteLine("")

EndSub

Sub DropPiece

  nDropped = nDropped + 1

  dropped[nDropped]["floating"] = "True"

  iPiece = Math.GetRandomNumber(nPiece)

  dropped[nDropped]["piece"] = iPiece

  col = Math.Floor((maxCol - piece[iPiece]["width"]) / 2) + 1

  row = 1 - piece[iPiece]["height"]

  dropped[nDropped]["col"] = col

  dropped[nDropped]["row"] = row

  'DumpDropped()

EndSub

Sub DumpDropped

  TextWindow.WriteLine("dropped: ")

  For i = 1 To nDropped

    TextWindow.WriteLine("dropped[" + i + "]: " + dropped[i])

  EndFor

  TextWindow.Pause()

EndSub

Sub UpdatePiece

  For iDropped = 1 To nDropped

    If dropped[iDropped]["floating"] Then

      col = dropped[iDropped]["col"]

      row = dropped[iDropped]["row"] + 1

      CollisionDetect()

      If Not[collision] Then

        MovePiece()

      Else

        dropped[iDropped]["floating"] = "False"

        iPiece = dropped[iDropped]["piece"]

        bottom = dropped[iDropped]["row"] + piece[iPiece]["height"] - 1

        If bottom <= 1 Then

          inGame = "False"

        EndIf

      EndIf

    EndIf

  EndFor

EndSub

Sub CollisionDetect

  ' param iDropped - index of dropped piece

  ' param col - new col

  ' param row - new row

  ' return collision - "True" if collision detected

  collision = "False"

  left = dropped[iDropped]["col"]

  top = dropped[iDropped]["row"]

  iPiece = dropped[iDropped]["piece"]

  wPiece = piece[iPiece]["width"]

  hPiece = piece[iPiece]["Height"]

  RemovePiece()

  left = col

  top = row

  For rowPiece = 1 To hPiece

    rowBoard = top + rowPiece - 1

    For colPiece = 1 To wPiece

      If piece[iPiece]["shape"][rowPiece][colPiece] = 1 Then

        colBoard = left + colPiece - 1

        If board[rowBoard][colBoard] <> 0 Then

          collision = "True"

        EndIf

      EndIf

    EndFor

  EndFor

  left = dropped[iDropped]["col"]

  top = dropped[iDropped]["row"]

  AddPiece()

EndSub

Sub RemovePiece

  For rowPiece = 1 To hPiece

    rowBoard = top + rowPiece - 1

    For colPiece = 1 To wPiece

      colBoard = left + colPiece - 1

      If piece[iPiece]["shape"][rowPiece][colPiece] = 1 Then

        board[rowBoard][colBoard] = 0

      EndIf

    EndFor

  EndFor

EndSub

Sub AddPiece

  For rowPiece = 1 To hPiece

    rowBoard = top + rowPiece - 1

    For colPiece = 1 To wPiece

      colBoard = left + colPiece - 1

      If piece[iPiece]["shape"][rowPiece][colPiece] = 1 Then

        board[rowBoard][colBoard] = iPiece

      EndIf

    EndFor

  EndFor

EndSub

Sub MovePiece

  ' param iDropped - index of dropped piece

  ' param col - new col

  ' param row - new row

  left = dropped[iDropped]["col"]

  top = dropped[iDropped]["row"]

  iPiece = dropped[iDropped]["piece"]

  wPiece = piece[iPiece]["width"]

  hPiece = piece[iPiece]["Height"]

  RemovePiece()

  left = col

  top = row

  AddPiece()

  dropped[iDropped]["col"] = col

  dropped[iDropped]["row"] = row

EndSub

Sub InitPiece

  piece[1] = "width=1;height=3;"

  piece[1]["shape"]["1"]["1"] = 1

  piece[1]["shape"]["2"]["1"] = 1

  piece[1]["shape"]["3"]["1"] = 1

  color[1] = "red"

  piece[2] = "width=2;height=2;"

  piece[2]["shape"]["1"]["2"] = 1

  piece[2]["shape"]["2"]["1"] = 1

  piece[2]["shape"]["2"]["2"] = 1

  color[2] = "green"

  piece[3] = "width=2;height=2;"

  piece[3]["shape"]["1"]["1"] = 1

  piece[3]["shape"]["2"]["1"] = 1

  piece[3]["shape"]["2"]["2"] = 1

  color[3] = "blue"

  nPiece = Array.GetItemCount(piece)

EndSub

Sub ClearBoard

  maxRow = 14

  maxCol = 7

  color[0] = "LightGray"

  For row = 1 To maxRow

    For col = 1 To maxCol

      board[row][col] = 0

    EndFor

  EndFor

  sizePiece = 26

  x0 = (gw - sizePiece * maxCol) / 2

  y0 = (gh - sizePiece * maxRow) / 2

EndSub

Sub DrawBoard

  For row = 1 To maxRow

    y = y0 + (row - 1) * sizePiece

    For col = 1 To maxCol

      x = x0 + (col - 1) * sizePiece

      GraphicsWindow.BrushColor = color[board[row][col]]

      GraphicsWindow.FillRectangle(x, y, sizePiece, sizePiece)

    EndFor

  EndFor

EndSub


