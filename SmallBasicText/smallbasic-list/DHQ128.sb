Initialise()



While 0=0

  If buttonClicked Then    

    lastBtnCap = Controls.GetButtonCaption(Controls.LastClickedButton)

    

    UpdateVote()

    

    buttonClicked = "False"

  EndIf

  

  UpdateTestForInteruption_deleteMe()

  

  Program.Delay(20)

EndWhile



'==============================================================

'Subroutines

'==============================================================

Sub Initialise

  InitialiseVoteFeature()

  InitialiseTestForInteruption_deleteMe() 'test for any interuption to UI thread

  

  Controls.ButtonClicked = OnButtonClicked

  Timer.Tick = BackGroundThread

  Timer.Interval = 100

EndSub



Sub OnButtonClicked

  buttonClicked = "True"

EndSub



Sub InitialiseVoteFeature

  likeBtnWidth = 40

  likeBtnHeight = 30

  likeBtnSpace = 10

  

  disLikeBtn = Controls.AddButton("", GraphicsWindow.Width - likeBtnWidth - likeBtnSpace, likeBtnSpace)

  likeBtn = Controls.AddButton("", GraphicsWindow.Width - (likeBtnWidth + likeBtnSpace) *2, likeBtnSpace)

  

  Controls.SetSize(disLikeBtn, likeBtnWidth, likeBtnHeight)

  Controls.SetSize(likeBtn, likeBtnWidth, likeBtnHeight)

  

  disLikeLabel = Shapes.AddText("Dislike")

  likeLabel = Shapes.AddText("Like")

  

  Shapes.Move(disLikeLabel, GraphicsWindow.Width - likeBtnWidth - likeBtnSpace, likeBtnSpace *2 + likeBtnHeight - 5)

  Shapes.Move(likeLabel, GraphicsWindow.Width - (likeBtnWidth + likeBtnSpace) *2, likeBtnSpace *2 + likeBtnHeight - 5)

  

  SetVoteCaptionsToWait()

EndSub   



Sub SetVoteCaptionsToWait

  Controls.SetButtonCaption(likeBtn, "wait")

  Controls.SetButtonCaption(disLikeBtn, "wait")

EndSub



Sub UpdateVote

  If Controls.LastClickedButton = likeBtn And lastBtnCap >= 0 Then 

    upLike = "True"      

  EndIf

  If Controls.LastClickedButton = disLikeBtn And lastBtnCap >= 0 Then

    upDislike = "True"      

  EndIf

EndSub 



'=====================================================================

'Background Thread

'=====================================================================

Sub BackGroundThread

  Timer.Pause()

  

  voteData = LDNetwork.GetGameData("Puppet Show")

  Controls.SetButtonCaption(likeBtn, voteData["likes"])

  Controls.SetButtonCaption(disLikeBtn, voteData["dislikes"])

  

  While 0=0

    

    If upLike Or upDislike Then

      SetVoteCaptionsToWait()

      voteData = LDNetwork.GetGameData("Puppet Show")

      

      If upLike Then        

        voteData["likes"] = voteData["likes"] + 1   '3      

        LDNetwork.SetGameData("Puppet Show", voteData)

        voteData = LDNetwork.GetGameData("Puppet Show")

      ElseIf upDislike Then         

        voteData["dislikes"] = voteData["dislikes"] + 1   

        LDNetwork.SetGameData("Puppet Show", voteData) 

        voteData = LDNetwork.GetGameData("Puppet Show")      

      EndIf

      

      upLike = "False"

      upDislike = "False"

      Controls.SetButtonCaption(likeBtn, voteData["likes"])

      Controls.SetButtonCaption(disLikeBtn, voteData["dislikes"])

    EndIf

  EndWhile

EndSub



'??????????????????????????????????????????????????????????????????????????????????

'Delete Me

'--------------------------------------------------------------------------------------------------------

Sub InitialiseTestForInteruption_deleteMe

  testNumber = Shapes.AddText(0)

  Shapes.Move(testNumber, 50, 250)

  Shapes.Zoom(testNumber, 5, 5)

EndSub



Sub UpdateTestForInteruption_deleteMe

  i = i + 1

  Shapes.SetText(testNumber, i)

EndSub


