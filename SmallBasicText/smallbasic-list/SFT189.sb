' multi-calculator

' program no: FWG719

' program no 







GraphicsWindow.FontName ="liberation sans narrow"

GraphicsWindow.FontSize=48

GraphicsWindow.Title ="Multi-Calculator"



black=GraphicsWindow.GetColorFromRGB(20,20,20)

gray1=GraphicsWindow.GetColorFromRGB(30,30,30)

bluegray1=GraphicsWindow.GetColorFromRGB(30,40,70)

bluegray2=GraphicsWindow.GetColorFromRGB(70,70,150)

gray3=GraphicsWindow.GetColorFromRGB(175,175,175)

gray4=GraphicsWindow.GetColorFromRGB(225,225,225)

ivoire=GraphicsWindow.GetColorFromRGB(255,245,235)

white=GraphicsWindow.GetColorFromRGB(250,250,250)





green1=GraphicsWindow.GetColorFromRGB(36,85,23)

green2=GraphicsWindow.GetColorFromRGB(135,180,120)



cyan1=GraphicsWindow.GetColorFromRGB(152,205,205)

cyan2=GraphicsWindow.GetColorFromRGB(152,195,195)



liquid_screen=GraphicsWindow.GetColorFromRGB(236,236,223)



orange2=GraphicsWindow.GetColorFromRGB(164,87,21)



red1=GraphicsWindow.GetColorFromRGB(160,20,20)

red2=GraphicsWindow.GetColorFromRGB(150,70,70)



blue1=GraphicsWindow.GetColorFromRGB(120,150,180)

blue2=GraphicsWindow.GetColorFromRGB(43,60,125)

cyan3=GraphicsWindow.GetColorFromRGB(45,112,123)



yellow1=GraphicsWindow.GetColorFromRGB(220,185,55)





GraphicsWindow.BackgroundColor=bluegray1

GraphicsWindow.BrushColor=gray1

GraphicsWindow.height=600

GraphicsWindow.width=675

GraphicsWindow.top=50

GraphicsWindow.left=100



btt0=ldtext.Split (" 1 | 2 | 3 | X | / | 4 | 5 | 6 | ^ |-/+| 7 | 8 | 9 | + | 0 | . | =| n | i | P | ? | Pv | ?àë | ?àö | 10?Åø | Fg | m1 | m2 | d | Enter","|")

bt0=ldtext.Split ("1 | 2 | 3 | X | / | 4 | 5 | 6 | ^ | - | 7 | 8 | 9 | + | 0 | . | = | n | i | P | ? | Pv | ?àë | ?àö | 10?Åø | Fg | m1 | m2 | d | E"," | ")



btt=ldtext.Split (" 7 | 8 | 9 | X | C | 4 | 5 | 6 | / |-/+| 1 | 2 | 3 | + | . | 0 | = | n | i | P | ? | Pv | ?àë | ?àö | 10?Åø | Fg | m1 | m2 | d | Enter","|")

bt=ldtext.Split ("7 | 8 | 9 | X | C | 4 | 5 | 6 | / | - | 1 | 2 | 3 | + | . | 0 | = | n | i | P | ? | Pv | ?àë | ?àö | 10?Åø | Fg | m1 | m2 | d | E"," | ")



GraphicsWindow.brushColor = bluegray1

GraphicsWindow.DrawRectangle (40,10,575,105)

GraphicsWindow.FillRectangle (40,10,575,105)



tx=Controls.AddTextBox (30,10)

Controls.SetSize (tx,595,105) ' largeur de a fenetre d affichage liquid

Shapes.SetOpacity(tx, 50)





op=1

spcx=80

spcy=60





For y=0 To 5

  For x=0 To 4

     GraphicsWindow.FontSize=35 ' donne la grosseur de la touche et du chiffre

    xx=y*5+x+1

    bb[xx]=controls.AddButton(btt[xx], x*spcx+40, 200+y*spcy)





                                   ' touche fond   touche choisie     touche click        touche caract     

    LDControls.SetButtonStyle(bb[xx], black ,   white ,      blue1 ,    ivoire ,       black ,     gray1 ,10 ,"true")

    

     If xx=5 then ' color and size of the clear button

       LDControls.SetButtonStyle(bb[xx], red1, white, blue1 , ivoire , black ,yellow1 ,10 ,"true")     

     endif

         

     

       If xx=18 or xx=19 or xx=22 then ' color and size of the n, i, pv   variable button    

    LDControls.SetButtonStyle(bb[xx], green1, white, blue1 ,ivoire ,black ,yellow1 ,10 ,"true")    

  endif

  

   If xx=20 then ' color and size of the P payment button    

    LDControls.SetButtonStyle(bb[xx], blue2, white, blue1 ,ivoire  , black ,yellow1 ,10 ,"true")

  endif

  

   If xx=25 then ' color and size of the G gravitationel compute button    

    LDControls.SetButtonStyle(bb[xx], black, white, blue1 ,yellow1 , black ,yellow1 ,10 ,"true")

  endif

  

  If xx=26 then ' color and size of the Fg gravitationel compute button    

    LDControls.SetButtonStyle(bb[xx], cyan3, white, blue1 ,ivoire , black ,yellow1 ,10 ,"true")

      endif

      

      If xx=27 or xx=28 or xx=29 then ' color and size of the m1,m2,r   variable button    

     LDControls.SetButtonStyle(bb[xx], orange2, white, blue1,ivoire  , black ,yellow1 ,10 ,"true")    

  endif

      

  If xx=30 then ' color and size of the enter button    

    LDControls.SetButtonStyle(bb[xx], gray3, white, blue1 ,red1 , black ,yellow1 ,10 ,"true")

      endif

    

  EndFor 

EndFor 





Controls.ButtonClicked =bccl

i=1











Sub bccl



  txx = Controls.GetTextBoxText (tx)

  cc=bt[text.GetSubTextToEnd (Controls.LastClickedButton 7) ]

  

  If cc="C" Then

          Controls.SetTextBoxText (tx, "")

     

   elseIf cc="10?Åø" Then ' 10 a la puissance n

     txx=Math.Power(10,txx)

   ' car en haut de 25 genere un overflow error, comme Jupiter 10exp27 ou le soleil 10exp30

       

       Controls.SetTextBoxText (tx,txx)

       

      elseIf cc="-" Then  ' chiffres n√©gatifs

       Controls.SetTextBoxText (tx, -1*txx)

       

       

       '  section to enter loan  vlaues

     elseIf cc="Pv" Then

         principal=txx

           Controls.SetTextBoxText (tx,"")       

        

         elseIf cc="n" Then

                  term=txx

                  Controls.SetTextBoxText (tx,"")

                 ' TextWindow.WriteLine(term)

           elseIf cc="i" Then

                rate=txx

             Controls.SetTextBoxText (tx,"")

            ' TextWindow.WriteLine(rate)

        ElseIf cc="P" then

          compute_loan()

          

          ' section to enter Gravitationnel vlaues

          

        elseIf cc="m1" Then

      

            masse1=txx

            masse1=math.Round(masse1*100)/100

            'TextWindow.WriteLine(masse1)

             Controls.SetTextBoxText (tx,"")     

          

            elseIf cc="m2" Then

           masse2=txx

          masse2=math.Round(masse2*100)/100

          'TextWindow.WriteLine(masse2)

            Controls.SetTextBoxText (tx,"")  

         

             elseIf cc="d" Then

         distance=txx

         Controls.SetTextBoxText (tx,"")  

        ' TextWindow.WriteLine(distance)

         

          ElseIf cc="Fg" then

          compute_gravity()

          

  elseIf cc="E" Then ' ENTER press

    

    Controls.SetTextBoxText (tx, gt)

    gt=0

    i=1

    op=1

   

    

  elseIf cc="+" Or cc="=" or cc="X" or cc="/" or cc="Pv" Then

    vv[i]=txx

   

    If cc="X" Then

      op=2

    elseIf cc="/" Then

      op=3

      

    Elseif cc="+" then 

      op=1

    endif

    If cc="=" Then

      w=0

           

      For x=1 To i

        If op=2 then

          If x=1 then

            w=vv[1]

            

          else

            w=w*vv[x]

          endif

        elseif op=3 then

          If x=1 then 

            w=vv[1]

          else

            

            w=w/vv[x]

          endif

        else

          w=w+vv[x]

        endif

      EndFor  

      

     

      gt=gt+w

      w=math.Round(w*100)/100 ' j ai cherch√© ongtemps c'est W qu'il faut elnever la virgule pour que le calcul gravit√© marche en mode x 10n

     

      Controls.SetTextBoxText (tx,w)

     

      i=1  

    Else

      i=i+1

      Controls.SetTextBoxText (tx,"")

    endif

    

  else

    

    Controls.SetTextBoxText (tx, text.Append (txx,cc))

    

  EndIf 

EndSub 

    

    Sub compute_loan

      ' for computing a monthly base payment

      rate=rate/100/12

      P = (principal*rate) / (1-(math.Power((1+rate),-term)))

             

  P=math.Round(P*100)/100

      gt=P

    endsub

    

    

      

  Sub compute_gravity

       

      ' Constante gravitationelle, valeur trouv√© par les exp√©riences de Cavendish

' G est la constante gravitationnelle, elle vaut dans les unit√©s SI

' G= 6,67384  x  10?Åª¬π¬π N ¬∑ m¬≤ ¬∑ kg?Åª¬≤



G=(math.Power(10,-11))*6.67384

'TEST=(math.Power(10,3))*5





r=distance*1000 ' pour mettre la distance en Km en M√®tres





'Formules de la Gravitation entre deux masses

' j applique le calcul en 2 phases parce que small basic ne prends pas en charge des chiffres trop gros





Fg1=G*((masse1)/math.Power(r,2))

Fg=Fg1*(masse2)  ' je suis oblig√© de diviser par 2 les masses pui ici de les remettre ok en les multipant par 2 a cause de la limite de small basic qui ne peut resoudre plus grand que 10 exp 54

  

      'TextWindow.WriteLine(G)



notation()



' 3 decimals precision

FGfinal=(math.Round(number*10000))/10000

FGarrondie=(math.Round(FGfinal*1000))/1000





gt=(FGarrondie+" x 10^"+ x+" Newtons")







    'Masse1=(math.Power(10,24))*5.9736 ' masse de la Terre

    'Masse2=(math.Power(10,22))*7.3477 ' masse de  la Lune

    'distance=384999  ' distance MOYENNE ( moy. du P√©rig√©e et de l'Apog√©e de Terre-Lune  DONN√âES DE WIKIP√âDIA

     

endsub





Sub notation

  'la r√©ponse v√©rifi√© dans excel est de          198,341,656,327,164,230,000 Newton

'ou  1,98 x 10¬≤?Å∞ N   ( N pour Newton , newton ce sont des kg * m√®tres * sec )





' ma methode pour afficher clairment en notation scientifique en base de 10 le r√©sultat

x=0

number = math.Round(Fg)



While (number > 10) ' 10 pour avoir par exemple 3,57 et non 0,357

     'TextWindow.WriteLine(number + " 10 exposant "+ x )  ( faire afficher cette ligne pour v√©rifier mon progrmme)

     number = number / 10

     x=x+1

     ' x est pour d√©terminer la valeur de l'exposant en base de 10 du r√©sultat

    EndWhile

  endsub  


