GraphicsWindow.Hide()
GraphicsWindow.Width = 200
GraphicsWindow.Height = 330
GraphicsWindow.Title = "Calculator"
GraphicsWindow.Show()
GraphicsWindow.BackgroundColor = "DarkSlateGray"
GraphicsWindow.KeyDown = OnKeyDown
holder = ""
intdivon = "False"
GraphicsWindow.BrushColor = "White"
GraphicsWindow.FillRectangle(10, 10, GraphicsWindow.Width - 20, 40)
GraphicsWindow.FontSize = 36
GraphicsWindow.BrushColor = "Black"
numbers = Shapes.AddText("0")
Shapes.Move(numbers, 20, 10)

btn7 = FCControls.AddButton(30, 30, "7")
FCControls.Move(btn7, 22, 100)
FCControls.RegisterMouseDownEvent(btn7, "n7")

btn8 = FCControls.AddButton(30, 30, "8")
FCControls.Move(btn8, 54, 100)
FCControls.RegisterMouseDownEvent(btn8, "n8")

btn9 = FCControls.AddButton(30, 30, "9")
FCControls.Move(btn9, 86, 100)
FCControls.RegisterMouseDownEvent(btn9, "n9")

btn4 = FCControls.AddButton(30, 30, "4")
FCControls.Move(btn4, 22, 132)
FCControls.RegisterMouseDownEvent(btn4, "n4")

btn5 = FCControls.AddButton(30, 30, "5")
FCControls.Move(btn5, 54, 132)
FCControls.RegisterMouseDownEvent(btn5, "n5")

btn6 = FCControls.AddButton(30, 30, "6")
FCControls.Move(btn6, 86, 132)
FCControls.RegisterMouseDownEvent(btn6, "n6")

btn1 = FCControls.AddButton(30, 30, "1")
FCControls.Move(btn1, 22, 164)
FCControls.RegisterMouseDownEvent(btn1, "n1")

btn2 = FCControls.AddButton(30, 30, "2")
FCControls.Move(btn2, 54, 164)
FCControls.RegisterMouseDownEvent(btn2, "n2")

btn3 = FCControls.AddButton(30, 30, "3")
FCControls.Move(btn3, 86, 164)
FCControls.RegisterMouseDownEvent(btn3, "n3")

btnbck = FCControls.AddButton(30, 30, "←")
FCControls.Move(btnbck, 22, 67)
FCControls.RegisterMouseDownEvent(btnbck, "bck")

ent = FCControls.AddButton(30, 94, "=")
FCControls.Move(ent, 152, 132)
FCControls.RegisterMouseDownEvent(ent, "calculate")

btnbck = FCControls.AddButton(30, 30, "←")
FCControls.Move(btnbck, 22, 67)
FCControls.RegisterMouseDownEvent(btnbck, "bck")

clear = FCControls.AddButton(30, 30, "C")
FCControls.Move(clear, 54, 67)
FCControls.RegisterMouseDownEvent(clear, "c")

plus = FCControls.AddButton(30, 30, "+")
FCControls.Move(plus, 86, 67)
FCControls.RegisterMouseDownEvent(plus, "add")

minus = FCControls.AddButton(30, 30, "-")
FCControls.Move(minus, 119, 100)
FCControls.RegisterMouseDownEvent(minus, "subtract")

divide = FCControls.AddButton(30, 30, "÷")
FCControls.Move(divide, 119, 132)
FCControls.RegisterMouseDownEvent(divide, "slash")

multiply = FCControls.AddButton(30, 30, "*")
FCControls.Move(multiply, 119, 164)
FCControls.RegisterMouseDownEvent(multiply, "mult")

btn0 = FCControls.AddButton(94, 30, "0")
FCControls.Move(btn0, 22, 196)
FCControls.RegisterMouseDownEvent(btn0, "n0")

btndot = FCControls.AddButton(30, 30, ".")
FCControls.Move(btndot, 119, 196)
FCControls.RegisterMouseDownEvent(btndot, "ndot")

btnper = FCControls.AddButton(30, 30, "%")
FCControls.Move(btnper, 152, 67)
FCControls.RegisterMouseDownEvent(btnper, "nper")

btnsqrt = FCControls.AddButton(30, 30, "√")
FCControls.Move(btnsqrt, 119, 67)
FCControls.RegisterMouseDownEvent(btnsqrt, "nsqrt")

btnpwr = FCControls.AddButton(30, 30, "^")
FCControls.Move(btnpwr, 152, 100)
FCControls.RegisterMouseDownEvent(btnpwr, "npwr")

btnintdiv = FCControls.AddButton(30, 30, "Int÷")
FCControls.Move(btnintdiv, 22, 228)
FCControls.RegisterMouseDownEvent(btnintdiv, "nintdiv")

btnmemadd = FCControls.AddButton(30, 30, "M+")
FCControls.Move(btnmemadd, 54, 228)
FCControls.RegisterMouseDownEvent(btnmemadd, "memadd")

btnmemm = FCControls.AddButton(30, 30, "M-")
FCControls.Move(btnmemm, 86, 228)
FCControls.RegisterMouseDownEvent(btnmemm, "memm")

btnmemmr = FCControls.AddButton(30, 30, "MR")
FCControls.Move(btnmemmr, 119, 228)
FCControls.RegisterMouseDownEvent(btnmemmr, "memmr")

btnsin = FCControls.AddButton(30, 30, "sin")
FCControls.Move(btnsin, 152, 228)
FCControls.RegisterMouseDownEvent(btnsin, "sin")

btncos = FCControls.AddButton(30, 30, "cos")
FCControls.Move(btncos, 22, 260)
FCControls.RegisterMouseDownEvent(btncos, "cos")

btntan = FCControls.AddButton(30, 30, "tan")
FCControls.Move(btntan, 54, 260)
FCControls.RegisterMouseDownEvent(btntan, "tan")

btnlog = FCControls.AddButton(30, 30, "log")
FCControls.Move(btnlog, 86, 260)
FCControls.RegisterMouseDownEvent(btnlog, "LOG")

btncosh = FCControls.AddButton(30, 30, "cosh")
FCControls.Move(btncosh, 119, 260)
FCControls.RegisterMouseDownEvent(btncosh, "cosh")

btnsinh = FCControls.AddButton(30, 30, "sinh")
FCControls.Move(btnsinh, 152, 260)
FCControls.RegisterMouseDownEvent(btnsinh, "sinh")

btnrnd = FCControls.AddButton(30, 30, "RND")
FCControls.Move(btnrnd, 22, 292)
FCControls.RegisterMouseDownEvent(btnrnd, "rnd")

btnmax = FCControls.AddButton(30, 30, "↑/↓")
FCControls.Move(btnmax, 22, 292)
FCControls.RegisterMouseDownEvent(btnmax, "maxmin")

Sub n1
  holder = TextPlus.Append(holder, 1)
  draw()
EndSub

Sub n2
  holder = TextPlus.Append(holder, 2)
  draw()
EndSub

Sub n3
  holder = TextPlus.Append(holder, 3)
  draw()
EndSub

Sub n4
  holder = TextPlus.Append(holder, 4)
  draw()
EndSub

Sub n5
  holder = TextPlus.Append(holder, 5)
  draw()
EndSub

Sub n6
  holder = TextPlus.Append(holder, 6)
  draw()
EndSub

Sub n7
  holder = TextPlus.Append(holder, 7)
  draw()
EndSub

Sub n8
  holder = TextPlus.Append(holder, 8)
  draw()
EndSub

Sub n9
  holder = TextPlus.Append(holder, 9)
  draw()
EndSub

Sub n0
  holder = TextPlus.Append(holder, 0)
  draw()
EndSub

Sub draw
  GraphicsWindow.FontSize = 36
  GraphicsWindow.BrushColor = "Black"
  Shapes.Remove(numbers)
  numbers = Shapes.AddText(holder)
  Shapes.Move(numbers, 20, 10)
  If maxfinderon = "True" then
    holder3 = FCControls.GetText(numbers)
  EndIf
EndSub

Sub bck
  holder = TextPlus.RemoveSubText(holder, TextPlus.GetLength(holder)-1, 1)
  draw()
EndSub

Sub c
  holder = ""
  output = ""
  draw()
  Shapes.Remove(numbers)
EndSub

Sub calculate
  GraphicsWindow.FontSize = 36
  'Check if Operation is Add
  If Text.GetIndexOf(holder, "+") <> 0 Then
    operationindex = Text.GetIndexOf(holder, "+")
    textbeforoperation = Text.GetSubText(holder, 1, operationindex - 1)
    textafteroperation = Text.GetSubTextToEnd(holder, operationindex + 1)
    output = textbeforoperation + textafteroperation
    If output > 10000000 then
    showaserror()
    else
    showonscreen()
    endif
  EndIf
  'Check if Operation is Subtract
  If Text.GetIndexOf(holder, "-") <> 0 Then
    operationindex = Text.GetIndexOf(holder, "-")
    textbeforoperation = Text.GetSubText(holder, 1, operationindex - 1)
    textafteroperation = Text.GetSubTextToEnd(holder, operationindex + 1)
    output = textbeforoperation - textafteroperation
    If output > 10000000 then
    showaserror()
    else
    showonscreen()
    endif
  EndIf
  'Check if Operation is Multiply
  If Text.GetIndexOf(holder, "*") <> 0 Then
    operationindex = Text.GetIndexOf(holder, "*")
    textbeforoperation = Text.GetSubText(holder, 1, operationindex - 1)
    textafteroperation = Text.GetSubTextToEnd(holder, operationindex + 1)
    output = textbeforoperation * textafteroperation
    If output > 10000000 then
    showaserror()
    else
    showonscreen()
    endif
  EndIf
  'Check if Operation is Divide
  If Text.GetIndexOf(holder, "÷") <> 0 Then
    operationindex = Text.GetIndexOf(holder, "÷")
    textbeforoperation = Text.GetSubText(holder, 1, operationindex - 1)
    textafteroperation = Text.GetSubTextToEnd(holder, operationindex + 1)
    output = textbeforoperation / textafteroperation
    If output > 10000000 then
    showaserror()
    else
    showonscreen()
    endif
  EndIf
  If pwron = "True" then
    textbeforoperation = TextPlus.GetSubText(holder, 1, TextPlus.GetIndexOf(holder, "^") - 1)
    textafteroperation = TextPlus.GetSubTextToEnd(holder, TextPlus.GetIndexOf(holder, "^") + 1)
    output = MathPlus.Power(textbeforoperation, textafteroperation)
    pwron = "False"
    If output > 10000000  then
    showaserror()
    else
    showonscreen()
    endif
  EndIf
  If intdivon = "True" then
    textbeforoperation = TextPlus.GetSubText(holder, 1, TextPlus.GetIndexOf(holder, "÷R") - 1)
    textafteroperation = TextPlus.GetSubTextToEnd(holder, TextPlus.GetIndexOf(holder, "÷R") + 2)
    remainder = MathPlus.Remainder(textbeforoperation, textafteroperation)
    outputmain = textbeforoperation / textafteroperation
    intoutput = MathPlus.Round(outputmain)
    output = intoutput + "R " + remainder
    intdivon = "False"
    showonscreen()
  EndIf
  If Text.GetIndexOf(holder, "÷") = 0 and Text.GetIndexOf(holder, "+") = 0 and Text.GetIndexOf(holder, "-") = 0 and Text.GetIndexOf(holder, "÷R") = 0 and Text.GetIndexOf(holder, "^") = 0 and Text.GetIndexOf(holder, "*") = 0 then
    GraphicsWindow.FontSize = 20
    output = "Syntax Error"
    holder = ""
    showonscreen()
  EndIf
  If maxfinderon = "True" then
    themax = Math.Max(holder2, holder3)
    themin = Math.Min(holder2, holder3)
    Shapes.Remove(smallnumbers)
    output = "MAX" + themax + ";MIN" + themin
    showonscreen()
    maxfinderon = "False"
  EndIf
EndSub

Sub showonscreen
  GraphicsWindow.BrushColor = "Black"
  Shapes.Remove(numbers)
  numbers = Shapes.AddText(output)
  Shapes.Move(numbers, 20, 10)
EndSub

Sub add
  holder = TextPlus.Append(holder, "+")
  draw()
EndSub

Sub subtract
  holder = TextPlus.Append(holder, "-")
  draw()
EndSub

Sub slash
  holder = TextPlus.Append(holder, "÷")
  draw()
EndSub

Sub mult
  holder = TextPlus.Append(holder, "*")
  draw()
EndSub

Sub ndot
  holder = TextPlus.Append(holder, ".")
  draw()
EndSub

Sub nsqrt
  holder = MathPlus.SquareRoot(holder)
  draw()
EndSub

Sub nper
  percentconvert = holder * 100
  holder = percentconvert + "%"
  draw()
EndSub

Sub npwr
  holder = TextPlus.Append(holder, "^")
  pwron = "True"
  draw()
EndSub

Sub nintdiv
  holder = TextPlus.Append(holder, "÷R")
  intdivon = "True"
  draw()
EndSub

Sub memadd
  GraphicsWindow.BrushColor = "Black"
  memory = holder
  If holder = "" Then
    memory = "0"
  EndIf
  GraphicsWindow.FontSize = 10
  Shapes.Remove(showmem)
  showmem = Shapes.AddText(memory)
  Shapes.Move(showmem, GraphicsWindow.Width - 25, 38)
EndSub

Sub memm
  Shapes.Remove(showmem)
  memory = ""
EndSub

Sub memmr
  holder = memory
  draw()
EndSub

Sub sin
  holder = Math.Sin(holder)
  draw()
EndSub

Sub cos
  holder = Math.Sin(holder)
  draw()
EndSub

Sub tan
  holder = Math.Tan(holder)
  draw()
EndSub

Sub log
  holder = Math.Log(holder)
  draw()
EndSub

Sub cosh
  holder = MathPlus.Cosh(holder)
  draw()
EndSub

Sub sinh
  holder = MathPlus.Sinh(holder)
  draw()
EndSub

Sub rnd
  holder = Math.Round(holder)
  draw()
EndSub

Sub maxmin
  Shapes.Remove(numbers)
  GraphicsWindow.FontSize = 10
  GraphicsWindow.BrushColor = "Black"
  Shapes.Remove(smallnumbers)
  If holder <> "" then
    smallnumbers = Shapes.AddText("NUM1=" + holder)
    maxfinderon = "True"
    draw()
  else
  GraphicsWindow.FontSize = 20
  GraphicsWindow.BrushColor = "Black"
  Shapes.Remove(numbers)
  numbers = Shapes.AddText("Syntax Error")
  Shapes.Move(numbers, 20, 10)
  maxfinderon = "False"
  Endif
  Shapes.Move(smallnumbers, 140, 15)
  holder2 = holder
  holder = ""
EndSub

Sub showaserror
  GraphicsWindow.FontSize = 20
  GraphicsWindow.BrushColor = "Black"
  Shapes.Remove(numbers)
  numbers = Shapes.AddText("Overflow Error")
  Shapes.Move(numbers, 20, 10)
EndSub

Sub OnKeyDown
  If GraphicsWindow.LastKey = "D0" Then
    n0()
  ElseIf GraphicsWindow.LastKey = "D1" Then
    n1()
  ElseIf GraphicsWindow.LastKey = "D2" Then
    n2()
  ElseIf GraphicsWindow.LastKey = "D3" Then
    n3()
  ElseIf GraphicsWindow.LastKey = "D4" Then
    n4()
  ElseIf GraphicsWindow.LastKey = "D5" Then
    n5()
  ElseIf GraphicsWindow.LastKey = "D6" Then
    n6()
  ElseIf GraphicsWindow.LastKey = "D7" Then
    n7()
  ElseIf GraphicsWindow.LastKey = "D8" Then
    n8()
  ElseIf GraphicsWindow.LastKey = "D9" Then
    n9()
  ElseIf GraphicsWindow.LastKey = "Tab" Then
    calculate()
  ElseIf GraphicsWindow.LastKey = "Back" Then
    bck()
  ElseIf GraphicsWindow.LastKey = "NumPad1" Then
    n1()
  ElseIf GraphicsWindow.LastKey = "NumPad2" Then
    n2()
  ElseIf GraphicsWindow.LastKey = "NumPad3" Then
    n3()
  ElseIf GraphicsWindow.LastKey = "NumPad4" Then
    n4()
  ElseIf GraphicsWindow.LastKey = "NumPad5" Then
    n5()
  ElseIf GraphicsWindow.LastKey = "NumPad6" Then
    n6()
  ElseIf GraphicsWindow.LastKey = "NumPad7" Then
    n7()
  ElseIf GraphicsWindow.LastKey = "NumPad8" Then
    n8()
  ElseIf GraphicsWindow.LastKey = "NumPad9" Then
    n9()
  ElseIf GraphicsWindow.LastKey = "NumPad0" Then
    n0()
  ElseIf GraphicsWindow.LastKey = "Decimal" Then
    ndot()
  ElseIf GraphicsWindow.LastKey = "Add" Then
    add()
  ElseIf GraphicsWindow.LastKey = "Subtract" Then
    subtract()
  ElseIf GraphicsWindow.LastKey = "Multiply" Then
    mult()
  ElseIf GraphicsWindow.LastKey = "Divide" Then
    slash()
  ElseIf GraphicsWindow.LastKey = "Clear" Then
    c()
  ElseIf GraphicsWindow.LastKey = "C" Then
    c()
  ElseIf Keyboard.CtrlDown Then
    memadd()
  ElseIf Keyboard.AltDown Then
    memm()
  ElseIf Keyboard.ShiftDown Then
    nintdiv()
  EndIf
EndSub
  
