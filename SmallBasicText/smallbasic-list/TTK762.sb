GraphicsWindow.Title = "CubModeler"
GraphicsWindow.BackgroundColor = "teal
Init()
LDUtilities.ShowErrors="false
args=0
ss=8
dx=-20
dy=-20
p300=300
objmd="false
ob=1
ii=1
par = "y=-2;x=4;z=0;color=darkblue|y=-2;x=1;z=0;color=darkblue
dvox()

param = "y="+(dy-4)+";x="+dx+";z=1;width=3;height=5;depth=1;color=Red
DrawCuboid()

par = "y=-4;x=5;z=1;color=Yellow|y=-3;x=5;z=1;color=Red|y=-2;x=5;z=1;color=Yellow
dvox()

param = "y="+(dy-4)+";x="+(4+dx)+";z=2;width=3;height=1;depth=1;color=Orange;"
DrawCuboid()
cmat[1]="yellow"
dx=10
dy=10
z45=45
For zz=1 to z45
  GraphicsWindow.Title =">>"+zz
  For xx=1 to 50
    For yy=1 To 50
      cdf[zz][xx][yy]=0
    endfor
  EndFor 
endfor
f=20
For z=1 To z45
  
  If z>9 Then
    f=f-.5
  endif
  GraphicsWindow.Title =z
  For t=0 to 360 Step 2
    py=math.Floor(LDMath.Sin(t)*f)+25
    px=math.Floor(LDMath.cos(t)*f)+25
    cdf[z][px][py]=1
    
  EndFor 
endfor
For zz=1 to z45
  GraphicsWindow.Title =">>"+zz
  For xxx=1 to 50
    For xyy=1 To 50
      co=cdf[zz][xxx][xyy]
      If co>0 Then 
        GraphicsWindow.Title="**"+zz
        param = "y="+xyy+";x="+xxx+";z="+zz+";color="+cmat[co]
        
        drawvoxel ()
      endif
    endfor
  EndFor 
endfor


Sub smove
  For tt=1 to args[3]
    
    for w=1 to Array.GetItemCount (po[ii])
      Shapes.Move(po[ii][w],Shapes.GetLeft(po[ii][w])+args[1],Shapes.Gettop(po[ii][w])+args[2])
    endfor
    
    Program.Delay(p300)
  endfor
  
EndSub 


Sub dvox
  pa=LDText.Split (par,"|")
  For r=1 to Array.GetItemCount (pa)
    param=pa[r]
    DrawVoxel()
  endfor
EndSub 

Sub drawvoxel
  LDCall.Function5 ("drawcube" param["x"]+dx param["y"]+dy param["z"] ss param["color"])
EndSub


Sub DrawCuboid
  Stack.PushValue("local", param)
  xmin = param["x"]
  ymin = param["y"]
  zmin = param["z"]
  xmax = param["height"] + xmin - 1
  ymax = param["width"] + ymin - 1
  zmax = param["depth"] + zmin - 1
  sColor = param["color"]
  
  For _z = zmin To zmax  
    
    For _y = ymin To ymax 
      
      For _x = xmin To xmax 
        
        LDCall.Function5("drawcube",_x _y _z ss sColor )
      EndFor
    EndFor
  EndFor
  param = Stack.PopValue("local")
EndSub

Sub Conv3Dto2D
  cx = gw / 2 - Math.SquareRoot(1 / 2) * args[1]*ss
  cx = cx + Math.SquareRoot(1 / 2) * args[2]*ss
  cy = gh / 2 + Math.SquareRoot(1 / 6) * args[1]*ss
  cy = cy + Math.SquareRoot(1 / 6) * args[2]*ss
  cy = cy - Math.SquareRoot(2 / 3) * args[3]*ss
EndSub

Sub Color_RGBtoHSL
  rHue=LDColours.GetHue (sColor)
  rLightness=LDColours.GetLightness(sColor )
  rSaturation=LDColours.GetSaturation (sColor )
EndSub

Sub DrawCube
  lz=args[3]
  xx=args[1]
  yy=args[2]
  Conv3Dto2D()
  edge = Math.SquareRoot(2 / 3) * args[4]
  x1 = math.Round (cx)
  y1 = math.Round (cy)
  sColor = args[5]
  ccc=ldcolours.GetHue(scolor)
  For i=1 To 3 
    color[i] = LDColours.HSLtoRGB(ccc  1 .8/Math.Power(1.5 i))
  EndFor 
  GraphicsWindow.PenWidth =0
  
  x3=0
  x4=0
  y3=0
  y4=0
  
  For a = 60 To 420 Step 60
    x2 = math.Round (cx - edge * ldMath.Sin(a))
    y2 = math.Round (cy - edge * ldMath.Cos(a))
    If a>60 and math.Remainder ((a-60),120)=0 Then
      ppp=0
      ppp[1][1]=x1+50
      ppp[1][2]=y1-30 
      ppp[2][1]=x2+50
      ppp[2][2]=y2-30 
      ppp[3][1]=x3+50
      ppp[3][2]=y3-30 
      ppp[4][1]=x4+50
      ppp[4][2]=y4-30 
      
      of=1
      
      If objmd then
        po[ob][pc]=LDShapes.AddPolygon (ppp) 
        
        LDShapes.BrushColour(po[ob][pc],color[(a-60)/120])
        pc=pc+1
      else
        br=LDShapes.BrushGradient("1="+color[(a-60) / 120]+";2="+color[(a-60) / 120],"V") 
        
        LDShapes.BrushPolygon (br,ppp) 
      endif
    EndIf
    
    x4 = x3
    y4 = y3
    x3 = x2
    y3 = y2
  EndFor
EndSub

Sub Init
  
  gw = 800
  gh = 800
  GraphicsWindow.BackgroundColor ="teal
  GraphicsWindow.Left =10
  GraphicsWindow.top=10
  GraphicsWindow.Width = gw
  GraphicsWindow.Height = gh
  xo = gw / 2
  yo = gh * 3 / 4
  u = 20
  r = u * Math.SquareRoot(2 / 3)
  a60 = Math.GetRadians(60)
  
EndSub
