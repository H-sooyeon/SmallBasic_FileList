GraphicsWindow.Title = "The Bible
bbb=LDShapes.BrushGradient("1=white;2=white;3=gray" "DD")
LDGraphicsWindow.BackgroundBrush(bbb)

Init()
bbl()

Sub bbl
  w0 = 200
  h0 = 260
  x0 = (gw - w0) / 2
  y0 = (gh - h0) / 2 - 50
  
  bc = "#884400"
  x = x0 - 20
  y = y0
  width = 50
  height = 50
  Shapes_AddEllipse()
  
  y = y0 + 20
  width = 20
  height = h0
  Shapes_AddRectangle()
  
  bc = "#663300"
  y = y0 + h0
  width = 50
  height = 50
  Shapes_AddEllipse()
  
  x = x0
  y = y0 + h0
  width = w0
  height = 50
  Shapes_AddRectangle()
  
  bc = "SaddleBrown"
  height = h0
  y = y0
  Shapes_AddRectangle()
  
  bc = "#CCCCCC"
  x = x0 - 16
  y = y0 + h0
  width = 40
  height = 40
  Shapes_AddEllipse()
  
  x = x0 + 4
  width = w0 - 34
  Shapes_AddRectangle()
  
  bc = "#DDDDDD"
  x = x0 + w0 - 30
  width = 20
  Shapes_AddRectangle()
  
  bc = "#CCCCCC"
  r = 20
  For θ = 0 To -180 Step -10
    _θ = Math.GetRadians(θ)
    x2 = r + r * Math.Sin(_θ)
    y2 = r - r * Math.Cos(_θ)
    If θ < 0 Then
      height = y2 - y1
      width = x2
      _y = y
      y = y + y1
      Shapes_AddRectangle()
      y = _y
      x3 = x2
      y3 = y1
      Shapes_AddTriangle()
    EndIf
    x1 = x2
    y1 = y2
  EndFor
  
  bc = "Black"
  fn = "Trebuchet MS"
  fs = 50
  fb="true
  txt = "Bible"
  x = gw - 180
  y = gh - 74
  Shapes_AddText()
  ll="ፋᘹᏛᗥᑉᖫᐠᕢᎫᔻᎫᇚ፾ᇚ፾ᔨፔᔞጦᔗዳᔒኻᔑኍᔒቛᔖሣᔝᇦᔦᇣᔜሑᔂሻᓨቡᓎኃᒵኡᒜኺᒃዐᑫዡᑒደᐹዽᐜገᏻ጑ᏖጘᎭጝᎁጟፐጠጜጠᅒጣᄦጬჿጺოፎႿ፧Ⴅᎆ႐ᎫၿᏕၳᐁႎᐧႬᑇ჌ᑡხᑵᄒᒃᄹᒌᅢᒏᆍᒌᆻᒂᇦᑱሐᑙሸᐻ቞ᐖኃᏪእᎸዅᎸጉᏹዘᐕዅᐯ኷ᑒ዇ᑮ዗ᒂየᒏዹᒙጏᒠጩᒢፄᒢ፣ᒠᎁᒀᎍᑡ᎕ᑄ᎙ᐨ᎙ᐍ᎘Ᏹ᎔ᎸᎉᎸᎲᏕᎷᏳᎺᐭᎻᑧᎷᒠᎰᒠᑠᑦᑚᐫᑘᏰᑚᎸᑟᎸᒇ᏷ᑽᐔᑻᐰᑻᑌᑽᑧᒁᒃᒇᒠᒏᒠᔪᑙᕎᐬᕤᑒᖦᑧᖛᒮᕾᓻᕣᕍᕋᖤᔶᖤᎊᖣ፯ᖠፕᖙጽᖑጦᖆጐᕹዼᕩዪᕗዙᕂዊᔫኼᔒኯᓶኤᓘኛᒷናᒔኍᑮኈᒝ቗ᓇሬᓯሂᔒᇘᔯᆰᕆᆈᕙᅢᕦᄼᕮᄘᕱჴᕯაᕩႯᕠ႐ᕓၳᕂၙᔭ၁ᔕာᓹမᓠဍᓄငᒥ࿿ᒃ࿽ᑜကᐯ���ᏼနᏃဥ᎑့፣၊ጹၞጔၳዲႊዔႢኺႻኤვኑჲኀᄒቲᄶቦᅜቝᆅ቗ᆱቓᇠቒሒቒᎠቑᏅቍᏪቇᐍሿᐰሴᑒሦᑳሗᒓህᒳᇰᓑᇙᓮᇀᔋᆥᔧᆇᕂᅦᕜᅃᕵᄞᖍᄗᖆᅉᕃᅲᔄᆓᓇᆫᒍᆻᑓᇇᐐᇎᏃᇐ፬ᇐᇽᇒᇏᇕᆢᇛᅹᇣᅒᇭᄮᇹᄌለჭሙბራႸቀ႟ቘႆቴၭኔၓ኷်ጇဆ኶လቴါቂဵሞးሒးᇵဵᇈိᆍဟᅃဋჾ࿽რ࿺Ⴥ࿸Ⴉ࿺ႏ࿾ၶငၝဍ၆မုဧမ့င။࿲ၞ࿣ၲ࿕ႇ࿈႞྽Ⴖྴაྫྷძྦᄇྶჯ࿇მ࿙჊࿫Ⴝ࿾ႲဒႪဧႥြႤၵႫ႑Ⴔა჊ᄅკᄛოᄮჟᅈოᅦთᆉჍᆰჀᆴ჊ᅾჸᅐᄩᄨᅝᄗᅷᄈᆒჺᆭხᇉფᇦნሃზሠგሾ჏ቝ჎ቼႜቿၭ኉၁ኘမኮစኼ࿴ዌ࿤ዞ࿖ደ࿊ጄ࿀ጙྸጯྲፆ࿘ጷ࿿ጬဥጥ၊ጣၦጤၽጧ႐ጫ႟ጱႶጼ჊ፊლፚყ፬ჰᎀჶ᎗ჹᎱჸᏌჶᏫ჈ᏸႡᐈၿᐜၤᐲ၎ᑋဿᑨံᒇဳᒩးᓖၔᒹၲᒣ႒ᒔႴᒋჄᒌგᒏპᒕყᒜჯᒦჴᒲჷᓁჸᓑ��ᓤჴᓻჭᔓქᔪმᕁჁᕮ႟ᖛၑᗲမᘭ࿽ᙛ࿩ᚅ࿞ᚫ࿛ᚼ࿚ᛍ࿚ᛛ࿝ᛩ࿡ᛵ࿧᛿࿯ᜉ࿸ᜑဃ᜗တ᜝ရ᜝ဳ᜚ြ᜖၄ᜐ၊ᜉ၎ᜁၑᛷၑ᛫၎ᛑ၃ᚬျᚇးᙬြᙜ၁ᙊ၉ᘺၕᘪၤᘜၶᘏႌᘂႥᗷჂᗭხᗡᄜᗘᅋᗓᅼᗑᇂᗔሊᗝቔᗬኟᘀዡᘕፋᘹ፭ᘥ
  
  i=0
  pp=""
  For x=1 To Text.GetLength(ll) Step 2
    i=i+1
    pp[i][1]=(text.GetCharacterCode( text.GetSubText (ll x 1))-2000)/4
    pp[i][2]=(text.GetCharacterCode(text.GetSubText (ll x+1 1))-2000)/4
  EndFor
  GraphicsWindow.BrushColor="gold
  po=LDShapes.AddPolygon(pp)
  LDShapes.PenWidth(po 0)
  LDEffect.DropShadow(po "")
  
  Shapes.Zoom(po .4 .4)
  Shapes.Move(po, -250 ,-420)
EndSub

Sub Init
  gw = 598
  gh = 428
  GraphicsWindow.Width = gw
  GraphicsWindow.Height = gh
  iMin = 1
  iMax = iMin - 1
  pc = ""
  pw = 0
  bc = ""
  x = 0
  y = 0
  width = 0
  height = 0
  x1 = 0
  y1 = 0
  x2 = 0
  y2 = 0
  x3 = 0
  y3 = 0
  angle = 0
  fb = "False"
  fi = "False"
EndSub

Sub Shapes_AddEllipse
  Shapes_PenToEntry()
  Shapes_BrushToEntry()
  func = "ell"
  Shapes_FuncToEntry()
  Shapes_MoveToEntry()
  Shapes_RotateToEntry()
  
EndSub

Sub Shapes_AddLine
  Shapes_PenToEntry()
  func = "line"
  Shapes_FuncToEntry()
  Shapes_MoveToEntry()
  Shapes_RotateToEntry()
  
EndSub

Sub Shapes_AddRectangle
  Shapes_PenToEntry()
  Shapes_BrushToEntry()
  func = "rect"
  Shapes_FuncToEntry()
  Shapes_MoveToEntry()
  Shapes_RotateToEntry()
EndSub

Sub Shapes_AddText
  Shapes_PenToEntry()
  Shapes_BrushToEntry()
  Shapes_FontToEntry()
  func = "text"
  Shapes_FuncToEntry()
  Shapes_MoveToEntry()
  Shapes_RotateToEntry()
EndSub

Sub Shapes_AddTriangle
  Shapes_PenToEntry()
  Shapes_BrushToEntry()
  func = "tri"
  Shapes_FuncToEntry()
  Shapes_MoveToEntry()
  Shapes_RotateToEntry()
EndSub

Sub Shapes_BrushToEntry
  GraphicsWindow.BrushColor = bc
  shp["bc"] = bc
EndSub

Sub Shapes_FontToEntry
  GraphicsWindow.FontSize = fs
  shp["fs"] = fs
  GraphicsWindow.FontName = fn
  shp["fn"] = fn
  GraphicsWindow.FontBold = fb
  shp["fb"] = fb
  GraphicsWindow.FontItalic = fi
  shp["fi"] = fi
EndSub

Sub Shapes_FuncToEntry
  shp["func"] = func
  If func = "ell" Then
    obj = Shapes.AddEllipse(width, height)
    shp["width"] = Math.Floor(width * 100) / 100
    shp["height"] = Math.Floor(height * 100) / 100
  ElseIf func = "rect" Then
    obj = Shapes.AddRectangle(width, height)
    shp["width"] = Math.Floor(width * 100) / 100
    shp["height"] = Math.Floor(height * 100) / 100
  ElseIf func = "tri" Then
    obj = Shapes.AddTriangle(x1, y1, x2, y2, x3, y3)
    shp["x1"] = Math.Floor(x1 * 100) / 100
    shp["y1"] = Math.Floor(y1 * 100) / 100
    shp["x2"] = Math.Floor(x2 * 100) / 100
    shp["y2"] = Math.Floor(y2 * 100) / 100
    shp["x3"] = Math.Floor(x3 * 100) / 100
    shp["y3"] = Math.Floor(y3 * 100) / 100
  ElseIf func = "line" Then
    obj = Shapes.AddLine(x1, y1, x2, y2)
    shp["x1"] = Math.Floor(x1 * 100) / 100
    shp["y1"] = Math.Floor(y1 * 100) / 100
    shp["x2"] = Math.Floor(x2 * 100) / 100
    shp["y2"] = Math.Floor(y2 * 100) / 100
  ElseIf func = "text" Then
    obj = Shapes.AddText(txt)
    shp["text"] = txt
  EndIf
EndSub

Sub Shapes_MoveToEntry
  Shapes.Move(obj, x, y)
  shp["x"] = Math.Floor(x * 100) / 100
  shp["y"] = Math.Floor(y * 100) / 100
EndSub

Sub Shapes_PenToEntry
  GraphicsWindow.PenWidth = pw
  shp["pw"] = pw
  If 0 < pw Then
    GraphicsWindow.PenColor = pc
    shp["pc"] = pc
  EndIf
EndSub

Sub Shapes_RotateToEntry
  If angle <> 0 Then
    Shapes.Rotate(obj, angle)
    shp["angle"] = Math.Floor(angle * 100) / 100
  EndIf
EndSub
