colors="0=Black;1=Blue;2=Red;3=Magenta;4=Purple;5=Green;6=Cyan;7=Yellow" ' Colors displayed in the color palette, use array initializer syntax

For i=0 To Array.GetItemCount(colors)-1 ' Render color palette on left side of the Graphics window

  GraphicsWindow.BrushColor=colors[i]

  GraphicsWindow.FillRectangle(0, i*15, 15, 15)

EndFor

GraphicsWindow.PenColor=colors[0] 'Initialize to first color in color palette

mouseDrawing = 0 '  Used to determine if  we are starting a new line (mouseDrawing = 0) or drawing a line segment (mouseDrawing = 1)

While 1=1 ' Loop forever

  If Mouse.IsLeftButtonDown Then ' If the mouse is down

    If mouseDrawing=0 And GraphicsWindow.MouseX < 15 And GraphicsWindow.MouseY < (Array.GetItemCount(colors)) * 15 Then '  Test if the mouse click is in the palette and we are not already drawing

      GraphicsWindow.PenColor=colors[Math.Floor(GraphicsWindow.MouseY / 15)] ' Select color from palette based on the mouse position at the time of the click

    Else

      newX = GraphicsWindow.MouseX

      newY = GraphicsWindow.MouseY

      If mouseDrawing=1 And (lastX <> newX Or lastY <> newY) Then ' If we are drawing and the mouse position has changed

        GraphicsWindow.DrawLine(lastX, lastY, newX, newY)         ' we can draw the new line segment from the last postion to the new position

      EndIf

      lastX = newX

      lastY = newY

      mouseDrawing = 1 ' Set the flag indicating that we have started drawing

    EndIf    

  Else

    mouseDrawing = 0 ' The mouse button is no longer pressed so we can reset the drawing flag

  EndIf  

EndWhile


