' Last Clicked Button Example
' Steven Malaw
' HBD605-1

'  Graphics Init:
'--------------------------------------------------------------------------------------------------------------------------------'
gw = 620
gh = 450

GraphicsWindow.Width  = gw
GraphicsWindow.Height = gh
GraphicsWindow.Top    = (Desktop.Height - gh) / 2
GraphicsWindow.Left   = (Desktop.Width  - gw) / 2

GraphicsWindow.FontSize        = 11
GraphicsWindow.BackgroundColor = "Black"
GraphicsWindow.CanResize       = "False"
GraphicsWindow.Title           = "Last Button Clicked Example"

GUI()
Controls.ButtonClicked = OnButtonClick

'  Button Wait Loop:
'--------------------------------------------------------------------------------------------------------------------------------'
Loop:

If Button <> "" Then   '  Waits until Button is retrieved from Sub OnButtonClick.
  CheckButtons()
  Button    = ""
  ButtonCap = ""
EndIf

Program.Delay(100)     '  A quick delay to avoid heating up CPU!

Goto Loop

'   Button Subroutines:
'--------------------------------------------------------------------------------------------------------------------------------'
Sub GUI
  
  GraphicsWindow.BrushColor = "Blue"
  MkNewBtnSet    = Controls.AddButton("Make New Button Set" 40,gh-105) ' Unique caption
  Controls.SetSize(MkNewBtnSet     200,28)
  
  GraphicsWindow.BrushColor = "SlateBlue"
  MkNewButton    = Controls.AddButton("Make New Button"     40,gh-75) ' NON-unique caption
  Controls.SetSize(MkNewButton     200,28)
  AgainNewButton = Controls.AddButton("Make New Button"     40,gh-45) ' NON-unique caption
  Controls.SetSize(AgainNewButton  200,28)
  
  GraphicsWindow.BrushColor = "Green"
  Clear = Controls.AddButton("Clear"  gw-184,gh-90)  '  Button creation w/ unique caption
  Controls.SetSize(Clear  60,60)
  
  GraphicsWindow.BrushColor = "Red"
  Exit  = Controls.AddButton("Exit"   gw-88 ,gh-90)  '  Button creation w/ unique caption
  Controls.SetSize(Exit   60,60)
  
EndSub
'--------------------------------------------------------------------------------------------------------------------------------'
Sub MakeButtonSet
  
  GapX  = 100   '  Horizontal spacing between each button
  GapY  = 50    '  Vertical      spacing between each button
  OffX  = 50    '  Initial horizontal's offset
  OffY  = 50    '  Initial vertical's      offset
  Qnty  = 5     '  Quantity of buttons
  
  GraphicsWindow.BrushColor = "Magenta"
  
  '  Create a series of buttons with NON-unique caption texts -> "New Button Set"
  For i = 1 To Qnty
    Money [i] = 100000 * i
    Controls.Remove(BtnSet[i])  '  Removes any button which, by chance, existed before
    BtnSet[i] = Controls.AddButton("New Button Set" (i-1)*GapX + OffX,(i-1)*GapY + OffY)
    Controls.SetSize(BtnSet[i]  120,25)
  EndFor
  
EndSub
'--------------------------------------------------------------------------------------------------------------------------------'
Sub CheckButtons
  
  If ButtonCap = "Make New Button Set" Then  ' Unique caption - This alt. method can be used
    MakeButtonSet()
  EndIf
  
  If Button = MkNewButton Then               '  NON-unique caption - Same as AgainNewButton
    GraphicsWindow.BrushColor = "Brown"
    Controls.Remove(Button1)  '  Removes any button which, by chance, existed before
    Button1 = Controls.AddButton("Newer Button"  400,100) '  Button creation w/ unique caption
    Controls.SetSize(Button1  120,30)
  EndIf
  
  If Button = AgainNewButton Then            '  NON-unique caption - Same as MkNewButton
    GraphicsWindow.BrushColor = "SaddleBrown"
    Controls.Remove(Button2)  '  Removes any button which, by chance, existed before
    Button2 = Controls.AddButton("Newest Button"  100,200) ' Button creation w/ unique caption
    Controls.SetSize(Button2  120,30)
  EndIf
  
  If ButtonCap = "Newer Button" Or ButtonCap = "Newest Button" Then ' These captions become
    Controls.SetButtonCaption(Button  "Last Button")  ' <-- -  NON-unique & NON-constant here
  EndIf
  
  If Array.ContainsValue(BtnSet  Button) Then           '  NON-unique set of captions
    For j = 1 To Array.GetItemCount(BtnSet)
      If Button = BtnSet[j] Then
        Controls.SetButtonCaption(BtnSet[j]  Money[j])  '  And now NON-constant as well
      EndIf
    EndFor
  EndIf
  
  If ButtonCap = "Clear" Then      ' Unique caption - This type of verification method can be used
    Sound.PlayChimes()
    GraphicsWindow.Clear()
    GUI()
  EndIf
  
  If ButtonCap = "Exit"  Then      ' Unique caption - This type of verification method can be used
    Sound.PlayChimeAndWait()
    Program.End()
  EndIf
  
EndSub
'--------------------------------------------------------------------------------------------------------------------------------'

'  Triggered Event Subs:
'--------------------------------------------------------------------------------------------------------------------------------'
Sub OnButtonClick
  
  Button    = Controls.LastClickedButton                 '  Last selected button name
  ButtonCap = Controls.GetButtonCaption(Button)          '  Its corresponding caption
  
EndSub
'--------------------------------------------------------------------------------------------------------------------------------'
