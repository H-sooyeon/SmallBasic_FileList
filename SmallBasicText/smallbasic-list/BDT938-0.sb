' SmallBasic Version 1.2
' Program: ConicSectionCurvesTurtle
' Changelog: 
' Author: Pappa Lapub
' Website: https://social.msdn.microsoft.com/Forums/en-US/eaba725c-24a8-4300-8fa6-8231763398cb/challenge-of-the-month-may-2018
' ImportURL: http://smallbasic.com/program/?BDT938-0    (BDT938  filled)
' Extension: (LitDev, when  def = "True")
' Comment: Maths Challenge (Conics)
'  Get the Turtle (or another way) to draw the main conic sections. These are:
'    Circle, Ellipse, Parabola, Hyperbola
'    https://en.wikipedia.org/wiki/Conic_section
' Variables: 
' ToDo: 
'===============================================================================
def = "False"           ' show graphical definitions?  (LitDev)
pw = 3                  ' PenWidth
f = Math.GetRadians(1)  ' pi/180, factor deg->rad

gw = GraphicsWindow.Width     ' 624
gh = GraphicsWindow.Height    ' 442
GraphicsWindow.Top = 0
GraphicsWindow.BackgroundColor = "#202020"
GraphicsWindow.PenWidth = pw

a = gw / 4    ' 156
b = gh / 4    ' 110.5
x0 = 2 * a    ' = gw / 2  ' 312
y0 = 2 * b    ' = gh / 2   ' 221
'Turtle.Speed = 10    ' may cause flickering

If def Then
  GraphicsWindow.PenWidth = 0
  GraphicsWindow.BrushColor = "Coral"  ' "Salmon"
  tri = Shapes.AddTriangle(x0,y0, x0,y0, x0,y0)
  GraphicsWindow.PenWidth = pw
EndIf

Circle()
Ellipse()
Parabola()
Hyperbola()  ' OR  Hyperbola2()

Turtle.Hide()
If def Then
  Shapes.Remove(tri)
EndIf
GraphicsWindow.Title = "Conic Section Curves (Turtle)"


' ////////////////////  SUBs  ////////////////////
Sub Circle
  GraphicsWindow.Title = "Circle  x,y = r*cos(t), r*sin(t)"
  GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()
  Turtle.X = x0 + a
  Turtle.Y = y0
  For deg = 1 To 360
    x = a * Math.Cos(deg * f)
    y = a * Math.Sin(deg * f)
    Turtle.MoveTo(x0+x, y0-y)
    If def Then
      LDShapes.MoveTriangle(tri, x0-a,y0, x0+a,y0, x0+x,y0-y) ' showing 'Thales theorem': every angle in a halfcircle is a right one
      'LDShapes.MoveTriangle(tri, x0+x,y0, x0,y0-y, x0+x,y0-y)               ' showing parametric x,y=cos,sin construction
    EndIf
  EndFor
EndSub

Sub Ellipse
  GraphicsWindow.Title = "Ellipse  x,y = a*cos(t), b*sin(t)"
  GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()
  e = Math.SquareRoot(a*a - b*b)    ' focus F
  For deg = 1 To 360
    x = a * Math.Cos(deg * f)
    y = b * Math.Sin(deg * f)
    Turtle.MoveTo(x0+x, y0-y)
    If def Then               ' showing 'Ellipse definition', gardener construction (PF1+PF2 = 2a)
      LDShapes.MoveTriangle(tri, x0-e,y0, x0+e,y0, x0+x,y0-y)
    EndIf
  EndFor
EndSub

Sub Parabola
  GraphicsWindow.Title = "Parabola  y = inv(q * x²)"
  GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()
  e = a / 4   ' focus F
  sgnX = 1
  For n = 1 To 2  ' left & right parabola
    Turtle.X = x0 - sgnX*a
    Turtle.Y = y0 - a
    For x = -a To a
      y = x * x / a                       ' expl. x -> y
      Turtle.MoveTo(x0-sgnX*y, y0+x)      ' inverse x<->y
      If def Then   ' showing 'Parabel definition' (P1F1 = P1 F2x)
        LDShapes.MoveTriangle(tri, x0-sgnX*e,y0, x0+sgnX*e,y0+x, x0-sgnX*y,y0+x)
      EndIf
    EndFor
    sgnX = -sgnX
  EndFor
EndSub

Sub Hyperbola
  GraphicsWindow.Title = "Hyperbola  y = b/a * √(x² - a²), inv(a/b * √(y² + b²))"
  GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()
  e = Math.SquareRoot(a*a + b*b)  ' focus F
  y1 = b*Math.SquareRoot(3)       ' = b/a * √(x² - a²)  @ x=2*a
  sgnX = 1
  For n = 1 To 2                      ' left & right hyperbola
    Turtle.X = x0 - sgnX*x0
    Turtle.Y = y0 - y1
    For x = -y1 To y1                 ' endpoints at x=2*a
      y = a/b * Math.SquareRoot(x*x + b*b)  ' expl. x -> y
      Turtle.MoveTo(x0-sgnX*y, y0+x)  ' inverse x<->y
      If def Then                     ' showing 'Hyperbel definition' (P1F2 - P1F1 = 2a)
        LDShapes.MoveTriangle(tri, x0-e,y0, x0+e,y0, x0-sgnX*y,y0+x)
      EndIf
    EndFor
    sgnX = -sgnX
  EndFor
EndSub

' Alt. with LDMath
Sub Hyperbola2
  GraphicsWindow.Title = "Hyperbola  x,y = a*cosh(t), b*sinh(t)"
  GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()
  e = Math.SquareRoot(a*a + b*b)  ' focus F
  sgnX = 1
  For n = 1 To 2                      ' left & right hyperbola
    Turtle.X = x0 - sgnX*x0
    Turtle.Y = y0 - b*Math.SquareRoot(3)
    For deg = 76 To -76 Step -1       ' arcosh(x/a) = arcosh(2a/a) = 1.317 -> 75.458°
      t = deg * f
      x = a * LDMath.Cosh(t) ' = a/2 * (e^t + e^-t)
      y = b * LDMath.Sinh(t) ' = b/2 * (e^t - e^-t)
      Turtle.MoveTo(x0-sgnX*x, y0-y)
      If def Then                     ' showing 'Hyperbel definition' (P1F2 - P1F1 = 2a)
        LDShapes.MoveTriangle(tri, x0-e,y0, x0+e,y0, x0-sgnX*x,y0-y)
      EndIf
    EndFor
    sgnX = -sgnX
  EndFor
EndSub

