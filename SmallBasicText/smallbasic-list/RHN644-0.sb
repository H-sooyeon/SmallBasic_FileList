GraphicsWindow.Width = 600

GraphicsWindow.Height = 600

Ground = 500

GraphicsWindow.DrawLine(0,Ground,600,Ground)



Box_Width = 100

Box_Height = 100

Box_X = 150

Box_Y = 150

Box_VY = 0

Box_Angle = 45

Gravity = 0.1



Pi = Math.Pi



Box_Radius = Math.SquareRoot(Box_Width*Box_Width + Box_Height*Box_Height)/2



GraphicsWindow.BrushColor = "Transparent"

GraphicsWindow.PenColor = "Green"

Box = Shapes.AddRectangle(Box_Width,Box_Height)



GraphicsWindow.BrushColor = "Red"

GraphicsWindow.PenWidth = 0



For i = 1 To 5

  Corner[i] = Shapes.AddRectangle(5,5)

endfor



While GraphicsWindow.LastKey <> "Escape"

  

  Box_VY = Box_VY + Gravity

  

  Box_Angle = Box_Angle + 1

  

  Box_Update()

  

  

  

  Box_Y = Box_Y + Box_VY

  

  Program.Delay(15)

EndWhile



Program.End()



Sub Box_Update 

  'Find lowest corner - we only want one on the ground at any point in time

  iLow = 1

  For i = 2 To 4

    If (Corner_Y[i] > Corner_Y[iLow]) Then

      iLow = i

    EndIf

  EndFor

  

  'Check this corner for on the ground and find block centre - due to small rounding errors with the trig we need to to check for 'near'

  If (Corner_Y[iLow] > Ground Or Math.Abs(Corner_Y[iLow]-Ground) < 1) Then

    Corner_Y[iLow] = Ground

    Box_VY = 0

    

    theta = Math.GetRadians(Box_Angle+iLow*90-45+180)

    

    Box_X = Corner_X[iLow] + Math.Cos(theta) * Box_Radius

    Box_Y = Corner_Y[iLow] + Math.Sin(theta) * Box_Radius

  EndIf

  

  'Rotate box corners

  For i = 1 To 4

    theta = Math.GetRadians(Box_Angle+i*90-45)

    Corner_X[i] = Box_X + Math.Cos(theta) * Box_Radius

    Corner_Y[i] = Box_Y + Math.Sin(theta) * Box_Radius

    

    Shapes.Move(Corner[i],Corner_X[i]-2.5,Corner_Y[i]-2.5)

  endfor

  

  'UPDATE BOX

  Shapes.Move(Box,Box_X-Box_Width/2,Box_Y-Box_Height/2)

  Shapes.Rotate(Box,Box_Angle)

  Shapes.Move(Corner[5], Box_X-2.5, Box_Y-2.5)

EndSub

  


