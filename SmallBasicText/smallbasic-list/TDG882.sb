reg["a"]=0
reg["f"]=0
reg["b"]=0
reg["c"]=0
reg["d"]=0
reg["e"]=0
reg["h"]=0
reg["l"]=0
reg["ix"]=0
reg["iy"]=0
args=0

'adc
'add
'andd
'bit
'call
'call_NZ
'call_Z
'call_NC
'call_C
'call_PO
'call_PE
'call_P
'call_M
'ccf
'cp
'cpd
'cpdr
'cpi
'cpir
'cpl
'daa
'dec
'djnz
'di
'ei
'ex_AF_AF'
'ex_(SP)_HL
'ex_DE_HL
'ex_(SP)_IX
'ex_(SP)_IY
'exx
'halt
'im0
'im0/1
'im1
'im2
'in
'inc
'ind
'indr
'ini
'inir
'jp
'jp_NZ
'jp_Z
'jp_NC
'jp_C
'jp_PO
'jp_(HL)
'jp_PE
'jp_P
'jp_M
'jp_(IX)
'jp_(IY)
'jr_NZ
'jr_Z
'jr_NC
'jr_C
'jr
'ld
'neg
'nop
'orr

'otdr
'otir
'out
'outd
'outi
'res
'ret
'ret_NZ
'ret_Z
'ret_NC
'ret_C
'ret_PO
'ret_PE
'ret_P
'ret_M
'reti
'retn
'rl
'rlc
'rlca
'rld
'rr
'rra
'rrc
'rrca
'rrd
'rst0
'rst08

'rst18
'rst20
'rst28
'rst30
'rst38
'sbc
'scf
'set
'sla
'sll
'sra
'srl
'subb
'xor
ss="Hello World!~ZX Demo v0.1
For x=1 To Text.GetLength(ss)
  mem[16384-1+x]=text.GetCharacterCode( Text.GetSubText(ss x 1))
  
EndFor
mem[16384-1+x]=0

Sub rst_10
  w=0
  GraphicsWindow.FontName="ZX Spectrum
  GraphicsWindow.FontSize=22
  GraphicsWindow.FontBold="false
  GraphicsWindow.BrushColor="black
  While mem[w+16384]>0
    If mem[w+16384]=126 Then
      wx=0
      wy=wy+1
      elseIf mem[w+16384]=16 Then
      wx=mem[w+16384+1]
      wy=mem[w+16384+2]
      w=w+2
    Else
      GraphicsWindow.DrawText(wx*25+100 10+wy*25 text.GetCharacter( mem[w+16384]))
      
      wx=wx+1
    EndIf
    w=w+1
  EndWhile
  
EndSub

Sub pop_BC
  reg["c"]=Stack.PopValue("reg")
  reg["b"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub pop_DE
  reg["e"]=Stack.PopValue("reg")
  reg["d"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub pop_HL
  reg["l"]=Stack.PopValue("reg")
  reg["h"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub pop_AF
  reg["f"]=Stack.PopValue("reg")
  reg["a"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub pop_ix
  reg["ixl"]=Stack.PopValue("reg")
  reg["ixh"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub
Sub pop_iy
  reg["iyl"]=Stack.PopValue("reg")
  reg["iyh"]=Stack.PopValue("reg")
  LDList.RemoveAt(stk LDList.Count(stk))
  LDList.RemoveAt(stk LDList.Count(stk))
  
EndSub

Sub push_BC
  Stack.PushValue("reg" reg["b"])
  Stack.PushValue("reg" reg["c"])
  LDList.Add(stk reg["b"])
  LDList.Add(stk reg["c"])
  'TextWindow.WriteLine( LDList.ToArray(stk))
EndSub
Sub push_DE
  Stack.PushValue("reg" reg["d"])
  Stack.PushValue("reg" reg["e"])
  LDList.Add(stk reg["d"])
  LDList.Add(stk reg["e"])
EndSub
Sub push_AF
  Stack.PushValue("reg" reg["a"])
  Stack.PushValue("reg" reg["f"])
  LDList.Add(stk reg["a"])
  LDList.Add(stk reg["f"])
EndSub
Sub push_HL
  Stack.PushValue("reg" reg["h"])
  Stack.PushValue("reg" reg["l"])
  LDList.Add(stk reg["h"])
  LDList.Add(stk reg["l"])
EndSub
Sub push_ix
  Stack.PushValue("reg" reg["ixh"])
  Stack.PushValue("reg" reg["ixl"])
  LDList.Add(stk reg["ixh"])
  LDList.Add(stk reg["ixl"])
EndSub
Sub push_iy
  Stack.PushValue("reg" reg["iyh"])
  Stack.PushValue("reg" reg["iyl"])
  LDList.Add(stk reg["iyh"])
  LDList.Add(stk reg["iyl"])
  
EndSub

Sub ld
  If Array.ContainsIndex(reg args[1][2]) and Array.ContainsIndex(reg args[1][3])   Then
    
    reg[args[1][2]]=reg[args[1][3]]
    
  ElseIf Text.StartsWith(args[1][2] "(hl") or Text.StartsWith(args[1][2] "[hl") Then
    mem[reg["h"]*256+reg["l"]]=reg[args[1][3]]
    
  ElseIf FCExtensions.IsNumber(args[1][3]) Then
    If Text.GetLength(args[1][2])=2 Then
      reg[Text.GetSubText(args[1][2] 1 1)]=math.floor(args[1][3]/256)
      reg[Text.GetSubText(args[1][2] 2 1)]=math.Remainder(args[1][3] 256)
    Else
      reg[Text.GetSubText(args[1][2] 1 1)]=math.Remainder(args[1][3] 256)
      
    EndIf
    
  Else
    GraphicsWindow.ShowMessage("Invalid reg!" "Err01")
  EndIf
  
EndSub

Sub inc
  If Array.ContainsIndex(reg args[1][2])    Then
    reg[args[1][2]]=reg[args[1][2]]+1
  Else
    GraphicsWindow.ShowMessage("Invalid reg!" "Err01")
  EndIf
EndSub

Sub dec
  If Array.ContainsIndex(reg args[1][2])    Then
    reg[args[1][2]]=reg[args[1][2]]-1
  Else
    GraphicsWindow.ShowMessage("Invalid reg!" "Err01")
  EndIf
EndSub

stk=LDList.CreateFromValues("1=<empty>")
prg=LDList.CreateFromValues(LDText.Split("ld hl 16384!ld a 16!ld (hl) a!inc l!ld a 5!ld (hl) a!ld a 3!inc l!ld (hl) a!ld a 67!inc l!ld (hl) a!rst_10" "!"))

lb=LDControls.AddListBox(stk 100 300)
lbP=LDControls.AddListBox(prg 150 700)
Controls.Move(lbp 130 0)
GraphicsWindow.Left=5
GraphicsWindow.Top=5

GraphicsWindow.Width=300
GraphicsWindow.Height=400
GraphicsWindow.BackgroundColor="teal
TextWindow.BackgroundColor="darkblue
TextWindow.ForegroundColor="cyan
TextWindow.Clear()

While 1=1
  TextWindow.Write("cmd>")
  cc=text.ConvertToLowerCase(TextWindow.Read())
  If cc="run" or cc="ruh" Then
    paa= LDList.ToArray(prg)
    if cc="ruh" Then
      Controls.HideControl(lbp)
    EndIf
    
    For px=1 To Array.GetItemCount(paa)
      pp=LDText.Split(paa[px]+" 0" " ")
      LDCall.Function(pp[1] pp)
      a1=Array.GetAllIndices(reg)
      b1=0
      For ff=1 To Array.GetItemCount(a1)
        b1[ff]=a1[ff]+" << "+reg[a1[ff]]
      EndFor
      LDControls.ListBoxContent(lbp LDList.CreateFromValues(b1))
      LDControls.ListBoxContent(lb stk)
    EndFor
    
  ElseIf cc="hid" or cc="h" Then
    Controls.HideControl(lbp)
    
  ElseIf cc="list" or cc="lst" or cc="l" Then
    Controls.ShowControl(lbp)
    prg=LDList.CreateFromValues(paa)
    LDControls.ListBoxContent(lbp prg)
  Else
    
    LDList.Add(prg cc)
    LDControls.ListBoxContent(lbp prg)
  EndIf
  
  'pp=LDText.Split(cc+" 0" " ")
  'LDCall.Function(pp[1] pp)
  
  'LDControls.ListBoxContent(lb stk)
  ' TextWindow.WriteLine(reg)
EndWhile
