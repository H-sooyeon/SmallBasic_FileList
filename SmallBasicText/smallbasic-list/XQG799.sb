accumulator = ""
rows = 6
columns = 4
buttonwidth = 30
toppanelheight = 40
buttonheight = buttonwidth * 1.1614
buttongap = 3
buttonwanted = 0
lvalue = 0
operator = "+"

ButtonValue[1] = "legend=MC;key=none;alt=none;act=mem;color=digray;"
ButtonValue[2] = "legend=M+;key=none;alt=none;act=mem;color=digray;"
ButtonValue[3] = "legend=M-;key=none;alt=none;act=mem;color=digray;"
ButtonValue[4] = "legend=MR;key=none;alt=none;act=mem;color=digray;"
ButtonValue[5] = "legend=C;key=C;alt=none;act=unary;color=Darkslategray;"
ButtonValue[6] = "legend=+/-;key=none;alt=none;act=unary;color=Darkslategray;"
ButtonValue[7] = "legend=/;key=/;alt=divide;act=binary;color=Darkslategray;"
ButtonValue[8] = "legend=X;key=x;alt=multiply;act=binary;color=Darkslategray;"
ButtonValue[9] = "legend=7;key=d7;alt=numpad7;act=num;color=black;"
ButtonValue[10] = "legend=8;key=d8;alt=numpad8;act=num;color=black;"
ButtonValue[11] = "legend=9;key=d9;alt=numpad9;act=num;color=black;"
ButtonValue[12] = "legend=-;key=oemminus;alt=subtract;act=binary;color=darkslategray;"
ButtonValue[13] = "legend=4;key=d4;alt=numpad4;act=num;color=black;"
ButtonValue[14] = "legend=5;key=d5;alt=numpad5;act=num;color=black;"
ButtonValue[15] = "legend=6;key=d6;alt=numpad6;act=num;color=black;"
ButtonValue[16] = "legend=+;key=add;alt=none;act=binary;color=darkslategray;"
ButtonValue[17] = "legend=1;key=d1;alt=numpad1;act=num;color=black;"
ButtonValue[18] = "legend=2;key=d2;alt=numpad2;act=num;color=black;"
ButtonValue[19] = "legend=3;key=d3;alt=numpad3;act=num;color=black;"
ButtonValue[20] = "legend=√;key=none;alt=none;act=unary;color=darkslategray;"
ButtonValue[21] = "legend=0;key=d0;alt=numpad0;act=num;color=black;"
ButtonValue[22] = "legend=.;key=.;alt=decimal;act=num;color=black;"
ButtonValue[23]["legend"] = "="
ButtonValue[23]["alt"] = "return"
ButtonValue[23]["color"] = "brown"
ButtonValue[23]["act"] = "equ"
ButtonValue[23]["key"] = ""
'now write
For r = 1 To rows-1
  For c = 1 To columns
    ThisButtonx= ((c-1)*ButtonWidth) + (c*ButtonGap)
    If ButtonValue[((r-1)*columns)+(c)]["legend"] = "=" then
      ThisButtonx=((c)*ButtonWidth) + (c*ButtonGap)
    endif
    'calculate coordinates for the buttons
    ButtonValue[((r-1)*columns)+(c)]["x"] = ((c-1)*ButtonWidth) + (c*ButtonGap)
    ButtonValue[((r-1)*columns)+(c)]["y"] = ((r-1)*ButtonHeight) + (r*ButtonGap) + topPanelHeight
    ButtonValue[((r-1)*columns)+(c)]["width"]=ButtonWidth
  EndFor
EndFor
'THERE IS A DAMNED IRREGULAR ROW FOR THE DAMNED NUMBER 0!!!
lastrow = ((rows - 1) * buttonheight) + (rows * buttongap) + toppanelheight
ButtonValue[21]["x"] = buttongap
ButtonValue[21]["y"] = lastrow
ButtonValue[21]["width"] = buttonwidth
ButtonValue[22]["x"] = buttonwidth + (2 * buttongap)
ButtonValue[22]["y"] = lastrow
ButtonValue[22]["width"] = (buttonwidth * 2) + buttongap
ButtonValue[23]["x"] = (buttonwidth * 3) + (4*buttongap)
ButtonValue[23]["y"] = lastrow
ButtonValue[23]["width"] = buttonwidth
windowwidth = (buttonwidth*columns) + (buttongap * (columns+ 1))
windowheight = (buttonheight*rows) + (buttongap * ((columns)+ 1)) + toppanelheight

'NOW DRAW!!!
GraphicsWindow.BackgroundColor = "burlywood"

drawresultpane()
GraphicsWindow.BrushColor = "SaddleBrown"
GraphicsWindow.PenColor = "Black"
GraphicsWindow.FontSize = 15
GraphicsWindow.PenWidth = 2
For i = 1 To Array.GetItemCount(ButtonValue)
  GraphicsWindow.BrushColor = ButtonValue[i]["color"]
  GraphicsWindow.FillRectangle(ButtonValue[i]["x"], ButtonValue[i]["y"],ButtonValue[i]["width"], ButtonHeight)
  GraphicsWindow.PenColor="cornsilk"
  GraphicsWindow.DrawLine(ButtonValue[i]["x"], ButtonValue[i]["y"],ButtonValue[i]["x"]+ButtonValue[i]["width"], ButtonValue[i]["y"])
  GraphicsWindow.DrawLine(ButtonValue[i]["x"], ButtonValue[i]["y"],ButtonValue[i]["x"], ButtonValue[i]["y"]+ButtonHeight)
  GraphicsWindow.penColor = "black"
  GraphicsWindow.DrawLine(ButtonValue[i]["x"], ButtonValue[i]["y"]+ButtonHeight,ButtonValue[i]["x"]+ButtonValue[i]["width"], ButtonValue[i]["y"]+buttonheight)
  GraphicsWindow.DrawLine(ButtonValue[i]["x"]+ButtonValue[i]["width"], ButtonValue[i]["y"],ButtonValue[i]["x"]+ButtonValue[i]["width"], ButtonValue[i]["y"]+ButtonHeight)
  GraphicsWindow.BrushColor="white"
  GraphicsWindow.DrawText(ButtonValue[i]["x"]+5, ButtonValue[i]["y"]+5,ButtonValue[i]["legend"])
EndFor
GraphicsWindow.Height = windowheight
GraphicsWindow.Width = windowwidth
GraphicsWindow.CanResize = "False"
GraphicsWindow.MouseDown = OnMouseDown
GraphicsWindow.KeyDown = OnKeyDown
GraphicsWindow.Title = "Calculator
GraphicsWindow.Show()

Sub OnMouseDown
  x = GraphicsWindow.MouseX
  y = GraphicsWindow.MouseY
  For i = 1 To Array.GetItemCount(ButtonValue)
    If x > ButtonValue[i]["x"] And x < ButtonValue[i]["x"] + ButtonValue[i]["width"] And y > ButtonValue[i]["y"] And y < ButtonValue[i]["y"] + buttonheight Then
      buttonwanted = i
      dosomething()
    EndIf
  EndFor
EndSub

Sub dosomething
  legend=ButtonValue[ButtonWanted]["legend"]
  If ButtonValue[ButtonWanted]["act"]="num" then 
    If lastoperator="=" then 
      Accumulator="" 
    endif
    Accumulator=Text.Append(accumulator,ButtonValue[ButtonWanted]["legend"])
    DrawResultPane()
  endif
  If legend="m+" then 
    Memory=Memory+Accumulator
  EndIf  
  If legend="m-" then 
    Memory=Memory-Accumulator
  EndIf  
  If legend="mc" then 
    Memory=0
  EndIf  
  If legend="mr" then 
    Accumulator=Memory
    DrawResultPane()
  EndIf    
  If legend="C" then 
    Accumulator=""
    DrawResultPane()
  EndIf    
  If ButtonValue[ButtonWanted]["act"]="binary" then 
    lvalue=Accumulator 'binary operator
    operator=legend
    Accumulator=""
  EndIf 
  If legend="+/-" then 'now do the unary operators
    Accumulator =-Accumulator
    DrawResultPane()
  EndIf 
  If legend="√" then 
    Accumulator = Math.SquareRoot(Accumulator)
    DrawResultPane()
  endif
  If legend="="then 'now do any calculations
    If lvalue<>"" and operator<>"" then
      if operator="+" then
        Accumulator=Lvalue+Accumulator 
      endif
      if operator="-" then
        Accumulator=Lvalue-Accumulator 
      endif
      if operator="X" then
        Accumulator=Lvalue*Accumulator 
      endif
      if operator="/" then
        Accumulator=Lvalue/Accumulator 
      endif
      lvalue=Accumulator
      operator=""
      DrawResultPane()
    endif
  EndIf  
  lastOperator=Legend  
EndSub

Sub drawresultpane
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.PenColor = "Black"
  GraphicsWindow.PenWidth = 1
  GraphicsWindow.DrawRectangle(buttongap, buttongap, windowwidth - (buttongap * 2), toppanelheight - buttongap)
  GraphicsWindow.FillRectangle(buttongap, buttongap, windowwidth - (buttongap * 2), toppanelheight - buttongap)
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.FontSize = 20
  GraphicsWindow.DrawBoundText(buttongap + 5, buttongap + 5, windowwidth - (buttongap * 2) - 10, accumulator)
  GraphicsWindow.FontSize = 10
EndSub

Sub OnKeyDown
  keypressvalue = Text.ConvertToLowerCase(GraphicsWindow.LastKey)
  For i = 1 To Array.GetItemCount(ButtonValue)
    If Text.ConvertToLowerCase(ButtonValue[i]["key"]) = keypressvalue Or Text.ConvertToLowerCase(ButtonValue[i]["alt"]) = keypressvalue Then
      buttonwanted = i
      dosomething()
    EndIf
  EndFor
EndSub
