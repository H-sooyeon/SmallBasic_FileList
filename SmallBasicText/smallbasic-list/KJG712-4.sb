' Curve Demo

' Version 0.3

' Copyright Â© 2015-2018 Nonki Takahashi.  The MIT License.

' Last update 2018-08-31

' Program ID KJG712-4



title = "Curve Demo"

ver = "0.3"

GraphicsWindow.Title = title + " " + ver + " - Quadratic Bezier Curve"

Not = "False=True;True=False;"

nth = "0=start;1=control;2=end;"

Form()

GraphicsWindow.PenColor = "SteelBlue"

GraphicsWindow.PenWidth = 1

GraphicsWindow.DrawLine(px[0], py[0], px[1], py[1])

GraphicsWindow.DrawLine(px[1], py[1], px[2], py[2])

GraphicsWindow.BrushColor = "Transparent"

For i = 0 To 2

  c[i] = Shapes.AddEllipse(2 * r, 2 * r)

EndFor

DrawQuadraticBezier()



Sub Form

  gw = 598

  gh = 428

  GraphicsWindow.Width = gw

  GraphicsWindow.Height = gh

  px[0] = gw / 5

  py[0] = gh * 3 / 4

  px[1] = gw / 2

  py[1] = gh / 4

  px[2] = gw * 4 / 5

  py[2] = gh * 3 / 4

  r = 4

  GraphicsWindow.FontName = "Trebuchet MS"

  GraphicsWindow.FontSize = 20

  GraphicsWindow.BrushColor = "Black"

  instruction = Shapes.AddText("")

  Shapes.Move(instruction, 20, 10)

  For i = 0 To 2

    ShowPoint()

  EndFor

EndSub



Sub DrawQuadraticBezier

  ' param px, py - array of three control points for quadratic Bezier curve

  dt = 0.05

  For t = 0 To 1 Step dt

    x1 = px[0] + t * (px[1] - px[0])

    y1 = py[0] + t * (py[1] - py[0])

    x2 = px[1] + t * (px[2] - px[1])

    y2 = py[1] + t * (py[2] - py[1])

    GraphicsWindow.PenColor = "SteelBlue"

    GraphicsWindow.PenWidth = 1

    line = Shapes.AddLine(x1, y1, x2, y2)

    Shapes.Move(c[0], x1 - r, y1 - r)

    Shapes.Move(c[2], x2 - r, y2 - r)

    x = x1 + t * (x2 - x1)

    y = y1 + t * (y2 - y1)

    Shapes.Move(c[1], x - r, y - r)

    If 0 < t Then

      GraphicsWindow.PenColor = "Gray"

      GraphicsWindow.PenWidth = 2

      GraphicsWindow.DrawLine(_x, _y, x, y)

    EndIf

    _x = x  ' last x

    _y = y  ' last y

    msg = "t = " + t

    Shapes.SetText(instruction, msg)

    Program.Delay(500)

    Shapes.Remove(line)

  EndFor

EndSub



Sub ShowPoint

  ' param px[i], py[i] - point to draw

  ' param r - radius

  If i = 1 Then

    GraphicsWindow.PenColor = "Black"

    GraphicsWindow.PenWidth = 1

    GraphicsWindow.DrawEllipse(px[i] - r, py[i] - r, 2 * r, 2 * r)

  Else

    GraphicsWindow.BrushColor = "Black"

    GraphicsWindow.FillEllipse(px[i] - r, py[i] - r, 2 * r, 2 * r)

  EndIf

EndSub


