'rotating pieslices

GraphicsWindow.Title="Xploding pieslices

angleOffset = 0     'Angle rotation past vertical to start the first shape (90 = all shapes point towards the center)

rotationSpeed = 1   'Angle change between steps in rotation 

radious = 150       'Initial Size of the circle

radChange = -1       'How fast the radious changes

radMin = 59       'Smallest radious of circle

radMax = 200        'Largest radious of circle



frameLength = 20    'Number of milleseconds between animation frames



'The look and feel of the shapes

GraphicsWindow.BackgroundColor = "darkblue

GraphicsWindow.BrushColor = "yellow

GraphicsWindow.PenColor = "orange

barCnt = 20                                     'Number of  shapes 

barWidth = 10

barLength = 40

GraphicsWindow.Width = 700

GraphicsWindow.Height = 700

GraphicsWindow.Show()



'--- Everything from this point is calculated --------------------------------------------------



angleStep = 360 / barCnt                        'Amount of space (angle count) between shapes

CreateShapes()                                  'Build the shapes around the circle



centerx = GraphicsWindow.Width/2 - (barWidth /2 ) 'Find the center of the circle - offset will need to be nudged with different sized shapes

centery = GraphicsWindow.Height/2 - (barLength / 2)



pos = 1                                         'Start with the first shape

framestart = Clock.ElapsedMilliseconds          'Start the clock



'--- Main Program Loop -----------------------------------------------------------------------

While "True"

  'Update position around the circle

  angle[pos] = angle[pos] + rotationSpeed

  angle[pos] = Math.Remainder(angle[pos],360)

  

  'calcuate x/y based on angle around the circle

  radAngle = Math.GetRadians(angle[pos])

  x = Math.Cos(radAngle) * radious + centerx

  y = Math.Sin(radAngle) * radious + centery

  

  Shapes.Rotate(bar[pos],angle[pos] + angleOffset+90)  'Rotate to match position

  Shapes.Move(bar[pos],x,y)                    'Change the position

  

  pos = pos + 1                                ' Next shape please

  If pos > barCnt Then                         'Reached the end? start over

    frameDelay()                               'Wait a tick or two between moves

    pos = 1

    If radChange <> 0 then

      radious = radious + radChange

      If radious < radMin or radious > radMax then

        radChange = radChange * -1

      EndIf

    EndIf

  EndIf

EndWhile



Sub CreateShapes

  baseAngle = 1

  pos = 1                                     'Pos used to count shapes to allow for possiblity of space between shapes

  For i = 1 To barCnt

    baseAngle = baseAngle + angleStep         'update the angle to match its position around the circle

    bar[pos] = Shapes.AddTriangle (0 0,barLength  0,BarLength/2 barWidth*14  )     'Create the shape

    angle[pos] = baseAngle                    'Store the shapes angle

    radAngle = Math.GetRadians(angle[pos])    'Calculate its position around the circle based on the angle

    x = Math.Cos(radAngle) * radious + centerx  

    y = Math.Sin(radAngle) * radious + centery

    Shapes.Rotate(bar[pos],angle[pos]+90 )        'Rotate the shape to match

    Shapes.Move(bar[pos],x,y)                 'Place the shape on the circle

    

    pos = pos + 1                             'Next shape please

  EndFor



EndSub



Sub frameDelay

  'Precise frame timing. More exact that program.delay

  While Clock.ElapsedMilliseconds - framestart < frameLength

  EndWhile

  framestart = Clock.ElapsedMilliseconds

EndSub

  


