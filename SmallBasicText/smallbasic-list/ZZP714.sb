'File lister -- Compliments CodingCat aka Matthew L. Parets



'Open the window, add the controls

GraphicsWindow.Title = "Directory List"

GraphicsWindow.BrushColor = "black"

GraphicsWindow.BackgroundColor = GraphicsWindow.GetColorFromRGB(255,255,200)

folderTextBox = Controls.AddTextBox(60,10)

Controls.SetSize(folderTextBox,495,25)

Controls.SetTextBoxText(folderTextBox,program.Directory)

GraphicsWindow.DrawText(10,15,"Folder:")

goButton = Controls.AddButton("Go", 560,10)

Controls.SetSize(goButton,55,25)

filesTextBox = Controls.AddMultiLineTextBox(10,45)

Controls.SetSize(filesTextBox,600,375)



'Set the event to receive the button click

Controls.ButtonClicked = whenGoClicked

followSubFolders = "True"



'Button Click Event

Sub whenGoClicked

  If processingButton <> "true" Then 'Prevent a double click

    processingButton = "true"

    checkFolder = Controls.GetTextBoxText(folderTextBox) 'Get the folder and check for proper format

    If Text.GetSubTextToEnd(checkFolder, Text.GetLength(checkFolder)) <> "\" then

      checkFolder = checkFolder + "\"

    EndIf

    folder = checkFolder

    

    'Let the user know this may take a while

    boxContents = "Scanning: " + folder + Text.GetCharacter(13) + Text.GetCharacter(9)

    Controls.SetTextBoxText(filesTextBox, boxContents)

    

    scanPath()

    processingButton = "false"

  EndIf

EndSub



'Scan a given folder - Recurse into subfolders if requested

Sub scanPath

  folderCount = 0

  fileCount = 0

  

  path = ""

  Stack.PushValue(path, folder)

  boxContents = ""

  While Stack.GetCount(path) > 0

    nextFolder = Stack.PopValue(path)

    slashText = nextFolder

    SlashOut()

    slashText = "..\" + slashText 

    boxContents = boxContents + Text.GetCharacter(13) + slashText

    

    filelist = file.GetFiles(nextfolder)

    holdForFileDisplay = ""

    filesInFolder = 0

    For i = 1 To Array.GetItemCount(fileList)

      slashText = fileList[i]

      SlashOut()

      

      slashText = "     " + slashText

      slashText = Text.GetCharacter(9) + slashText

      

      holdForFileDisplay = holdForFileDisplay + Text.GetCharacter(13)  + slashText

      fileCount = fileCount + 1

      filesInFolder = filesInFolder + 1

    EndFor

    

    boxContents = boxContents + " -- Files Stats: " + filesInFolder

    folderCount = folderCount + 1

    boxContents = boxContents + holdForFileDisplay

    

    If followSubFolders Then

' The following line could be harmful and has been automatically commented.

'       folderList = File.GetDirectories(nextFolder)

      For i = 1 To Array.GetItemCount(folderList)

        Stack.PushValue(path, folderList[i])

      EndFor

    EndIf

    

    GraphicsWindow.Title = "Directory List -- " + Stack.GetCount(path) + " -- " + nextFolder

  EndWhile

  

  'Add Stats -- Added to text box buffer backwards to place it at the top of the list

  boxContents = "    Folders: " + folderCount + " - Files: " + fileCount + Text.GetCharacter(13) +  boxContents

  boxContents = "Contents of " + folder +  boxContents

  If followSubFolders Then

    boxContents = " (plus sub folders)" +  boxContents

  EndIf

  boxContents = Text.GetCharacter(13) +  boxContents

  

  Controls.SetTextBoxText(filesTextBox, boxContents) 'Update the window

  GraphicsWindow.Title = "Directory List"

EndSub



'Pull the text out from the last part of the text (after the last slash)

Sub SlashOut

  slashLoc = Text.GetIndexOf(slashText,"\")

  While slashLoc <> 0

    slashText = Text.GetSubTextToEnd(slashText, slashLoc+1)

    slashLoc = Text.GetIndexOf(slashText,"\")

  EndWhile

EndSub


