'  Challenge of the month Feb 2013      Fun Clock      by NaochanON    2013/02/12



Shapes_Init()

Shapes_Add()

drops()



While "true"

  DH="1="+(100+Clock.Second)+";2="+(100+Clock.Minute)+";3="+(100+Clock.Hour)  '  Make clock array DH[ ]

  water_drop()

  Water_Height()

  shapes.SetText(smsg["Date"],Clock.Date)

  shapes.SetText(smsg["Sec"],Text.GetSubText(DH[1],2,2))  '  Sec

  shapes.SetText(smsg["Min"],Text.GetSubText(DH[2],2,2))  ' Min

  shapes.SetText(smsg["Hr"],Text.GetSubText(DH[3],2,2))   '  Hr

  Program.Delay(50)

endwhile



Sub water_drop

  '----------------------------------------  second drop -----------------

  NN=NN+1

  ddy=NN/20*shape[1]["height"]

  Shapes.move(drop[1],shapes.GetLeft(shape[11]["obj"]),Shapes.GetTop(shape[11]["obj"])+ddY)  '  second drop

  '-----------------------------------------  Water tank(second)  height    -------------------

  If DH[1]>=130 Then 

    Shapes.rotate(shape[5]["obj"],-90)        ' Open Water faucet 1 

    Shapes.move(drop[2],shapes.GetLeft(shape[4]["obj"])-4,Shapes.GetTop(shape[4]["obj"])+ddY)   '  Minute drop

    Shapes.move(drop[3],shapes.GetLeft(shape[4]["obj"])+2,Shapes.GetTop(shape[4]["obj"])+ddY+5) '  Minute drop 

  else 

    Shapes.rotate(shape[5]["obj"],0)        ' Close Water faucet 1 

  EndIf

  '-----------------------------------------  Water tank(Minute)  height    -------------------

  If DH[2]>=130 Then 

    Shapes.rotate(shape[7]["obj"],-90)        ' Open Water faucet 2 

    For j=4 To 7

      Shapes.move(drop[j],shapes.GetLeft(shape[6]["obj"])-9+4*(j-4),Shapes.GetTop(shape[6]["obj"])+ddY+6*(j-3))   '  Hour drop

    endfor

  else

    Shapes.rotate(shape[7]["obj"],0)        ' Close Water faucet 2  

  EndIf

  '-----------------------------------------  Water tank(Hour)  height    -------------------

  If DH[3]>=112 Then 

    Shapes.rotate(shape[9]["obj"],-90)        ' Open Water faucet 2 

    For j=8 To 11

      Shapes.move(drop[j],shapes.GetLeft(shape[8]["obj"])-9+4*(j-8),Shapes.GetTop(shape[8]["obj"])+ddY+6*(j-7))   '  Hour drop

    endfor

  else 

    Shapes.rotate(shape[9]["obj"],0)        ' Close Water faucet 3 

  EndIf

  '-----------------------------------------   return  drops   -------------------

  If NN=20 Then   

    Shapes.move(drop[1],shapes.GetLeft(shape[11]["obj"]),Shapes.GetTop(shape[11]["obj"])+10)    '  second drop

    Shapes.move(drop[2],shapes.GetLeft(shape[4]["obj"])-4,Shapes.GetTop(shape[4]["obj"])+10)    '  From second tank 

    Shapes.move(drop[3],shapes.GetLeft(shape[4]["obj"])-4,Shapes.GetTop(shape[4]["obj"])+10)    '   From second tank

    For j=4 To 7

      Shapes.move(drop[j],shapes.GetLeft(shape[6]["obj"])-4,Shapes.GetTop(shape[6]["obj"])+10)  '  From Minute tank 

    endfor

    For j=8 To 11

      Shapes.move(drop[j],shapes.GetLeft(shape[8]["obj"])-4,Shapes.GetTop(shape[8]["obj"])+10)  '   From Hour tank 

    endfor

    NN=0

  EndIf

EndSub



Sub Water_Height

  '-----------------------   Second  water tank  ------------------------------- 

  If DH[1]<130 Then         '  within 30sec

    WH1=DH[1]+30-100

  ElseIf DH[1]>=130 then    '   over 30sec

    WH1=60-(DH[1]-30-100)

  endif

  Shapes.Zoom(shape[15]["obj"],1,WH1/60)

  Shapes.Move(shape[15]["obj"],Shapes.GetLeft(shape[15]["obj"]),shy+shape[1]["y"]+(1-WH1/60)*shape[1]["height"]/2)

  '-----------------------   Minute  water tank  ------------------------------- 

  If DH[2]<130 Then          '  within 30minute

    WH2=DH[2]+30-100

  ElseIf DH[2]>=30 then      '   over 30minute

    WH2=60-(DH[2]-30-100)

  endif

  Shapes.Zoom(shape[16]["obj"],1,(WH2/60))

  Shapes.Move(shape[16]["obj"],Shapes.GetLeft(shape[16]["obj"]),shy+shape[2]["y"]+(1-(WH2/60))*shape[2]["height"]/2)

  '-----------------------   Hour  water tank  ------------------------------- 

  If DH[3]<112 Then           '   within  12Hour

    WH3=DH[3]+12-100

  ElseIf DH[3]>=112 then      '   over 12Hour

    WH3=24-(DH[3]-12-100)

  endif

  Shapes.Zoom(shape[17]["obj"],1,(WH3/24))

  Shapes.Move(shape[17]["obj"],Shapes.GetLeft(shape[17]["obj"]),shy+shape[3]["y"]+(1-(WH3/24))*shape[3]["height"]/2)

EndSub



Sub drops

  GraphicsWindow.BrushColor="#00CED1"

  GraphicsWindow.PenColor="#00CED1"

  drop[1]=Shapes.AddEllipse(5,8)

  shapes.Move(drop[1],shapes.GetLeft(shape[10]["obj"]),Shapes.GetTop(shape[10]["obj"])+10)  '  Second drop

  For j=2 To 3

    drop[j]=Shapes.AddEllipse(5,8)

    shapes.Move(drop[j],shapes.GetLeft(shape[4]["obj"]),Shapes.GetTop(shape[4]["obj"])+10)  '  Minute Drop

  endfor

  For j=4 To 7

    drop[j]=Shapes.AddEllipse(5,8)

    shapes.Move(drop[j],shapes.GetLeft(shape[6]["obj"]),Shapes.GetTop(shape[6]["obj"])+10)  '  hour Drop

  endfor

  For j=8 To 11

    drop[j]=Shapes.AddEllipse(5,8)

    shapes.Move(drop[j],shapes.GetLeft(shape[8]["obj"]),Shapes.GetTop(shape[8]["obj"])+10)  '  wasted drop

  endfor

EndSub



Sub Shapes_Add

  '-------------------------------   Water Clock  -------------------------------

  For i = start To end

    GraphicsWindow.PenWidth = shape[i]["pw"]

    GraphicsWindow.PenColor = shape[i]["pc"]

    GraphicsWindow.BrushColor = shape[i]["bc"]

    If shape[i]["func"] = "rect" Then

      shape[i]["obj"] = Shapes.AddRectangle(shape[i]["width"], shape[i]["height"])

    ElseIf shape[i]["func"] = "ell" Then

      shape[i]["obj"] = Shapes.AddEllipse(shape[i]["width"], shape[i]["height"])

    ElseIf shape[i]["func"] = "tri" Then

      shape[i]["obj"] = Shapes.AddTriangle(shape[i]["x1"], shape[i]["y1"], shape[i]["x2"], shape[i]["y2"], shape[i]["x3"], shape[i]["y3"])

    EndIf

    Shapes.Move(shape[i]["obj"], shX + shape[i]["x"], shY + shape[i]["y"])

    Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])

  EndFor

  '-------------------------------   Clock data display -------------------------------

  GraphicsWindow.BrushColor="Lightcyan"

  GraphicsWindow.FontSize=24

  smsg["Date"]=Shapes.AddText(" ")

  Shapes.Move(smsg["Date"],100,20)

  GraphicsWindow.FontSize=20

  smsg["Sec"]=Shapes.AddText(" ")

  Shapes.Move(smsg["Sec"],shx+shape[1]["x"]+shape[1]["width"]/3-4,shy+shape[1]["y"]+2*shape[1]["height"]/3)

  smsg["Min"]=Shapes.AddText(" ")

  Shapes.Move(smsg["Min"],shx+shape[2]["x"]+shape[2]["width"]/3,shy+shape[2]["y"]+2*shape[2]["height"]/3)

  smsg["Hr"]=Shapes.AddText(" ")

  Shapes.Move(smsg["Hr"],shx+shape[3]["x"]+shape[3]["width"]/3,shy+shape[3]["y"]+2*shape[3]["height"]/3)

EndSub



Sub Shapes_Init

  GraphicsWindow.Title=" Water Clock "

  GraphicsWindow.BackgroundColor="Darkgreen"

  shX = 80                    ' x offset

  shY = 50                    ' y offset

  shape[1] = "func=rect;x=309;y=42;width=41;height=80;bc=#FFFFF7;pc=#000000;pw=2;"

  shape[2] = "func=rect;x=204;y=123;width=108;height=80;bc=#FFFFF7;pc=#000000;pw=2;"

  shape[3] = "func=rect;x=33;y=205;width=170;height=96;bc=#FFFFF7;pc=#000000;pw=2;"

  shape[4] = "func=rect;x=274;y=81;width=35;height=10;bc=#263631;pc=#000000;pw=2;"

  shape[5] = "func=tri;x=283;y=75;x1=6;y1=0;x2=0;y2=18;x3=12;y3=18;angle=181;bc=#FF0004;pc=#000000;pw=2;"

  shape[6] = "func=rect;x=170;y=163;width=35;height=10;bc=#263631;pc=#000000;pw=2;"

  shape[7] = "func=tri;x=176;y=157;x1=6;y1=0;x2=0;y2=18;x3=12;y3=18;angle=181;bc=#FF0004;pc=#000000;pw=2;"

  shape[8] = "func=rect;x=0;y=248;width=35;height=10;bc=#263631;pc=#000000;pw=2;"

  shape[9] = "func=tri;x=5;y=244;x1=6;y1=0;x2=0;y2=18;x3=12;y3=18;angle=181;bc=#FF0004;pc=#000000;pw=2;"

  shape[10] = "func=rect;x=338;y=10;width=45;height=9;bc=#00AFB1;pc=#000000;pw=2;"

  shape[11] = "func=rect;x=332;y=12;width=9;height=17;angle=9;bc=#00AFB1;pc=#000000;pw=2;"

  shape[12] = "func=rect;x=355;y=0;width=9;height=17;bc=#00AFB1;pc=#000000;pw=2;"

  shape[13] = "func=rect;x=350;y=-5;width=19;height=7;bc=#00AFB1;pc=#000000;pw=2;"

  shape[14] = "func=ell;x=351;y=5;width=18;height=19;bc=#00AFB1;pc=#000000;pw=2;"

  shape[15] = "func=rect;x=309;y=42;width=41;height=80;bc=#00CED1;pc=#0000CD;pw=2;"

  shape[16] = "func=rect;x=204;y=123;width=108;height=80;bc=#00CED1;pc=#0000CD;pw=2;"

  shape[17] = "func=rect;x=33;y=205;width=170;height=96;bc=#00CED1;pc=#0000CD;pw=2;"

  start=1

  end=Array.GetItemCount(shape)

EndSub

  


