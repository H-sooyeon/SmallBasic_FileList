ll="` Vis.Fortran;MS Dos;TurboPascal;0815;11l;360 Assembly;4D;4DOS Batch;6502 Assembly;6800 Assembly;68000 Assembly;8 1/2;80386 Assembly;8051 Assembly;8080 Assembly;8086 Assembly;8th;A+;ABAP;ACL2;Action!;ActionScript;Ada;Agda;Agda2;Agena;Aikido;Aime;Algae;ALGOL;ALGOL 60;ALGOL 68;ALGOL W;ALGOL-M;Alice ML;Alore;AmbientTalk;AmigaE;AMPL;AngelScript;ANT;ANTLR;Anyways;Apex;APL;App Inventor;AppleScript;Applesoft BASIC;Application Master;Apricot;Arbre;Arc;Arendelle;Argile;ARM Assembly;{ArnoldC;AsciiDots;ASP;ASP.Net;{AspectC++;AspectJ;Astro;Asymptote;ATS;AutoHotkey;AutoIt;AutoLISP;AWK;Axe;Axiom;Axum;B;B4J;Babel;BaCon;BASIC;Basic Casio;BASIC256;Batch File;Battlestar;BBC BASIC;Bc;BCPL;Beeswax;Befunge;Beta;Biferno;Binary Lambda Calculus;Blast;BlitzMax;Blz;BML;Boo;Bori;Brace;Bracmat;Brainf***;Brat;Brlcad;Burlesque;{C;{C#;{C Shell;{C++;{C++/CLI;C0H;C1R;Caché ObjectScript;CafeOBJ;Caml;Cat;CB80;Cduce;Cecil;Ceylon;Chapel;Chef;CHR;ChucK;Cilk;Cilk++;Clarion;Clay;Clean;Clio;Clipper;Clipper/XBase++;CLIPS;Clojure;CMake;COBOL;Cobra;Coco;CoffeeScript;ColdFusion;Comal;Comefrom0x10;Commodore BASIC;Common Lisp;Component Pascal;Computer/zero Assembly;Coq;Crack;Crystal;Cubescript;Curry;D;Dafny;Dao;Dart;Datalog;Dc;DCL;DDNC;> Delphi;Deluge;DeviousYarn;Diesel;DIV Games Studio;DM;DMS;Dodo0;DUP;DWScript;Dylan;Dylan.NET;Déjà Vu;E;EC;EchoLisp;ECL;EDSAC order code;Eero;Efene;Egel;Egison;EGL;EhBASIC;Eiffel;Ela;Elan;{ElastiC;Elena;Elisa;Elixir;ELLA;Elm;Emacs Lisp;Emojicode;Epigram;Erlang;ERRE;Es;ESQL;Euler;Euphoria;Ezhil;F;F# ;Factor;Falcon;FALSE;Fan;Fancy;Fantom;FAUST;FBSL;{FeatureC++;Felix;Ferite;Fexl;Fish;FLORA-2;Florid;FOCAL;FormulaOne;Forth;` Fortran;Fortress;FP;FPI;Free Pascal;FreeBASIC;FreeMat;Frege;Friendly interactive shell;Frink;FRISC Assembly;FunL;Futhark;FutureBasic;FUZE BASIC;Formulæ;Gambas;GAP;Gastona;Gecho;Gema;Gentee;Genyris;GEORGE;GFA Basic;Glagol;GLBasic;Glee;Global Script;GlovePIE;GLSL;GML;Gnuplot;Go;Go!;Golfscript;Golo;Goo;Gosu;Gri;Groovy;GUISS;GW-BASIC;Hack;Halon;Harbour;Haskell;Haxe;Heron;HicEst;HLA;{HolyC;Hoon;Hope;HPPPL;HQ9+;Huginn;Hy;HyperTalk;I;Icon;IDL;Idris;Inform 6;Inform 7;Informix 4GL;Integer BASIC;Intercal;Io;Ioke;Iptscrae;IS-BASIC;IWBASIC;J;Jabaco;Jack;Jacquard Loom;JAMES II/Rule-based Cellular Automata;Java;JavaFX Script;JavaScript;JCL;JoCaml;JOVIAL;Joy;Jq;JScript.NET;JudoScript;Julia;K;Kabap;Kamailio Script;Kaya;KeyList Databasing;Kite;Kitten;Klong;KonsolScript;Kotlin;L++;L.in.oleum;LabVIEW;Lambda Prolog;Lambdatalk;Lang5;Lasso;LaTeX;LC2200 Assembly;LC3 Assembly;Leon;LFE;Lhogho;Liberty BASIC;LibreOffice Basic;Lily;Lilypond;Limbo;Lingo;Lisaac;Lisp;LiveCode;Livecode;LiveScript;LLP;LLVM;Lobster;Locomotive Basic;Loglan82;Logo;Logtalk;LOLCODE;Lolli;Lotus123 MacroScript;LotusScript;Lout;LSE64;LSL;Lua;Lucid;Luck;Luna;Lush;Lygon;M2000 Interpreter;M4;M680x0;Make;Malbolge;Maple;MAPPER;MathCortex;Mathematica;Mathprog;MATLAB;Maude;Maxima;MAXScript;MBS;MDL;ME10 macro;MEL;Mercury;Metafont;Metapost;MGS;MS Small Basic;MINIL;MIPS Assembly;Mirah;MIRC Scripting Lang.;Mirelle;ML;ML/I;MLite;MMIX;Modula-2;Modula-3;Mond;Monicelli;Monkey;Monte;MontiLang;MOO;MoonScript;Morfa;MSX Basic;MUF;MUMPS;Myrddin;MyrtleScript;MySQL;Mython;Mythryl;MC++;MK-61/52;N/t/roff;Nanoquery;NASL;Neat;Neko;Nemerle;NESL;NetLogo;NetRexx;NewLISP;NewtonScript;NGS;Nial;Nice;Nickle;Nim;Nit;Niue;Nix;NQP;NSIS;OASYS;OASYS assembler;Oberon-2;Objeck;Object Pascal;ObjectIcon;{Objective-C;OCaml;Occam;Octave;` Oforth;Ol;Omega;Onyx;OOC;OOCalc;OoRexx;Opa;{OpenC++;OpenEdge/Progress;OpenLisp;Openscad;OPL;Order;OxygenBasic;Oxygene;Oz;Panda;Panoramic;Pare;PARI/GP;Pascal;PASM;PDP-11 Assembly;Peloton;Pentium Assembly;PeopleCode;Perl;Perl 6;Perl5i;Phix;PHL;PHP;Picat;PicoLisp;Pict;Piet;Pike;PILOT;PIR;PL/B;PL/I;PL/M;PL/pgSQL;PL/SQL;PlainTeX;Plan;PLUS;PLZ/SYS;Pony;Pop11;PostScript;Potion;POV-Ray;PowerBASIC;Powerbuilder;# PowerShell;PPC Assembly;PPL;{Processing;ProDOS;Prolog;PSQL;Pure;Pure Data;PureBasic;Purity;Pyret;Python;Q;QBasic;Qi;Qore;{QuakeC;Quill;Quite BASIC;QL Basic;R;Ra;Racket;RapidQ;Rapira;Rascal;Raven;REALbasic;Reason;REBOL;Red;Reduce;Refal;Retro;REXX;Rhope;Ring;RLaB;RLSL;Robotic;Rockstar;RPG;RPGIV;RPL;RPL/2;RTL/2;RTSL;Ruby;Rubylog;Run BASIC;Rust;S BASIC;S-lang;Sage;Salmon;SAS;SASL;Sass/SCSS;Sather;Scala;Scheme;Scilab;Scratch;Script Basic;Script3D;ScriptBasic;Sed;Seed7;Self;SequenceL;Set lang;SETL;Setl4;SheerPower 4GL;Shen;Shiny;Sidef;SimpleLang;SIMPOL;Simula;Sinc.ZX81 BASIC;Sisal;SkookumScript;Slate;Smalltalk;Smart BASIC;SMEQL;SmileBASIC;Snobol;SNOBOL4;SNUSP;Soar;SoneKing Assembly;SPAD;SPARC Assembly;SPARK;Sparkling;Spin;SPL;SQL;SQL PL;Squirrel;SSEM;Standard ML;Star;Stata;StreamIt;Suneido;Superbase BASIC;SuperCollider;Supernova;SuperTalk;Swift;Symsyn;SystemVerilog;TAL;Tbas;Tcl;TechBASIC;Teco;TeLa;Terra;TestML;Thistle;Thyrd;TI-83 BASIC;TI-83 Hex Assembly;TI-89 BASIC;TIScript;ToffeeScript;Toka;TorqueScript;TPP;Transact-SQL;` TransFORTH;Trith;True BASIC;TSE SAL;Turing;TUSCRIPT;Twelf;TXR;TypeScript;UC++;Unicon;Uniface;UNIX Shell;UnixPipes;Unlambda;Ursa;Ursala;UScript;UserRPL;UTFool;V;Vala;VAX Assembly;' VB6;' VBA;VBScript;Vedit macro language;Verbexx;Verilog;VHDL;Vim Script;Visual Basic;Visual Basic .NET;Visual FoxPro;Visual Objects;Visual Prolog;Viua VM assembly;Vorpal;Vox;VRML;Wart;WDTE;WebAssembly;Whenever;Whitespace;WML;Wolfram Language;Wollok;Wortel;Wrapl;Wren;X10;X86 64 Assembly;X86 Assembly;Xanadu;XBase;XEec;XL;XLISP;Xojo;XPath 2.0;XPL0;XProc;XQuery;XS;XSLT;XSLT 1.0;XSLT 2.0;XTalk;XUL;Ya;Yabasic;Yacas;Yorick;Z80 Assembly;ZED;Zig;Zkl;Zonnon;ZPL;ZX Spectrum Basic

GraphicsWindow.Title="Programing/scripting Languages

lng=LDText.Split(ll ";")

For f=1 To Array.GetItemCount(lng)

  If Text.IsSubText(text.ConvertToLowerCase( lng[f]) ".net") Then

    lng[f]=". "+lng[f]

  ElseIf Text.IsSubText(text.ConvertToLowerCase( lng[f]) "basic") Then

    lng[f]="' "+lng[f]

  ElseIf Text.IsSubText(text.ConvertToLowerCase( lng[f]) "sql") Then

    lng[f]="_ "+lng[f]

  ElseIf Text.IsSubText(text.ConvertToLowerCase( lng[f]) "script") Then

    lng[f]="$ "+lng[f]

  ElseIf Text.IsSubText(text.ConvertToLowerCase( lng[f]) "assemb") Then

    lng[f]="~ "+lng[f]

  ElseIf Text.IsSubText(text.ConvertToLowerCase( lng[f]) "pascal") Then

    lng[f]="> "+lng[f]

  ElseIf Text.IsSubText(text.ConvertToLowerCase( lng[f]) "prolog") Then

    lng[f]="[ "+lng[f]

  ElseIf Text.IsSubText(text.ConvertToLowerCase( lng[f]) "logo") Then

    lng[f]="+ "+lng[f]

  ElseIf Text.IsSubText(text.ConvertToLowerCase( lng[f]) "lisp") Then

    lng[f]="] "+lng[f]

  ElseIf Text.IsSubText(text.ConvertToLowerCase( lng[f]) "dos") Then

    lng[f]="# "+lng[f]

  ElseIf Text.StartsWith(lng[f] "{") or Text.StartsWith(lng[f] "'") Then

    'nix

  ElseIf Text.GetLength(lng[f])=3 Then

    lng[f]=") "+lng[f]

  ElseIf Text.GetLength(lng[f])<=2 Then

    lng[f]="( "+lng[f]

    ElseIf Text.GetLength(lng[f])=4 or Text.GetLength(lng[f])=5 Then

    

    lng[f]="| "+lng[f]

  ElseIf Text.GetLength(lng[f])>13 Then

    lng[f]="zz "+lng[f]

  EndIf

EndFor

'lng=LDText.Replace(lng "Basic" "bsc")

'lng=LDText.Replace(lng "BASIC" "bsc")

lng=LDText.Replace(lng "Script" "scr.")

lng=LDText.Replace(lng "Assembly" "asm.")

lng=LDText.Replace(lng "assembler" "asm.")

'lng=LDText.Replace(lng "Pascal" "Ps$")

ls=LDList.CreateFromValues(lng)

LDList.SortByText(ls)

GraphicsWindow.FontSize=10

GraphicsWindow.FontName="lucida console

GraphicsWindow.FontBold="false

GraphicsWindow.Width=1300

GraphicsWindow.Height=720

GraphicsWindow.Left=5

GraphicsWindow.Top=5

GraphicsWindow.BackgroundColor="tan

GraphicsWindow.BrushColor="darkblue

aa=LDList.ToArray(ls)

for f=1 to Array.GetItemCount(aa)

  if text.IsSubText("[]~><()%$}|#'._+`" text.GetSubText(aa[f] 1 1)) then

    aa[f]=Text.GetSubTextToEnd(aa[f] 3)

    elseif Text.StartsWith(aa[f] "{") Then

    aa[f]=Text.GetSubTextToEnd(aa[f] 2)

        elseif Text.StartsWith(aa[f] "zz ") Then

    aa[f]=Text.GetSubTextToEnd(aa[f] 4)

  EndIf

EndFor



l68=70

For n=0 To 10

  b=""

  For x=1 To l68

    b=b+aa[x+n*l68]+Text.GetCharacter(10)

  EndFor

  GraphicsWindow.DrawBoundText(n*120+5 2 112 b)

EndFor


