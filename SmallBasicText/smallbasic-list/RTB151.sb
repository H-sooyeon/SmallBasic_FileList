'Non trigonometrical constrained turtle

'Code by Stendec 20/2/09

'Change the turtle speed to 9 or less to follow what is happening.

'The normal line colour is Red

'The reflected part of a line is Blue



'X = x position

'Y = y position

'moveX = Amout to move in x direction

'moveY = Amount to move in y direction

'overhangX = x movement beyond boundary

'overhangY = y movement beyond boundary



Turtle.Show()

Turtle.Speed = 10

X = 200

Y = 200

For i = 0 To 1000

  GraphicsWindow.PenColor = "Red"

  moveX = 201 - Math.GetRandomNumber(401) 'Allows for random starting at 1 not 0

  moveY = 201 - Math.GetRandomNumber(401)

Process:

  overhangX = 0

  overhangY = 0



  If (X + moveX) > GraphicsWindow.Width Then  'Too far right

    overhangX = X + moveX - GraphicsWindow.Width  'overhang

    moveX = GraphicsWindow.Width - X

    If (moveX + overhangX) > 0 Then

      overhangY = -(moveY - moveY * moveX / (moveX + overhangX))

      moveY = moveY * moveX / (moveX + overhangX)

    EndIf  

  EndIf

  If (X + moveX) < 0 Then 'Too far left

    overhangX = X + moveX  'overhang 

    moveX = -X

    If (moveX + overhangX) < 0 Then

      overhangY = -(moveY - moveY * moveX / (moveX + overhangX))

      moveY = moveY * moveX / (moveX + overhangX)

    EndIf

  EndIf

  If (Y + moveY) > GraphicsWindow.Height Then 'Too far down

    overhangY = Y + moveY - GraphicsWindow.Height  'overhang 

    moveY = GraphicsWindow.Height - Y

    If (moveY + overhangY) > 0 Then

      overhangX = -(moveX - moveX * moveY / (moveY + overhangY))

      moveX = moveX * moveY / (moveY + overhangY)

    EndIf

  EndIf

  If (Y + moveY) < 0 Then 'Too far up

    overhangY = Y + moveY 'overhang 

    moveY = -Y

    If (moveY + overhangY) < 0 Then

      overhangX = -(moveX - moveX * moveY / (moveY + overhangY))

      moveX = moveX * moveY / (moveY + overhangY)

    EndIf

  EndIf

  X = X + moveX

  Y = Y + moveY

'  GraphicsWindow.PenColor = "Red"

  Turtle.MoveTo(X,Y)

  'If not all the movement has been used up, repeat the processing until it has

  If (overhangX <> 0) Or (overhangY <> 0) Then

    moveX = -overhangX

    moveY = -overhangY

    GraphicsWindow.PenColor = "Blue"

    Goto Process

  EndIf

EndFor



  


