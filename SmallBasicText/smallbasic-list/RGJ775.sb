'Drag_Bar Initializing'

Drag_bar_init["value"] = 50

Drag_bar_init["width"] = 100

Drag_bar_init["height"] = 10

Drag_bar_init["top"] = 10

Drag_bar_init["left"] = 10

Drag_bar_init["slider_color"] = "Red"

Drag_bar_init["bar_color"] = "Black"

'Do not Change the arrays below'

Dragbar["up"] = 0 '<-- Do not change'

Drag_bar_init["value2"] = 50'<-- Do not change'

Drag_bar_init["minimum"] = 0'<-- Do not change'

Drag_bar_init["maximum"] = 100'<-- Do not change'

'End Drag_Bar Initializing'



'GraphicsWindow Initializing'

GraphicsWindow.Show()

GraphicsWindow.Height = 200

GraphicsWindow.Width = 500

'End GraphicsWindow Initializing'



'Drag_Bar Output'

'This wil be the value of the Drag_bar'

Dragbar["output"] = Dragbar["output"]

'End Drag_Bar Output'



'Building the Drag-Bar'

Sub install

Dragbar["temp_color"] = GraphicsWindow.PenColor 

GraphicsWindow.PenColor = Drag_bar_init["slider_color"]

Dragbar["Ole1"] = Shapes.AddLine(Drag_bar_init["left"]+Drag_bar_init["value"],Drag_bar_init["top"]+Drag_bar_init["Height"]/10,Drag_bar_init["left"]+Drag_bar_init["value"],Drag_bar_init["top"]+Drag_bar_init["height"]-Drag_bar_init["Height"]/10)

GraphicsWindow.PenColor = Drag_bar_init["bar_color"]

Dragbar["Ole2"] = Shapes.AddLine(Drag_bar_init["left"],Drag_bar_init["top"]+Drag_bar_init["height"]/2,Drag_bar_init["left"]+Drag_bar_init["width"],Drag_bar_init["top"]+Drag_bar_init["height"]/2)

Dragbar["Ole3"] = Shapes.AddLine(Drag_bar_init["left"],Drag_bar_init["top"],Drag_bar_init["left"],Drag_bar_init["top"]+Drag_bar_init["height"])

Dragbar["Ole4"] = Shapes.AddLine(Drag_bar_init["left"]+Drag_bar_init["width"],Drag_bar_init["top"],Drag_bar_init["left"]+Drag_bar_init["width"],Drag_bar_init["top"]+Drag_bar_init["height"])

GraphicsWindow.PenColor = Dragbar["temp_color"]

Endsub

'End Building the Drag-Bar'





Sub down

  if(GraphicsWindow.MouseX > Drag_bar_init["value"]+Drag_bar_init["left"] -5) And (GraphicsWindow.MouseX < Drag_bar_init["value"]+Drag_bar_init["left"] +5) And (graphicswindow.MouseY > Drag_bar_init["top"]) And (graphicswindow.MouseY < Drag_bar_init["top"] + Drag_bar_init["Height"])  then

    Drag_bar_init["up"] = 1

  endif

  EndSub



Sub up

  Drag_bar_init["up"] = 0

  EndSub

  

  Sub move

    If(Drag_bar_init["up"] = 1) And (GraphicsWindow.MouseX > Drag_bar_init["left"]) And (GraphicsWindow.MouseX < Drag_bar_init["left"] + Drag_bar_init["width"]) then

      Drag_bar_init["value"] = GraphicsWindow.MouseX - Drag_bar_init["left"]

    endif

    

    If(Drag_bar_init["up"] = 1) And (GraphicsWindow.MouseX > Drag_bar_init["left"] + Drag_bar_init["width"] ) Then

      Drag_bar_init["value"] = Drag_bar_init["maximum"]

    endif

    

    If(Drag_bar_init["up"] = 1) And (GraphicsWindow.MouseX < Drag_bar_init["left"]) Then

      Drag_bar_init["value"] = Drag_bar_init["minimum"]

    endif

    

    Shapes.Move(Dragbar["Ole1"],Drag_bar_init["value"]-Drag_bar_init["value2"],0)

      EndSub







'SAMPLE CODE pres 5F to test this code'



GraphicsWindow.MouseDown = mousedown

GraphicsWindow.MouseUp = mouseup

GraphicsWindow.MouseMove = mousemove

install()



Sub mousedown

  down()

  

  'Your code for Mouse Down'

EndSub



  Sub mouseup

    up()

    

   'Your code for Mouse Up'

 EndSub

 

   Sub mousemove

     move()

     

   'Your code  for Mouse Move'

 EndSub

 

 'Output wil be:' "Drag_bar_init["value"]"

 'Can be used like this:'

 

 '(Make this code under work to see sample of'

 

 'While "True" 'This is a loop'

  'textwindow.WriteLine(Drag_bar_init["value"])

 'EndWhile

 

 


