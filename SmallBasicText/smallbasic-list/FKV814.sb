'Setup window
gw = 800
gh = 600
GraphicsWindow.Width = gw
GraphicsWindow.Height = gh
gw = gw+20 'Some funnies if we don't make these bigger than window?
gh = gh+20
GraphicsWindow.Top = 8
GraphicsWindow.Left = 8
GraphicsWindow.Title = "Shadows"
'GraphicsWindow.CanResize = "False"
GraphicsWindow.BackgroundColor = "Silver"

'Setup box and sun
GraphicsWindow.PenWidth = 0
GraphicsWindow.BrushColor = "Orange"
Srad = 10
sun = Shapes.AddEllipse(2*Srad,2*Srad)
Sx = 100
Sy = 100
SxLast = 0
SyLast = 0
For i = 1 to 2
  Brad[i] = 25
  GraphicsWindow.BrushColor = "Blue"
  box[i] = Shapes.AddRectangle(2*Brad[i],2*Brad[i])
  Bx[i] = gw/2+i*100
  By[i] = gh/2
  BxLast[i] = 0
  ByLast[i] = 0
  Left[i] = 0
  Right[i] = 0
  Up[i] = 0
  Down[i] = 0
endfor

'Setup events
GraphicsWindow.MouseMove = OnMouseMove
GraphicsWindow.KeyDown = OnKeyDown
GraphicsWindow.KeyUp = OnKeyUp

'Main loop
While ("True")
  UpdateShapes()
  UpdateShadow()
  Program.Delay(20)
EndWhile

'Update Sun and Box
Sub UpdateShapes
  For i = 1 to 2
    If (Left[i] = 1) Then
      Bx[i] = Bx[i]-1
      If (Bx[i] < 0) Then
        Bx[i] = 0
      EndIf
    EndIf
    If (Right[i] = 1) Then
      Bx[i] = Bx[i]+1
      If (Bx[i] > gw) Then
        Bx[i] = gw
      EndIf
    EndIf
    If (Up[i] = 1) Then
      By[i] = By[i]-1
      If (By[i] < 0) Then
        By[i] = 0
      EndIf
    EndIf
    If (Down[i] = 1) Then
      By[i] = By[i]+1
      If (By[i] > gh) Then
        By[i] = gh
      EndIf
    EndIf
    Shapes.Move(box[i],Bx[i]-Brad[i],By[i]-Brad[i])
  endfor
  Shapes.Move(sun,Sx-Srad,Sy-Srad)
EndSub

Sub UpdateShadow
  Change = 0
  For i = 1 to 2
    If (Sx <> SxLast Or Sy <> SyLast Or Bx[i] <> BxLast[i] Or By[i] <> ByLast[i]) Then
      Change = 1
    Endif
  EndFor
  If (Change = 1) Then
    GraphicsWindow.BrushColor = GraphicsWindow.BackgroundColor
    GraphicsWindow.FillRectangle(0,0,gw,gh)
    For i = 1 to 2
      SxLast = Sx
      SyLast = Sy
      BxLast[i] = Bx[i]
      ByLast[i] = By[i]
      'Vector from sun to box centre
      Vx[i] = Bx[i]-Sx
      Vy[i] = By[i]-Sy
      'Locate sun in possible segments
      'Set the box corner coordinates to use and the face to draw shadow to
      If (Math.Abs(Vx[i]) < Brad[i] And Math.Abs(Vy[i]) < Brad[i]) Then
        'Sun inside box
        Face[i] = "None"
      ElseIf (Math.Abs(Vx[i]) < Brad[i] And Vy[i] > 0) Then
        'Sun above box
        C1x[i] = Bx[i]-Brad[i]
        C1y[i] = By[i]-Brad[i]
        C2x[i] = Bx[i]+Brad[i]
        C2y[i] = By[i]-Brad[i]
        Face[i] = "Bottom"
      ElseIf (Math.Abs(Vx[i]) < Brad[i] And Vy[i] < 0) Then
        'Sun below box
        C1x[i] = Bx[i]-Brad[i]
        C1y[i] = By[i]+Brad[i]
        C2x[i] = Bx[i]+Brad[i]
        C2y[i] = By[i]+Brad[i]
        Face[i] = "Top"
      ElseIf (Math.Abs(Vy[i]) < Brad[i] And Vx[i] > 0) Then
        'Sun left of box
        C1x[i] = Bx[i]-Brad[i]
        C1y[i] = By[i]-Brad[i]
        C2x[i] = Bx[i]-Brad[i]
        C2y[i] = By[i]+Brad[i]
        Face[i] = "Right"
      ElseIf (Math.Abs(Vy[i]) < Brad[i] And Vx[i] < 0) Then
        'Sun right of box
        C1x[i] = Bx[i]+Brad[i]
        C1y[i] = By[i]-Brad[i]
        C2x[i] = Bx[i]+Brad[i]
        C2y[i] = By[i]+Brad[i]
        Face[i] = "Left"
      ElseIf (Vx[i] < 0 And Vy[i] < 0) Then
        'Sun bottom right
        C1x[i] = Bx[i]-Brad[i]
        C1y[i] = By[i]+Brad[i]
        C2x[i] = Bx[i]+Brad[i]
        C2y[i] = By[i]-Brad[i]
        Face[i] = "Top"
      ElseIf (Vx[i] > 0 And Vy[i] < 0) Then
        'Sun bottom left
        C1x[i] = Bx[i]-Brad[i]
        C1y[i] = By[i]-Brad[i]
        C2x[i] = Bx[i]+Brad[i]
        C2y[i] = By[i]+Brad[i]
        Face[i] = "Top"
      ElseIf (Vx[i] < 0 And Vy[i] > 0) Then
        'Sun top right
        C1x[i] = Bx[i]-Brad[i]
        C1y[i] = By[i]-Brad[i]
        C2x[i] = Bx[i]+Brad[i]
        C2y[i] = By[i]+Brad[i]
        Face[i] = "Bottom"
      ElseIf (Vx[i] > 0 And Vy[i] > 0) Then
        'Sun top left
        C1x[i] = Bx[i]-Brad[i]
        C1y[i] = By[i]+Brad[i]
        C2x[i] = Bx[i]+Brad[i]
        C2y[i] = By[i]-Brad[i]
        Face[i] = "Bottom"
      EndIf
      'Set line equations
      A1[i] = (Sy-C1y[i])/(Sx-C1x[i])
      B1[i] = Sy-A1[i]*Sx
      A2[i] = (Sy-C2y[i])/(Sx-C2x[i])
      B2[i] = Sy-A2[i]*Sx
      'Intersections with boundary
      If (Face[i] = "Top") Then
        D1y[i] = 0
        D1x[i] = (D1y[i]-B1[i])/A1[i]
        D2y[i] = 0
        D2x[i] = (D2y[i]-B2[i])/A2[i]
      ElseIf (Face[i] = "Bottom") Then
        D1y[i] = gh
        D1x[i] = (D1y[i]-B1[i])/A1[i]
        D2y[i] = gh
        D2x[i] = (D2y[i]-B2[i])/A2[i]
      ElseIf (Face[i] = "Left") Then
        D1x[i] = 0
        D1y[i] = A1[i]*D1x[i]+B1[i]
        D2x[i] = 0
        D2y[i] = A2[i]*D2x[i]+B2[i]
      ElseIf (Face[i] = "Right") Then
        D1x[i] = gw
        D1y[i] = A1[i]*D1x[i]+B1[i]
        D2x[i] = gw
        D2y[i] = A2[i]*D2x[i]+B2[i]
      ElseIf (Face[i] = "None") Then
        D1x[i] = Bx[i]
        D1y[i] = By[i]
        D2x[i] = Bx[i]
        D2y[i] = By[i]
      EndIf
      GraphicsWindow.BrushColor = "Gray"
      GraphicsWindow.FillTriangle(C1x[i],C1y[i],C2x[i],C2y[i],D1x[i],D1y[i])
      GraphicsWindow.FillTriangle(C2x[i],C2y[i],D1x[i],D1y[i],D2x[i],D2y[i])
    endfor
  endif
EndSub

'Event control
Sub OnMouseMove
  'The small added terms prevent Sx=Bx etc
  Sx = GraphicsWindow.MouseX+0.001
  Sy = GraphicsWindow.MouseY+0.001
EndSub

Sub OnKeyDown
  key = GraphicsWindow.LastKey
  If (key = "Left") Then
    Left[1] = 1
  ElseIf (key = "Right") Then
    Right[1] = 1
  ElseIf (key = "Up") Then
    Up[1] = 1
  ElseIf (key = "Down") Then
    Down[1] = 1
  ElseIf (key = "A") Then
    Left[2] = 1
  ElseIf (key = "D") Then
    Right[2] = 1
  ElseIf (key = "W") Then
    Up[2] = 1
  ElseIf (key = "X") Then
    Down[2] = 1
  EndIf
EndSub

Sub OnKeyUp
  key = GraphicsWindow.LastKey
  If (key = "Left") Then
    Left[1] = 0
  ElseIf (key = "Right") Then
    Right[1] = 0
  ElseIf (key = "Up") Then
    Up[1] = 0
  ElseIf (key = "Down") Then
    Down[1] = 0
  ElseIf (key = "A") Then
    Left[2] = 0
  ElseIf (key = "D") Then
    Right[2] = 0
  ElseIf (key = "W") Then
    Up[2] = 0
  ElseIf (key = "X") Then
    Down[2] = 0
  EndIf
EndSub






