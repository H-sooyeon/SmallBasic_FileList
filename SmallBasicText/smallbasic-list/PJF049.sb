'Maze Prototype -- Completments codingCat aka Matthew L. Parets -- No rights reserved as long as no money is earned

'Draws a simple maze and allows user to move a shape arround with the arrow

'keys without leaving the maze. Reacts to prizes found



'Define the bounds of the Maze

'This is a simple 2x2 maze to simply show how a maze is maintained.

'Row 0 ----------------------------------

maze[0][0] = "Wall"  'Row 0 is outside of the maze and is all walls

maze[0][1] = "Wall"  

maze[0][2] = "Wall"

maze[0][3] = "Wall"

'Row 1 ----------------------------------

maze[1][0] = "Wall"  'Row 1, column 0 is outside of the maze and is a wall

maze[1][1] = ""      'Row 1, is empty

maze[1][2] = ""

maze[1][3] = "Wall"  'Row 1, column 3 is outside of the maze and is a wall

'Row 2 ----------------------------------

maze[2][0] = "Wall"  'Row 2, column 0 is outside of the maze and is a wall

maze[2][1] = ""      'Row 2, column 1 is empty

maze[2][2] = "Prize" 'Row 2, column 2 contains a prize

maze[2][3] = "Wall"  'Row 2, column 3 is outside of the maze and is a wall

'Row 3 ----------------------------------

maze[3][0] = "Wall"  'Row 3 is outside of the maze and is all walls

maze[3][1] = "Wall"

maze[3][2] = "Wall"

maze[3][3] = "Wall"





'Draw the Maze

GraphicsWindow.BrushColor = "black"

For row = 0 To 3    'For each row

  For col = 0 To 3  'for each column

    If maze[row][col] = "Wall" Then

      GraphicsWindow.FillRectangle(col * 50, row * 50, 45, 45)

    Else

      GraphicsWindow.drawRectangle(col * 50, row * 50, 45, 45)

    EndIf

  EndFor

EndFor



'Fill the maze with prizes

GraphicsWindow.BrushColor = "green"

For row = 0 To 3    'For each row

  For col = 0 To 3  'for each column

    If maze[row][col] = "Prize" Then

      GraphicsWindow.FillTriangle(col * 50, (row * 50) + 45, (col * 50) + 45, (row * 50) + 45, (col * 50) + 25, row * 50)

    EndIf

  EndFor

EndFor



'Players starting location

pRow = 1

pCol = 1

'Create the player

GraphicsWindow.BrushColor = "blue"

player = Shapes.AddEllipse(45,45)

'place the player at the starting location

Shapes.Move(player, pCol * 50, pRow * 50)



'Enable the key event

GraphicsWindow.KeyDown = whenKeyPressed



'--------------------------------------

'End of main program

'Program sits idle while waiting for events

'--------------------------------------





'--------------------------------------

'Events and Subroutines

'--------------------------------------



'--------------------------------------

'Auto lunched when a key is pressed

Sub whenKeyPressed

  key = GraphicsWindow.LastKey  'Get the key pressed

  If key = "Left" Then          'If it was the left key

    If maze[pRow][pCol-1] <> "Wall" Then  'Check for a wall

      pCol = pCol - 1           'If no wall, move the player

    EndIf

  elseIf key = "Right" Then

    If maze[pRow][pCol+1] <> "Wall" Then

      pCol = pCol + 1

    EndIf

  ElseIf key = "Down" Then

    If maze[pRow+1][pCol] <> "Wall" Then

      pRow = pRow + 1

    EndIf

  ElseIf key = "Up" Then

    If maze[pRow-1][pCol] <> "Wall" Then

      pRow = pRow - 1

    EndIf

  EndIf

  

  'Move the player shape to the new location

  Shapes.Move(player,pCol*50,pRow*50)

  

  'check the current location for prizes 

  CheckForPrizes()

EndSub



'--------------------------------------

'Check the current player location

'for prizes. If found clear the space

Sub CheckForPrizes

  If maze[pRow][pCol] = "Prize" Then  'Check the current location in the maze

    GraphicsWindow.Title = "Prize Awarded"  'Let the player know

    GraphicsWindow.BrushColor = "white"     'Clear prize from the block

    GraphicsWindow.FillRectangle(pRow * 50, pCol * 50, 45, 45)

    GraphicsWindow.drawRectangle(pRow * 50, pCol * 50, 45, 45)

    EndIf

EndSub




