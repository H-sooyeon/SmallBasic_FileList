GraphicsWindow.BackgroundColor="darkblue

GraphicsWindow.BrushColor="white

GraphicsWindow.FontSize=333

GraphicsWindow.FontName="gabriola

GraphicsWindow.FontBold="false

GraphicsWindow.FontItalic="true

Turtle.Show ()

GraphicsWindow.Clear ()

clr="white

fnt[1]="gabriola

fnt[2]=155

fnt[3]="false

fnt[4]="true

GraphicsWindow .drawText (150, -50 "Q")

GraphicsWindow.BrushColor="darkblue

GraphicsWindow.FillEllipse (235 267 60 30)

LDUtilities.ShowNoShapeErrors="false



GraphicsWindow.MouseMove=mmm

GraphicsWindow.Width=1200

GraphicsWindow.Height=800

GraphicsWindow.Left=10

GraphicsWindow.Top=10

args=0

Sub mmm

  GraphicsWindow.Title=GraphicsWindow.MouseX +" : "+GraphicsWindow.MouseY 

EndSub 

r7=13

pi=1

o=1

a25=25



Turtle.x=525

Turtle.y=125

ta=0

Turtle.PenUp ()





While GraphicsWindow .GetPixel (Turtle.X Turtle.y)<>"#FFFFFF

  Turtle.x=turtle.x-1

EndWhile 

ty=turtle.y

Tx=turtle.x+2

TAngle=0

' Turtle.Pendown ()

GraphicsWindow.PenWidth=5

GraphicsWindow.PenColor="white

For r=1 To 3330

  

  GraphicsWindow.Title =r

  For a=tAngle  To  tAngle - 360 Step -2

    pp=GraphicsWindow .GetPixel (LDMath.Cos(a-90)*r7+TX LDMath.sin(a-90)*r7+Ty)

    'TextWindow.WriteLine (pp)

    If LDColours.GetLightness (pp)>.5 Then 

      TAngle =a+a25

      'ta[r]=a

      ox=tx

      oy=ty

      GraphicsWindow.penColor=LDColours.HSLtoRGB (math.Remainder (r/10 360) 1 .6)

      ldcall.Function ("TMove" 4)

      ee=Shapes.AddEllipse (8 8)

      shapes.move(ee tx-4 ty-4)

      LDShapes.AnimateOpacity(ee 750 10)

      ldcall.Function ("TMove", -1)

      Goto xx

    EndIf

  endfor  

  xx:

EndFor 





Sub tmove

  mm=LDMath.Convert2Cartesian (tx ty args[1] TAngle-90)

  tx=mm[1]

  ty=mm[2]

endsub


