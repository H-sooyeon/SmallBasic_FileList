cogRadius = 100

cogNumTeeth = 10

cogToothSize = 10

cog = Shapes.AddEllipse(2*cogRadius,2*cogRadius)

LDPhysics.AddMovingShape(cog,0.5,0.8,1)



For i = 1 To cogNumTeeth

  angle = (i-1)/cogNumTeeth*2*Math.Pi

  innerSector = 0.7/cogNumTeeth*2*Math.Pi

  outerSector = 0.5/cogNumTeeth*2*Math.Pi

  points[1]["X"] = cogRadius+cogRadius*Math.Cos(angle)

  points[1]["Y"] = cogRadius+cogRadius*Math.Sin(angle)

  points[4]["X"] = cogRadius+(cogRadius+cogToothSize)*Math.Cos(angle+innerSector-outerSector)

  points[4]["Y"] = cogRadius+(cogRadius+cogToothSize)*Math.Sin(angle+innerSector-outerSector)

  points[3]["X"] = cogRadius+(cogRadius+cogToothSize)*Math.Cos(angle+outerSector)

  points[3]["Y"] = cogRadius+(cogRadius+cogToothSize)*Math.Sin(angle+outerSector)

  points[2]["X"] = cogRadius+cogRadius*Math.Cos(angle+innerSector)

  points[2]["Y"] = cogRadius+cogRadius*Math.Sin(angle+innerSector)

  tooth = LDShapes.AddPolygon(points)

  LDPhysics.AddMovingShape(tooth,0.5,0.8,1)

  LDPhysics.GroupShapes(cog,tooth)

EndFor

LDPhysics.SetPosition(cog,200,200,0)

LDPhysics.SetTorque(cog,100*LDPhysics.GetInertia(cog))

Program.Delay(1000)



While ("True")

  LDPhysics.DoTimestep()

  Program.Delay(20)

EndWhile


