'
' bell.sb
' Ron Hudson
' This program throws dice to plot the standard distribution
' bell curve.

n = 1
While (n = 1)
  
  ' clear the frequency array
  For i = 1 To 100
    f[i] = 0
  EndFor
  
  
  
  maxd = 0      ' the maximum dice frequency
  mind = 100    ' the minimum dice frequency
  dsum = 0      ' the sum of the dice frequencies
  sumsq = 0     ' the sum of the squares of the dice frequencies
  sc = 0        ' count the number of experiments
  g = 1         ' g is a while flag
  While (g = 1)
    '
    ' Carry out ten probability experiments
    ' wherein the number of 6s  is counted from a 
    ' sample of 100 random numbers range 1-6
    ' repeat this experiment 10 times
    For exp = 1 To 10
      d = 0
      For i = 1 To 100
        r = Math.GetRandomNumber(8)
        If r = 6 Then
          d = d + 1
        endif
      endfor
      
      '
      ' Update the number of experiments run
      sc = sc + 1 
      
      ' fill the frequency array
      f[d] = f[d] + .01
      
      ' note the maximum or minimum 
      maxd = Math.Max(maxd,d)
      mind = Math.Min(mind,d)
      
      ' sum the current number of 6s
      dsum = dsum + d
      sumsq = sumsq + Math.Power(d,2)
      
      
      ' if at any time one of the frequencies 
      ' exceeds 99 (the y limit of our plotter)
      ' stop experiments and plot results
      If f[d] >= 99 Then
        g = 0
      endif
      
      '
      ' which of the frequencies is currently the
      ' highest? (what is the mode of the
      ' 6s per hundred throws)
      find = 0
      maxv = 0
      For i = mind to maxd
        If f[i] > maxv Then
          find = i
          maxv = f[i]
        endif
      EndFor
    endfor
    
    
    
    '
    ' find the current size of the graphics window
    ' note: the graphic window can be resized between experiments
    GraphicsWindow.Show()
    GraphicsWindow.BackgroundColor = GraphicsWindow.GetColorFromRGB(0,0,0)
    GraphicsWindow.PenColor = GraphicsWindow.GetColorFromRGB(255,255,0)
    winx = GraphicsWindow.Width
    winy = GraphicsWindow.Height
    
    '
    ' Draw the current curve
    GraphicsWindow.Clear()
    ox = 0 
    oy = winy - (f[mind] / 100 * winy)
    For i = mind To maxd
      x = (i - mind) / (maxd - mind) * winx 
      y = winy - (f[i]/100*winy)
      GraphicsWindow.DrawLine(ox,oy,x,y)
      ox = x
      oy = y
    endfor
    
    ' draw an x axis
    For i = mind To maxd
      x = (i - mind) / (maxd - mind) * winx
      GraphicsWindow.PenColor = GraphicsWindow.GetColorFromRGB(40,40,40)
      GraphicsWindow.DrawLine(x,winy,x,winy - 10)
      GraphicsWindow.DrawText(x,winy - 30,i)
      
    EndFor
    
    
    '
    ' Draw the artificial average line
    x = (((maxd + mind) / 2) - mind) / (maxd - mind) * winx
    GraphicsWindow.PenColor = GraphicsWindow.GetColorFromRGB(0,0,255)
    GraphicsWindow.DrawLine(x,0,x,winy)
    
    '
    ' Draw the Computed Average Line
    x = (cavg - mind) / (maxd - mind) * winx
    GraphicsWindow.PenColor = GraphicsWindow.GetColorFromRGB(255,0,0)
    GraphicsWindow.DrawLine(x,0,x,winy)
    
    '
    ' Draw the Mode Line
    x = (find - mind) / (maxd - mind) * winx
    GraphicsWindow.PenColor = GraphicsWindow.GetColorFromRGB(0,255,0)
    GraphicsWindow.DrawLine(x,0,x,winy)
    
    '
    ' display interesting numbers
    TextWindow.Clear()
    TextWindow.ForegroundColor = "White"
    TextWindow.WriteLine("Interesting Numbers")
    TextWindow.WriteLine("           Min D:" + mind)
    TextWindow.WriteLine("           Max D:" + maxd)
    TextWindow.WriteLine("               n:" + sc)
    TextWindow.ForegroundColor = "Blue"
    TextWindow.WriteLine("           Avg D:" + ((maxd + mind) /2 ))   
    cavg = dsum / sc
    TextWindow.ForegroundColor = "Red"
    TextWindow.WriteLine("Computed Average:" + math.round(cavg*1000)/1000)
    TextWindow.ForegroundColor = "green"
    TextWindow.WriteLine("            Mode:" + find)
    TextWindow.ForegroundColor = "white"
    stddev = Math.SquareRoot((sumsq - (Math.Power(dsum,2)/sc))/(sc-1))
    TextWindow.WriteLine("         Std Dev:" + Math.Round(stddev*1000)/1000)
    
    
  EndWhile
  
  TextWindow.Write("Run again? y/n")
  resp = TextWindow.Read()
  If resp = "n" Then
    n = 0
    GraphicsWindow.Hide()
    TextWindow.Hide()
  endif
  
EndWhile


