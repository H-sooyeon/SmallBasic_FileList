ee=Shapes.AddEllipse (10 10)

pp=shapes.AddRectangle (30 30)

ll11=shapes.AddRectangle (90 20)

ll1=shapes.AddRectangle (90 20)

ll2=shapes.AddRectangle (400 20)

ll22=shapes.AddRectangle (400 20)

ll3=shapes.AddRectangle (60 10)

GraphicsWindow.BrushColor ="white

GraphicsWindow.PenWidth=0

rr=shapes.AddEllipse  (10 10)

GraphicsWindow.BackgroundColor ="teal

GraphicsWindow.Width=600

GraphicsWindow.Height =380

LDPhysics.Reset ()

dd=200

w=30+dd

Shapes.Move (ee 90 90+dd)

Shapes.Move (ll1 180 52+w)

Shapes.Move (ll2 180 102+w)

Shapes.Move (ll22 300 52+w)



Shapes.Move (pp 180 71+w)

Shapes.Move (ll3 125 80+w)

LDPhysics.SetGravity (0 110)

LDPhysics.AddFixedShape (ll11 0 0)

LDPhysics.SetPosition (ll11 580 400, -45)

LDPhysics.AddFixedShape (ll1 0 0)

LDPhysics.AddFixedShape (ll2 0 0)

LDPhysics.AddFixedShape (ll22 0 0)

LDPhysics.AddMovingShape(pp 0 0 1)

LDPhysics.AddMovingShape(ll3 0 0 1)

LDPhysics.GroupShapes (ll3 pp)

LDPhysics.AddMovingShape (ee 0 0 1)

aa=LDPhysics.AddFixedAnchor(90+20 110+dd)

LDPhysics.AttachShapesWithRotation (aa ee) 

LDPhysics.AddMovingShape (rr 0 0 1)

mm=LDPhysics.GetPosition (pp)

LDPhysics.SetPosition (pp mm[1]+30 mm[2], 0)

'LDPhysics.AttachShapesWithJoint  (pp ee "Distance" "True" "")

'LDPhysics.AttachShapesWithRotation (rr pp)

'LDPhysics.AttachShapesWithJoint  (rr pp "Distance" "True" "")

LDPhysics.AttachShapesWithjoint(ee,pp,"Distance",0,"")

joint = LDPhysics.AttachShapesWithJoint(aa,ee,"Revolute",0,"")

LDPhysics.SetJointMotor(joint,550,1000000000000000000000)

LDPhysics.SetPosition (rr 290 20 10)

LDPhysics.SetShapeGravity (rr 0 0)

bc=1

While "true

  cc=cc+1

  LDPhysics.DoTimestep ()

  Program.Delay (15)

  GraphicsWindow.Title =bc

  If cc>17 Then

    LDPhysics.SetShapeGravity (rr 1 100)

    bc=bc+1

    If Math.Remainder (bc 2)=0 then

    rr=shapes.AddEllipse  (10 10)

    LDPhysics.AddMovingShape (rr 0 0 1)    

    LDPhysics.SetPosition (rr 290 20 10)

    LDPhysics.SetShapeGravity (rr 0 0)

    endif

    cc=0

  EndIf

  

EndWhile 


