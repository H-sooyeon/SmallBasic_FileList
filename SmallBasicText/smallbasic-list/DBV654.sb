GraphicsWindow.Width = 600
GraphicsWindow.Height = 600

Ground = 580
segLength = 5
Segment_Amount = 15
stiffness = 1
friction = 0.95
dt = 0.5 ' we need to slow things for a stiff system (large acceleration forces when the string is stretched) or large gravity)
Gravity = 1 
Pi = Math.Pi
GraphicsWindow.PenWidth = 2

'Initial position and velocity
For i = 0 To Segment_Amount
  Joint_Velocity_X[i] = 0
  Joint_Velocity_Y[i] = 0
  Joint_Position_X[i] = 300
  Joint_Position_Y[i] = 100 + i*segLength
EndFor

While "True"
  'Clear acceleration arrays - they default to zero when used
  Joint_Acceleration_X = ""
  Joint_Acceleration_Y = ""
  
  'Accelerate first joint towards mouse
  Joint_Acceleration_X[0] = GraphicsWindow.MouseX- Joint_Position_X[0]
  Joint_Acceleration_Y[0] = GraphicsWindow.MouseY- Joint_Position_Y[0]
  
  For i = 1 To Segment_Amount
    'Segment separation and angle
    u = Joint_Position_X[i-1] - Joint_Position_X[i]
    v = Joint_Position_Y[i-1] - Joint_Position_Y[i]
    uv = Math.SquareRoot(u*u+v*v)
    If u = 0 Then
      theta = Pi/2
    Else
      theta = Math.ArcTan(v/u)
    EndIf
    If (u < 0) Then
      theta = Pi+theta
    EndIf
    'The segment will accelerate the joints at each end in the direction of the segment, according to whether it is stretched  or not beyound its natural segment length (segLength)
    accX = stiffness*(uv-segLength)*Math.Cos(theta)
    accY = stiffness*(uv-segLength)*Math.Sin(theta)
    Joint_Acceleration_X[i-1] = Joint_Acceleration_X[i-1] - accX
    Joint_Acceleration_Y[i-1] = Joint_Acceleration_Y[i-1] - accY
    Joint_Acceleration_X[i] = Joint_Acceleration_X[i] + accX
    Joint_Acceleration_Y[i] = Joint_Acceleration_Y[i] + accY
  EndFor
  
  'Update all the jount veloicities and positions once we have the accelerations (forces) calculated above
  'Include gravity here and quite a lot of friction
  'The system is unstable without quite a lot of friction, also stiffness or long timesteps (dt) make it unstable
  For i = 0 To Segment_Amount
    Joint_Velocity_X[i] = Joint_Velocity_X[i] + Joint_Acceleration_X[i]*dt
    Joint_Velocity_Y[i] = Joint_Velocity_Y[i] + (Joint_Acceleration_Y[i] + Gravity)*dt
    Joint_Velocity_X[i] = friction * Joint_Velocity_X[i]
    Joint_Velocity_Y[i] = friction * Joint_Velocity_Y[i]
    Joint_Position_X[i] = Joint_Position_X[i] + Joint_Velocity_X[i]*dt
    Joint_Position_Y[i] = Joint_Position_Y[i] + Joint_Velocity_Y[i]*dt
  EndFor
  
  'Display the segments from the joints connected to each
  GraphicsWindow.PenColor = "Purple"
  For i = 1 To Segment_Amount
    Shapes.Remove(Segment[i])
    Segment[i] = Shapes.AddLine(Joint_Position_X[i],Joint_Position_Y[i],Joint_Position_X[i-1],Joint_Position_Y[i-1])
  endfor
  
  GraphicsWindow.PenColor = "Gray"
  Shapes.Remove(Shadow)
  Shadow = Shapes.AddLine(Joint_Position_X[0],Ground,Joint_Position_X[Segment_Amount]+1,Ground)
  
  'Program.Delay(5)
endwhile



