' Village

' Version 0.2

' Copyright Â© 2019 Nonki Takahashi.  The MIT License.

' Program ID KRP728-0



GraphicsWindow.Title = "Village"

Init()

DrawRoad()

DrawHouse()



Sub DrawHouse

  nRow = Array.GetItemCount(map)

  yo = 10

  For k = 1 To nRow

    row = map[k]

    m = Text.GetLength(row)

    xo = 10 + (k - 1) * dx * 0.2 + (m - 1) * dx

    For j = m To 1 Step -1

      If Text.IsSubText("RGB",Text.GetSubText(row, j, 1)) Then

        For i = 1 To Array.GetItemCount(polygons)

          points = ""

          polygon = polygons[i]

          nPoints = Array.GetItemCount(polygon) - 2

          If polygon["color"] = "rc" Then

            GraphicsWindow.BrushColor = rc[Text.GetSubText(row, j, 1)]

          Else

            GraphicsWindow.BrushColor = polygon["color"]

          EndIf

          For h = 1 To nPoints

            If 1 < h Then

              points = points + " "

            EndIf

            points = points + (hx[polygon[h]] + xo)

            points = points + "," + (hy[polygon[h]] + yo)

          EndFor

          GW_FillPolygon()

        EndFor

      EndIf

      xo = xo - dx

    EndFor

    yo = yo + dy

    xo = xo + dx * 0.2

  EndFor

EndSub



Sub DrawRoad

  nRow = Array.GetItemCount(map)

  yo = 110

  For k = 1 To nRow

    row = map[k]

    m = Text.GetLength(row)

    xo = 10 + (k - 1) * dx * 0.2

    For j = 1 To m

      If Text.GetSubText(row, j, 1) = "X" Then

        GraphicsWindow.BrushColor = "Gray"

        points = ""

        For i = 1 To 4

          If 1 < i Then

            points = points + " "

          EndIf

          points = points + (rx[i] + xo)

          points = points + "," + (ry[i] + yo)

        EndFor

        GW_FillPolygon()

      EndIf

      xo = xo + dx

    EndFor

    yo = yo + dy

    xo = xo + dx * 0.2

  EndFor

EndSub



Sub Init

  gw = 1000

  gh = 300

  GraphicsWindow.Width = gw

  GraphicsWindow.Height = gh

  GraphicsWindow.BackgroundColor = "LawnGreen"

  map[1] = "     X     "

  map[2] = " R G X B G "

  map[3] = "     X     "

  map[4] = "XXXXXXXXXXX"

  map[5] = "     X   X "

  map[6] = " B R X G X "

  map[7] = "     X   X "

  map[8] = " G B X R X "

  dx = 80

  dy = 20

  rx[1] = 0

  ry[1] = 0

  rx[2] = dx * 0.2

  ry[2] = dy

  rx[3] = dx * 1.2

  ry[3] = dy

  rx[4] = dx

  ry[4] = 0

  hx[1] = dx * 0.1

  hy[1] = 0

  hx[2] = 0

  hy[2] = dy

  hx[3] = 0

  hy[3] = dy * 5

  hx[4] = dx * 0.2

  hy[4] = dy * 6

  hx[5] = dx * 0.2

  hy[5] = dy * 2

  hx[6] = dx * 1.1

  hy[6] = 0

  hx[7] = dx * 1.2

  hy[7] = dy * 2

  hx[8] = dx * 1.2

  hy[8] = dy * 6

  polygons[1] = "name=wall1;color=#DDDDAA;1=1;2=2;3=3;4=4;5=5;

  polygons[2] = "name=wall2;color=#FFFFCC;1=5;2=4;3=8;4=7;"

  polygons[3] = "name=roof;color=rc;1=1;2=5;3=7;4=6;"

  rc["R"] = "DarkRed"

  rc["G"] = "DarkGreen"

  rc["B"] = "DarkBlue"

EndSub



Sub _GetPoints

  ' param points - points text

  ' return p - points array

  ' return n - number of points

  _p = 1

  n = 0

  len = Text.GetLength(points)

  While _p <= len

    _s = Text.GetIndexOf(Text.GetSubTextToEnd(points, _p), " ")

    If 0 < _s Then

      point = Text.GetSubText(points, _p, _s - 1)

      _p = _p + _s

    Else

      point = Text.GetSubTextToEnd(points, _p)

      _p = len + 1

    EndIf

    _c = Text.GetIndexOf(point, ",")

    If 0 < _c Then

      n = n + 1

      _point["x"] = Text.GetSubText(point, 1, _c - 1)

      _point["y"] = Text.GetSubTextToEnd(point, _c + 1)

      p[n] = _point

    EndIf

  EndWhile

EndSub



Sub GW_FillPolygon

  ' GraphicsWindow | fill polygon

  ' param points - points text

  Stack.PushValue("local", i)

  _GetPoints()

  i[1] = 1

  i[2] = 2

  i[3] = 3

  a = 4

  d = n

  v = 2

  For _i = 1 To n - 2

    _p1 = p[i[1]]

    _p2 = p[i[2]]

    _p3 = p[i[3]]

    GraphicsWindow.FillTriangle(_p1["x"], _p1["y"], _p2["x"], _p2["y"], _p3["x"], _p3["y"])

    If Math.Remainder(_i, 2) = 1 Then

      i[v] = d

      d = d - 1

    Else

      i[v] = a

      a = a + 1

    EndIf

    v = v - 1

    If v < 1 Then

      v = 3

    EndIf

  EndFor

  i = Stack.PopValue("local")

EndSub


