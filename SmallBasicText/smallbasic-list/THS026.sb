' Challenge of the Month - March 2017  KUMIKO pattern -4      by NaochanON   
dL="1=30"  
Color="1=#F8E58C;2=#CA8269;"
YN=9
XN=9
GraphicsWindow.BackgroundColor="Black"
GraphicsWindow.Width=dL[1]*Math.SquareRoot(3)*(XN*2-1)
GraphicsWindow.Height=dL[1]*(2*YN-1)
For N=1 to YN
  for  M=1 to XN 
    _C="X="+(2*Math.SquareRoot(3)*dL[1]*(M-1))+";Y="+(2*dL[1]*(N-1)) 
    make_triangle()
    If Math.Remainder(N,2)=0 then 
      _C="X="+(Math.SquareRoot(3)*dL[1]*(2*M-1))+";Y="+(2*dL[1]*(N-1)) 
      make_Pentagon()
    endif
  endfor
endfor

sub make_triangle
  NMB=M+":"+N
  GraphicsWindow.BrushColor=Color[0]
  GraphicsWindow.PenWidth=4
  GraphicsWindow.PenColor=Color[1] 
  Dia[NMB][1]=Shapes.AddLine(0,-dL[1],-dL[1]*Math.SquareRoot(3),0)
  Dia[NMB][2]=Shapes.AddLine(-dL[1]*Math.SquareRoot(3),0,0,dL[1])  
  Dia[NMB][3]=Shapes.AddLine(0,dL[1],dL[1]*Math.SquareRoot(3),0)  
  Dia[NMB][4]=Shapes.AddLine(dL[1]*Math.SquareRoot(3),0,0,-dL[1])  
  For L=1 To 4
    Shapes.Animate(Dia[NMB][L],_C["X"],_C["Y"],200)
  EndFor
  Program.Delay(20)
EndSub

Sub make_Pentagon
  GraphicsWindow.PenWidth=3
  GraphicsWindow.PenColor=Color[2] 
  TNMB=NMB+":T"
  Pen[TNMB][1]=Shapes.AddLine(0,-dL[1],0,dL[1])
  Pen[TNMB][2]=Shapes.AddLine(-2/7*dL[1]*Math.SquareRoot(3),-dL[1]*3/4,0,dL[1])
  Pen[TNMB][3]=Shapes.AddLine(0,dL[1],2/7*dL[1]*Math.SquareRoot(3),-dL[1]*3/4)
  Pen[TNMB][4]=Shapes.AddLine(-dL[1]*Math.SquareRoot(3),0,0,-10/21*dL[1])
  Pen[TNMB][5]=Shapes.AddLine(0,-10/21*dL[1],dL[1]*Math.SquareRoot(3),0)
  For L=1 To 5
    Shapes.Animate(Pen[TNMB][L],_C["X"],_C["Y"]+dL[1],200)
  EndFor
  BNMB=NMB+":B"
  Pen[BNMB][1]=Shapes.AddLine(0,-dL[1],0,dL[1])
  Pen[BNMB][2]=Shapes.AddLine(-2/7*dL[1]*Math.SquareRoot(3),dL[1]*3/4,0,-dL[1])
  Pen[BNMB][3]=Shapes.AddLine(0,-dL[1],2/7*dL[1]*Math.SquareRoot(3),dL[1]*3/4)
  Pen[BNMB][4]=Shapes.AddLine(-dL[1]*Math.SquareRoot(3),0,0,10/21*dL[1])
  Pen[BNMB][5]=Shapes.AddLine(0,10/21*dL[1],dL[1]*Math.SquareRoot(3),0)
  For L=1 To 5
    Shapes.Animate(Pen[BNMB][L],_C["X"],_C["Y"]-dL[1],200)
  EndFor
  LNMB=NMB+":R"
  Pen[LNMB][1]=Shapes.AddLine(0,-dL[1],0,dL[1])
  Pen[LNMB][2]=Shapes.AddLine(0,-dL[1],-5/7*dL[1]*Math.SquareRoot(3),1/4*dL[1])
  Pen[LNMB][3]=Shapes.AddLine(0,dL[1],-5/7*dL[1]*Math.SquareRoot(3),-1/4*dL[1])
  For L=1 To 3
    Shapes.Animate(Pen[LNMB][L],_C["X"]+dL[1]*Math.SquareRoot(3),_C["Y"],200)
  EndFor
  RNMB=NMB+":L"
  Pen[RNMB][1]=Shapes.AddLine(0,-dL[1],0,dL[1])
  Pen[RNMB][2]=Shapes.AddLine(0,-dL[1],5/7*dL[1]*Math.SquareRoot(3),1/4*dL[1])
  Pen[RNMB][3]=Shapes.AddLine(0,dL[1],5/7*dL[1]*Math.SquareRoot(3),-1/4*dL[1])
  For L=1 To 3
    Shapes.Animate(Pen[RNMB][L],_C["X"]-dL[1]*Math.SquareRoot(3),_C["Y"],200)
  EndFor
EndSub

