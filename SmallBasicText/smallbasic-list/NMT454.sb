'Snipe Hunt -- 'Write the code needed to trap the snipe

' 1)  Close the trap

' 2)  if the Snipe is inside (snipe x/y match trap x/y exactly)

' 3)  without hurting the Snipe (snip x/y is anywhere inside of the traps high and width)

' Hint: much easier of you use more than one If statement nested inside each other.



Sub CheckTrap

  ' Code to be added between the green lines only (below)

  'v-------------------------------------------------------------------------------------------------------------------v

  

  

  

  

  

  

  

  

  

  

  

  

  '^--------------------------------------------------------------------------------------------------------------------^ 

  ' Code to be added between the green lines only (above)

EndSub









































































































































' Do not change any code below this line

'===================================================================

'===================================================================

GraphicsWindow.Width = 400

GraphicsWindow.Title = "Loading Graphics, Please Wait..."

GraphicsWindow.Height = 0

GraphicsWindow.Show()

snipe = Shapes.AddImage("http://i1113.photobucket.com/albums/k518/MVAPhotos/Critter.gif")

Shapes.HideShape(snipe)

trapOpen = Shapes.AddImage("http://i1113.photobucket.com/albums/k518/MVAPhotos/trapopen.png")

Shapes.HideShape(trapOpen)

trapClosed = Shapes.AddImage("http://i1113.photobucket.com/albums/k518/MVAPhotos/trapclosed.png")

Shapes.HideShape(trapClosed)

trapEmpty = Shapes.AddImage("http://i1113.photobucket.com/albums/k518/MVAPhotos/trapempty.png")

Shapes.HideShape(trapEmpty)



back = ImageList.LoadImage("http://i1113.photobucket.com/albums/k518/MVAPhotos/Garden.png")

GraphicsWindow.DrawImage(back,0,0)

GraphicsWindow.Width = ImageList.GetWidthOfImage(back)

GraphicsWindow.Height = ImageList.GetHeightOfImage(back)

GraphicsWindow.Title = "Snipe Hunt"



offx = 34

offy = 33



startx = 130 

starty = 80

endx = 790

endy = 500

movx = 1

movy = 0



snipeX = startx

snipeY = starty



trapOffx = 40

trapOffy = 8

trapWidth = 90

trapHeight = 90

trapX = Math.GetRandomNumber(endx - startx - trapWidth) + startx

trapY = Math.GetRandomNumber(endy - starty - trapHeight) + starty

Shapes.Move(trapOpen, trapX-trapOffx, trapY-trapOffy)

Shapes.ShowShape(trapOpen)





Shapes.ShowShape(snipe)

SetAngle()

exit = "False"

While exit = "False"

  snipeX = snipeX + run

  snipeY = snipeY + rise

  

  EdgeCheck()

  CheckTrap()

  

  Shapes.Move(snipe,snipeX-offx,snipeY-offy)

  Program.Delay(1)

EndWhile



                                                                                                                                                       

                                                                                                                                                       Sub CloseTrap

                                                                                                                                                         Shapes.HideShape(snipe)

                                                                                                                                                         Shapes.HideShape(trapOpen)

                                                                                                                                                         If snipeX >= trapX And snipeX <= trapX + trapWidth And snipeY >= trapY And snipeY <= trapY + trapHeight Then

                                                                                                                                                           If snipeX = trapX And snipeY = trapY Then

                                                                                                                                                             message = "Trap Closed -- Snipe Injured"

                                                                                                                                                           Else

                                                                                                                                                             message = "Trap Closed -- Snipe Capture"

                                                                                                                                                           EndIf

                                                                                                                                                           Sound.PlayChime()

                                                                                                                                                           Shapes.Move(trapClosed, trapX-trapOffx, trapY-trapOffy)

                                                                                                                                                           Shapes.ShowShape(trapClosed)

                                                                                                                                                         Else

                                                                                                                                                           message = "Trap Empty -- Snipe Escaped"

                                                                                                                                                           Sound.PlayClick()

                                                                                                                                                           Shapes.Move(trapEmpty, trapX-trapOffx, trapY-trapOffy)

                                                                                                                                                           Shapes.ShowShape(trapEmpty)

                                                                                                                                                         EndIf

                                                                                                                                                         GraphicsWindow.FontBold = "True"

                                                                                                                                                         GraphicsWindow.FontItalic = "True"

                                                                                                                                                         GraphicsWindow.BrushColor = "red"

                                                                                                                                                         GraphicsWindow.FontSize = "50"

                                                                                                                                                         msgShp = Shapes.AddText(message)

                                                                                                                                                         Shapes.Move(msgShp,100,(GraphicsWindow.Height/2)-100)

                                                                                                                                                         exit = "true"

                                                                                                                                                       EndSub





Sub EdgeCheck

  If snipeX > endx+offx Then

    snipeX = endx+offx

    SetAngle()

  ElseIf snipeY > endy+offy then

    snipeY = endy+offy

    SetAngle()

  Elseif snipeX < startx+offx then

    snipeX = startx+offx

    SetAngle()

  Elseif snipeY < starty+offy then

    snipeY = starty+offy

    SetAngle()

  endif

EndSub



Sub SetAngle

  angle = Math.GetRandomNumber(360)

  GetSlope() 'Take angle, return the slow (rise over run)

  Shapes.Rotate(snipe, angle)

EndSub



'Given a compas angle (0-360) find the slope (rise and run)

Sub GetSlope

  wrkAngle = angle

  if wrkAngle >= 360 then

    wrkAngle = wrkAngle - 360

  EndIf

  If wrkAngle = 90 Then

    wrkAngle = 90.0001

  ElseIf wrkAngle = 270 Then

    wrkAngle = 270.0001

  EndIf

  radAngle = Math.GetRadians(wrkAngle)

  slope = Math.Tan(radAngle)

  

  islope = slope

  s = "" + islope + ""

  pos = Text.GetIndexOf(s,".")

  If pos = 0 Then

    s = s + ".0"

  EndIf

  idigitsDec = Text.GetLength(s) - 1 - pos

  denom = 1

  For i = 1 To idigitsDec

    islope = islope * 10

    denom = denom * 10

  EndFor

  

  num = Math.round(islope)

  rise = denom

  run = num

  

  ReduseFraction()

  SetDirection()

  'TextWindow.WriteLine(angle + "=" + rise + "/" + run)

EndSub



'Reduce (divide by 10) the numerator and denomination until both are less than 2

Sub ReduseFraction

  While math.Abs(run) > 1 Or math.Abs(rise) > 1

    run = run / 10

    rise = rise / 10

  EndWhile

  While math.Abs(run) < 1 and math.Abs(rise) < 1  'Not tooo small

    rise = rise * 1.05

    run = run * 1.05

  EndWhile

EndSub



'Adjust for the direction of movement based on the angle

Sub SetDirection

  If wrkAngle >= 0 And wrkAngle <= 90 Then

    run = math.abs(run) 

    rise = math.abs(rise) * -1

  ElseIf wrkAngle > 90 and wrkAngle <= 180 then

    run = math.abs(run)

    rise = Math.Abs(rise)

  ElseIf wrkAngle > 180 and wrkAngle <= 270 then

    run = math.abs(run) * -1

    rise = Math.Abs(rise) 

  ElseIf wrkAngle > 270 and wrkAngle <= 360 then

    run = math.abs(run) * -1

    rise = Math.Abs(rise) * -1

  EndIf

EndSub


