GraphicsWindow.BackgroundColor ="LightGray

GraphicsWindow.Left =10

GraphicsWindow.top=10

GraphicsWindow.Width=900

GraphicsWindow.Height=800

GraphicsWindow.Title ="Spliner

GraphicsWindow.MouseDown=mddw

LDDialogs.AddRightClickMenu ("1=DrawSpline;2=NewSpline;3=Clean;4=Gradient","")

LDDialogs.RightClickMenu=rmmn

mfact()

args=0

nct=0

grad=0

cpts=100

bb=""

bb="100 100 200 300 400 50 160 100

drwnod=1

b=ldtext.Split (bb," ")

dospln()

bb=""

nww=1

nsl=0

GraphicsWindow.KeyDown=kddw





Sub kddw

  lky= GraphicsWindow.LastKey 

  If lky="Tab" Then

    If nsl>0 then

      GraphicsWindow.BrushColor="Green

      GraphicsWindow.fillEllipse (b[nsl]-3,b[nsl+1]-3,6,6) 

      nsl=nsl+2

    Else

      nsl=1

    endif

    If nsl>nct*2 Then

      nsl=1

    endif

    GraphicsWindow.BrushColor="Red

    GraphicsWindow.fillEllipse (b[nsl]-3,b[nsl+1]-3,6,6) 

    ox=b[nsl]

    oy=b[nsl+1]

    

  elseIf lky="Escape" Then

    GraphicsWindow.BrushColor="Green

    GraphicsWindow.fillEllipse (b[nsl]-3,b[nsl+1]-3,6,6) 

    nsl=0 

  endif

  

EndSub 







sub  mfact

  

  fact[0] = 1.0

  fact[1] = 1.0

  fact[2] = 2.0

  fact[3] = 6.0

  fact[4] = 24.0

  fact[5] = 120.0

  fact[6] = 720.0

  fact[7] = 5040.0

  fact[8] = 40320.0

  fact[9] = 362880.0

  fact[10] = 3628800.0

  fact[11] = 39916800.0

  fact[12] = 479001600.0

  fact[13] = 6227020800.0

  fact[14] = 87178291200.0

  fact[15] = 1307674368000.0

  fact[16] = 20922789888000.0

  fact[17] = 355687428096000.0

  fact[18] = 6402373705728000.0

  fact[19] = 121645100408832000.0

  fact[20] = 2432902008176640000.0

  lxx=20

  

endsub



Sub dospln

  

  npts = Array.GetItemCount (b) / 2

  ' int icount, jcount

  '  step, t

  

  icount = 1

  t = 0

  stepp = 1.0 / (cpts - 1)

  

  for i1 = 0 to cpts-2

    ' TextWindow.WriteLine ("i1:"+i1)

    if ((1 - t) < 5/1000000) Then  

      t = 1.0

    endif

    

    jcount = 1

    p[icount][1] = 0.0

    p[icount][2] = 0.0

    for i = 0 to npts

      

      basis = ldcall.Function3 ("stein",npts - 1, i, t)

      p[icount][1] =p[icount][1]+ basis * b[jcount]

      p[icount][2] =p[icount][2]+ basis * b[jcount + 1]

      jcount = jcount +2

    endfor 

    

    icount =icount+ 1

    t =t+ stepp

    

  endfor

  If drwnod=1 then

    GraphicsWindow.PenWidth=1

    GraphicsWindow.PenColor="green

    GraphicsWindow.BrushColor="Green

    

    For x=3 to npts*2 Step 2

      GraphicsWindow.BrushColor="Green

      If x=nsl*2 Then

        GraphicsWindow.BrushColor="red

      endif

      GraphicsWindow.fillEllipse (b[x]-3,b[x+1]-3,6,6) 

      GraphicsWindow.DrawLine(b[x],b[x+1],b[x-2],b[x-1]) 

    endfor

    drwnod=0

  EndIf 

  If grad=1 Then

    brr= LDShapes.BrushGradient("1=red;2=Orange;3=yellow","")

    LDShapes.BrushGradientPolygon (brr,p)

  else

    GraphicsWindow.PenWidth=2

    GraphicsWindow.PenColor="Green

    

    pp=LDShapes.AddPolygon (p)

    LDShapes.PenColour (pp,"Blue")

    LDShapes.BrushColour (pp,"Cyan")

    Shapes.SetOpacity (pp,50)

    LDShapes.PenWidth (pp,3)

  endif

EndSub 



sub  Ni'(int n, int i)

  ln=args[1]

  li=args[2]

  If ln>lxx Or li>lxx Then

    TextWindow.WriteLine ("High!"+ln+"|"+li)

  EndIf 

  a1 = fact[ln]

  a2 = fact[li]

  a3 = fact[ln - li]

  return=  a1/ (a2 * a3)

  ' TextWindow.WriteLine (return )

endsub



'// Calculate Bernstein basis

sub  stein'(int n, int i,  t)

  qn=args[1]

  qi=args[2]

  qt=args[3]

  

  

  'i /* t^i */

  'ni /* (1 - t)^i */

  

  '/* Prevent problems with pow */

  

  if (qt = 0.0) and (qi = 0) Then 

    ti = 1.0 

  else 

    ti = Math.Power(qt, qi)

  EndIf 

  

  if (qn = qi) and (qt = 1.0) then

    tni = 1.0 

  else 

    tni = Math.Power((1 - qt), (qn - qi))

  EndIf 

  

  '//Bernstein basis

  bas = ldcall.Function2 ("Ni",qn, qi) * ti * tni 

  return= bas

  ' TextWindow.WriteLine ("bs:"+bas)

endsub



Sub rmmn

  grad=0

  ld= LDDialogs.LastRightClickMenuItem 

  If ld=2 Then

    bb=""

    nww=1

    nsl=0

    Shapes.Remove (pp)

    GraphicsWindow.Clear () 

    GraphicsWindow.BrushColor="Green

    nct=0

  elseIf ld=1 Then

    Shapes.Remove (pp)

    If nww=1 then

      b=ldtext.Split (bb," ")

      nww=0

    endif

    If nsl>0 then

      GraphicsWindow.Clear ()

      drwnod=1

    endif

    dospln ()

  elseIf ld=3 Then

    GraphicsWindow.Clear () 

    dospln ()

  elseIf ld=4 Then

    grad=1

    Shapes.Remove (pp)  

    dospln ()

    

  endif

  

EndSub 



Sub mddw

  If Mouse.IsLeftButtonDown And nct<lxx then

    

    xx=GraphicsWindow.MouseX

    yy=GraphicsWindow.Mousey

    If nsl>0 Then

      GraphicsWindow.BrushColor="Green

      GraphicsWindow.fillEllipse (ox-3,oy-3,6,6) 

      b[nsl]=xx

      b[nsl+1]=yy

      GraphicsWindow.BrushColor="White

      GraphicsWindow.fillEllipse (xx-3,yy-3,6,6) 

    else

      GraphicsWindow.fillEllipse (xx-3,yy-3,6,6) 

      If nct>0 Then 

        GraphicsWindow.PenWidth=1

        GraphicsWindow.DrawLine (xx,yy,ox,oy)

      EndIf 

      nct=nct+1    

      bb=text.Append (bb,xx+" ")

      bb=text.Append (bb,yy+" ")

    endif

    ox=xx

    oy=yy   

  endif

  

  

endsub


