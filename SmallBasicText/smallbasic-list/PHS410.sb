' SmallBasic Version 1.2
' Program: RecursiveSum
' Changelog: 
' Author: Pappa Lapub
' Website: https://social.msdn.microsoft.com/Forums/en-US/a2cf21a5-6046-4d92-8cb9-579f67835ea0/challenge-of-the-month-may-2016
' ImportURL: http://smallbasic.com/program/?
' Extension: 
' Comment: Write a program to recursively sum all the digits in a number
'  There is a pattern for any number divisible by 9,  eg.  561096 : 5+6+1+0+9+6 = 27 : 2+7 = 9
' Variables: 
' ToDo: 
' ================================================================================
in = 1
While in > 0
  TextWindow.Write("Integer [Exit !{1-9}] ?: ")   ' -.0 spc return, letter etc.
  in = TextWindow.ReadNumber()
  
  CheckInt()
  If retry Then
    Goto Restart
  EndIf
  
  num = in
  Pattern9()     '' abbreviation for result 9
  While num > 9 ' >= 10
    For n = 1 To Text.GetLength(num)
      sum = sum + Text.GetSubText(num, n,1)
    EndFor
    num = sum
    sum = 0
  EndWhile
  TextWindow.WriteLine("Recursive sum: "+ num)
  Restart:
  retry = ""
  TextWindow.WriteLine("")
EndWhile
Program.End()

' //////////  SUBs  \\\\\\\\\\
Sub Pattern9
  If Math.Remainder(num, 9) = 0 Then
    num = 9
  EndIf
EndSub

Sub CheckInt
  If in < 10 Or in <> Math.Floor(in) Then
    TextWindow.WriteLine("* Input <10 or no integer! Retry.")
    retry = "True"
  EndIf
EndSub
