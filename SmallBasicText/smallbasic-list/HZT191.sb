'Program: ToDoList
' based on Names (06/2015) by Martin Menze
' and  LitDev Extentions  V 1.0.0.133   for .Net 3.5  framework  and  Small Basic 1.0
' by backtothestart  07/2015
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'     Events                                       'Events can start a Subroutine. This program use the following events. 
'______________________________________________________________________
GraphicsWindow.KeyUp                = KeyUp          'Start Sub KeyUp if a key was uped.
Controls.ButtonClicked              = ButtonClicked  'Start Sub ButtonClickes if a button was clicked.
LDControls.ListViewSelectionChanged = ListviewSelect 'Start Sub ListviewSelect if a Listviewline was clicked.
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'   Window & Database Defines
'______________________________________________________________________
GraphicsWindow.Title  = "     My  Tasks   "  
DataBaseFile          = "Tasklist.db"
DataBaseTable         = "ActualTasks"
Column_1              = "Area"
Column_2              = "Task"
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'   Initialisation
'______________________________________________________________________
Initialisation()       'All objects, variable and so on will define in the subroutine Initialisation.
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'   Main Program                                                                                
'______________________________________________________________________
Controls.ShowControl(ArrTextBox[VarNumFirstName])'Show the texbox to input the first name.
VarInputIndex = VarNumFirstName                  'Fill the variable VarInputIndex with the same value it is in the variable VarNumFirstName. It is 1.   
LDFocus.SetFocus(ArrTextBox[VarInputIndex])      'Set the fokus to the textbox to input the first name. The cursor is blinking in this text box.
SetFocus()                                       'Start the subroutine SetFocus.
Fokus()                                          'Start the subroutine Fokus.
While VarEndOfProgram = F                        'Begin of the main loop. Lopp in the main loop as long as the variable VarEndOfProgram is equal F. F is "False".
  Fokus()                                        'Start the subroutine Fokus.  
  CheckEvents()                                  'Start the subroutine CheckEvents 
  Program.Delay(50)                              'Free CPU Resources
EndWhile                                         'End of the main loop. 
Program.End()                                    'The End of this Program.
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'   Subroutines
'______________________________________________________________________
' Subroutine Fokus
'  Notize the value form the last name of the textbox in the variable VarOldFocus.
'  Notize the value from the actual name of the textbox in the variable VarFokus.
'  Is the Focus changed then identify in a loop the name of the actual textbox. 
'  Has it found, set the loop variable of the end value. This optimize the loop cycle.
'  Start the subroutine Set Focus.
'______________________________________________________________________
Sub Fokus                                        'Begin of subroutine Fokus
  VarOldFokus = VarFokus 
  VarFokus = LDFocus.GetFocus()                  'Get the name of the object with the actualy focus.
  If VarFokus <> VarOldFokus Then                'If the focus was changed do the folowing.
    For i = VarNumFirstName To VarNumLastInput   'Loop as long as i is the same as VarNumLastInput. Begin with i equal the same as in VarNumFirstName
      If VarFokus = ArrTextBox[i] Then           'Is the Name of the actual object the same as the textbox 
        VarOldInputIndex = VarInputIndex         'Put the value from variable VarInputIndex into the variable VarOldInputIndex
        VarInputIndex = i                        'Put the value from variable i into the variable VarInputIndex
        SetFocus()                               'Start the subroutine SetFocus. 
      EndIf                                      'End the last If
    EndFor                                       'If the value from i equal VarNumLastInput it is the end of the loop else the add 1 to the vallue of i.
  EndIf                                          'End the last if 
EndSub 'Fokus                                                                                    'go back to the next line after the Start of the subroutine Fokus()

'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' Subroutine CheckEvents
' The subroutine CheckEvents check the events skips for events.
' Was a button clicked it start the subroutine WichButtonWasClicked.
' Was a key pressed and key uped then start the subroutine WichKeyWasPressed.
'______________________________________________________________________
Sub CheckEvents
  If VarButtonClicked = T Then
    VarButtonClicked = F
    VarLastClickedButton = Controls.LastClickedButton 
    WichButtonWasClicked() 
  EndIf   
  If VarKeyUP = T Then 
    VarKeyUP = F 
    VarLastKey = GraphicsWindow.LastKey 
    WichKeyWasUped()
  EndIf 
EndSub 'CheckEvents
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' Subroutine WhichButtonWasClicked
' There are 3 buttons (Next, Save and Exit).
' Was clicked Next then start the subroutines SetFocusToNextTextBox and SetFocus.
' Was clicked Save then start the subroutines SetFocustoToNextTextBox and SetFocus.
'  Start the subroutine DataToDatabase and ClearObjects. At last by button Save 
'  to set the focus to the first text box.
'  Was clicked Exit then put T (True) to the variable VarEndOfProgram. So the main loop will ended
'______________________________________________________________________
Sub WichButtonWasClicked
  If VarLastClickedButton = ArrButton[VarNumNextField] Then
    SetFocusToNextTextBox()
    SetFocus()   
  ElseIf VarLastClickedButton = ArrButton[VarNumSave] Then 
    SetFocusToNextTextBox()
    SetFocus()
    ArrData[VarNumLastName] = LDText.Trim(ArrData[VarNumLastName])
    If ArrData[VarNumLastName] = "" Then 
      GraphicsWindow.ShowMessage("Please input a last name.           ", " No save without last name.")
      VarMessage = "Data: " + ArrData[VarNumFirstName] + " " + ArrData[VarNumLastName] + " was not saved."
      LDFocus.SetFocus(ArrTextBox[VarNumLastName])
    Else   
      DataToDatabase()
      VarMessage = "Data: " + ArrData[VarNumFirstName] + " " + ArrData[VarNumLastName] + " was saved."
      ClearObjects()
      LDFocus.SetFocus(ArrTextBox[VarNumFirstName])
    EndIf 
    ShowMessage()
  ElseIf VarLastClickedButton = ArrButton[VarNumDel] Then 
    If LineSelect = "" OR VarListViewClicked = F Then 
      GraphicsWindow.ShowMessage("Please select row.           ", " Nothing Delete")
    Else   
      DelRecord()
      ClearObjects()
      LDFocus.SetFocus(ArrTextBox[VarNumFirstName])
    EndIf 
    ShowMessage()
  ElseIf VarLastClickedButton = ArrButton[VarNumUp] Then 
    If LineSelect = 0 Then 
      GraphicsWindow.ShowMessage("Please select row.           ", " Nothing Delete")
    Else   
      RecordUp()
      LDFocus.SetFocus(tdlist)
    EndIf 
    ShowMessage()
  ElseIf VarLastClickedButton = ArrButton[VarNumDown] Then 
    If LineSelect = 0 Then 
      GraphicsWindow.ShowMessage("Please select row.           ", " Nothing Delete")
    Else   
      RecordDown()
      LDFocus.SetFocus(tdlist)
    EndIf 
    ShowMessage()
  ElseIf VarLastClickedButton = ArrButton[VarNumExit] Then 
    VarEndOfProgram = T      
  EndIf
EndSub 'WichButtonWasClicked
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'______________________________________________________________________
Sub ShowMessage
  Shapes.SetText(MessageShape, VarMessage)
  Shapes.ShowShape(MessageShape)
EndSub 'ShowMessage
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' Subroutine WhichKeyWasUped
' Was it key Return, then start the subroutine SetFocusToNextTextBox. The same doing by key 
' Tab (Tabulator).
' By the combination of key tab and a shift key (right or left) the variable VarInputIndex substract 1.
' Is this lower then 1 the value will set with the last number ob text boxes. At last the Focus set in
' the actualy text box.
'______________________________________________________________________
Sub WichKeyWasUped
  If VarLastKey = "Return" Then 
    SetFocusToNextTextBox()   
  ElseIf VarLastKey = "Tab" Then
    If GraphicsWindow.LastKey = "RightShift" or GraphicsWindow.LastKey = "LeftShift" Then      
      VarInputIndex = VarInputIndex - 1
      If VarInputIndex < 1 Then 
        VarInputIndex = VarNumLastInput 
      EndIf
      SetFocus()
    Else
      SetFocusToNextTextBox()   
    EndIf   
  EndIf
  SetFocus()
  Shapes.HideShape(MessageShape)
EndSub 'WichKeyWasUped
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' Subroutine SetFocus
' Put the Input from the text box into the array for database data.
' hide the old objects and shows the actualy objects.
'______________________________________________________________________
Sub SetFocus
  ArrData[VarOldInputIndex] = Controls.GetTextBoxText(ArrTextBox[VarOldInputIndex])
  Controls.HideControl(ArrTextBox[VarOldInputIndex])
  Shapes.SetText(ArrDataShape[VarOldInputIndex], ArrData[VarOldInputIndex])
  Shapes.ShowShape(ArrDataShape[VarOldInputIndex])
  Shapes.HideShape(ArrDataShape[VarInputIndex])
  Controls.SetTextBoxText(ArrTextBox[VarInputIndex], ArrData[VarInputIndex])
  Controls.ShowControl(ArrTextBox[VarInputIndex])
  LDFocus.SetFocus(ArrTextBox[VarInputIndex])
EndSub 'SetFocus
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' Subroutine SetFocutToNextTextBox
' Add 1 to the value of the variable VarInputIndex. Is this greater as the last text box number then set
'  it to the first input number VarNumFirstName.
' At last start the subroutine SetFocus.
'______________________________________________________________________
Sub SetFocusToNextTextBox
  VarInputIndex = VarInputIndex + 1
  If VarInputIndex > VarNumLastInput Then 
    VarInputIndex = VarNumFirstName 
  EndIf
  SetFocus()
EndSub 'SetFocusToNextTextBox
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' Subroutine DataToDatabase
' For database data it is not possible to write a ' into a database. If there one ' replace it with two ' 
' then it will be functions.
' Set the variable command with the sql-command to put the data in the database
' At last show all data from the table  in the listView.
'______________________________________________________________________
Sub DataToDatabase
  For i = VarNumFirstName To VarNumLastInput 
    LDText.Replace(ArrData[i], "'", "''")
  EndFor 
  command = "BEGIN TRANSACTION;"
  command = command + "INSERT INTO " + DataBaseTable + "("+Column_1+","+Column_2+")"
  command = command + "VALUES('"+ArrData[VarNumFirstName]+"','"+ArrData[VarNumLastName]+"');"
  command = command + "COMMIT;"
  LDDataBase.Command(database,command)  
  DB_Data = LDDataBase.Query(database, "SELECT * FROM " + DataBaseTable + ";", tdlist, "True")
EndSub 'DataToDatabase
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯��¯
' Subroutine DelRecord
'
'     Get Id  of the selected Listview line
'     Delete Record of this Id from database
'     Reload database in Listview and Array
'______________________________________________________________________
Sub DelRecord
  IF VarListViewClicked = T Then
  Id_Number_start = Text.GetIndexOf(DB_Data[LineSelect],"Id=")
  Id_Number_end   = Text.GetIndexOf(DB_Data[LineSelect],";")
  Id_Number       = Text.GetSubText(DB_Data[LineSelect],Id_Number_start+3,Id_Number_end-(Id_Number_start+3))
  command = "BEGIN TRANSACTION;"
  command = command + "DELETE FROM " + DataBaseTable
  command = command + " WHERE Id='"+Id_Number+"';"
  command = command + "COMMIT;"
  LDDataBase.Command(database,command)  
  DB_Data = LDDataBase.Query(database, "SELECT * FROM " + DataBaseTable + ";", tdlist, "True")
  EndIf
  VarListViewClicked = F
EndSub 'DelRecord
'¯¯¯¯¯¯¯¯¯¯¯¯¯��¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' Subroutine RecordUp
'
'     Get Id  of the selected Listview line and check limits
'     Insert  Record Data of this id to one row upwards in database
'     Insert  Record Data of this id minus one row to id in database
'     Reload database in Listview and Array
'______________________________________________________________________
Sub RecordUp
 if LineSelect > 1  Then
  Lineup= LineSelect - 1
  Id_Number_start = Text.GetIndexOf(DB_Data[Lineup],"Id=")
  Id_Number_end   = Text.GetIndexOf(DB_Data[Lineup],";")
  Id_Number       = Text.GetSubText(DB_Data[Lineup],Id_Number_start+3,Id_Number_end-(Id_Number_start+3))
  Col1_Data = Text.GetSubText(DB_Data[LineSelect], Text.GetIndexOf(DB_Data[LineSelect],Column_1)+Text.GetLength(Column_1)+1,Text.GetIndexOf(DB_Data[LineSelect],Column_2)-Text.GetIndexOf(DB_Data[LineSelect],Column_1)-Text.GetLength(Column_1)-2)
  Col2_Data = Text.GetSubText(DB_Data[LineSelect],Text.GetIndexOf(DB_Data[LineSelect],Column_2)+Text.GetLength(Column_2)+1,Text.GetLength(DB_Data[LineSelect])-Text.GetLength(Column_2)-Text.GetIndexOf(DB_Data[LineSelect],Column_2)-1)
  command = "BEGIN TRANSACTION;"
  command = command + "UPDATE " + DataBaseTable
  command = command + " SET "+Column_1+"='"+ Col1_Data +"',"+Column_2+"='"+ Col2_Data +"'"
  command = command + " WHERE Id='"+Id_Number+"';"
  command = command + "COMMIT;"
  LDDataBase.Command(database,command)  
  Id_Number_start = Text.GetIndexOf(DB_Data[LineSelect],"Id=")
  Id_Number_end   = Text.GetIndexOf(DB_Data[LineSelect],";")
  Id_Number       = Text.GetSubText(DB_Data[LineSelect],Id_Number_start+3,Id_Number_end-(Id_Number_start+3))
  Col1_Data = Text.GetSubText(DB_Data[Lineup], Text.GetIndexOf(DB_Data[Lineup],Column_1)+Text.GetLength(Column_1)+1,Text.GetIndexOf(DB_Data[Lineup],Column_2)-Text.GetIndexOf(DB_Data[Lineup],Column_1)-Text.GetLength(Column_1)-2)
  Col2_Data = Text.GetSubText(DB_Data[Lineup],Text.GetIndexOf(DB_Data[Lineup],Column_2)+Text.GetLength(Column_2)+1,Text.GetLength(DB_Data[Lineup])-Text.GetLength(Column_2)-Text.GetIndexOf(DB_Data[Lineup],Column_2)-1)
  command = "BEGIN TRANSACTION;"
  command = command + "UPDATE " + DataBaseTable
  command = command + " SET "+Column_1+"='"+ Col1_Data +"',"+Column_2+"='"+ Col2_Data +"'"
  command = command + " WHERE Id='"+Id_Number+"';"
  command = command + "COMMIT;"
  LDDataBase.Command(database,command)  
  DB_Data = LDDataBase.Query(database, "SELECT * FROM " + DataBaseTable + ";", tdlist, "True")
  LineSelect = Lineup
 Endif
 VarListViewClicked = F
EndSub 'RecordUp
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' Subroutine RecordDown
'
'     Get Id  of the selected Listview line and check limits
'     Insert  Record Data of this id one row to buttom in database
'     Insert  Record Data of this id plus one row to id in database
'     Reload database in Listview and Array
'______________________________________________________________________
Sub RecordDown
 if LineSelect < Array.GetItemCount(DB_Data)  Then
  LineDown= LineSelect + 1
  Id_Number_start = Text.GetIndexOf(DB_Data[LineDown],"Id=")
  Id_Number_end   = Text.GetIndexOf(DB_Data[LineDown],";")
  Id_Number       = Text.GetSubText(DB_Data[LineDown],Id_Number_start+3,Id_Number_end-(Id_Number_start+3))
  Col1_Data = Text.GetSubText(DB_Data[LineSelect], Text.GetIndexOf(DB_Data[LineSelect],Column_1)+Text.GetLength(Column_1)+1,Text.GetIndexOf(DB_Data[LineSelect],Column_2)-Text.GetIndexOf(DB_Data[LineSelect],Column_1)-Text.GetLength(Column_1)-2)
  Col2_Data = Text.GetSubText(DB_Data[LineSelect],Text.GetIndexOf(DB_Data[LineSelect],Column_2)+Text.GetLength(Column_2)+1,Text.GetLength(DB_Data[LineSelect])-Text.GetLength(Column_2)-Text.GetIndexOf(DB_Data[LineSelect],Column_2)-1)
  command = "BEGIN TRANSACTION;"
  command = command + "UPDATE " + DataBaseTable
  command = command + " SET "+Column_1+"='"+ Col1_Data +"',"+Column_2+"='"+ Col2_Data +"'"
  command = command + " WHERE Id='"+Id_Number+"';"
  command = command + "COMMIT;"
  LDDataBase.Command(database,command)  
  Id_Number_start = Text.GetIndexOf(DB_Data[LineSelect],"Id=")
  Id_Number_end   = Text.GetIndexOf(DB_Data[LineSelect],";")
  Id_Number       = Text.GetSubText(DB_Data[LineSelect],Id_Number_start+3,Id_Number_end-(Id_Number_start+3))
  Col1_Data = Text.GetSubText(DB_Data[LineDown], Text.GetIndexOf(DB_Data[LineDown],Column_1)+Text.GetLength(Column_1)+1,Text.GetIndexOf(DB_Data[LineDown],Column_2)-Text.GetIndexOf(DB_Data[LineDown],Column_1)-Text.GetLength(Column_1)-2)
  Col2_Data = Text.GetSubText(DB_Data[LineDown],Text.GetIndexOf(DB_Data[LineDown],Column_2)+Text.GetLength(Column_2)+1,Text.GetLength(DB_Data[LineDown])-Text.GetLength(Column_2)-Text.GetIndexOf(DB_Data[LineDown],Column_2)-1)
  command = "BEGIN TRANSACTION;"
  command = command + "UPDATE " + DataBaseTable
  command = command + " SET "+Column_1+"='"+ Col1_Data +"',"+Column_2+"='"+ Col2_Data +"'"
  command = command + " WHERE Id='"+Id_Number+"';"
  command = command + "COMMIT;"
  LDDataBase.Command(database,command)  
  DB_Data = LDDataBase.Query(database, "SELECT * FROM " + DataBaseTable + ";", tdlist, "True")
  LineSelect = LineDown
 Endif
VarListViewClicked = F
EndSub 'RecordDown
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' Subroutine ClearObjects
' Set nothing in the database data shape, in the text box and in the variable for the database data.
'______________________________________________________________________
Sub ClearObjects
  For i = VarNumFirstName to VarNumLastInput 
    Shapes.SetText(ArrDataShape[i], "")
    Controls.SetTextBoxText(ArrTextBox[i], "")
    ArrData[i] = ""
  EndFor 
EndSub 'ClearObjects
'______________________________________________________________________
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'   Event Subroutines
'______________________________________________________________________
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
' Subroutine KeyUp
' By event KeyUP set the event skip to T equal "True"
'______________________________________________________________________
Sub KeyUp
  VarKeyUP = T 
EndSub 'KeyUp
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'Subroutine ButtonClicked
'By event ButtonClicked set the event skip to T equal "True"
'______________________________________________________________________
Sub ButtonClicked
  VarButtonClicked = T
EndSub 'ButtonClicked
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'   Subroutine ListviewSelect
'______________________________________________________________________
Sub ListviewSelect
  VarListViewClicked = T
  LineSelect = LDControls.LastListViewRow
EndSub 'ListviewSelect
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'    Initialisation
'______________________________________________________________________
Sub Initialisation
  LDUtilities.FixFlickr()
  Hintergrund = ImageList.LoadImage(Flickr.GetPictureOfMoment())
  GraphicsWindow.BrushColor       =  "Black" '
  GraphicsWindow.Width            =  500
  GraphicsWindow.Height           =  360
  GraphicsWindow.DrawResizedImage(Hintergrund,0,0,GraphicsWindow.Width,GraphicsWindow.Height)
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
'   Variables
'______________________________________________________________________
'  Boolean
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
  T = "True"
  F = "False"
'______________________________________________________________________
'  Program controls
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
  VarEndOfProgram = F
  VarButtonClicked = F
  VarListviewClicked = F
  VarKeyUP = F 
  VarNumInputIndex = 1
'______________________________________________________________________
'  Variable Input
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
  VarNumFirstName = 1
  VarNumLastName =  2
  VarNumLastInput = 2
  VarNumTabText =   70
'______________________________________________________________________
'  Variable Button
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
  VarNumNextField = 1
  VarNumSave      = 2
  VarNumExit      = 3
  VarNumDel       = 4
  VarNumUp        = 5
  VarNumDown      = 6
  VarLastButton   = 6
'______________________________________________________________________
'   Array
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
  'Position on Desktop
  VarXPositionShape[VarNumFirstName] = 15
  VarYPositionShape[VarNumFirstName] = 16
  VarXPositionShape[VarNumLastName] = 195
  VarYPositionShape[VarNumLastName] = 16
  
  VarXPositionButton[VarNumNextField] = 10
  VarXPositionButton[VarNumSave] = 445
  VarXPositionButton[VarNumExit] = 445
  VarXPositionButton[VarNumDel]  = 10
  VarXPositionButton[VarNumUp]   = 255
  VarXPositionButton[VarNumDown] = 175
  
  VarYPositionButton[VarNumNextField] = 10
  VarYPositionButton[VarNumSave] = 10
  VarYPositionButton[VarNumExit] = 280
  VarYPositionButton[VarNumDel]  = 280
  VarYPositionButton[VarNumUp]   = 280
  VarYPositionButton[VarNumDown] = 280
'______________________________________________________________________
'   Data
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
  ArrData[VarNumFirstName] = ""
  ArrData[VarNumLastName] = ""
'______________________________________________________________________
'  Listview & DB_Data 
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
  Id_Number = 0
  LineSelect = 0
'______________________________________________________________________
'  Text
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
  ArrInputText[VarNumFirstName] = "First name"
  ArrInputText[VarNumLastName] = "Last name"
  
  ArrTextButton[VarNumNextField] = "Next"
  ArrTextButton[VarNumSave] = "Save"
  ArrTextButton[VarNumExit] = " Exit "
  ArrTextButton[VarNumDel]  = "Delete"
  ArrTextButton[VarNumUp]   = "    AAA   "
  ArrTextButton[VarNumDown] = "    VVV   "
'______________________________________________________________________
  'Shapes, TextBoxes and the array with the Database data
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
  For i = VarNumFirstName To VarNumLastInput   
    'Set a new shape and fill it with the text to put out before the text boxes.
    'ArrShape[i] = Shapes.AddText(ArrInputText[i]+":") 
    'Set the shape to her position
    'Shapes.Move(ArrShape[i], VarXPositionShape[i], VarYPositionShape[i])
    'Set a new shape with database data and fill it with nothing.
    ArrDataShape[i] = Shapes.AddText("")
    'Hide the database data shape
    Shapes.HideShape(ArrDataShape[i])
    'Set the shape to her position
    Shapes.Move(ArrDataShape[i], VarXPositionShape[i]+VarNumTabText, VarYPositionShape[i])
    'Set a new text box on his position.
    ArrTextBox[i] = Controls.AddTextBox(VarXPositionShape[i]+VarNumTabText-6, VarYPositionShape[i]-3)
    'Hide the text box.
    Controls.HideControl(ArrTextBox[i]) 
  EndFor 
  
  MessageShape = Shapes.AddText("")
  Shapes.HideShape(MessageShape)
  Shapes.Move(MessageShape, 5, GraphicsWindow.Height - 30)
  
  'Button
  For i = VarNumNextField To VarLastButton  
    'Set a new button on his position
    ArrButton[i] = Controls.AddButton(ArrTextButton[i], VarXPositionButton[i], VarYPositionButton[i] )
  EndFor 
  
  'Database
  'Create a new list view
  tdlist=LDControls.AddListView(480,200,"")
  LDDataBase.AddListView(0,0)
  Controls.Move(tdlist, 10, 45)
  'Set a fullpath for a database
  datFile = Program.Directory + "\" + DataBaseFile
  GraphicsWindow.DrawText(10,GraphicsWindow.Height-15,datFile)
  '  Is it a new database, so create it with a new table and table fields. Other wise open it.
  '  The following line could be harmful and has been automatically commented.
' The following line could be harmful and has been automatically commented.
'   If LDFile.Exists(datFile) = F Then 
    database = LDDataBase.ConnectSQLite(datFile)
    command = "BEGIN TRANSACTION;"
    'The databse table  has the fields Id with the field definition PRIMARY KEY and Columns with the field defination TEXT.  
    command = command + "CREATE TABLE " + DataBaseTable + "(Id INTEGER PRIMARY KEY, " + Column_1 + " TEXT," + Column_2 + " TEXT);"
    command = command + "COMMIT;"
    LDDataBase.Command(database,command)
  Else 
    database = LDDataBase.ConnectSQLite(datFile)  
    DB_Data  = LDDataBase.Query(database, "SELECT * FROM "+ DataBaseTable + ";", tdlist, "True")
    LDFocus.SetFocus(tdlist)
EndIf   
EndSub 'Initialisation
