'  Rotating  a triangle  using GraphicsWindow.FillTriangle command   

GraphicsWindow.BrushColor="Red"

x="1=100;2=215;3=260"
y="1=200;2=120;3=200"
cx=(X[3]+x[1])/2
cy=(y[3]+y[2])/2
If x[2]>cx Then 
  PMrad="1:-1=1;-1:-1=-1;-1:1=1;1:1=1"         '  1:2:3:4:
Else 
  PMrad="1:-1=-1;-1:-1=1;-1:1=-1;1:1=-1"       '  1:2:3:4:
EndIf
addrad="1:-1=0;-1:-1=0;-1:1=3.14;1:1=6.284"    '  1:2:3:4:
For i=1 To 3
  Quadrant=(x[i]-cx)/Math.Abs(x[i]-cx)+":"+(y[i]-cy)/Math.Abs(y[i]-cy)
  rad[i]=PMrad[Quadrant]*Math.ArcTan((cy-y[i])/(cx-x[i]))+addrad[Quadrant]
  Len[i]=Math.SquareRoot((x[i]-cx)*(x[i]-cx)+(y[i]-cy)*(y[i]-cy))
  maxlen= Math.Max(maxlen,Len[i])
EndFor
GraphicsWindow.FillTriangle(x[1],y[1],x[2],y[2],x[3],y[3])
GraphicsWindow.BrushColor="white"
GraphicsWindow.FillEllipse(cx-2,cy-2,4,4)  '  center position 
Program.Delay(500)
drad= Math.GetRadians(2)
While "True"
  For i=1 To 3
    rad[i]=rad[i]+drad
    x[i]=Len[i]*Math.Cos(rad[i])+cx+200  '  shift +200
    y[i]=Len[i]*Math.sin(rad[i])+cy
  EndFor
  GraphicsWindow.BrushColor="Red"
  GraphicsWindow.FillTriangle(x[1],y[1],x[2],y[2],x[3],y[3])
  GraphicsWindow.BrushColor="white"
  GraphicsWindow.FillEllipse(cx-2+200,cy-2,4,4)  '  center position 
  Program.Delay(50)
  GraphicsWindow.BrushColor="White"
  GraphicsWindow.FillRectangle(cx-maxlen+200,cy-maxlen,2*maxlen,2*maxlen)
EndWhile
  
