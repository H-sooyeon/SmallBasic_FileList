' Challenge of the Month - March 2017  KUMIKO pattern -7  (Ladybird)      by NaochanON WGK825-0
'  Ladybird move around diamond
kN=9
jN=5
init()
init_shapes()
add_ladybirds()
dKj="1=K\=0\;J\=0\;;2=K\=1\;J\=1\;;3=K\=2\;J\=0\;;4=K\=1\;J\=-1\;;5=K\=0\;J\=0\;;"

While "True"
  dS=360
  For NN=1 to 5
    pmX=dKj[NN]["J"]*dL["2dX"]
    pmY=dKj[NN]["K"]*dL[2]/2
    movearound()
    base[NMB]=newP[NMB]
    Program.Delay(500)
  endfor
  pmX=XYC["1:1"]["X"] 
  pmY=XYC["1:1"]["Y"]
  dS=0
  movearound()  '  return orijinal position 
endwhile

Sub movearound
  div=20
  For K=1 to kN
    For j=1 To jN
      NMB=K+":"+j
      newP[NMB]="X="+((j-1)*2*dL["2dX"]+Math.Remainder(k-1,2)*dL["2dX"]+pmX)+";Y="+((k-1)*dL[2]/2+pmY) ' 
      ddX=newP[NMB]["X"]-base[NMB]["X"]
      ddY=newP[NMB]["Y"]-base[NMB]["Y"]
     for L=1 to div
        shapes.move(eln[NMB],base[NMB]["X"]+(L-1)*ddx/div,base[NMB]["Y"]+(L-1)*ddY/div)
        for i=1 to Array.GetItemCount(shape)
          rad=angle[NMB][i]+Math.GetRadians((L-1)*dS/div)
          _base= "X="+(base[NMB]["X"]+(L-1)*ddx/div+DR[NMB][i]*Math.Cos(rad))+";y="+(base[NMB]["Y"]+(L-1)*ddY/div+DR[NMB][i]*Math.Sin(rad))
          If shape[i]["func"] = "rect" or shape[i]["func"] = "ell" then
            shapes.move(shp[NMB][i],_base["X"]-shape[i]["width"]*ss/2,_base["Y"]-shape[i]["height"]*ss/2)
          ElseIf shape[i]["func"] = "line" then
            shapes.move(shp[NMB][i],_base["X"]-(shape[i]["x2"]+shape[i]["x1"])*ss/2,_base["Y"]-(shape[i]["y2"]+shape[i]["y1"])*ss/2)
          ElseIf shape[i]["func"] = "tri" then
            shapes.move(shp[NMB][i], _base["X"]-(shape[i]["x3"]+shape[i]["x1"])*ss/2,_base["Y"]-(shape[i]["y2"]+shape[i]["y1"])*ss/2)
          EndIf 
          shapes.Rotate(shp[NMB][i],(L-1)*dS/div+shape[i]["angle"])
        endfor
        Program.Delay(10)
      endfor
    EndFor
  EndFor
EndSub


Sub  CenterPosition
  XYC[NMB]="X="+(Shapes.GetLeft(shp[NMB][2]))+";Y="+ (Shapes.Gettop(shp[NMB][3]))  '  base point // Left Top position  
  GraphicsWindow.brushColor="Red"
  eln[NMB]=shapes.AddEllipse(6,6)                                                  '  pointer 
  shapes.Move(eln[NMB],XYC[NMB]["X"]-3,XYC[NMB]["Y"]-3)
  For i=  1 To array.GetItemCount(shape)
    If shape[i]["func"] = "rect" or shape[i]["func"] = "ell" then
      X[NMB][i]=Shapes.GetLeft(SHP[NMB][i])+shape[i]["width"]*ss/2                 '  center of the shape ... X
      Y[NMB][i]=Shapes.GetTop(SHP[NMB][i])+shape[i]["height"]*ss/2                 '  center of the shape ... Y
    ElseIf shape[i]["func"] = "line" then
      X[NMB][i]=Shapes.GetLeft(SHP[NMB][i]) +(shape[i]["x2"]+shape[i]["x1"])*ss/2                                  
      Y[NMB][i]=Shapes.GetTop(SHP[NMB][i])  +(shape[i]["y2"]+shape[i]["y1"])*ss/2               
    ElseIf shape[i]["func"] = "tri" then
      X[NMB][i]=Shapes.GetLeft(SHP[NMB][i]) +(shape[i]["x3"]+shape[i]["x1"])*ss/2                                     
      Y[NMB][i]=Shapes.GetTop(SHP[NMB][i])  +(shape[i]["y2"]+shape[i]["y1"])*ss/2               
    EndIf
    angle[NMB][i]=Math.ArcTan((Y[NMB][i]-XYC[NMB]["Y"])/(X[NMB][i]-XYC[NMB]["X"])) '   angle    
    DR[NMB][i]=Math.SquareRoot((X[NMB][i]-XYC[NMB]["X"])*(X[NMB][i]-XYC[NMB]["X"])+(Y[NMB][i]-XYC[NMB]["Y"])*(Y[NMB][i]-XYC[NMB]["Y"]))  '  distance  
  endfor
  base[NMB]=XYC[NMB]   '  temporary start point
endsub

Sub add_shapes
  for i=1 To Array.GetItemCount(shape)
    If i=2 Then 
      GraphicsWindow.BrushColor = Color[Math.GetRandomNumber(4)]                  '  body color 
    Else
      GraphicsWindow.BrushColor =shape[i]["bc"]
    EndIf
    GraphicsWindow.PenWidth = shape[i]["pw"]
    GraphicsWindow.penColor = shape[i]["pc"] 
    If shape[i]["func"]="ell" Then 
      shp[NMB][i] = Shapes.AddEllipse(shape[i]["width"]*ss,shape[i]["height"]*ss) 
    ElseIf shape[i]["func"]="rect" Then 
      shp[NMB][i] = Shapes.AddRectangle(shape[i]["width"]*ss,shape[i]["height"]*ss)
    ElseIf shape[i]["func"]="tri" Then 
      shp[NMB][i] = Shapes.Addtriangle(shape[i]["x1"]*ss,shape[i]["y1"]*ss,shape[i]["x2"]*ss,shape[i]["y2"]*ss,shape[i]["x3"]*ss,shape[i]["y3"]*ss) 
    ElseIf shape[i]["func"]="line" Then 
      shp[NMB][i] = Shapes.Addline(shape[i]["x1"]*ss,shape[i]["y1"]*ss,shape[i]["x2"]*ss,shape[i]["y2"]*ss)
    EndIf
    Shapes.Animate(shp[NMB][i], shape[i]["x"]*ss+shX,shape[i]["y"]*ss+shY+shape[2]["height"]*ss/5, 200)
    Shapes.Rotate(shp[NMB][i], Shape[i]["angle"])    
  EndFor
EndSub

Sub add_ladybirds
  ss=dL[2]/shape[8]["Y"]*0.7
  For K=1 to kN
    For j=1 To jN
      shy=dL[2]*(K-1)/2
      shx=Math.SquareRoot(3)*dL[2]*(j-1)+(Math.Remainder(K-1,2))*dL["2dX"]-shape[2]["Width"]*ss/2
      NMB=K+":"+j
      add_shapes()
      CenterPosition()
    EndFor
  endfor
EndSub

Sub init
  GraphicsWindow.Left=10
  GraphicsWindow.top=10
  GraphicsWindow.BackgroundColor="Darkgreen"
  dL="1=1000;2=150;" 
  dL=dl+"2dX="+(dL[2]*Math.SquareRoot(3)/2)
  GraphicsWindow.Width=dL["2dX"]*9 
  GraphicsWindow.Height=dL[2]*5
  Color="1=Red;2=Yellow;3=Skyblue;4=Purple;5=#F8E58C"
  for  M=-5 to 16 
    _C="X="+(Math.SquareRoot(3)*dL[2]*(M-1))+";Y="+(dL[2]*5/2) 
    make_triangle()
  endfor
EndSub

Sub init_shapes  '  Ladybird
  shape[1]="func=ell;X=24;Y=24;Width=42;Height=42;angle=0;bc=Black;pw=0"  '  Head
  shape[2]="func=ell;X=0;Y=42;Width=96;Height=96;angle=0;bc=Red;pw=0"     '  Body 
  shape[3]="func=ell;X=22;Y=5;Width=11;Height=11;angle=0;bc=Black;pw=0"   
  shape[4]="func=ell;X=54;Y=5;Width=11;Height=11;angle=0;bc=Black;pw=0"
  shape[5]="func=line;X=40;Y=10;X1=0;Y1=0;X2=0;Y2=23;angle=-45;pc=Black;pw=2" 
  shape[6]="func=line;X=49;Y=10;X1=0;Y1=0;X2=0;Y2=23;angle=45;pc=Black;pw=2" 
  shape[7]="func=tri;X=46;Y=77;X1=0;Y1=53;X2=1;Y2=0;X3=2;Y3=53;angle=0;pc=Black;pw=2" 
  shape[8]="func=rect;X=45;Y=130;Width=6;Height=8;angle=0;bc=White;pw=0"
  shape[9]="func=ell;X=32;Y=54;Width=10;Height=10;angle=0;angle=0;bc=Black;pw=0"
  shape[10]="func=ell;X=68;Y=54;Width=10;Height=10;angle=0;bc=Black;pw=0"
  shape[11]="func=ell;X=8;Y=75;Width=10;Height=10;angle=0;bc=Black;pw=0"
  shape[12]="func=ell;X=60;Y=75;Width=10;Height=10;angle=0;bc=Black;pw=0"
  shape[13]="func=ell;X=32;Y=83;Width=10;Height=10;angle=0;bc=Black;pw=0"
  shape[14]="func=ell;X=14;Y=105;Width=10;Height=10;angle=0;bc=Black;pw=0"
  shape[15]="func=ell;X=74;Y=105;Width=10;Height=10;angle=0;bc=Black;pw=0"
  shape[16]="func=ell;X=53;Y=118;Width=10;Height=10;angle=0;bc=Black;pw=0"
EndSub

sub make_triangle
  NMB=M+":"
  GraphicsWindow.PenWidth=3
  GraphicsWindow.PenColor=Color[5] 
  Dia[NMB][1]=Shapes.AddLine(dL[1],-dL[1]/Math.SquareRoot(3),-dL[1],dL[1]/Math.SquareRoot(3))
  Dia[NMB][2]=Shapes.AddLine(dL[1],dL[1]/Math.SquareRoot(3),-dL[1],-dL[1]/Math.SquareRoot(3))  
  For L=1 To 2
    Shapes.Animate(Dia[NMB][L],_C["X"]+dL["2dX"],_C["Y"],200)
  EndFor
  Program.Delay(20)
EndSub
