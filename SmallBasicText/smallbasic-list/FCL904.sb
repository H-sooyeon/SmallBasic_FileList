'image = ImageList.LoadImage(Program.Directory+"/football.png")

image = ImageList.LoadImage("http://litdev.co.uk/game_images/football.png")

nBall = 10

gw = GraphicsWindow.Width

gh = GraphicsWindow.Height



'Physics engine basics

LDPhysics.LoadImagesAsCircles = "True"

LDPhysics.SetBoundaries(-1,gw+1,-1,gh+1) 'No Borders scaled to GW



'Moveing shapes

For i = 1 To nBall

  ball[i] = Shapes.AddImage(image)

  LDPhysics.AddMovingShape(ball[i],0.2,0.9,1)

  LDPhysics.SetPosition(ball[i],Math.GetRandomNumber(500),Math.GetRandomNumber(300),0)

  LDPhysics.SetVelocity(ball[i],Math.GetRandomNumber(51)-101,0)

EndFor

'Including static borders

ground = Shapes.AddRectangle(3*gw,10)

left = Shapes.AddRectangle(10,gh)

right = Shapes.AddRectangle(10,gh)

LDPhysics.AddFixedShape(ground,0.2,0.9)

LDPhysics.AddFixedShape(left,0.2,0.9)

LDPhysics.AddFixedShape(right,0.2,0.9)

LDPhysics.SetPosition(ground,gw/2,gh,0)

LDPhysics.SetPosition(left,-gw,gh/2,0)

LDPhysics.SetPosition(right,2*gw,gh/2,0)



'Non engine shape

squareSize= 25

square = Shapes.AddRectangle(2*squareSize,2*squareSize)

squareX = gw/2-squareSize

squareY = squareSize

Shapes.Move(square,squareX,squareY)



'Setup events and controls

GraphicsWindow.MouseDown = OnMouseDown

LDEvents.MouseWheel = OnMouseWheel

scalingLast = 1

scaling = scalingLast

scaleDelta = 0.05

panDelta = 10



While ("True")

  If (mouseDown = 1) Then

    xM = GraphicsWindow.MouseX

    yM = GraphicsWindow.MouseY

    hit = LDPhysics.GetShapeAt(xM,Ym)

    If (hit <> "") Then

      LDPhysics.SetImpulse(hit,0,-400*scaling*LDPhysics.GetMass(hit))

    EndIf

  EndIf

  

  If (wheel > 0) Then

    scaling = scalingLast+scaleDelta

    updateScale()

  ElseIf (wheel < 0) Then

    scaling = scalingLast-scaleDelta

    updateScale()

  EndIf

  

  If (LDUtilities.KeyDown("Left")) Then

    panX = -scaling*panDelta

    updateScale()

  ElseIf (LDUtilities.KeyDown("Right")) Then

    panX = scaling*panDelta

    updateScale()

  ElseIf (LDUtilities.KeyDown("Up")) Then

    panY = -scaling*panDelta

    updateScale()

  ElseIf (LDUtilities.KeyDown("Down")) Then

    panY = scaling*panDelta

    updateScale()

  EndIf

  

  'Handled events

  mouseDown = 0

  wheel = 0

  panX = 0

  panY = 0

  

  LDPhysics.DoTimestep()

  Program.Delay(20)

EndWhile



Sub OnMouseDown

  mouseDown = 1

EndSub



Sub OnMouseWheel

  wheel = LDEvents.LastMouseWheelDelta

EndSub



Sub updateScale

  If (scaling < 0.1) Then

    scaling = 0.1

  EndIf

  If (scaling > 20) Then

    scaling = 20

  EndIf

  GraphicsWindow.Title = "Scaling "+scaling

  'Pan to keep mouse point at the same position

  panX = panX+GraphicsWindow.MouseX*(scaling/scalingLast-1)

  panY = panY+GraphicsWindow.MouseY*(scaling/scalingLast-1)

  'Update the scaling

  LDPhysics.Scaling = 10*scaling

  LDPhysics.SetBoundaries(-1,gw+1,-1,gh+1) 'Get rid of borders imposed by scaling

  scalingLast = scaling

  'Zoom all objects

  LDShapes.ZoomAll(scaling,scaling)

  'Update panning

  LDPhysics.PanView(panX,panY)

  'Scaling for fixed shapes - here just a square, could be a background etc

  pan = LDPhysics.GetPan()

  Shapes.Move(square,squareX*scaling-pan[1]-squareSize,squareY*scaling-pan[2]-squareSize)

EndSub


