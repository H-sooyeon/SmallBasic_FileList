' Bejeweled in Small Basic

' Version 0.1a

' Copyright Â© 2017 Nonki Takahashi.  The MIT License.

' Challenge 2017-09

' Last update 2017-09-06



GraphicsWindow.Title = "Bejeweled in Small Basic"

debug = "False"

Init()

full = "False"

While "True"

  If full Then

    Swap()

  Else

    Add()

    Fall()

  EndIf

  n3 = 1

  full = "True"

  While 0 < n3

    Check()

    n3 = Array.GetItemCount(three)

    If 0 < n3 Then

      Remove()

      Fall()

      full = "False"

      n3 = 1

    EndIf

  EndWhile

EndWhile



Sub Add

  If debug Then

    TextWindow.WriteLine("Add")

  EndIf

  If mj = 0 Then

    mj = nj + 1

  EndIf

  For c = 1 To 8

    row = column[c]

    nr = Array.GetItemCount(row)

    r = 9

    For ro = nr + 1 To 8

      Map()

      j = ""

      j["col"] = c

      j["row"] = r

      j["y"] = y

      j["x"] = x

      j["vy"] = 0

      If debug Then

        j["ic"] = pattern[c][ro]

      Else

        j["ic"] = Math.GetRandomNumber(7)

      EndIf

      GraphicsWindow.BrushColor = color[j["ic"]]

      j["obj"] = Shapes.AddEllipse(30, 30)

      Shapes.Move(j["obj"], x, y)

      nj = nj + 1

      jewel[nj] = j

      row[r] = nj

      r = r + 1

    EndFor

    column[c] = row

  EndFor

  Dump()

EndSub



Sub Check

  If debug Then

    TextWindow.WriteLine("Check")

  EndIf

  three = ""

  For c = 1 To 8

    row = column[c]

    For r = 1 To 6

      j1 = jewel[row[r]]

      c1 = j1["ic"]

      j2 = jewel[row[r + 1]]

      c2 = j2["ic"]

      j3 = jewel[row[r + 2]]

      c3 = j3["ic"]

      If (c1 = c2) And (c2 = c3) Then

        three[j1["row"] + "," + j1["col"]] = "True"

        three[j2["row"] + "," + j2["col"]] = "True"

        three[j3["row"] + "," + j3["col"]] = "True"

      EndIf

    EndFor

  EndFor

  For r = 1 To 8

    For c = 1 To 6

      row1 = column[c]

      row2 = column[c + 1]

      row3 = column[c + 2]

      j1 = jewel[row1[r]]

      c1 = j1["ic"]

      j2 = jewel[row2[r]]

      c2 = j2["ic"]

      j3 = jewel[row3[r]]

      c3 = j3["ic"]

      If (c1 = c2) And (c2 = c3) Then

        three[j1["row"] + "," + j1["col"]] = "True"

        three[j2["row"] + "," + j2["col"]] = "True"

        three[j3["row"] + "," + j3["col"]] = "True"

      EndIf

    EndFor

  EndFor

  If debug Then

    TextWindow.WriteLine(three)

  EndIf

EndSub



Sub Clear

  If debug Then

    TextWindow.WriteLine("Clear")

  EndIf

  For ij = 1 To nj

    j = jewel[ij]

    Shapes.Remove(j["obj"])

  EndFor

  jewel = ""

  column = ""

  nj = 0

  mj = 0

  full = "False"

  score = 0

  Shapes.SetText(scoreText, score)

EndSub



Sub Fall

  If debug Then

    TextWindow.WriteLine("Fall")

  EndIf

  moved = "True"

  While moved

    moved = "False"

    For ij1 = mj To nj

      j1 = jewel[ij1]

      If j1 <> "" Then

        r = j1["row"]

        c = j1["col"]

        row = column[c]

        y1 = j1["y"]

        dr = 1

        newRow = "False"

        While (row[r - dr] = "") And (dr < r)

          dr = dr + 1

          newRow = "True"

        EndWhile

        If row[r - dr] = "" Then

          r = r - dr

          Map()

          r = r + dr

          y2 = y

        Else

          ij2 = row[r - dr]

          j2 = jewel[ij2]

          y2 = j2["y"]

        EndIf

        If y1 < y2 - 34 Then

          If j1["vy"] = 0 Then

            j1["vy"] = j1["vy"] + 1

          Else

            j1["vy"] = j1["vy"] * 2

          EndIf

          y1 = y1 + j1["vy"]

          If y2 - 34 <= y1 Then

            y1 = y2 - 34

            j1["vy"] = 0

            If newRow Then

              j1["row"] = r - dr + 1

              row[r - dr + 1] = ij1

              row[r] = ""

              column[c] = row

            EndIf

          EndIf

          Shapes.Move(j1["obj"], j1["x"], y1)

          j1["y"] = y1

          jewel[ij1] = j1

          moved = "True"

        EndIf

      EndIf

    EndFor

    Program.Delay(100)

  EndWhile

  Dump()

EndSub



Sub Dump

  If debug Then

    For c = 1 To 8

      If pattern Then

        TextWindow.Write("pattern[" + c + "] = " + WQ)

        row = column[c]

        For r = 1 To 8

          ij = row[r]

          j = jewel[ij]

          TextWindow.Write(r + "=" + j["ic"] + ";")

        EndFor

        TextWindow.WriteLine(WQ)

      Else

        TextWindow.WriteLine("[" + c + "] " + column[c])

      EndIf

    EndFor

    TextWindow.WriteLine("")

    For ij = mj To nj

      If jewel[ij] <> "" Then

        TextWindow.WriteLine("[" + ij + "] " + jewel[ij])

      EndIf

    EndFor

    TextWindow.WriteLine("")

    TextWindow.Read()

  EndIf

EndSub



Sub Fill

  If debug Then

    TextWindow.WriteLine("Fill")

  EndIf

  If mj = 0 Then

    mj = nj + 1

  EndIf

  For c = 1 To 8

    row = column[c]

    nr = Array.GetItemCount(row)

    For r = nr + 1 To 8

      Map()

      j = ""

      j["col"] = c

      j["row"] = r

      j["y"] = y

      j["x"] = x

      j["vy"] = 0

      If debug Then

        j["ic"] = pattern[c][r]

      Else

        j["ic"] = Math.GetRandomNumber(7)

      EndIf

      GraphicsWindow.BrushColor = color[j["ic"]]

      j["obj"] = Shapes.AddEllipse(30, 30)

      Shapes.Move(j["obj"], x, y)

      nj = nj + 1

      jewel[nj] = j

      row[r] = nj

    EndFor

    column[c] = row

  EndFor

  Dump()

EndSub



Sub GameOver

  GraphicsWindow.BrushColor = "#CC000000"

  mask = Shapes.AddRectangle(gw, gh)

  GraphicsWindow.FontName = "Trebuchet MS"

  tw = 379

  th = 70

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontSize = th

  txt = Shapes.AddText("GAME OVER")

  x = (gw - tw) / 2

  y = (gh - th) / 2

  Shapes.Move(txt, x, y)

  Program.Delay(3000)

  Shapes.Remove(txt)

  Shapes.Remove(mask)

EndSub



Sub Init

  color = "1=White;2=DarkTurquoise;3=LimeGreen;4=Yellow;"

  color = color + "5=DarkOrange;6=Red;7=DarkViolet;"

  LF = Text.GetCharacter(10)

  If debug Then

    WQ = Text.GetCharacter(34)

    pattern[1] = "1=4;2=7;3=2;4=7;5=1;6=2;7=3;8=4;"

    pattern[2] = "1=1;2=3;3=3;4=1;5=7;6=2;7=1;8=5;"

    pattern[3] = "1=2;2=2;3=3;4=3;5=2;6=2;7=2;8=7;"

    pattern[4] = "1=1;2=4;3=3;4=7;5=2;6=4;7=2;8=4;"

    pattern[5] = "1=6;2=4;3=4;4=1;5=3;6=3;7=6;8=6;"

    pattern[6] = "1=1;2=4;3=6;4=6;5=4;6=5;7=1;8=7;"

    pattern[7] = "1=4;2=4;3=3;4=5;5=6;6=5;7=7;8=2;"

    pattern[8] = "1=6;2=3;3=7;4=5;5=7;6=4;7=3;8=5;"

  EndIf

  GraphicsWindow.BackgroundColor = "Black"

  gw = 598

  gh = 428

  GraphicsWindow.Width = gw

  GraphicsWindow.Height = gh

  hiScore = 0

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.FontSize = 15

  GraphicsWindow.DrawText(20, 20, "SCORE")

  GraphicsWindow.DrawText(gw -120, 20, "HIGH SCORE")

  GraphicsWindow.FontSize = 30

  scoreText = Shapes.AddText("")

  Shapes.Move(scoreText, 20, 40)

  Clear()

  hiScoreText = Shapes.AddText(hiScore)

  Shapes.Move(hiScoreText, gw - 120, 40)

EndSub



Sub Map

  ' param c - column

  ' param r - row

  ' return x, y - position in the graphics window

  x = 130 + c * 34

  y = 360 - r * 34

EndSub



Sub Swap

  If debug Then

    TextWindow.WriteLine("Swap")

  EndIf

  GameOver()

  Clear()

  Add()

  Fall()

  Dump()

EndSub



Sub Remove

  If debug Then

    TextWindow.WriteLine("Remove")

  EndIf

  index = Array.GetAllIndices(three)

  n3 = Array.GetItemCount(three)

  For i3 = 1 To n3

    c = Text.GetSubText(index[i3], 3, 1)

    r = Text.GetSubText(index[i3], 1, 1)

    three[index[i3]] = ""

    row = column[c]

    ij = row[r]

    row[r] = ""

    column[c] = row

    j = jewel[ij]

    Shapes.Remove(j["obj"])

    jewel[ij] = ""

    score = score + 1

    Shapes.SetText(scoreText, score)

    If hiScore < score Then

      hiScore = score

      Shapes.SetText(hiScoreText, hiScore)

    EndIf

    If ij = mj + 1 Then

      mj = ij

    EndIf

  EndFor

  Dump()

EndSub

  


