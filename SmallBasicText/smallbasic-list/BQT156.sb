Init()

While Y1 < gh

  X1 = X1 + deltaX 

  Y1 = Y1 + deltaY 

  If (X1 >= gw - 16 or X1 <= 0) Then 

    deltaX = -deltaX 

  EndIf 

  If (Y1 <= 0) Then

    deltaY = -deltaY 

  EndIf 

  padX = Shapes.GetLeft(paddle) 

  If (Y1 = gh - 28 and X1 >= padX and X1 <= padX + pw) Then 

    deltaY = -deltaY 

  EndIf 

  If KeyDownEvent = 1 Then 

    KeyDownPress()

    KeyDownEvent = 0

  EndIf 

  Shapes.Move(paddle, ppw, pph)

  Shapes.Move(ball, X1, Y1) 

  checkBrickCollision()

  Program.Delay(7) 

  If points >= gw/bw*3 Then 

    GetBricks()

    sumpoints = sumpoints + points

    points = 0

    Program.Delay(200)

    X1 = ppw + 20

    Y1 = pph - 20

    Shapes.Move(ball, X1, Y1)

    Program.Delay(200)

  EndIf

EndWhile 

sumpoints = sumpoints + points

notice = "Your points = "

notice = Text.Append(notice, sumpoints)

GraphicsWindow.ShowMessage(notice, "End") 

Program.End()



'****************************************************************************



Sub Init

  GraphicsWindow.KeyDown = OnKeyDownEvent 

  gw = 660

  GraphicsWindow.Width = gw + 300

  gh = GraphicsWindow.Height 

  GraphicsWindow.BackgroundColor = "DarkBlue"

  pw = 120

  ph = 12

  phh = ph

  ppw = gw/2 - pw/2

  pph = gh - phh 

  W1 = 16

  H1 = W1 

  paddle = Shapes.AddRectangle(pw, ph) 

  Shapes.Move(paddle, ppw, pph)

  ball = Shapes.AddEllipse(W1, H1) 

  X1 = ppw + 20

  Y1 = pph - 20

  Shapes.Move(ball, X1, Y1)

  deltaX = 1 

  deltaY = 1 

  rowLength = Math.Floor(gw/50)

  GetBricks()

  points = 0

  panz = sumpoints + points

  GraphicsWindow.BrushColor = "Black"

  GraphicsWindow.FillRectangle(gw+1, 0, 300,660)

  GraphicsWindow.BrushColor = "White"

  GraphicsWindow.DrawText(gw+10,0,"Points: "+panz)

EndSub 'Init



Sub OnKeyDownEvent

  KeyDownEvent = 1

EndSub 



Sub KeyDownPress

  LK = GraphicsWindow.LastKey 

  'TextWindow.WriteLine(LK)

  If LK = "Up" Then

    phh = phh + 5

    If phh > 200 Then

      phh = 195

    EndIf 

    pph = gh - phh

  ElseIf LK = "Down" Then 

    phh = phh - 5

    If phh > 0 then 

      phh = 5

    EndIf  

    pph = gh - phh

  ElseIf LK = "Right" Then

    ppw = ppw + 10

    If ppw > gw - pw then 

      ppw = gw - pw - 10

    EndIf 

  ElseIf LK = "Left" Then 

    ppw = ppw - 10

    If ppw < 0 Then 

      ppw = 10

    EndIf 

  EndIf

EndSub  



Sub GetBricks

  bw = 60

  bh = bw / 1.6

  sx = bw * -1

  sy = 30

  For i = 1 To gw/bw*3 

    b[i]["C"] = GraphicsWindow.GetRandomColor()

    b[i]["W"] = bw

    b[i]["H"] = bh

    sx = sx + b[i]["W"]

    If sx = bw * 11 Then

      sx = 0

      sy = sy + b[i]["H"]

    EndIf 

    b[i]["X"] = sx

    b[i]["Y"] = sy

    GraphicsWindow.BrushColor = b[i]["C"]

    b[i]["S"] = Shapes.AddRectangle(b[i]["W"],b[i]["H"])

    Shapes.SetOpacity(b[i]["S"],80)

    Shapes.Move(b[i]["S"],b[i]["X"],b[i]["Y"])

  EndFor 

EndSub 



Sub checkBrickCollision

  For i = 1 To gw/bw*3

    If X1+W1 >= b[i]["X"] And X1 <= b[i]["X"]+b[i]["W"] And Y1+H1 >= b[i]["Y"] And Y1 <= b[i]["Y"]+b[i]["H"] Then 

' Bei Kollision mache folgendes

      Shapes.Remove(b[i]["S"])

      b[i]["X"] = -1

      b[i]["Y"] = -1

      deltaY = -deltaY

      points = points + 1

      panz = sumpoints + points

      GraphicsWindow.BrushColor = "Black"

      GraphicsWindow.FillRectangle(gw+1, 0, 300,20)

      GraphicsWindow.BrushColor = "White"

      GraphicsWindow.DrawText(gw+10,0,"Points: "+panz)

    EndIf 

  EndFor 

EndSub 'checkBrickCollision


