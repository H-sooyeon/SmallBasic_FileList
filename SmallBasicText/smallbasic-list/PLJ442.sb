'Tunnel Squares -- Based on concept by Sean Puckett circa 1983 -- Complements of codingCat aka Matthew L. Parets -- No rights reserved as long as no money earned.

max = 18            'Number of steps

size = 20           'size of steps

gradient = "True"   'Gradiant color (true) or random colors (false)



InitWindow()

SetColors()

BuildTunnel()



For m = 1 To rec[k][max]      'Setup First Layer

  Shapes.showShape(rec[k][m])

EndFor

pk = max

k = 0



'--- Main Program Loop

While "True"

  For m = 1 To rec[k][0]        'Show the next layer

    Shapes.showShape(rec[k][m])

  EndFor

  For m = 1 To rec[pk][0]       'Turn off the current layer

    Shapes.HideShape(rec[pk][m])

  EndFor

  Program.Delay(10)             'Wait here for a tick

  pk = k                        'Cycle the layers

  k = k - 1

  If k < 0 Then

    k = max

  EndIf

EndWhile



'---------------------------------------

'--- Subrouintes

'---------------------------------------



'--- Set up the window

Sub InitWindow

  GraphicsWindow.Height = 0

  GraphicsWindow.Width = (size * 2) * max + size

  hold = (size * 2) * max + size

  GraphicsWindow.Top = Desktop.Height / 2 - hold / 2 - 50

  GraphicsWindow.Left = Desktop.Width / 2 - GraphicsWindow.Width / 2

  GraphicsWindow.Show()

  

  cx = max * size

  cy = max * size

EndSub



'--- Set the color pallet. For each layer the color will move towards the center

Sub SetColors

  redvalue = 150

  If gradient Then

    For i = 0 To max

      If i < max / 2 Then

        redvalue = redvalue + (75 / (max / 2))

      Else

        redvalue = redvalue - (75 / (max / 2))

      EndIf

      color[i] = GraphicsWindow.GetColorFromRGB(redvalue,0,0)

    EndFor

  Else

    For i = 0 To max

      color[i] = GraphicsWindow.GetRandomColor()

    EndFor

  EndIf

EndSub



'--- Build the tunnel. shrinking squaires. One layer for each

'--- step in the movement. 

Sub BuildTunnel

  clrNum = -1

  For k = max To 0 Step -1     'for reach possilbe color combination

    col = 0

    cell = 0

    For i = max To 0 Step - 1  'for each possible color

      clrNum = clrNum + 1

      If clrNum > max then

        clrNum = 0

      EndIf

      GraphicsWindow.BrushColor = color[clrNum] 'draw the box for this color

      GraphicsWindow.PenColor = color[clrNum]

      cell = cell + 1

      rec[k][cell]= Shapes.AddRectangle((i * size)* 2+size,size)  'top

      Shapes.Move(rec[k][cell], ((col) * size) ,cy - (i * size))

      

      cell = cell + 1

      rec[k][cell]= Shapes.AddRectangle((i * size)* 2+size,size)  'bottom

      Shapes.Move(rec[k][cell], ((col) * size) ,cy + (i * size))

      

      If (i * size)* 2-size > 0 Then

        cell = cell + 1

        rec[k][cell] = Shapes.AddRectangle(size,(i * size)* 2-size) 'left

        Shapes.Move(rec[k][cell], ((col) * size) ,cy - ((i-1) * size))

        

        cell = cell + 1

        rec[k][cell] = Shapes.AddRectangle(size,(i * size)* 2-size) 

        Shapes.Move(rec[k][cell], ((col+(i*2)) * size) ,cy - ((i-1) * size))

      EndIf

      col = col + 1

    EndFor

    rec[k][0] = cell

    For m = 1 To rec[k][0]        'hide the layor

      Shapes.HideShape(rec[k][m])

    EndFor

    clrNum = clrNum + 1

    If clrNum > max then

      clrNum = 0

    EndIf

  EndFor

  'Accenuate the corners a bit

  GraphicsWindow.PenColor = GraphicsWindow.GetColorFromRGB(125,125,125)

  lin[1] = Shapes.AddLine(0,0,cx,cy)

  lin[2] = Shapes.AddLine(0,hold, cx, cy+size)

  lin[3] = Shapes.AddLine(hold, 0,cx + size, cy)

  lin[4] = Shapes.AddLine(hold,hold,cx+size, cy+size)

  For i = 1 To 4

    Shapes.SetOpacity(lin[i], 25)

  EndFor

  GraphicsWindow.Height = hold

  

EndSub


