GraphicsWindow.KeyDown=kkk

Shapes.AddEllipse(10,10)

GraphicsWindow.Width =1200

GraphicsWindow.Height =900

gg=LDShapes.BrushGradient ("1=#00aaaa;2=#008080;3=#000080","DD")

LDGraphicsWindow.BackgroundBrushGradient(gg) 

Turtle.x=30

Turtle.y=700

Turtle.Angle =75

Turtle.PenDown ()

aa=30



Turtle.Speed=10

dd=0

ss=-0.5

ii=10

sm="False

GraphicsWindow.PenWidth=3

'c1=LDDialogs.Colour() 

args=0

sc=0

Turtle.x=30

Turtle.y=350

Turtle.Angle =75

txx="iljbcdegfoprstuahkvmnqwxyz"

For f=1 To Text.GetLength (txx)

  

  cc= Text.GetSubText(txx,f,1)

  cc= Text.ConvertToUpperCase(cc)





If cc="L" then





'-------------------------L

dd=0

LDCall.Function ("sewto",28)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",25)

dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",12)

dd=6

LDCall.Function ("sewto",15)

Turtle.x=Turtle.x+140







elseIf cc="D" then

Turtle.x=Turtle.x+120

Turtle.y=Turtle.y-95

'---------------------D

dd=0

Turtle.Turn(180)

LDCall.Function ("sewto",18)

dd=6

LDCall.Function ("sewto",15)

dd=0

LDCall.Function ("sewto",12)

Turtle.TurnRight ()

LDCall.Function ("sewto",25)

Turtle.TurnRight ()

LDCall.Function ("sewto",8)

Turtle.TurnRight ()

LDCall.Function ("sewto",15)

ang1()

LDCall.Function ("sewto",1)

dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",13)

dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",13)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",14)

dd=6

LDCall.Function ("sewto",15)

Turtle.x=Turtle.x+40

Turtle.y= Turtle.y+90

Turtle.Angle=75





elseIf cc="J" then

Turtle.x=Turtle.x+120

Turtle.y=Turtle.y-135

'--------------------- J

dd=0

Turtle.Turn(180)

LDCall.Function ("sewto",28)

dd=6

LDCall.Function ("sewto",15)

dd=0

LDCall.Function ("sewto",12)

Turtle.TurnRight ()

LDCall.Function ("sewto",12)

Turtle.TurnRight ()

LDCall.Function ("sewto",8)

Turtle.TurnRight ()

LDCall.Function ("sewto",2)

ang1()

LDCall.Function ("sewto",1)

dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",15)

ang1()

dd=0

LDCall.Function ("sewto",1)

Turtle.TurnRight ()

LDCall.Function ("sewto",12)

Turtle.TurnRight ()

LDCall.Function ("sewto",11)



Turtle.x=Turtle.x+40

Turtle.y= Turtle.y+135

Turtle.Angle=75



elseIf cc="Q" then

Turtle.x=Turtle.x+180

Turtle.y=Turtle.y-95

'---------------------Q

dd=0

Turtle.Turn(180)

LDCall.Function ("sewto",18)

dd=6

LDCall.Function ("sewto",15)

dd=0

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",12)

Turtle.TurnRight ()

LDCall.Function ("sewto",6)

Turtle.TurnRight ()

LDCall.Function ("sewto",2)

ang1()

LDCall.Function ("sewto",1)

dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",13)

dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",9)





dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",13)

ang1()

dd=0

LDCall.Function ("sewto",1)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",2)

dd=6

LDCall.Function ("sewto",15)



dd=0

LDCall.Function ("sewto",16)

dd=6

LDCall.Function ("sewto",15)

dd=0

LDCall.Function ("sewto",13)



dd=6

LDCall.Function ("sewto",15)

Turtle.x=Turtle.x+40

Turtle.y= Turtle.y+90

Turtle.Angle=75





elseIf cc="B" then





'---------------------B

dd=0

Turtle.x=Turtle.x+100



Turtle.Angle=202

Turtle.y=Turtle.y-50

dd=6

LDCall.Function ("sewto",24)

dd=0

LDCall.Function ("sewto",12)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

ang1()

dd=0

LDCall.Function ("sewto",2)

ang1()

LDCall.Function ("sewto",6)

Turtle.TurnRight ()

LDCall.Function ("sewto",8)

Turtle.TurnRight ()

LDCall.Function ("sewto",6)

ang1()

dd=0

LDCall.Function ("sewto",2)

ang1()

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",9)

Turtle.TurnRight ()

LDCall.Function ("sewto",12)

dd=6

LDCall.Function ("sewto",23)

Turtle.Angle =75

Turtle.x=Turtle.x+40

Turtle.y=Turtle.y+42





elseIf cc="G" then



'---------------------G

dd=0

LDCall.Function ("sewto",16)

dd=6

LDCall.Function ("sewto",15)

dd=0

LDCall.Function ("sewto",12)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",11)

dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",2)

Turtle.TurnLeft() 

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",8)

Turtle.TurnRight ()

LDCall.Function ("sewto",20)

Turtle.TurnRight ()

LDCall.Function ("sewto",12)

dd=6

LDCall.Function ("sewto",15)

Turtle.x=Turtle.x+140



elseIf cc="C" then



'---------------------C

dd=0

LDCall.Function ("sewto",16)

dd=6

LDCall.Function ("sewto",15)

dd=0

LDCall.Function ("sewto",12)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",11)

dd=-10

LDCall.Function ("sewto",9)

dd=0

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",12)

dd=6

LDCall.Function ("sewto",15)

Turtle.x=Turtle.x+140



elseIf cc="E" then



'---------------------E

dd=0

LDCall.Function ("sewto",16)

dd=6

LDCall.Function ("sewto",15)

dd=0

LDCall.Function ("sewto",12)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",10)

ang1()

dd=0

LDCall.Function ("sewto",2)

ang1()

LDCall.Function ("sewto",6)

Turtle.TurnRight ()

LDCall.Function ("sewto",8)

Turtle.TurnRight ()

LDCall.Function ("sewto",6)



ang1()

dd=0

LDCall.Function ("sewto",2)



ang1()



LDCall.Function ("sewto",10)

Turtle.TurnRight ()

LDCall.Function ("sewto",9)

Turtle.TurnRight ()

LDCall.Function ("sewto",12)

dd=6

LDCall.Function ("sewto",15)

Turtle.x=Turtle.x+140

Endif

Endfor









Sub kkk

  lk = GraphicsWindow.LastKey

  If lk="Left" Then 

    dd=dd-0.1

  elseIf lk="Right" Then 

    dd=dd+0.1

  elseif lk="Space" then

    dd=0

  endif

  GraphicsWindow.Title=dd

EndSub



Sub sewto

  For x=1 To args[1]

    If ii<6 Then

      Turtle.PenUp ()

    Else

      Turtle.PenDown ()

    endif

    GraphicsWindow.PenColor=LDColours.HSLtoRGB(sc,1,0.8)

    sc=sc+2

    Turtle.Move(10)

    Turtle.Turn(-180+aa+dd)

    

    GraphicsWindow.PenColor="Black

    

    Turtle.Move(ii)

    Turtle.Turn(180-aa)

    If sm then

      ii=ii+ss

      If Math.Remainder(x,2)=0 Then 

        ii=ii+ss/3

      endif

      

      If (ss<0) And (ii<1)  Then 

        ss=-ss

        ii=1

      endif

      If (ss>0 And ii>10) Then 

        ss=-ss

        ii=10

      endif

    endif

    GraphicsWindow.title=x

    'GraphicsWindow.title="Done%:"+Math.Round ((x/1600)*100)

  endfor

EndSub





Sub ang1

  dd=-15

  LDCall.Function ("sewto",6)

  dd=0

  

EndSub 



Sub ang2

  dd=15

  LDCall.Function ("sewto",6)

  dd=0

  

EndSub 


