GraphicsWindow.Show()
GW = 800
GraphicsWindow.Width = GW
GraphicsWindow.Height = GW

Pi = Math.Pi
Ground = GW-100
GraphicsWindow.DrawLine(0,Ground,GW,Ground)
Metaball_Sides = 15
Metaball_Radius = 100
Metaball_Hardness = Metaball_Radius/2
Metaball_Area = Metaball_Radius*Metaball_Radius*Pi
Area = Metaball_Radius*Metaball_Radius*Pi

GraphicsWindow.PenWidth = 0
GraphicsWindow.BrushColor = "Red"
Center = Shapes.AddEllipse(10,10)

GraphicsWindow.PenWidth = 5

While "True"
  
  UpdateOutlines()
  'UpdateTriangles()
  
  If Mouse.IsLeftButtonDown Then
    Metaball_Y = GraphicsWindow.MouseY
    Metaball_X = GraphicsWindow.MouseX
    Metaball_WY = 0
  endif
  Shapes.Move(Center,Metaball_Center_X-5,Metaball_Center_Y-5)
  
  TextWindow.WriteLine("theta/2*radius^2: " + Metaball_Area)
  TextWindow.WriteLine("radius^2*pi:      " + Area)
  
  Program.Delay(15)
  
  TextWindow.Clear()
endwhile




Sub UpdateOutlines
  
  Metaball_WY = Metaball_WY + 1
  Metaball_Y = Metaball_Y + Metaball_WY
  Metaball_Cornersum = 0
  For i = 1 to Metaball_Sides
    Metaball_Cornersum = Metaball_Cornersum + Outline_Y[i]
  endfor
  Metaball_Center_Y = Metaball_Cornersum/Metaball_Sides
  'Metaball_Center_Y = Outline_Y[0] + ((Outline_Y[math.Ceiling(Metaball_Sides/2)]-Outline_Y[0])/2)
  Metaball_Center_X = Metaball_X
  
  If Metaball_Y+Metaball_Radius > Ground Then
    Metaball_WY = (Metaball_WY*0.9)-(Metaball_Hardness - (Ground - Metaball_Y))*0.05
    For i = 0 To Metaball_Sides
      Outline_Radius[i] = Metaball_WY + Metaball_Radius 'Math.SquareRoot((Metaball_Area)/Pi)
    endfor
  endif
  
  Metaball_Area = 0
  For i = 0 To Metaball_Sides
    angle = Pi*((i * (360/Metaball_Sides))/180-0.5) 'No -0.5 
    Outline_X[i] = Metaball_X+Outline_Radius[i]*Math.Cos(angle)
    Outline_Y[i] = Metaball_Y+Outline_Radius[i]*Math.Sin(angle)
    If Outline_Y[i] > Ground Then
      Outline_Y[i] = Ground
      Outline_Radius[i] = Math.SquareRoot(Math.Power((Outline_Y[i]-Metaball_Center_Y),2) + Math.Power((Outline_X[i]-Metaball_X),2))
    Else
      Outline_Radius[i] = Metaball_Radius
    endif
    If i > 0 Then
      Shapes.Remove(Outline[i])
      Outline[i] = Shapes.AddLine(Outline_X[i-1],Outline_Y[i-1],Outline_X[i],Outline_Y[i])
      Metaball_Area = Metaball_Area+(Math.GetRadians(360/Metaball_Sides/2)*(Outline_Radius[i]*Outline_Radius[i]))
    endif
  endfor
endsub

Sub UpdateTriangles
  For i = 1 To Metaball_Sides
    Shapes.Remove(Triangle[i])
    Triangle[i] = Shapes.AddTriangle(Outline_X[i-1],Outline_Y[i-1],Outline_X[i],Outline_Y[i],Metaball_Center_X,Metaball_Center_Y)
  endfor
endsub
