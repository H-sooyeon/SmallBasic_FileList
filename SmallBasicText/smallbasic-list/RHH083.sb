line1 = "HELLO JOHN MY DAY WAS great!! How are you?!"

line2 = "HELLO MY DAY TODAY WAS GREAT. How are you?"



punctuation = ",.!?()[]{};:@-" 'Treated as separate words



'Parse line1

phrase = line1

GetWords()

words1 = words

spaces1 = spaces

nWord1 = Array.GetItemCount(words1)



'Parse line2

phrase = line2

GetWords()

words2 = words

spaces2 = spaces

nWord2 = Array.GetItemCount(words2)



word1 = 1

word2 = 1

maxWords = Math.Max(nWord1,nWord2)+1 'To use when looking for future matches



While (word1 <= nWord1 And word2 <= nWord2)

  If (word1 > nWord1) Then 'Line1 has finshed

    word2 = nWord2

  ElseIf (word2 > nWord2) Then 'Line2 has finshed

    word1 = nWord1

  ElseIf (words1[word1] = words2[word2]) Then 'Current words are the same

    status1[word1] = 1

    status2[word2] = 1

  ElseIf (Text.ConvertToLowerCase(words1[word1]) = Text.ConvertToLowerCase(words2[word2])) Then 'Current words are the same (but different case)

    status1[word1] = 2

    status2[word2] = 2

  Else

    'Look a word in line2 that matches current line1 word (case insensitive)

    next2 = maxWords

    For i = word2+1 To nWord2

      If (Text.ConvertToLowerCase(words1[word1]) = Text.ConvertToLowerCase(words2[i])) Then

        next2 = i-word2

        i = nWord2

      EndIf

    EndFor

    'Look a word in line1 that matches current line2 word (case insensitive)

    next1 = maxWords

    For i = word1+1 To nWord1

      If (Text.ConvertToLowerCase(words2[word2]) = Text.ConvertToLowerCase(words1[i])) Then

        next1 = i-word1

        i = nWord1

      EndIf

    EndFor

    If (next1 <> next2) Then 'A match was found - set a case match

      If (next1 < next2) Then 'We found a match to line2 word earlier in line1 - so move to it

        word1 = word1+next1

      ElseIf (next2 < next1) Then 'We found a match to line1 word earlier in line2 - so move to it

        word2 = word2+next2

      EndIf

      If (words1[word1] = words2[word2]) Then 'Same case

        status1[word1] = 1

        status2[word2] = 1

      Else 'Different case

        status1[word1] = 2

        status2[word2] = 2

      EndIf

    EndIf

  EndIf

  'Next words

  word1 = word1+1

  word2 = word2+1

EndWhile



'Output Line 1 matches + spaces

For i = 0 To nWord1

  If (status1[i] = 1) Then

    TextWindow.ForegroundColor = "Green"

  ElseIf (status1[i] = 2) Then

    TextWindow.ForegroundColor = "Yellow"

  Else

    TextWindow.ForegroundColor = "Red"

  EndIf

  TextWindow.Write(words1[i])

  TextWindow.Write(spaces1[i])

EndFor

TextWindow.WriteLine("")



'Output Line 2 matches + spaces (start from 0 for possible spaces at the start)

For i = 0 To nWord2

  If (status2[i] = 1) Then

    TextWindow.ForegroundColor = "Green"

  ElseIf (status2[i] = 2) Then

    TextWindow.ForegroundColor = "Yellow"

  Else

    TextWindow.ForegroundColor = "Red"

  EndIf

  TextWindow.Write(words2[i])

  TextWindow.Write(spaces2[i])

EndFor

TextWindow.WriteLine("")



'Parse a line to find words separated by space(s) - we could also consider ignoring punctuation, but not here

Sub GetWords

  words = ""

  spaces = ""

  isWord = "False"

  count = 0

  For i = 1 To Text.GetLength(phrase)

    char = Text.GetSubText(phrase,i,1)

    If (char = " ") Then 'We are not in a word add number of spaces (these ares spaces after the word - count = 0 is initial spaces before first word)

      isWord = "False"

      spaces[count] = Text.Append(spaces[count],char)

    ElseIf (Text.IsSubText(punctuation,char)) Then 'Treat punctation as a new separate word

      count = count+1

      words[count] = char      

      isWord = "False"

    ElseIf (isWord) Then 'We are in the middle of a word so update it

      words[count] = Text.Append(words[count],char)

    Else 'A new word has started

      count = count+1

      isWord = "True"

      words[count] = char

    EndIf

  EndFor

EndSub


