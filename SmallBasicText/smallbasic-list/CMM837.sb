args=0

GraphicsWindow.Title = "IsoTetris"

GraphicsWindow.PenWidth=0

Init()

GraphicsWindow.BrushColor="darkgreen

GraphicsWindow.FillRectangle (0,gh/3 gw gh)

rx=1

LDUtilities.ShowNoShapeErrors ="false

ss=50

c160=180

ccc=c160

For dt=1 to 7

  For x=1 to 7

    For z=1 To 8

      ca[dt][x][z]="Gray"

      ldcall.Function5("DrawCube",x dt z (ss-4) "teal")

    EndFor 

  endfor

endfor



bl[1][1][1]=LDText.Split(". x x"," ")

bl[1][1][2]=LDText.Split("x x ."," ")

bl[1][2][1]=LDText.Split(". . ."," ")

bl[1][2][2]=LDText.Split(". . ."," ")



bl[2][1][1]=LDText.Split("x x ."," ")

bl[2][1][2]=LDText.Split("x . ."," ")

bl[2][2][1]=LDText.Split("x . ."," ")

bl[2][2][2]=LDText.Split(". . ."," ")



bl[3][1][1]=LDText.Split("x x ."," ")

bl[3][1][2]=LDText.Split("x x ."," ")

bl[3][2][1]=LDText.Split("x x ."," ")

bl[3][2][2]=LDText.Split("x x ."," ")



cbx=1

cby=1

s2=1

h2=1

LDCall.Function4("shblk" s2, 6 cbx cby)

GraphicsWindow.KeyDown =kdd



Sub kdd

  lk=GraphicsWindow.LastKey 

  If lk="Left" Then

    LDCall.Function4("hdblk" h2, 6 cbx cby)

    cbx=cbx+1

    lmts()

    LDCall.Function4("shblk" s2, 6 cbx cby)

    h2=s2

  ElseIf lk="Right" Then

    LDCall.Function4("hdblk" h2, 6 cbx cby)

    cbx=cbx-1

    lmts()

    LDCall.Function4("shblk" s2, 6 cbx cby)

    h2=s2

  elseIf lk="Up" Then

    LDCall.Function4("hdblk" h2, 6 cbx cby)

    cby=cby-1

    lmts()

    LDCall.Function4("shblk" s2, 6 cbx cby)

    h2=s2

  ElseIf lk="Down" Then

    LDCall.Function4("hdblk" h2, 6 cbx cby)

    cby=cby+1

    lmts()

    LDCall.Function4("shblk" s2, 6 cbx cby)

    h2=s2

  ElseIf lk="Space" Then  

    s2=s2+1

    If s2>3 then

      s2=1

    EndIf

    LDCall.Function4("hdblk" h2, 6 cbx cby)

    LDCall.Function4("shblk" s2, 6 cbx cby)

    h2=s2

EndIf 

  

EndSub



sub lmts

  If cbx<1 Then

    cbx=1

  ElseIf  cbx>7 then

    cbx=7

  EndIf

  If cby<1 Then

    cby=1

  ElseIf  cby>7 then

    cby=7

  EndIf

  

EndSub 



Sub bset

  bb=args[1]

  bx=args[3]

  by=args[2]

  bz=args[4]

  

  For ll=1 To 2

    For ly=1 To 2

      For lx=1 To 3

        If bl[bb][ll][ly][lx]="x" Then

          For i=1 To 3

            Shapes.SetOpacity (po[by+ly][bx+lx][bz+ll][i] lw)

            ldShapes.BrushColour (po[by+ly][bx+lx][bz+ll][i] LDColours.HSLtoRGB(ccc 1 .8/Math.Power(1.5 i)))

          EndFor

        endif

      EndFor 

    EndFor 

  EndFor 

  

EndSub 





Sub shblk

  lw=100

  ccc=0

  bset()

EndSub 



Sub hdblk

  lw=5

  ccc=c160

  bset() 

EndSub 



Sub Init

  

  gw = 1000

  gh = 800

  GraphicsWindow.Width = gw

  GraphicsWindow.Height = gh

  GraphicsWindow.BackgroundColor = LDColours.HSLtoRGB (220 1 0.6)

  

EndSub



Sub Conv3Dto2D

  cx = gw / 2 - Math.SquareRoot(1 / 2) * args[1]*ss

  cx = cx + Math.SquareRoot(1 / 2) * args[2]*ss

  cy = gh / 2 + Math.SquareRoot(1 / 6) * args[1]*ss

  cy = cy + Math.SquareRoot(1 / 6) * args[2]*ss

  cy = cy - Math.SquareRoot(2 / 3) * args[3]*ss

EndSub



Sub Color_RGBtoHSL

  rHue=LDColours.GetHue (sColor)

  rLightness=LDColours.GetLightness(sColor )

  rSaturation=LDColours.GetSaturation (sColor )

EndSub



Sub DrawCube

  lz=args[3]

  xx=args[1]

  yy=args[2]

  Conv3Dto2D()

  edge = Math.SquareRoot(2 / 3) * args[4]

  x1 = math.Round (cx)

  y1 = math.Round (cy)

  sColor = args[5]

  For i=1 To 3 

    color[i] = LDColours.HSLtoRGB(ccc 1 .8/Math.Power(1.5 i))

  EndFor 

  GraphicsWindow.PenWidth =0

  

  x3=0

  x4=0

  y3=0

  y4=0

  pc=1

  For a = 60 To 420 Step 60

    x2 = math.Round (cx - edge * ldMath.Sin(a))

    y2 = math.Round (cy - edge * ldMath.Cos(a))

    If a>60 and math.Remainder ((a-60),120)=0 Then

      ppp=0

      ppp[1][1]=x1+50

      ppp[1][2]=y1-30 

      ppp[2][1]=x2+50

      ppp[2][2]=y2-30 

      ppp[3][1]=x3+50

      ppp[3][2]=y3-30 

      ppp[4][1]=x4+50

      ppp[4][2]=y4-30 

      

      of=1

      GraphicsWindow.PenColor =color[(a-60) / 120]

      po[lz][xx][yy][pc]=LDShapes.AddPolygon (ppp) 

      

      LDShapes.BrushColour(po[lz][xx][yy][pc],color[(a-60)/120])

      If args[3]>1 and args[1]>1 and args[2]>1 then 

        Shapes.SetOpacity (po[lz][xx][yy][pc] 5)

      Else

        Shapes.SetOpacity (po[lz][xx][yy][pc] 100)

      endif

      pc=pc+1

    EndIf

    

    x4 = x3

    y4 = y3

    x3 = x2

    y3 = y2

  EndFor

EndSub


