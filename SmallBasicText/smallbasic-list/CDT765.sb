GraphicsWindow.BackgroundColor="teal

Turtle.Speed=10

GraphicsWindow.Width=500

GraphicsWindow.Title="B/W tv demo

Turtle.x=70

Turtle.y=120

Turtle.PenUp ()

GraphicsWindow.PenWidth=0

GraphicsWindow.BrushColor="gold

Shapes.Move(Shapes.AddRectangle (27 35) 353 220)

Shapes.Move(Shapes.AddRectangle (27 35) 70 220)

GraphicsWindow.BrushColor =LDColours.HSLtoRGB (0 .7 .3)

For x= 0 to 60

  rr=shapes.AddRectangle (310 229)

  Shapes.move (rr 70+x/1.5 120-x/2)

  ldShapes.ZIndex (rr, -3)

endfor

GraphicsWindow.BrushColor="gold

args=0

a9=8.9

px=1

ldcall.Function("tMove" 0)

Turtle.TurnRight()

ldcall.Function("tMove" 160)

Turtle.TurnRight()

ldcall.Function("tMove" 25)

Turtle.TurnRight()

For x=1 To 10

  ldcall.Function("tMove" 11)

  Turtle.Turn (-1)

EndFor 

For x=1 To 9

  ldcall.Function("tMove" 4)

  Turtle.Turn (-a9)

EndFor 

ldcall.Function("tMove" 45)

Turtle.TurnRight ()

doo="true

ldcall.Function("tMove" 27)



Turtle.TurnRight ()

ldcall.Function("tMove" 103)



Turtle.Angle=90

ldcall.Function("tMove" 310)

px=1

ldcall.Function("tMove" 0)

Turtle.Turn (180)

ldcall.Function("tMove" 160)

Turtle.TurnLeft()

ldcall.Function("tMove" 25)

Turtle.TurnLeft()

For x=1 To 10

  ldcall.Function("tMove" 11)

  Turtle.Turn (1)

EndFor 

For x=1 To 9

  ldcall.Function("tMove" 4)

  Turtle.Turn (a9)

EndFor 

ldcall.Function("tMove" 45)

Turtle.TurnLeft  ()

doo="true

ldcall.Function("tMove" 27)

Turtle.TurnLeft  ()

ldcall.Function("tMove" 103)





Turtle.Angle=180

ldcall.Function("tMove" 230)

px=1

ldcall.Function("tMove" 0)

Turtle.TurnRight()

ldcall.Function("tMove" 160)

Turtle.TurnRight()

ldcall.Function("tMove" 25)

Turtle.TurnRight()

For x=1 To 10

  ldcall.Function("tMove" 11)

  Turtle.Turn (-1)

EndFor 

For x=1 To 9

  ldcall.Function("tMove" 4)

  Turtle.Turn (-a9)

EndFor 

ldcall.Function("tMove" 45)

Turtle.TurnRight ()

doo="true

ldcall.Function("tMove" 27)

Turtle.TurnRight ()

ldcall.Function("tMove" 103)

Turtle.Angle=-90

ldcall.Function("tMove" 310)

Turtle.Turn (180)

px=1

ldcall.Function("tMove" 0)

ldcall.Function("tMove" 160)

Turtle.TurnLeft()

ldcall.Function("tMove" 25)

Turtle.TurnLeft()

For x=1 To 10

  ldcall.Function("tMove" 11)

  Turtle.Turn (1)

EndFor 

For x=1 To 9

  ldcall.Function("tMove" 4)

  Turtle.Turn (a9)

EndFor 

ldcall.Function("tMove" 45)

Turtle.TurnLeft  ()

doo="true

ldcall.Function("tMove" 27)

Turtle.TurnLeft  ()

ldcall.Function("tMove" 103)

GraphicsWindow.BrushColor="black

tt=Shapes.AddRectangle (290 200)

Shapes.Move (tt 75 125)

LDShapes.ZIndex (tt , -2)

ss=Shapes.AddRectangle (12 200)

LDShapes.ZIndex (ss, -1)

LDShapes.BrushColour (ss "lightgray")

Shapes.Move(ss 75 125)

Turtle.Hide ()

While "true

  For p=1 to 4 

    ii=imagelist.LoadImage (Flickr.GetRandomPicture("winter"))

    LDImage.EffectGray(ii)

    for q=1 to 5

      pi[p][q]=LDImage.Copy(ii) 

      LDImage.EffectSnow (pi[p][q] 44)

    EndFor 

  endfor 

  p=0

  q=1

  For x=0 to 290 Step 3

    Shapes.Move(ss x+75 125)

    Program.Delay (77)

    If Math.Remainder (x 72)=0 Then

      p=p+1

     ' GraphicsWindow.Title=p

      q=1

    EndIf 

    LDShapes.BrushShape  (tt LDShapes.BrushImage ( pi[p][q]))

    q=q+1

    If q>5 Then

      q=1

    endif

  endfor

  

endwhile

Sub tmove

  Turtle.Move (args[1])

  pp[px][1]=Turtle.X

  pp[px][2]=Turtle.Y

  px=px+1

  If doo Then

    LDShapes.AddPolygon (pp)

    pp=""

    px=1

    doo="false

  endif

endsub


