' SmallBasic Version 1.0
' Funktion: DragOnMove - Parameter Coord (Polar)    , eg. northern hemispere
' Autor: Pappa Lapub
' Herkunft: 
' ImportURL: http://smallbasic.com/program/?
' Extension: ---
' Kommentar: 
'  
' Variablen: 
'  
' --------------------------------------------------------------------------------
W = 50      ' Shape Width
H = 50      ' Shape Height
y = 0       ' Offset from GW Top

GW = GraphicsWindow.Width
GH = GraphicsWindow.Height
GraphicsWindow.BackgroundColor = "SkyBlue"

GraphicsWindow.PenWidth = 0
GraphicsWindow.BrushColor = "Gold"
SkyObj = Shapes.AddEllipse(W,H)

CenterX = (GW - W)/2        ' x center point for circle/ellipse trajectory
CenterY = 2*GH '  (GH + W)/2    ' y center point for circle/ellipse trajectory
Radius = CenterY - y        ' radius for trajectory

Alpha0 = 255    ' empiric In-Left  angle at default GW size, L2R
Alpha1 = 285    ' empiric Out-Right  angle at default GW size, L2R
Angle = Alpha0  ' L2R
'Angle = Alpha1    '  JibbaJabba mode   R2L (southern hemishere)

dAngle = 0.1  ' L2R
'dAngle = -0.1     '  JibbaJabba mode   R2L
Shapes.Move(SkyObj,-2*W,0)

'' Eclipse
'GraphicsWindow.BrushColor = "SkyBlue"
'Eclipse = Shapes.AddEllipse(W, H)   '  or eg.  W+40, H+20
'Shapes.SetOpacity(Eclipse, 80)      ' 20% transparent
'Shapes.Move(Eclipse, GW/2-W/2, 0)   '  or  eg. GW/2-W/2-20, -10

DragOn = ""
DoMove = "True"

GraphicsWindow.MouseDown = OnMouseDown
GraphicsWindow.MouseUp = OnMouseUp


Loopz:
While DoMove
  Angle = Angle + dAngle   ' L2R
  If Angle >= Alpha1 Then       ' continue from opposite GW side
    Angle = Alpha0
  EndIf
  
  SkyX = CenterX + 1.5 * Radius * Math.Cos(Math.GetRadians(Angle))
  SkyY = CenterY + Radius * Math.Sin(Math.GetRadians(Angle))
  Shapes.Move(SkyObj, SkyX,SkyY)
  Program.Delay(50)       ' set speed
EndWhile

While DragOn = "True"
  SkyX = GraphicsWindow.MouseX - xOff
  SkyY = GraphicsWindow.MouseY - yOff
  Shapes.Move(SkyObj, SkyX,SkyY)
EndWhile

Goto Loopz


' //////////  EVENTs  -  SUBs  \\\\\\\\\\

Sub OnMouseDown
  MX = GraphicsWindow.MouseX
  MY = GraphicsWindow.MouseY
  If (MX >= SkyX And MX <= SkyX+W And MY >= SkyY And MY <= SkyY+H) Then
    DoMove = ""
    DragOn = "True"
    xOff = MX-SkyX
    yOff = MY-SkyY
  EndIf
EndSub

Sub OnMouseUp
  DragOn = ""
  Angle = 360 - Math.GetDegrees(Math.ArcCos((SkyX-CenterX) / (1.5*Radius)))
  SkyY = Radius * Math.Sin(Math.GetRadians(Angle)) + CenterY
  Shapes.Move(SkyObj, SkyX,SkyY)
  DoMove = "True"
EndSub
 
