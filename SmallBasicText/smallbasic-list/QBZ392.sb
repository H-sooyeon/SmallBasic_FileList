'-----------------------------------------------------------------------------------------------------------

'--------------------------Armored Assault---------------------------------------------------------------

'--------------------------Developed By ----------------------------------------------------------------

'--------------------------Sean Sullivan-----------------------------------------------------------------

'===========Copyright DOSMANN INC.=================================

'-----------------------Started Jan, 2014----------------------------------------------------------------

'------------------------------------------------------------------------------------------------------------

'------------------------------------------------------------------------------------------------------------





GraphicsWindow.Height = 100

GraphicsWindow.Width = 300

GraphicsWindow.BrushColor = "Black"

GraphicsWindow.Title = ""

LDUtilities.Icon = Program.Directory + "/Icon.ico"

GraphicsWindow.DrawText(70,20,"Enter the server name:")

TxtBox = Controls.AddTextBox(65,40)

B = Controls.AddButton("Host",125,65)

Controls.ButtonClicked = OnButtonClicked

Sub OnButtonClicked

  Data = LDNetwork.GetGameData("TankWarsBeta")

  NumofServers = LDNetwork.GetGameData("TankWarsBetaNum")

  Servers = LDNetwork.GetGameData("TankWarsServers")

  For t = 1 To 20

  If Servers[t] = "open" Then

    'TextWindow.WriteLine("Server " + t + " is open")

    Server2Host = t

    Servers[t] = "closed"

    Goto Escape

  EndIf

EndFor

  Escape:

LDNetwork.SetGameData("TankWarsServers",Servers)

  Data[Server2Host]["Server"] = Controls.GetTextBoxText(TxtBox)

  Data[Server2Host]["Port"] = 14567

  Server = IOTCPServer.StartServer(14567)

  Data[Server2Host]["IP"] = IOTCPServer.IP



  CanStartgame = "Yes"

EndSub



While CanStartgame <> "Yes" 

  Program.Delay(50)

EndWhile



GraphicsWindow.Clear()

GraphicsWindow.Width = 781

GraphicsWindow.Height = 600

GraphicsWindow.MouseMove = OnMouseMove

GraphicsWindow.KeyDown = OnKeyDown

GraphicsWindow.KeyUp = OnKeyUp

GraphicsWindow.MouseDown = TankSelection

LDUtilities.ShowErrors = "False"











LDUtilities.ExitOnClose = "False"

LDUtilities.GWClosing = OnGWClose

LDShapes.AnimationInterval = 40

Img = ImageList.LoadImage(Program.Directory + "/Sand.png")

For i10 = 1 to 2000 Step 1000

  For i11 = 1 To 2000 Step 500

    '  Shapes.Move(Shapes.AddImage(Img),i10,i11)

    GraphicsWindow.DrawImage(Img,i10,i11)

  EndFor

EndFor

















'GraphicsWindow.KeyDown = OnKeyDown



CurrentMap = "JunkYardOfDeath"



'Coo

DefineLevels()

SetupLevel()



Mouse.HideCursor()

MouseCursorDir = Program.Directory + "\crosshair.png"

MouseCursor =  Shapes.AddImage(MouseCursorDir)



' The following line could be harmful and has been automatically commented.

' Username[1] = LDEncryption.AESDecrypt(File.ReadLine(Program.Directory + "/Settings.txt",1),"TankWars")





SpawnTime = 5

NumOfPlayers = 1

MaxSpeed = 15

AccelerationInc = 0.020

DecelerationInc = 0.02'0050

TurningSpeed = 3

BallCount = 10

Delta = 1

power = 20

Gravity = 0 '<--- Change this to 1500 to use it well

PlayerNum = 1

TankHealthInit = 100

wkey = 0

skey = 0

dkey = 0

akey = 0

Firelast = Clock.ElapsedMilliseconds





Progdir = Program.Directory + "\"



TankWeapon = LDNetwork.GetGameData("TankWarsWeapons")

SecectorCircle = Shapes.AddImage(Progdir + "Select.png")

Shapes.Move(SecectorCircle,5000,5000)









For w = 1 to BallCount

  Var = LDNetwork.GetGameData("TankWars" + Username[1])

  CurrentProj[1] = Var["weapon"]

  Exp[1][w] = LDShapes.AddAnimatedImage(Progdir + TankWeapon[CurrentProj[1]]["Animation"],"False",TankWeapon[CurrentProj[1]]["AnimCountx"],TankWeapon[CurrentProj[1]]["AnimCounty"])

  LDShapes.AnimationSet(Exp[1][w],16)

  

EndFor



For q = 1 To NumOfPlayers

  Tankx[q] = TankInitPos[q]["x"]

  Tanky[q] = TankInitPos[q]["y"]

  UsernameText[q] = Shapes.AddText(Username[q])

  TankExp[q] = LDShapes.AddAnimatedImage(Program.Directory + "/Animations/anim1.png","False",8,6)

  LDShapes.AnimationSet(TankExp[q],48)

  

  TankHealth[q] = TankHealthInit

  Var = LDNetwork.GetGameData("TankWars" + Username[1])

  CurrentProj[q] = Var["weapon"]

  

  Tank[q] = Shapes.AddImage(Program.Directory + "/Tank.png")

  Turret[q] = Shapes.AddImage(Program.Directory + "/" + TankWeapon[CurrentProj[q]]["Turret"])

  

  ScoreText[q] = Shapes.AddText("")

Endfor



LDScrollBars.Add(1680,1200)

LDScrollBars.Visibility = "False"



If Server = "SUCCESS" Then

  SentData = LDNetwork.SetGameData("TankWarsBeta",Data)

  LDNetwork.SetGameData("TankWarsBetaNum",NumofServers + 1)

EndIf

IOTCPServer.OnClientConnect = OnClientConnect

IOTCPServer.OnMessageRecieved = OMR



'Timer.Tick = MainLoop

'Timer.Interval = 10



While 1 = 1

  Program.Delay(20)

  GraphicsWindow.Title = "You are at " + TankHealth[1] + " Health"

  If Tanky[1] < 4000 Then

    LDScrollBars.VerticalScroll = Tanky[1] - 300

    LDScrollBars.HorizontalScroll = Tankx[1] - 400

  EndIf

  For q = 1 To NumOfPlayers

    Shapes.Move(UsernameText[q],Tankx[q],Tanky[q] - 15)

   ' Shapes.Move(ScoreText[q],10,10*q)

 '   Shapes.SetText(ScoreText[q], Username[q] + ": " + Score[q])

    If TankDead[q] = "True" Then

      If (Clock.ElapsedMilliseconds - TankDieat) > (SpawnTime *1000) Then

        TankDead[q] = "False"

        Tankx[q] = TankInitPos[q]["x"]

        Tanky[q] = TankInitPos[q]["y"]

        TankHealth[q] = TankHealthInit

      EndIf

    EndIf

    

    

    If TankDead[1] = "True" Then

      

      

      If q = 1 Then

        Shapes.Move(Tank[q],Tankx[q],Tanky[q])

        Shapes.Move(Turret[q],Tankx[q] + 6,Tanky[q] - 28)

        MoveBalls()

        CheckBulletColision()

        Goto Skip

      EndIf

    EndIf

    Shapes.Move(Tank[q],Tankx[q],Tanky[q])

    Shapes.Move(Turret[q],Tankx[q] + 6,Tanky[q] - 28)

    If SelectedTank <> "" Then

      Shapes.Move(SecectorCircle,Tankx[SelectedTank] - 15,Tanky[SelectedTank] - 10)

    Endif

    Shapes.Rotate(Tank[q],Angle[q] + 90)

    MoveBalls()

    GetTurretAngle()

    RotateTurret()

    SetTime()

    GetAngle()

    GetTankpos()

    CheckColision()

    If Username[q] <> "" Then

      CheckBulletColision()

    EndIf

    Skip:

  EndFor

  

  If Mouse.IsLeftButtonDown Then

    OnMouseDown()

  EndIf

  

  

  

EndWhile





'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

'++++++++++++++++++++++SUBROUTINES+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++





Sub SetTime

  Time = Time + Dtime[q]

  If q = 1 Then   '<--------------------------------------V

    If LDUtilities.KeyDown("w") Then

      If Dtime[q] < .002 Then

        Dtime[q] = Dtime[q] + AccelerationInc

      EndIf

    EndIf     

    If LDUtilities.KeyDown("w") <> "True" Then

      If Dtime[q] > 0 Then

        Dtime[q] = Dtime[q] - DecelerationInc

      EndIf

    EndIf

    

    

    

    

    If LDUtilities.KeyDown("s") Then

      If Dtime[q] > -0.001 Then

        Dtime[q] = Dtime[q] - (AccelerationInc / 2)

      EndIf

    EndIf     

    If LDUtilities.KeyDown("s") <> "True" Then

      If Dtime[q] < 0 Then

        Dtime[q] = Dtime[q] + DecelerationInc

      EndIf

    EndIf

    

    

    

  Else   '<------------------------------------------------------^

    If ClientKey[q]["w"] = "Down" Then

      If Dtime[q] < .002 Then

        Dtime[q] = Dtime[q] + AccelerationInc

      EndIf

    EndIf     

    If ClientKey[q]["w"] = "Up" Then

      If Dtime[q] > 0 Then

        Dtime[q] = Dtime[q] - DecelerationInc

      EndIf

    EndIf

    

    

    

    If ClientKey[q]["s"] = "Down" Then

      If Dtime[q] > -0.001 Then

        Dtime[q] = Dtime[q] - (AccelerationInc / 2)

      EndIf

    EndIf     

    If ClientKey[q]["s"] = "Up" Then

      If Dtime[q] < 0 Then

        Dtime[q] = Dtime[q] + DecelerationInc

      EndIf

    EndIf

    

    

    

  EndIf

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub OnMouseMove

  Mx = GraphicsWindow.MouseX

  My = GraphicsWindow.Mousey

  Shapes.Move(MouseCursor,Mx - 15,My - 15) '<-- No Idea why it is 15 not 30, but it works

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub SetupLevel

  For Levx = 1 To Text.GetLength(Level[1][1])

    For Levy = 1 To 40

      If Text.GetSubText(Level[1][Levy],Levx,1) = "p" Then

        Shapes.Move(Shapes.AddImage(Program.Directory + "/Brick.Png"),Levx * 30 - 30,Levy * 30 - 30)

      EndIf

      If LDUtilities.IsNumber(Text.GetSubText(Level[1][Levy],Levx,1)) Then

        TankInitPos[Text.GetSubText(Level[1][Levy],Levx,1)]["x"] = Levx * 30 - 30

        TankInitPos[Text.GetSubText(Level[1][Levy],Levx,1)]["y"] = Levy * 30 - 30

        

      EndIf

    EndFor

  EndFor

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub DefineLevels

  LevelPath = Program.Directory + "/Levels/" + CurrentMap + ".txt"

  For ly = 1 To 40

' The following line could be harmful and has been automatically commented.

'     Level[1][ly] = File.ReadLine(LevelPath,ly)

    EndFor

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub GetAngle

  If q = 1 Then

    If LDUtilities.KeyDown("a") Then

      Angle[q] = Angle[q] - TurningSpeed

    ElseIf LDUtilities.KeyDown("d") Then

      Angle[q] = Angle[q] + TurningSpeed

    EndIf

    

    

  Else

    

    If ClientKey[q]["a"] = "Down" Then

      Angle[q] = Angle[q] - TurningSpeed

    ElseIf ClientKey[q]["d"] = "Down" Then

      Angle[q] = Angle[q] + TurningSpeed

    EndIf

    

  EndIf

  If Angle[q] >= 360 Then

    Angle[q] = 0

  EndIf

  

  If Angle[q] < 0 Then

    Angle[q] = 359 - Angle[q]

  EndIf

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub CheckColision

  

  RealDtime[q] = Dtime[q]

  RealAngle = Angle[q]

  

  Time = Time + Dtime[q]

  If q = 1 Then

    If LDUtilities.KeyDown("w") Then

      If Dtime[q] < .002 Then

        Dtime[q] = Dtime[q] + AccelerationInc

      EndIf

    EndIf     

    If LDUtilities.KeyDown("w") <> "True" Then

      If Dtime[q] > 0 Then

        Dtime[q] = Dtime[q] - DecelerationInc

      EndIf

    EndIf

  Else

    

    If ClientKey[q]["w"] = "Down" Then

      If Dtime[q] < .002 Then

        Dtime[q] = Dtime[q] + AccelerationInc

        

      EndIf

    EndIf     

    If clientKey[q]["w"] = "Up" Then

      If Dtime[q] > 0 Then

        Dtime[q] = Dtime[q] - DecelerationInc

      EndIf

    EndIf

    

    

  EndIf

  Array2 = Zock77Math.Fire(Tankx[q],Tanky[q],0,Time,MaxSpeed,Angle[q])

  TankxCheck[q] = Array2["x"]

  TankyCheck[q] = Array2["y"]

  TankRoundx = Math.Round((TankxCheck[q] - 15) / 30 + 1)

  TankRoundy = Math.Round((TankyCheck[q] - 15) / 30 + 1)

  TankxCheck2[q] = Array2["x"] + 35

  TankyCheck2[q] = Array2["y"] + 35

  TankRoundx2 = Math.Round((TankxCheck2[q] - 15) / 30 + 1)

  TankRoundy2 = Math.Round((TankyCheck2[q] - 15) / 30 + 1)

  Result = Text.GetSubText(Level[1][TankRoundy],TankRoundx,1)

  Result2 = Text.GetSubText(Level[1][TankRoundy2],TankRoundx2,1)

  If Result = "p" Or Result2 = "p" Then

    Angle[q] = Zock77Math.RoundtoNearest(Angle[q],90)

    Dtime[q] = 0

  Else

    Dtime[q] = RealDtime[q]

  EndIf

  Time = 0

EndSub

'

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub Fire

  

  ShotsFired[FiringTank] = ShotsFired[FiringTank] + Delta

  If Ball[FiringTank][ShotsFired[FiringTank]] = "" Then '<--- If it has not already spawned, then add it

    

    If TankWeapon[CurrentProj[FiringTank]]["ProjectileAnix"] = 1 And TankWeapon[CurrentProj[FiringTank]]["ProjectileAniy"] =1 Then

      Ball[FiringTank][ShotsFired[FiringTank]] = Shapes.AddImage(Progdir + TankWeapon[CurrentProj[FiringTank]]["Projectile"])

    Else

      Ball[FiringTank][ShotsFired[FiringTank]] = LDShapes.AddAnimatedImage(Progdir + TankWeapon[CurrentProj[FiringTank]]["Projectile"],"True",TankWeapon[CurrentProj[FiringTank]]["ProjectileAnix"],TankWeapon[CurrentProj[FiringTank]]["ProjectileAniy"])

    EndIf

  EndIf

  If ShotsFired[FiringTank] > BallCount Then '<--- If the number of shots fired is more than the number of balls that can possible be on the screen, Then set it to One

    ShotsFired[FiringTank] = 1

  EndIf

  Missile_Dead[FiringTank][ShotsFired[FiringTank]] = "False"

  If TankWeapon[CurrentProj[FiringTank]]["Homeing"] = "True" Then

    vx[FiringTank][ShotsFired[FiringTank]] = Math.GetDegrees(Math.Cos(Math.GetRadians(TurretAngle[FiringTank] - 90))) * (TankWeapon[CurrentProj[FiringTank]]["Velocity"] / 750)

    vy[FiringTank][ShotsFired[FiringTank]] = Math.GetDegrees(Math.Sin(Math.GetRadians(TurretAngle[FiringTank] - 90))) * (TankWeapon[CurrentProj[FiringTank]]["Velocity"] / 750)

    Missilex[FiringTank][ShotsFired[FiringTank]]=FireTankx

    Missiley[FiringTank][ShotsFired[FiringTank]]=FireTanky

    Tankat[FiringTank][ShotsFired[FiringTank]]=TankSelected[FiringTank]

  Else

    

    Startx[FiringTank][ShotsFired[FiringTank]] = FireTankx

    Starty[FiringTank][ShotsFired[FiringTank]] = FireTanky

    AngleFire[FiringTank][ShotsFired[FiringTank]] = TurretAngle[FiringTank]'<--- Set the Firing Angle

    TimeStart[FiringTank][ShotsFired[FiringTank]] = Clock.ElapsedMilliseconds / 1000

  EndIf

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub GetTurretAngle

  AngleRad = Math.ArcTan((GraphicsWindow.MouseY - Tanky[1]) / (GraphicsWindow.MouseX - TankX[1]))

  TurretAngle[1] = Math.GetDegrees(AngleRad) + 90

  If (GraphicsWindow.MouseX - TankX[1]) = 0 or (GraphicsWindow.MouseX - TankX[1]) < 0 Then

    TurretAngle[1] = TurretAngle[1] - 180

  EndIf

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub MoveBalls

  For i = 1 To BallCount

    If Missile_Dead[q][i] = "True" Then

      Shapes.Move(ball[q][i],6000,6000)

      TimeStart[q][i] = TimeStart[q][i] - 500 '<--- Fixes non-homing

      Missilex[q][i]= 6000 '<--- Fixes homing

      Missiley[q][i]=6000 '<--- Fixes homing

    Else

      If TankWeapon[CurrentProj[q]]["Homeing"] = "True" Then

        

        '=================================================================HOMEING STUFF

        Missile_speed = TankWeapon[CurrentProj[q]]["Velocity"] / 10

        If Tankat[q][i] <> "" And  Tankx[Tankat[q][i]] < GraphicsWindow.Width And Tanky[Tankat[q][i]] < GraphicsWindow.Height Then

          Missile_turning = TankWeapon[CurrentProj[q]]["TurnRate"]

          Targetx =Tankx[Tankat[q][i]]

          Targety = Tanky[Tankat[q][i]]

          dx[q][i]=Targetx-Missilex[q][i]

          dy[q][i]=Targety-Missiley[q][i]

          distance[q][i]=Math.SquareRoot((dx[q][i]*dx[q][i])+(dy[q][i]*dy[q][i]))

          dx[q][i]=dx[q][i]/distance[q][i]

          dy[q][i]=dy[q][i]/distance[q][i]

          vx[q][i]=vx[q][i]+(dx[q][i]*Missile_turning)

          vy[q][i]=vy[q][i]+(dy[q][i]*Missile_turning)

          

          velocity[q][i]=Math.SquareRoot((vx[q][i]*vx[q][i])+(vy[q][i]*vy[q][i]))

          if (velocity[q][i]>Missile_speed) Then

            vx[q][i]=(vx[q][i]*Missile_speed)/velocity[q][i]

            vy[q][i]=(vy[q][i]*Missile_speed)/velocity[q][i]

          EndIf

        EndIf

        Missilex[q][i]=Missilex[q][i]+vx[q][i]

        Missiley[q][i]=Missiley[q][i]+vy[q][i]

        

        

        Offsety = TankWeapon[CurrentProj[q]]["ProjectileOffsety"]

        Offsetx = TankWeapon[CurrentProj[q]]["ProjectileOffsetx"]

        

        

        Shapes.Move(ball[q][i],Missilex[q][i] + Offsetx,Missiley[q][i] + Offsety)

        

        

        Xchange = Missilex[q][i] - OldX[q][i]

        Ychange = Missiley[q][i] - OldY[q][i]

        If Xchange < 0 Then

          Rot = Math.GetDegrees(Math.ArcTan(Ychange/Xchange))  - 180

        Else

          Rot = Math.GetDegrees(Math.ArcTan(Ychange/Xchange))

        EndIf

        Shapes.Rotate(Ball[q][i],rot)

        OldY[q][i] = Missiley[q][i]

        OldX[q][i] = Missilex[q][i]

      Else  '<-----------------------------------------------------------------V---Not homeing

        TimeFire[q][i] = (Clock.ElapsedMilliseconds / 1000) - TimeStart[q][i]

        Firestart = Zock77Math.GetCircle(25,Startx[q][i] + 12,Starty[q][i] + 20,AngleFire[q][i] - 90)

        xyArray = Zock77Math.Fire(Firestart["x"],Firestart["y"],Gravity,TimeFire[q][i],TankWeapon[CurrentProj[q]]["Velocity"],AngleFire[q][i] - 90)

        

        Offsety = TankWeapon[CurrentProj[q]]["ProjectileOffsety"]

        Offsetx = TankWeapon[CurrentProj[q]]["ProjectileOffsetx"]

        

        Shapes.Move(Ball[q][i],xyArray["x"]+ Offsetx,xyArray["y"] + Offsety)

        Xchange = xyArray["x"] - OldX[q][i]

        Ychange = xyArray["y"] - OldY[q][i]

        If Xchange < 0 Then

          Rot = Math.GetDegrees(Math.ArcTan(Ychange/Xchange))  - 180

        Else

          Rot = Math.GetDegrees(Math.ArcTan(Ychange/Xchange))

        EndIf

        Shapes.Rotate(Ball[q][i],rot)

        OldY[q][i] = xyArray["y"]

        OldX[q][i] = xyArray["x"]

      EndIf

      

    EndIf

  EndFor

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub RotateTurret

  Shapes.Rotate(Turret[q], TurretAngle[q]) 

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub GetTankpos

  Array = Zock77Math.Fire(Tankx[q],Tanky[q],0,Time,MaxSpeed,Angle[q])

  Tankx[q] = Array["x"]

  Tanky[q] = Array["y"]

  Time = 0

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub Occ

  

EndSub



'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++





Sub OnClientConnect

  

  

  

 ' For w = 1 To NumClients

    'TextWindow.WriteLine(IOTCPServer.LastClientConnectIP)

  ' TextWindow.WriteLine(ClientIP[w])

 '   If IOTCPServer.LastClientConnectIP = ClientIP[w] Then '<--- if the client has allready connected before then

  '    TextWindow.WriteLine("Client has allready  connected")

  '    For p = 1 To NumClients

  '      Var1 = Var1 + ";username" +p+ "=" + Username[p]

  '    EndFor

 '     IOTCPServer.SendMessage("You are client number " + w + " " + "level=" + CurrentMap + Var1 + ";",ClientIP[w])

  '      For i3 = w To NumClients - 1

 '   IOTCPServer.SendMessage("Client Connect " + ClientIP[w] ,ClientIP[i3])

 ' EndFor

'EndIf

'Goto Skip2

'EndFor





  NumClients = NumClients + 1

  ClientNum[IOTCPServer.LastClientConnectIP] = NumClients

  ClientIP[NumClients] = IOTCPServer.LastClientConnectIP



  

  

  NumOfPlayers = NumOfPlayers + 1

  ScoreText[NumOfPlayers] = Shapes.AddText("")

  

  Username[NumOfPlayers] = LDNetwork.GetGameData("TankWars" + ClientIP[NumClients])

  'TextWindow.WriteLine("Username = " + Username[NumOfPlayers])

  DataUser = LDNetwork.GetGameData("TankWars" + Username[NumOfPlayers])

  CurrentProj[NumOfPlayers] = DataUser["weapon"]

  

  Nop = NumOfPlayers

  Var = NumClients + 1

  For p = 1 To Var - 1

    Var1 = Var1 + ";username" +p+ "=" + Username[p]

  EndFor

  'extWindow.WriteLine(Var1)

  IOTCPServer.SendMessage("You are client number " + Var + " " + "level=" + CurrentMap + Var1 + ";",IOTCPServer.LastClientConnectIP)

  For i3 = 1 To NumClients - 1

    IOTCPServer.SendMessage("Client Connect " + ClientIP[NumClients] ,ClientIP[i3])

  EndFor

  

  Tankx[Nop] = TankInitPos[Nop]["x"]

  Tanky[Nop] = TankInitPos[Nop]["y"]

  UsernameText[Nop] = Shapes.AddText(Username[Nop])

  Tank[Nop] = Shapes.AddImage(Program.Directory + "/Tank.png")

  Turret[Nop] = Shapes.AddImage(Program.Directory + "/" + TankWeapon[CurrentProj[Nop]]["Turret"])

  TankHealth[Nop] = TankHealthInit

  TankExp[Nop] = LDShapes.AddAnimatedImage(Program.Directory + "/Animations/anim1.png","False",8,6)

  LDShapes.AnimationSet(TankExp[Nop],48)

  For w22 = 1 to BallCount

    Exp[nop][w22] = LDShapes.AddAnimatedImage(Progdir + TankWeapon[CurrentProj[Nop]]["Animation"],"False",TankWeapon[CurrentProj[Nop]]["AnimCountx"],TankWeapon[CurrentProj[Nop]]["AnimCounty"])

    LDShapes.AnimationSet(Exp[Nop][w22],16)

  EndFor

  skip2:

EndSub









'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub Omr

  k = ClientNum[IOTCPServer.LastMessageIP] + 1

  Data = IOTCPServer.LastMessageData

  For f = 1 To NumClients

    IOTCPServer.SendMessage(Data,ClientIP[f])

  EndFor

  

  Var = Data

  If TankDead[Var["client"]] <> "True" Then   

    If Var["type"] = "pos" Then

      

      k = Var["client"]

      KeyClient = Var["key"]

      Tankx[k] = Var["x"]

      Tanky[k] = Var["y"]

      Angle[k] = Var["ang"]

      Dtime[k] = Var["dtime"]

      Array1 = "0=Up;1=Down;"

      Array2 = "1=w;2=d;3=s;4=a;"

      

      'here I'm translateing the input

  'The format is sends is like such: 0010 

  'the four digits reprsent the four keys. wdsa (in that order) 0 is up, 1 is down.

      

      For i4 = 1 To 4

        KeyVar[Array2[i4]] = Array1[Text.GetSubText(KeyClient,i4,1)]

        ClientKey[k][Array2[i4]] = KeyVar[Array2[i4]] 

      EndFor

    EndIf

    

    If Var["type"] = "fire" Then

      FiringTank = Var["client"]

      FireTankx = Var["x"]

      FireTanky = Var["y"]

      TurretAngle[FiringTank] = Var["ang"]

      TankSelected[FiringTank] = Var["ts"]

      Distx = Math.Abs(Tankx[Var["client"]] - FireTankx)

      Disty = Math.Abs(Tanky[Var["client"]] - FireTanky)

      

      ' If the tank is too far off, then fix its position

      If Distx > 25 Then

        Tankx[Var["client"]] = FireTankx 

      EndIf

      If Disty > 25 Then

        Tanky[Var["client"]] = FireTanky  

      EndIf

      

      Fire()

    EndIf

  EndIf

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub OnKeyDown

  Key = GraphicsWindow.LastKey

  If Key <> OldKey Then 

    Info = "KEYDO " + Key

    SendInfo()

  EndIf

  OldKey = Key

  KeyUp = ""

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub OnKeyUp

  If GraphicsWindow.LastKey <> KeyUp Then

    KeyUp = GraphicsWindow.LastKey

    OldKey = ""

    Info = "KEYUP " + KeyUp

    SendInfo()

  EndIf

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub SendInfo

  

  'The format is sends is like such: 0010 

  'the four digits reprsent the four keys. wdsa (in that order) 0 is up, 1 is down.

  

  

  If Info = "KEYDO W" Then

    wkey = 1

  ElseIf Info = "KEYUP W" Then

    wkey = 0

  ElseIf Info = "KEYDO D" Then

    dkey = 1

  ElseIf Info = "KEYUP D" Then

    dkey = 0

  ElseIf Info = "KEYDO S" Then

    skey = 1

  ElseIf Info = "KEYUP S" Then

    skey = 0

  ElseIf Info = "KEYDO A" Then

    akey = 1

  ElseIf Info = "KEYUP A" Then

    akey = 0

  EndIf

  DatatoSend = Text.Append(wkey,dkey)

  DatatoSend = Text.Append(DatatoSend,skey)

  DatatoSend = Text.Append(DatatoSend,akey)

  For i2 = 1 To NumClients

    '   IOTCPServer.SendMessage("1=" + Info + ";",ClientIP[i2])

    Var = "type=pos;x=" + Math.Round(Tankx[1]) + ";y=" + Math.Round(Tanky[1]) + ";ang=" + Math.Round(Angle[1]) + ";key=" + DatatoSend + ";client=1"  + ";dtime=" + Dtime[1]

    IOTCPServer.SendMessage(Var,ClientIP[i2])

    'TextWindow.WriteLine(Var)

  EndFor

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub OnGWClose

    Servers = LDNetwork.GetGameData("TankWarsServers")

  Servers[Server2Host] = "open"

  LDNetwork.SetGameData("TankWarsServers",Servers)

  LDProcess.Start(Program.Directory + "/Armored Assault.exe","")

  Program.End()

EndSub





Sub OnMouseDown

  If Clock.ElapsedMilliseconds - Firelast > TankWeapon[CurrentProj[1]]["ROF"] Then

    

    FiringTank = 1

    FireTankx = Tankx[1]

    FireTanky = Tanky[1]  

    TankSelected[1] = SelectedTank

    

    Fire()

    For i2 = 1 To NumClients

      Var = "type=fire;x=" + Math.Round(Tankx[1]) + ";y=" + Math.Round(Tanky[1]) + ";ang=" + Math.Round(TurretAngle[1]) + ";client=1" + ";ts=" + SelectedTank

      IOTCPServer.SendMessage(Var,ClientIP[i2])

    EndFor

    Firelast = Clock.ElapsedMilliseconds

  EndIf

  

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub CheckBulletColision

  For i = 1 To BallCount

    

    If TankWeapon[CurrentProj[q]]["Homeing"] = "True" Then

      tempX = Missilex[q][i]

      tempY = Missiley[q][i]

      TankRoundx = Math.Round((tempX - 15) / 30 + 1)

      TankRoundy = Math.Round((tempY - 15) / 30 + 1)

      Result = Text.GetSubText(Level[1][TankRoundy],TankRoundx,1)          

    Else

      TimeFire[q][i] = (Clock.ElapsedMilliseconds / 1000) - TimeStart[q][i]

      Firestart = Zock77Math.GetCircle(25,Startx[q][i] + 12,Starty[q][i] + 20,AngleFire[q][i] - 90)

      xyArray5 = Zock77Math.Fire(Firestart["x"],Firestart["y"],Gravity,TimeFire[q][i],TankWeapon[CurrentProj[q]]["Velocity"],AngleFire[q][i] - 90)

      TankRoundx = Math.Round((xyArray5["x"] - 15) / 30 + 1)

      TankRoundy = Math.Round((xyArray5["y"] - 15) / 30 + 1)

      Result = Text.GetSubText(Level[1][TankRoundy],TankRoundx,1)

      tempX = xyArray5["x"]

      tempY = xyArray5["y"]

    EndIf

    

    For t1 = 1 To NumOfPlayers

      If q <> t1 Then

        If tempX > Tankx[t1] And tempX < Tankx[t1] + 30 And tempY > Tanky[t1] And tempY < TankY[t1] + 30 Then

          TankHealth[t1] = TankHealth[t1] - TankWeapon[CurrentProj[q]]["Damage"]

          If TankHealth[t1] <= 0 Then

            For i2 = 1 To NumClients

              Var = "type=death;client=" + t1

              Score[t1] = Score[t1] + 1

              IOTCPServer.SendMessage(Var,ClientIP[i2])

            EndFor

            TankDead[t1] = "True"

            StartSpawncount()

            Shapes.Move(TankExp[t1],Tankx[t1]-49,Tanky[t1]-49)

            Shapes.Rotate(TankExp[t1], Angle[t1] + 90)

            LDShapes.AnimationSet(TankExp[t1],1)

            GraphicsWindow.DrawImage(Program.Directory + "/scorch_mark" + Math.Round(Math.GetRandomNumber(2)) +".png",Tankx[t1]-49,Tanky[t1]-49)

            'Shapes.Move(Shapes.AddImage(Program.Directory + "/scorch_mark" + Math.Round(Math.GetRandomNumber(2)) +".png"),Tankx[t1]-49,Tanky[t1]-49)

            

            Tankx[t1] = 5000

            Tanky[t1] = 5000

            

          EndIf

          

          

          Missile_Dead[q][i] = "True"

        EndIf

      EndIf

    EndFor

    

    If Result = "p" Then  

      

      Missile_Dead[q][i] = "True"

      Shapes.Move(Exp[q][i], tempX - 34,tempY - 32)

      Shapes.Rotate(Exp[q][i], Math.GetRandomNumber(360))

      LDShapes.AnimationSet(Exp[q][i],1)

      

    EndIf

    

  EndFor

EndSub

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sub TankSelection

  If Mouse.IsRightButtonDown Then

    

    Mx = GraphicsWindow.MouseX

    My = GraphicsWindow.MouseY

    For u2 = 1 To NumOfPlayers

      Var = LDShapes.GetAllShapesAt(Mx,My)

      For u3 = 1 to Array.GetItemCount(Var)

        If Var[u3] = Tank[u2] Then

          SelectedTank = u2

          u2 = NumOfPlayers '<-- exit the For statement

        EndIf

      EndFor

    EndFor

  EndIf

EndSub



Sub StartSpawncount

  TankDieat = Clock.ElapsedMilliseconds

EndSub


