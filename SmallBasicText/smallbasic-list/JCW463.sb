t_angle=180

penn="true

GraphicsWindow.Title ="Turtle lettering

GraphicsWindow.BackgroundColor="#000055

GraphicsWindow.PenColor="white

GraphicsWindow.PenWidth=2

GraphicsWindow.Width=1200

GraphicsWindow.Height=900

GraphicsWindow.Left=10

GraphicsWindow.Top=5

args=0

obj=0

angt=1

cdff()

LDUtilities.ShowNoShapeErrors="false



Sub tcmd

  'TextWindow.WriteLine (args[1])

  cc=text.ConvertToLowerCase (text.GetSubText(args[1],1,1))

  xc=text.GetSubTextToEnd (args[1] 2)

  If cc="m" or cc="f" Then

    LDCall.Function ("t_mov" xc)

    ll=xc

  ElseIf cc="b" then

    LDCall.Function ("t_mov", -ll)

  ElseIf cc="x" then

    t_x=xc

  ElseIf cc="y" then

    t_y=xc

  ElseIf cc="r" then

    t_angle=t_angle+90

  ElseIf cc="l" then

    t_angle=t_angle-90

  ElseIf cc="a" then

    t_angle =xc

  ElseIf cc="t" then

    t_angle=t_angle+ xc

  ElseIf cc="u" then

    penn="false 

  ElseIf cc="d" then

    penn="true

  ElseIf cc="w" then

    GraphicsWindow.PenWidth=xc

  ElseIf cc="c" then

    GraphicsWindow.PenColor=xc

  endif

endsub  



Sub tstrf

  ar=args[1]

  ta=ldtext.Split (args[2] ":")

  For x=1 To Array.GetItemCount (ta)

    ar=LDText.Replace (ar "%"+x ta[x])

  EndFor 

  tm=ldtext.Split (ar " ")

  For x=1 To Array.GetItemCount (tm)

    LDCall.Function ("tcmd" tm[x])

  EndFor

  

EndSub 



Sub tstr

  ar=args[1]

  ar=LDText.Replace (ar "cc" "{ l f20 l f"+xll+" l f20 l {")

  ar=LDText.Replace (ar "cs" "{ l f20 l f"+xl1+" l f20 l {")

  ar=LDText.Replace (ar "}" "[:11:2 f8 t9")

  ar=LDText.Replace (ar "]" "[:11:2 f11 t-9")

  If angt=1 Then 

    ar=LDText.Replace (ar "{" "[:10:2 t9 f5")

  endif

  tm=ldtext.Split (ar " ")

  xi=1

  while xi<=Array.GetItemCount (tm)

    If tm[xi]= "{" then

      

      t_angle =t_angle +45

      LDCall.Function ("t_mov" 30)

      t_angle =t_angle +45

      xi=xi+1

      

    elseIf text.StartsWith (tm[xi] "[") Then

      ff=ldtext.Split(tm[xi] ":")

      

      

      For ss=1 To ff[2]

        If ss=ff[2] then 

          lf=xi+1 

        Else

          lf=xi+ff[3]

        endif

        For s=xi+1 To lf

          LDCall.Function ("tcmd" tm[s])

        EndFor

      EndFor

      xi=xi+ff[3] +1

      ' TextWindow.WriteLine (">>>"+xi)

      

    else

      LDCall.Function ("tcmd" tm[xi])

      xi=xi+1

    endif

  EndWhile  

  obb()

  

EndSub



Sub mirr

  q=args[1]

  If Text.StartsWith (q "l") then 

    q="r"+Text.GetSubTextToEnd (q 2)

  ElseIf Text.StartsWith (q "r") then 

    q="l"+Text.GetSubTextToEnd (q 2)

  ElseIf Text.StartsWith (q "t") then

    q="t"+Text.GetSubTextToEnd (q 2)*-1

  endif

  return=q

endsub





Sub tstrm

  ar=args[1]

  ar=LDText.Replace (ar "cs" "{ l f20 l f"+xl1+" l f20 l {")

  ar=LDText.Replace (ar "cc" "{ l f20 l f"+xll+" l f20 l {")

  ar=LDText.Replace (ar "}" "[:11:2 f8 t9")

  ar=LDText.Replace (ar "]" "[:11:2 f11 t-9")

  If angt=1 Then 

    ar=LDText.Replace (ar "{" "[:10:2 f5 t9")

  endif

  tm=ldtext.Split (ar " ")

  xi=1

  while xi<=Array.GetItemCount (tm)

    If tm[xi]= "{" then

      

      t_angle =t_angle -45

      LDCall.Function ("t_mov" 30)

      t_angle =t_angle -45

      xi=xi+1

    elseIf text.StartsWith (tm[xi] "[") Then

      ff=ldtext.Split(tm[xi] ":")

      For ss=1 To ff[2]

        For s=xi+1 To xi+ff[3]

          LDCall.Function ("tcmd" ldcall.Function ("mirr" tm[s]))

        EndFor

      EndFor

      xi=xi+ff[3] +1

      ' TextWindow.WriteLine (">>>"+xi)

      

    else

      LDCall.Function ("tcmd" ldcall.Function ("mirr" tm[xi]))

      xi=xi+1

    endif

  EndWhile  

  obb()

EndSub



Sub cdff

  ch["ii"]="cc f150 cc f150

  ch["hh"]="cc f65 r f90 r f65 cc f150 cc f65 r f90 r f65 cc f150

  ch["nn"]="cc f150 r t55 f250 t-55 f10 l f195 cc f110 r t55 f200 t-55 f70 l f20 l { f150

  ch["pp"]="cc f180 r f60 [:21:2 f8 t9 f60 l f15 l f90 [:21:2 f11 t-9 f175 l f20 l { f150

  ch["rr"]="cc f175 r f60 [:21:2 f8 t9 f60 l f15 t-45 f120 [:6:2 f9 t-9 f40 l f20 l f15 t45 f120 t135 f30 [:21:2 f11 t-9 f188 l f20 l { f150

  ch["dd"]="cc f180 r f60 } f105 } f30 l f15 l f60 ] f105 ] f175 l f20 l { f155

  ch["gg"]="cc f80 r f30 } f110 } f85 l f15 l f120 ] f110 ] f121 l f100

  ch["ll"]="{ l f20 l f180 t-55 f85 l t-35 f20 t-55 [:12:2 f8 t5 f42 r f170 cc f150

  

  ch["ff"]="{ l f20 l f180 t-55 f85 l t-35 f20 t-55 [:11:2 f8 t5 f55 r f75 r f50 { l f15 l f80 l f15 l { f55 r f75 cc f156

  ch["vv"]="r t55 f250 t-55 f15 l f195 cc f110 r t55 f200 t-55 f72 l f20 l [:6:2 f5 t9

  ch["zz"]="f30 l f180 t-55 f85 l t-35 f20 t-55 [:12:2 f8 t5 f55 r t35 f250 l t55 f20 l f170 t-55 f85 l t-35 f20 t-55 [:12:2 f8 t5 f50 r t35 f250

  ch["ee"]="{ l f20 l f180 t-55 f85 l t-35 f20 t-55 [:11:2 f8 t5 f55 r f85 r f50 { l f15 l f80 l f15 l { f55 r f85 r f55 [:11:2 f8 t5 t-55 f15 l t-35 f85 t-55 f183 l f20 l { f150

  

  ch["tt"]= "t-90 f150 t-55 f85 l t-35 f20 t-55 [:11:2 f8 t5 f2 r f170 cc f175 r f2 [:11:2 f8 t5 t-55 f20 l t-35 f77 t-55 f44

  ch["uu"]="cc f135 [:20:2 t9 f8 f127 cs f135 [:20:2 t-9 f14 f100

  ch["mm"]="cc f150 r t55 f250 t-55 f10 l f195 r t55 f235 t-55 f66 l f20 l [:7:2 f5 t9 f255 t-55 f80 l f20 l { f110 r t55 f200 t-55 f70 l f20 l { f145

  ch["oo"]="r f60 } f115 } f10 l f15 l f40 ] f105 ] f80 ] f105 ] f40 l f15 l f10 } f115 }

  

  

EndSub 



Sub drr

  xl1=85

  ldcall.Function2 ("tposs" "141 250 115 70 180" ch["ii"])

  ldcall.Function2 ("tposs" "291 250 115 70 180" ch["hh"])

  ldcall.Function2 ("tposs" "361 550 85 70 180"  ch["nn"])

  ldcall.Function2 ("tposs" "1161 550 85 70 180" ch["mm"])

  ldcall.Function2 ("tposs" "571 250 115 70 180" ch["pp"])

  ldcall.Function2 ("tposs" "611 550 115 70 180" ch["rr"])

  ldcall.Function2 ("tposs" "871 250 115 70 180" ch["dd"])

  ldcall.Function2 ("tposs" "1272 275 115 70 180" ch["oo"])

  ldcall.Function2 ("tposs" "1055 500  115 70 0" ch["gg"])

  ldcall.Function2 ("tposs" "141 550 115 70 180" ch["ll"])

  ldcall.Function2 ("tposs" "900 860 115 70 180" ch["zz"])

  ldcall.Function2 ("tposs" "1300 700 85 70 0"   ch["vv"])

  ldcall.Function2 ("tposm" "141 690  115 70 0"  ch["ff"])

  ldcall.Function2 ("tposm" "390 690 115 70 0"   ch["ee"])    

  ldcall.Function2 ("tposm" "660 640 115 70 0"   ch["tt"])

  ldcall.Function2 ("tposm" "1391 90 115 70 0"   ch["uu"])

  

EndSub 



Sub tposs

  pz=ldtext.Split (args[1] " ")

  mt=args[2]

  ldcall.Function5 ("tpos" pz[1] pz[2] pz[3] pz[4] pz[5])

  LDCall.Function ("tstr" mt)

endsub



Sub tposm

  pz=ldtext.Split (args[1] " ")

  mt=args[2]

  ldcall.Function5 ("tpos" pz[1] pz[2] pz[3] pz[4] pz[5])

  LDCall.Function ("tstrm" mt)

endsub



Sub obb

  If obj Then 

    GraphicsWindow.BrushColor=GraphicsWindow.PenColor 

    pp=LDShapes.AddPolygon (oo)

    

    LDShapes.SetShapeEvent (pp)

    'LDEffect.DropShaddow (pp "")

    az[pp]=1

    ii=1

    oo=0

  EndIf 

EndSub 



Sub tpos

  t_x=args[1]+dx

  t_y=args[2]+dy

  ox=t_x

  oy=t_y

  xll=args[3]

  f50=args[4]

  t_angle =args[5]

EndSub 





'--------------------------------------main

not="true=false;false=true

in=1

LDDialogs.AddRightClickMenu (LDText.Split("Zoom Zindx Rotate Color RollX RollY RotAll ZoomAll PanX PanY" " ") " ")

LDDialogs.RightClickMenu=rmm

sel="false

im= ImageList.LoadImage ("e:\sttn.jpg")

im1=LDImage.Copy(im) 

LDImage.EffectGamma (im 3)

sst0=LDShapes.BrushImage (im)

sst=LDShapes.BrushImage (im1)

'LDGraphicsWindow.BackgroundBrush ( sst0) 

dx=0

dy=0

obj="true

LDCall.Function ("tstr" "w2 cgold")

drr()

LDGraphicsWindow.Reposition (.5 .5 0 0 0)

'GraphicsWindow.MouseDown=mdd

LDShapes.ShapeEvent=see

GraphicsWindow.MouseMove=mvv

GraphicsWindow.MouseUp=muu

LDEvents.MouseWheel=mww

sc=.5



Sub rmm

  in= LDDialogs.LastRightClickMenuItem 

EndSub 



Sub mww

  If in=1 Then

    az[ssh]=az[ssh]+ LDEvents.LastMouseWheelDelta/15

    Shapes.Zoom(ssh az[ssh] az[ssh])

    

  ElseIf in=2 then

    zz[ssh]=zz[ssh]+ LDEvents.LastMouseWheelDelta

    LDShapes.ZIndex (ssh zz[ssh])

    

  ElseIf in=3 then

    aa[ssh]=aa[ssh]+ LDEvents.LastMouseWheelDelta*3

    Shapes.Rotate (ssh aa[ssh])

    

  ElseIf in=4 then

    ah[ssh]=ah[ssh]+ LDEvents.LastMouseWheelDelta*5

    LDShapes.BrushColour (ssh LDColours.HSLtoRGB ( ah[ssh] 1 .5)) 

    

  ElseIf in=5 then

    Shapes.Move (ssh Shapes.GetLeft (ssh)+LDEvents.LastMouseWheelDelta*2 shapes.GetTop(ssh)) 

    GraphicsWindow .Title =Shapes.GetLeft (ssh)

  ElseIf in=6 then

    Shapes.Move (ssh Shapes.GetLeft (ssh) LDEvents.LastMouseWheelDelta*2+shapes.GetTop(ssh)) 

  Else

    If in=7 then

      an=an+LDEvents.LastMouseWheelDelta*3

    ElseIf in=8 then

      sc=sc+LDEvents.LastMouseWheelDelta/10

    ElseIf in=9 then

      pnx=pnx+LDEvents.LastMouseWheelDelta*5

    Else

      pny=pny+LDEvents.LastMouseWheelDelta*5

    endif

    LDGraphicsWindow.Reposition (sc sc pnx pny an)

  endif

EndSub 



Sub muu

  sel="false

  Shapes.SetOpacity (ssh 99)

EndSub 



Sub see

  ls= LDShapes.LastEventShape 

  lt= LDShapes.LastEventType 

  

  If lt="MouseDown" and not[sel] Then

    Shapes.SetOpacity (ls 60)

    ssh=ls

    sel="true

    spx= GraphicsWindow.MouseX 

    spy= GraphicsWindow.MouseY 

    ' GraphicsWindow.Title=ls

  EndIf

  If lt="MouseUp" Then

    Shapes.SetOpacity (ls 99)

  EndIf

EndSub 



Sub mvv

  If sel then

    ldShapes.Centre  (ssh GraphicsWindow.MouseX GraphicsWindow.MouseY )

    'Shapes.Move (ssh GraphicsWindow.MouseX -spx GraphicsWindow.MouseY   -spy )

    'GraphicsWindow.Title=spx

  endif

EndSub 







sub t_Mov

  ds=args[1]

  mm=LDMath.Convert2Cartesian  (t_x,t_y,ds, t_Angle-90 )

  

  t_x= (mm[1])

  t_y= (mm[2])

  If obj Then

    oo[ii][1]=t_x 

    oo[ii][2]=t_y

    ii=ii+1

  elseIf penn then

    GraphicsWindow.DrawLine (ox,oy T_x T_y)

  endif

  

  ox=T_x

  oy=t_y 

EndSub


