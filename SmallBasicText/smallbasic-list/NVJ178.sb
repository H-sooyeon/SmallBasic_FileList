





Menu:







GraphicsWindow.CanResize = "False"

GraphicsWindow.Top = 0'-4

GraphicsWindow.Left = 0'-4

GraphicsWindow.Width = Desktop.Width '+ 8

GraphicsWindow.Height = Desktop.Height '+ 8

GraphicsWindow.BackgroundColor = "Black"

GraphicsWindow.BrushColor = "Black

LDGraphicsWindow.Style = 0

'GraphicsWindow.Clear()



GraphicsWindow.BrushColor = "Black

BlackRec = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

Shapes.SetOpacity(BlackRec,100)

LDShapes.ZIndex(BlackRec,100)





args = ""

CanContinue = "False"







Background = LDControls.AddMediaPlayer(GraphicsWindow.Width,GraphicsWindow.Height)

LDControls.MediaPlayerLoad(Background,Program.Directory + "\Misc Files\Background.wmv")

LDControls.MediaPlayerPlay(Background)

LDControls.MediaPlayerEnded = RestartVideo



Font = LDGraphicsWindow.SetFontFromFile(Program.Directory + "\Misc Files\Capture_it.TTF")

GraphicsWindow.FontSize = 30





Button[1] = "Multiplayer"

ButtonWidth[1] = 210

ButtonOffset[1] = -25

Button[2] = "Garage"

ButtonWidth[2] = 130

ButtonOffset[2] = 5

Button[3] = "Credits"

ButtonWidth[3] = 130

ButtonOffset[3] = 3

Button[4] = "Exit"

ButtonWidth[4] = 70

ButtonOffset[4] = 30



For i = 1 to Array.GetItemCount(Button)

  GraphicsWindow.BrushColor = "Black"'"#FF979797"

  ButtonRec[i] = Shapes.AddRectangle(ButtonWidth[i],40)

  'Shapes.SetOpacity(ButtonRec[i],50)

  GraphicsWindow.BrushColor = "Red"'"White"

  ButtonText[i] = Shapes.AddText(Button[i])

  Shapes.Move(ButtonText[i],ButtonOffset[i] + (GraphicsWindow.Width/2)-50,((GraphicsWindow.Height / 2)-100)+(i*80))

  Shapes.Move(ButtonRec[i],ButtonOffset[i] + (GraphicsWindow.Width/2)-55,((GraphicsWindow.Height / 2)-100)+(i*80)-2)

EndFor







For u = 100 to 0 Step -1

  Program.Delay(5)

  Shapes.SetOpacity(BlackRec,u)

EndFor



GraphicsWindow.MouseMove = OnMouseMove '<--- Wait to do these till after the animation

GraphicsWindow.MouseDown = OnMouseDown '<--^



While CanContinue = "False"

  Program.Delay(20)

EndWhile



GraphicsWindow.MouseMove = ClearSub

GraphicsWindow.MouseDown = ClearSub



For u = 1 to 100

  Program.Delay(5)

  Shapes.SetOpacity(BlackRec,u)

EndFor



Sub RestartVideo

  LDControls.MediaPlayerSeek(Background,0)

EndSub



Sub OnMouseMove

  For u = 1 To Array.GetItemCount(Button)

    If GraphicsWindow.MouseY > ((GraphicsWindow.Height / 2)-100)+(u*80)-2 And GraphicsWindow.MouseY < ((GraphicsWindow.Height / 2)-100)+(u*80)+38 Then

      Shapes.HideShape(Buttonrec[u])

    Else

      Shapes.ShowShape(Buttonrec[u])

    EndIf

  EndFor

EndSub



Sub OnMouseDown

  For y = 1 To Array.GetItemCount(Button)

    If GraphicsWindow.MouseY > ((GraphicsWindow.Height / 2)-100)+(y*80)-2 And GraphicsWindow.MouseY < ((GraphicsWindow.Height / 2)-100)+(y*80)+38 Then

      LDCall.Function(Button[y],1)

    EndIf

  EndFor

EndSub







Sub Multiplayer

  CanContinue = "True"

EndSub

Sub Exit

  Program.End()

EndSub

Sub Garage

  

EndSub

Sub Credits

  

EndSub







'===========================================================================

'===========================================================================

'============^^MENU^^======================================================



'============VV LOBBY VV =====================================================

'===========================================================================

'===========================================================================



GraphicsWindow.Clear()



GraphicsWindow.BrushColor = "Black

BlackRec = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

Shapes.SetOpacity(BlackRec,100)

LDShapes.ZIndex(BlackRec,100)



GraphicsWindow.MouseMove = ClearSub

GraphicsWindow.MouseDown = ClearSub



CanContinue = "False"

GotoMenu = "False"



LDGraphicsWindow.BackgroundImage(Program.Directory + "/Misc Files/BackgroundLobby.jpg")



Button2[1] = "Host Game"

ButtonWidth2[1] = 210

Buttonx2[1] = GraphicsWindow.Width - 200

Buttony2[1] = GraphicsWindow.Height - 100

ButtonSub2[1] = "HostGame"



Button2[2] = "Join Game"

ButtonWidth2[2] = 210

Buttonx2[2] = GraphicsWindow.Width - 200

Buttony2[2] = GraphicsWindow.Height - 160

ButtonSub2[2] = "JoinGame



Button2[3] = "Main Menu"

ButtonWidth2[3] = 210

Buttonx2[3] = GraphicsWindow.Width - 200

Buttony2[3] = GraphicsWindow.Height - 220

ButtonSub2[3] = "MainMenu"





For i = 1 to Array.GetItemCount(Button2)

  GraphicsWindow.BrushColor = "Black"'"#FF979797"

  ButtonRec2[i] = Shapes.AddRectangle(ButtonWidth2[i],40)

  GraphicsWindow.BrushColor = "Red"'"White"

  ButtonText2[i] = Shapes.AddText(Button2[i])

  Shapes.Move(ButtonText2[i],Buttonx2[i],Buttony2[i])

  Shapes.Move(ButtonRec2[i],Buttonx2[i]-5,Buttony2[i]-2)

EndFor



GraphicsWindow.DrawText(300,360,"Ip address")

IPTextbox = Controls.AddTextBox(300,400)

Controls.SetSize(IPTextbox,300,35)

GraphicsWindow.DrawText(300,460,"Port")

PortTextbox = Controls.AddTextBox(300,500)

Controls.SetSize(PortTextbox,150,35)

Controls.SetTextBoxText(PortTextbox,100)





For u = 100 to 0 Step -1

  Program.Delay(5)

  Shapes.SetOpacity(BlackRec,u)

EndFor



LDShapes.ZIndex(BlackRec,-100) '<--- If it is in front, then I cant click on the textbox.



While CanContinue = "False"

  Program.Delay(20)

  If Mouse.IsLeftButtonDown Then

    For y = 1 To Array.GetItemCount(Button2)

      If GraphicsWindow.MouseY > Buttony2[y] - 2 And GraphicsWindow.MouseY < Buttony2[y] + 42 And GraphicsWindow.Mousex > Buttonx2[y] - 5 And GraphicsWindow.Mousex < Buttonx2[y] + ButtonWidth2[y] Then

        LDCall.Function(ButtonSub2[y],1)

      EndIf

    EndFor

  EndIf

  

  For u = 1 To Array.GetItemCount(Button2)

    If GraphicsWindow.MouseY > Buttony2[u] - 2 And GraphicsWindow.MouseY < Buttony2[u] + 42 And GraphicsWindow.Mousex > Buttonx2[u] - 5 And GraphicsWindow.Mousex < Buttonx2[u] + ButtonWidth2[u] Then

      Shapes.HideShape(Buttonrec2[u])

      

    Else

      Shapes.ShowShape(Buttonrec2[u])

    EndIf

  EndFor

  

  If GotoMenu Then

    Goto Menu

  EndIf

  

EndWhile



Sub Hostgame

  LDShapes.ZIndex(BlackRec,100)

  For u = 1 to 100

    Program.Delay(5)

    Shapes.SetOpacity(BlackRec,u)

  EndFor

  Result = 0

  Port = Controls.GetTextBoxText(PortTextbox)

  CanContinue = "True"

EndSub



Sub Joingame

  Result = 1

  IpAddress = Controls.GetTextBoxText(IPTextbox)

  Port = Controls.GetTextBoxText(PortTextbox)

  CanContinue = "True"

EndSub



Sub MainMenu

  LDShapes.ZIndex(BlackRec,100)

  For u = 1 to 100

    Program.Delay(5)

    Shapes.SetOpacity(BlackRec,u)

  EndFor

  GraphicsWindow.Clear()

  GotoMenu = "True"

EndSub





'===========================================================================

'===========================================================================

'============^^LOBBY^^======================================================



'============VV GAME VV =====================================================

'===========================================================================

'===========================================================================

GraphicsWindow.Clear()



GraphicsWindow.BrushColor = "Black

BlackRec = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height) '<--- The transition out is in the "ReadyScreen" Sub

LDShapes.SetSize(BlackRec,GraphicsWindow.Width,GraphicsWindow.Height)

Shapes.SetOpacity(BlackRec,100)

LDShapes.ZIndex(BlackRec,100)

GraphicsWindow.BrushColor = "Red"

ConnectingText = Shapes.AddText("Connecting to server")

Shapes.Move(ConnectingText,(GraphicsWindow.Width/2) - 150,GraphicsWindow.Height-200)

LDShapes.ZIndex(ConnectingText,101)



If Result = "0" Then

  IsServer = "True"

  LDServer.Port = Port

  LDServer.Start("True")

  LDServer.AutoMessages = "False"

  LDServer.ClientConnected = ClientConnect

  LDServer.ClientMessage = MessageRecieved

EndIf







'GraphicsWindow.CanResize = "False"

'GraphicsWindow.Width = 800

'GraphicsWindow.Height = 600

LDGraphicsWindow.ExitOnClose = "False"

LDGraphicsWindow.Closing = OnClose



'

'Fullscreen = "True"

'

'If Fullscreen Then

'  GraphicsWindow.Top = -4

'  GraphicsWindow.Left = -4

'  GraphicsWindow.Width = Desktop.Width + 8

'  GraphicsWindow.Height = Desktop.Height + 8

'  LDGraphicsWindow.Style = 0

'EndIf





'TextWindow.Write("Enter the port: ")

'Port = TextWindow.Read()



'199.58.97.144



ServIp = IpAddress



TextWindow.Hide()

If Result <> 0 Then

  Server = ServIp + ":" + Port

  LDClient.Connect(Server,"True")

  IP = ServIp

Else

  ServIp = LDServer.IP

  Server = ServIp + ":" + Port

  LDClient.Connect(Server,"True")

  IP = ServIp

EndIf

Program.Delay(1000)











ReadyScreen()





LDShapes.ZIndex(BlackRec,100) '<--- If it is in front, then I cant click on the textbox.

For u = 0 to 100

  Program.Delay(5)

  Shapes.SetOpacity(BlackRec,u)

EndFor







Update = LDClient.UpdateStatic("IsReady=" + IsReady+";")

Program.Delay(1000)

GraphicsWindow.Clear()





GraphicsWindow.BrushColor = "Black

BlackRec = Shapes.AddRectangle(GraphicsWindow.Width,GraphicsWindow.Height)

LDShapes.SetSize(BlackRec,GraphicsWindow.Width,GraphicsWindow.Height)

Shapes.SetOpacity(BlackRec,100)

LDShapes.ZIndex(BlackRec,100)

GraphicsWindow.BrushColor = "Red"

LoadingText = Shapes.AddText("Loading Game")

Shapes.Move(LoadingText,(GraphicsWindow.Width/2) - 180,GraphicsWindow.Height-200)

LDShapes.ZIndex(LoadingText,101)











Timer.Interval = 1000 

Timer.Tick = PingServer



If TankNumber[UserNum] = "" Then

  TankNumber[UserNum] = 1

EndIf

WeaponNumber[UserNum] = 3



CanContinue = "False"

GetDataFromPeers()



CurrentMap = "JunkYardOfDeath"



Initialize()











LDScrollBars.Add(2000,2000)

LDScrollBars.Visibility = "False"



TimesThrough = 0



While 1 = 1 

  Program.Delay(5)

  

  If TimesThrough = 1 Then

    For u = 100 to 0 Step -1

      Program.Delay(5)

      Shapes.SetOpacity(BlackRec,u)

      Shapes.SetOpacity(LoadingText,u)

    EndFor

    LDShapes.ZIndex(BlackRec,-100) 

    LDShapes.ZIndex(LoadingText,-100)

  EndIf

  

  TimesThrough = TimesThrough + 1

  

  For i = 1 To NumOfShips

    If ShipF[i] <> 0 Then

      LDShapes.AnimationResume(Ship[i])              

    Else

      LDShapes.AnimationPause(Ship[i])

    EndIf

    

    If i <> UserNum Then

      If IsFireing[i] Then

        If CanFire[i] Then

          CanFire[i] = "False

          Fireship = i 

          Fire()

        EndIf

      Else 

        CanFire[i] = "True"

      EndIf    

    EndIf

    

    

    If Tank[i] = "Dead" Then

      If HasPlayedExplosion[i] = "False" Then

        HasPlayedExplosion[i] = "True"

        Shapes.Move(TankExplosion[i],(Shipx[i] + (ShipWidth/2)) - 512,(Shipy[i] + (ShipHeight[i]/2)) - 384)

          LDShapes.AnimationSet(TankExplosion[i],1)

          Shapes.ShowShape(TankExplosion[i])

      EndIf

      Shipx[i] = 15000

      Shipy[i] = 15000

    Else

      HasPlayedExplosion[i] = "False"

    EndIf

    

    

    Shapes.Move(Ship[i],Shipx[i] + ShipXOffset[i],Shipy[i] + ShipXOffset[i])

    Shapes.Rotate(Ship[i],Angle[i])

    Shapes.Move(ShipShadow[i],Shipx[i] + ShadXOffset[i],Shipy[i] + ShadXOffset[i]) 

    Shapes.Rotate(ShipShadow[i],Angle[i])

    Shapes.Move(turretShadow[i],Shipx[i]+5,Shipy[i]-10) 

    Shapes.Rotate(turretShadow[i],TurretAngle[i])

    Shapes.Move(Turret[i],Shipx[i]+Turretx[i],Shipy[i] + Turrety[i])

    Shapes.Rotate(Turret[i],TurretAngle[i])

    

    If ShipType[i] = "Buggy" Then

      For b = 1 To 2

        Shapes.Move(Wheel[i][b],Wheelx[i][b],Wheely[i][b])

        Shapes.Rotate(Wheel[i][b],Angle[i]+WheelAngle[i])

      EndFor

    EndIf

    

  EndFor

  

  

  If ShipType[UserNum] = "Tank" Then

    MoveTank()

  EndIf

  

  If ShipType[UserNum] = "Buggy" Then

    MoveBuggy()

  EndIf

  

  If ShipHasTurret[UserNum] Then

    MoveTurret()

  EndIf

  

  CheckFire()

  CheckHit()

  CheckKeyStrokes()

  CheckCollition()

  

  If Tank[UserNum] <> "Dead" And TimesThrough > 1 Then

    MoveScrollBars()

  EndIf

  SendRecieveInfo()

  

  

  If TankHealth[UserNum] <= 0 Then

    Tank[UserNum] = "Dead"

  Else

    Tank[UserNum] = "Living"

  EndIf

  

  If Tank[UserNum] = "Dead" Then

    TimeDead = TimeDead + .005 

  EndIf

  If TimeDead > 2 Then

    TimeDead = 0

    Tank[UserNum] = "Living"

    Shipx[UserNum] = Spawn["x"][Math.GetRandomNumber(NumSpawnPoints)]

    Shipy[UserNum] = Spawn["y"][Math.GetRandomNumber(NumSpawnPoints)]

    TankHealth[UserNum] = 100

  EndIf

  

  ' TextWindow.WriteLine((GraphicsWindow.Width / 2) -225)

  ' TextWindow.WriteLine((LDScrollBars.HorizontalScroll + (GraphicsWindow.Width / 2)) -225)

  GW = LDGraphicsWindow.Width

  GH = LDGraphicsWindow.Height

  

  Shapes.Move(Hud,LDScrollBars.HorizontalScroll + (GW) -360,LDScrollBars.VerticalScroll+10)

  Shapes.Move(Healthbar,(LDScrollBars.HorizontalScroll + (GW) -360+27)-(296-(TankHealth[UserNum] / 100) * 296)/2,LDScrollBars.VerticalScroll+25)

  LDShapes.ReSize(Healthbar,(TankHealth[UserNum] / 100) * 296,16)

  

  If IsServer Then

    If Clock.ElapsedMilliseconds - LastMessageRecievedTime > 2500 And ClientConnected Then

      Program.End()

    EndIf

  EndIf

EndWhile







'======================================================================================================

'=========================================SUBROUTINES==================================================

'======================================================================================================

'======================================================================================================

'======================================================================================================



Sub CheckKeyStrokes

  If LDUtilities.KeyDown(Keybind[3]) And AngleF[UserNum] <> ShipRotForce[UserNum] Then

    AngleF[UserNum] = ShipRotForce[UserNum]

  EndIf

  If LDUtilities.KeyDown(Keybind[4]) And AngleF[UserNum] <> -ShipRotForce[UserNum] Then

    AngleF[UserNum] = -ShipRotForce[UserNum]

  EndIf

  If LDUtilities.KeyDown(Keybind[3]) = "False" And LDUtilities.KeyDown(Keybind[4]) = "False" And AngleF[UserNum] <> 0 Then

    AngleF[UserNum] = 0

  EndIf

  If LDUtilities.KeyDown(Keybind[2]) And ShipF[UserNum] <> ShipForce[UserNum] Then

    ShipF[UserNum] = ShipForce[UserNum]

  EndIf

  If LDUtilities.KeyDown(Keybind[1]) And ShipF[UserNum] <> -ShipForce[UserNum] Then

    ShipF[UserNum] = -ShipForce[UserNum]

  EndIf

  If LDUtilities.KeyDown(Keybind[1]) ="False" And LDUtilities.KeyDown(Keybind[2]) = "False" And ShipF[UserNum] <> 0 Then

    ShipF[UserNum] = 0

  EndIf

  

EndSub





'======================================================================================================



Sub SendRecieveInfo

  Info["X"] = Math.Round(Shipx[UserNum])

  Info["Y"] = Math.Round(Shipy[UserNum])

  Info["A"] = Math.Round(Angle[UserNum])

  Info["TA"] = Math.Round(TurretAngle[UserNum])

  Info["FO"] = ShipF[UserNum] '<--- this is needed to tell the other PCs when to move the tank treads

  Info["FI"] = IsFireing[UserNum]

  Info["N"] = UserNum

  Info["L"] = Tank[UserNum]

  Info["WA"] = WheelAngle[UserNum]

  Info["WX1"] = Wheelx[UserNum][1]

  Info["WY1"] = Wheely[UserNum][1]

  Info["WX2"] = Wheelx[UserNum][2]

  Info["WY2"] = Wheely[UserNum][2]

  ClientInfo = LDClient.UpdateDynamic(Info)

  ClientArray = Array.GetAllIndices(ClientInfo)

  

  

  For r = 1 To Array.GetItemCount(ClientArray)

    ClientNum = ClientInfo[ClientArray[r]]["N"]

    If ClientNum <> UserNum Then

      Tank[ClientNum] = ClientInfo[ClientArray[r]]["L"]

      IsFireing[ClientNum] = ClientInfo[ClientArray[r]]["FI"]

      Shipx[ClientNum] = ClientInfo[ClientArray[r]]["X"]

      Shipy[ClientNum] = ClientInfo[ClientArray[r]]["Y"] 

      ShipF[ClientNum] = ClientInfo[ClientArray[r]]["FO"] 

      Angle[ClientNum] = ClientInfo[ClientArray[r]]["A"]

      TurretAngle[ClientNum] = ClientInfo[ClientArray[r]]["TA"]

      MouseDown[ClientNum] = ClientInfo[ClientArray[r]]["M"]

      WheelAngle[ClientNum] = ClientInfo[ClientArray[r]]["WA"]

      Wheelx[ClientNum][1] = ClientInfo[ClientArray[r]]["WX1"]

      Wheely[ClientNum][1] = ClientInfo[ClientArray[r]]["WY1"]

      Wheelx[ClientNum][2] = ClientInfo[ClientArray[r]]["WX2"]

      Wheely[ClientNum][2] = ClientInfo[ClientArray[r]]["WY2"]

    EndIf

  EndFor

EndSub





'======================================================================================================



Sub Initialize

  LDUtilities.NetworkURL = "http://sean.alyrica.net/"

  WeaponArrays = LDNetwork.GetGameData("ArmoredAssaultWeapons")

  TankArrays = LDNetwork.GetGameData("ArmoredAssaultTanks")

  

  Keybind[1] = "W"

  Keybind[2] = "S"

  Keybind[3] = "D"

  Keybind[4] = "A"

  Keybind[5] = "Space"

  Keybind[6] = "N/A"

  Keybind[7] = "N/A"

  

  NumOfShips = NumClients

  

  For KeyUpNum = 1 To Array.GetItemCount(Keybind)

    Key[KeyUpNum] = "Up"

  EndFor

  

  Img = ImageList.LoadImage(Program.Directory + "/Sand.png")

  For x = 1 to 2000 Step 1000

    For y = 1 To 2000 Step 500

      GraphicsWindow.DrawImage(Img,x,y)

    EndFor

  EndFor

  

  DefineLevel()

  SetupLevel()

  

  LDShapes.AnimationInterval = 60

  

  

  

  

  TankHealth[UserNum] = TankArrays[TankNumber[UserNum]]["Health"]

  

  

  For i = 1 to NumOfShips

    ShipHasTurret[i] = TankArrays[TankNumber[i]]["HasTurret"]

    ShipType[i] = TankArrays[TankNumber[i]]["Type"] '<--- defines what type of movement the ship uses

    

    ShipShadow[i] = Shapes.AddImage(Program.Directory + TankArrays[TankNumber[i]]["Shadow"])

    If ShipHasTurret[i] Then

      TurretShadow[i] = Shapes.AddImage(Program.Directory + "/Tank Turret1 shadow.png")

    EndIf

    

    Ship[i] =  LDShapes.AddAnimatedImage(Program.Directory + TankArrays[TankNumber[i]]["Img"],"True",TankArrays[TankNumber[i]]["Anix"],TankArrays[TankNumber[i]]["Aniy"])

    LDShapes.AnimationPause(Ship[i])

    If ShipHasTurret[i] Then

      Turret[i] = LDShapes.AddAnimatedImage(Program.Directory + "/Tank Turret2(ani)(Green).png","False",6,1)' Shapes.AddImage(Program.Directory + "/Tank Turret1(Green).png")

      LDShapes.AnimationPause(Turret[i])

    EndIf

    

    If ShipType[i] = "Buggy" Then

      For q = 1 To 2 

        If Math.Remainder(q,2) = 0 Then

          Wheel[i][q] = Shapes.AddImage(Program.Directory + TankArrays[TankNumber[i]]["WheelImgR"])

          WheelAngleOffset[i][q] = TankArrays[TankNumber[i]]["WheelAngOffsetR"]

        Else

          Wheel[i][q] = Shapes.AddImage(Program.Directory + TankArrays[TankNumber[i]]["WheelImgL"])

          WheelAngleOffset[i][q] = TankArrays[TankNumber[i]]["WheelAngOffsetL"]

        EndIf

      EndFor

      WheelXOffset[i] = TankArrays[TankNumber[i]]["WheelXOffset"]

      WheelYOffset[i] = TankArrays[TankNumber[i]]["WheelYOffset"]

    EndIf 

    

    

    ShipXOffset[i] = TankArrays[TankNumber[i]]["XOffset"]

    ShadYOffset[i] = TankArrays[TankNumber[i]]["YOffset"]

    ShadXOffset[i] = TankArrays[TankNumber[i]]["ShadXOffset"]

    ShipYOffset[i] = TankArrays[TankNumber[i]]["ShadYOffset"]

    

    

    'ShipReverse[i] = LDShapes.AddAnimatedImage(Program.Directory + "/Tank Body 2(Green) (Ani)(Reverse).png","True",3,1)

    'LDShapes.AnimationPause(ShipReverse[i])

    'Shapes.HideShape(ShipReverse[i])

    

    Turretx[i] = -59

    Turrety[i] = -46

    Turretwidth[i] = 188

    TurretHeight[i] = 188

    TurretTurnSpeed[i] = 100

    

    ShipMass[i] = TankArrays[TankNumber[i]]["Mass"]

    ShipF[i] = 0

    ShipHeight[i] = TankArrays[TankNumber[i]]["Height"]

    ShipWidth[i] = TankArrays[TankNumber[i]]["Width"]

    ShipRotForce[i] = TankArrays[TankNumber[i]]["TurnForce"]

    ShipRotmaxspeed[i] = TankArrays[TankNumber[i]]["TurnSpeed"]

    ShipForce[i] = TankArrays[TankNumber[i]]["Force"]

    Shipmaxspeed[i] = TankArrays[TankNumber[i]]["MaxSpeed"]

    

    StrafForce[i] = 2500

    StrafMaxSpeed[i] = 350

    

    ElapsedMill[i] = Clock.ElapsedMilliseconds

    For h = 1 To WeaponArrays[WeaponNumber[i]]["BallCount"]

      Explosion[h][i] = LDShapes.AddAnimatedImage(Program.Directory + "\" + WeaponArrays[WeaponNumber[i]]["Animation"],"False",WeaponArrays[WeaponNumber[i]]["AnimCountx"],WeaponArrays[WeaponNumber[i]]["AnimCounty"])

      Shapes.HideShape(Explosion[h][i])

    EndFor

  EndFor

  

  TankExplosion[i] = LDShapes.AddAnimatedImage(TankArrays[TankNumber[i]]["Explosion"],"False",8,6)

  LDShapes.AnimationSet(TankExplosion[i],48)

  Shapes.HideShape(TankExplosion[i])

  

  

  Hud = Shapes.AddImage(Program.Directory + "/Hud1.png")

  Shapes.Move(Hud,(GraphicsWindow.Width / 2) -225,GraphicsWindow.Height - 275)

  GraphicsWindow.BrushColor = "Green"

  Healthbar = Shapes.AddRectangle(296,16)

  GraphicsWindow.BrushColor = "Black"

  Shapes.SetOpacity(Hud,50)

  

  Shipx[UserNum] = Spawn["x"][Math.GetRandomNumber(NumSpawnPoints)]

  Shipy[UserNum] = Spawn["y"][Math.GetRandomNumber(NumSpawnPoints)]

  

EndSub



'======================================================================================================



Sub OnClose

  LDClient.Disconnect()

  Program.Delay(250)

  Program.End()

EndSub



'======================================================================================================



Sub OnCheckBoxChange

  ' Info2["T"] = "RB"

  ' Info2["R"] = Text.GetSubText(LDControls.CheckBoxGetState(ReadyBox[UserNum]),1,1)

  ' Info2["N"] = UserNum

  ' LDClient.SendMessage(Info2)

  ' NumSentMessages = NumSentMessages + 1

EndSub



'======================================================================================================



Sub GetDirection

  If Angto < 0 Then 

    Angto = Angto + 360

  EndIf

  If Angto > 360 Then 

    Angto = Angto - 360

  EndIf

  Var1 =  (360 - AngAt) -  (360 - Angto)

  

  If Var1 <-180 Then

    Var1 = Var1 + 360

  EndIf

  If Var1 > 180 Then

    Var1 = Var1 - 360

  EndIf

  

  If Var1 > 0 Then

    Dir[UserNum] = 1

  EndIf

  If Var1 < 0 Then

    Dir[UserNum] = -1

  EndIf

EndSub



'======================================================================================================



Sub RefineAngle

  If AngleInput < 0 Then 

    AngleInput = AngleInput + 360

  EndIf

  If AngleInput > 360 Then 

    AngleInput = AngleInput - 360

  EndIf

  AngleOutput = AngleInput

EndSub



'======================================================================================================



Sub MoveScrollBars

  LDScrollBars.HorizontalScroll = Shipx[UserNum] - (LDGraphicsWindow.Width / 2)-(ShipWidth[UserNum]/2)

  LDScrollBars.VerticalScroll = Shipy[UserNum]- (LDGraphicsWindow.Height/2)-(ShipHeight[UserNum]/2)-50

EndSub



'======================================================================================================



Sub Fire 

  LDShapes.AnimationSet(Turret[Fireship],1)

  LDShapes.AnimationResume(Turret[Fireship])

  ' SinceShot = Clock.ElapsedMilliseconds

  f[Fireship] = f[Fireship] + 1

  If f[Fireship] > WeaponArrays[WeaponNumber[Fireship]]["BallCount"] Then

    f[Fireship] = 1

  EndIf

  If Bullet[f[Fireship]][Fireship] = "" Then

    If WeaponArrays[WeaponNumber[Fireship]]["ProjectileAniX"] = 1 And WeaponArrays[WeaponNumber[Fireship]]["ProjectileAniY"] = 1 Then

      Bullet[f[Fireship]][Fireship] = Shapes.AddImage(Program.Directory + "/" + WeaponArrays[WeaponNumber[Fireship]]["Projectile"])

    Else

      Bullet[f[Fireship]][Fireship] = LDShapes.AddAnimatedImage(Program.Directory + "/" + WeaponArrays[WeaponNumber[Fireship]]["Projectile"],"True",WeaponArrays[WeaponNumber[Fireship]]["ProjectileAniX"],WeaponArrays[WeaponNumber[Fireship]]["ProjectileAniY"])

    EndIf

    

  EndIf

  Firex = (Shipx[Fireship]+Turretx[Fireship]) + (Turretwidth[Fireship] / 2) + (Math.Cos(Math.GetRadians(TurretAngle[Fireship]-90)) * 80)

  Firey = (Shipy[Fireship]+Turrety[Fireship]) + (TurretHeight[Fireship] / 2) + (Math.Sin(Math.GetRadians(TurretAngle[Fireship]-90)) * 80)

  Shapes.Move(Bullet[f[Fireship]][Fireship],Firex,Firey)

  Shapes.Rotate(Bullet[f[Fireship]][Fireship],TurretAngle[Fireship]-90)

  AimAt = Zock77Math.GetCircle(WeaponArrays[WeaponNumber[Fireship]]["Velocity"]*100,Shipx[Fireship],Shipy[Fireship],TurretAngle[Fireship]-90)

  Shapes.Animate(Bullet[f[Fireship]][Fireship],Aimat["x"],Aimat["y"],200000)

  

EndSub



'======================================================================================================



Sub ReadyScreen

  

  StaticClientInfo = LDClient.UpdateStatic("IsReady=Joining;")

  StaticClientArray = Array.GetAllIndices(StaticClientInfo)

  NumReady = 0

  For b = 1 To Array.GetItemCount(StaticClientArray)

    If StaticClientInfo[StaticClientArray[b]]["IsReady"] = "False" Then

      NumReady = NumReady + 1

    EndIf

  EndFor

  If NumReady = 0 And Array.GetItemCount(StaticClientArray) > 1 Then

    GraphicsWindow.ShowMessage("Game has already started.","")

    Program.Delay(1500)

    Program.End()

  EndIf

  

  

  

  TankTextbox = Controls.AddTextBox(700,600)

  CheckBox = LDControls.AddCheckBox("Ready")

  IsReady = "False"

  

  

  

  While CanStartGame <> "True"

    If TimesThrough = 1 Then '<--- Let the Loop go through once to move everything in place

      For u = 100 to 0 Step -1

        Program.Delay(5)

        Shapes.SetOpacity(BlackRec,u)

        Shapes.SetOpacity(ConnectingText,u)

      EndFor

      LDShapes.ZIndex(BlackRec,-100) '<--- If it is in front, then I cant click on the textbox.

      LDShapes.ZIndex(ConnectingText,-100)

    EndIf

    

    Program.Delay(50)

    TimesThrough = TimesThrough + 1

    IsReady = LDControls.CheckBoxGetState(CheckBox)

    Update = LDClient.UpdateStatic("IsReady=" + IsReady+";")

    Clients = Array.GetAllIndices(Update)

    For z = 1 To Array.GetItemCount(Clients)

      If Clients[z] = LDClient.Name Then

        UserNum = z 

        z = Array.GetItemCount(Clients)

      EndIf

    EndFor

    NumClients = Array.GetItemCount(Clients)

    

    For u = 1 To Array.GetItemCount(ClientText)

      Shapes.Move(ClientText[u],2000,2000)

      Shapes.Move(ReadyText[u],2000,2000)

    EndFor

    

    Shapes.Move(CheckBox,600,UserNum*100)

    Shapes.Move(TankTextbox,775,UserNum*100)

    NumClientsReady = 0

    For p = 1 To NumClients

      

      If Update[Clients[p]]["IsReady"] = "True" then

        NumClientsReady = NumClientsReady + 1

      EndIf 

      

      If ClientText[p] = "" Then

        ClientText[p] = Shapes.AddText(Clients[p])

        ReadyText[p] = Shapes.AddText(Update[Clients[p]]["IsReady"])

      EndIf

      Shapes.SetText(ClientText[p],Clients[p])

      Shapes.Move(ClientText[p],50,p*100)

      If p <> UserNum Then

        Shapes.Move(ReadyText[p],600,p*100)

        Shapes.SetText(ReadyText[p],Update[Clients[p]]["IsReady"])

      EndIf

    EndFor

    

    If NumClientsReady = NumClients Then

      CanStartGame = "True"

      TankNumber[UserNum] = Controls.GetTextBoxText(TankTextbox)

    EndIf

  EndWhile

  'Update = LDClient.UpdateStatic("IsReady=" + IsReady+";")

EndSub



'======================================================================================================



Sub MoveTank

  TimeElapsed[UserNum] = (Clock.ElapsedMilliseconds - ElapsedMill[UserNum]) / 1000

  ElapsedMill[UserNum] = Clock.ElapsedMilliseconds

  

  ShipAccel[UserNum] = (ShipF[UserNum]/ShipMass[UserNum]) 

  StrafAccel[UserNum] = ""'(StrafF[i]/ShipMass[i]) 

  AngleAccel[UserNum] = (AngleF[UserNum]/ShipMass[UserNum]) 

  

  

  

  If ShipF[UserNum] = 0 Then

    If Velocity[UserNum] < -5 Then

      ShipAccel[UserNum] = (ShipForce[UserNum]/ShipMass[UserNum]) 

    EndIf

    If Velocity[UserNum] > 5 Then

      ShipAccel[UserNum] = (-ShipForce[UserNum]/ShipMass[UserNum]) 

    EndIf

  EndIf

  

  If Velocity[UserNum] < 5 And Velocity[UserNum] > -5 And ShipF[UserNum] = 0 Then

    Velocity[UserNum] = 0

  EndIf

  

  If AngleF[UserNum] = 0 Then

    If AngleVel[UserNum] < -10 Then

      AngleAccel[UserNum] = (ShipRotForce[UserNum]/ShipMass[UserNum]) 

    EndIf

    If Anglevel[UserNum] > 10 Then

      AngleAccel[UserNum] = (-ShipRotForce[UserNum]/ShipMass[UserNum]) 

    EndIf

  EndIf

  

  If AngleVel[UserNum] < 10 And AngleVel[UserNum] > -10 And AngleF[UserNum] = 0 Then

    AngleVel[UserNum] = 0

  EndIf

  

  Velocity[UserNum] = Velocity[UserNum] + (ShipAccel[UserNum] * TimeElapsed[UserNum])    

  StrafVelocity[UserNum] = StrafVelocity[UserNum] + (StrafAccel[UserNum] * TimeElapsed[UserNum])    

  

  If  StrafVelocity[UserNum] > Strafmaxspeed[UserNum] Then

    StrafVelocity[UserNum] = Strafmaxspeed[UserNum]

  EndIf

  

  If  StrafVelocity[UserNum] < -Strafmaxspeed[UserNum] Then

    StrafVelocity[UserNum] = -Strafmaxspeed[UserNum]

  EndIf

  

  If Velocity[UserNum] > Shipmaxspeed[UserNum] Then

    Velocity[UserNum] = Shipmaxspeed[UserNum]

  EndIf

  

  If Velocity[UserNum] < -Shipmaxspeed[UserNum] Then

    Velocity[UserNum] = -Shipmaxspeed[UserNum]

  EndIf

  

  VelocityX[UserNum] = Velocity[UserNum] * Math.Cos(Math.GetRadians(Angle[UserNum]+90)) '<--- Find the Horizontal (X) Velocity

  VelocityY[UserNum] = Velocity[UserNum] * Math.Sin(Math.GetRadians(Angle[UserNum]+90)) '<--- Find the Vertical (Y) Velocity

  

  VelocityX[UserNum] = VelocityX[UserNum]  + StrafVelocity[UserNum] * Math.Cos(Math.GetRadians(Angle[UserNum]+180)) '<--- Find the Horizontal (X) Velocity

  VelocityY[UserNum] = VelocityY[UserNum] + StrafVelocity[UserNum] * Math.Sin(Math.GetRadians(Angle[UserNum]+180)) '<--- Find the Vertical (Y) Velocity

  

  

  If CanVel["Up"][UserNum] = "False" And VelocityY[UserNum] < 0 Then

    VelocityY[UserNum] = 0

  EndIf

  If CanVel["Down"][UserNum] = "False" And VelocityY[UserNum] > 0 Then

    VelocityY[UserNum] = 0

  EndIf

  If CanVel["Left"][UserNum] = "False" And VelocityX[UserNum] < 0 Then

    VelocityX[UserNum] = 0

  EndIf

  If CanVel["Right"][UserNum] = "False" And VelocityX[UserNum] > 0 Then

    VelocityX[UserNum] = 0

  EndIf

  

  AngleVel[UserNum] = AngleVel[UserNum] + (AngleAccel[UserNum] * TimeElapsed[UserNum])

  

  If CanTurn["Right"] = "False" And Anglevel[UserNum] > 0 Then

    Anglevel[UserNum] = 0

  EndIf

  If CanTurn["Left"] = "False" And Anglevel[UserNum] < 0 Then

    Anglevel[UserNum] = 0

  EndIf

  

  If AngleVel[UserNum] > ShipRotmaxspeed[UserNum] Then

    AngleVel[UserNum] = ShipRotmaxspeed[UserNum]

  EndIf

  

  If AngleVel[UserNum] < -ShipRotmaxspeed[UserNum] Then

    AngleVel[UserNum] = -ShipRotmaxspeed[UserNum]

  EndIf

  

  Shipx[UserNum] = Shipx[UserNum] + (VelocityX[UserNum] * TimeElapsed[UserNum])

  Shipy[UserNum] = Shipy[UserNum] + (VelocityY[UserNum] * TimeElapsed[UserNum])

  Angle[UserNum] = Angle[UserNum] + (AngleVel[UserNum] * TimeElapsed[UserNum])

EndSub



'======================================================================================================



Sub MoveTurret

  Angto = Zock77Math.GetAngle((Shipx[UserNum]+Turretx[UserNum]) + (Turretwidth[UserNum] / 2),GraphicsWindow.MouseX,(Shipy[UserNum]+Turrety[UserNum]) + (TurretHeight[UserNum] / 2),GraphicsWindow.MouseY) + 180

  AngAt = TurretAngle[UserNum]

  GetDirection()  

  If Math.Abs(AngAt-Angto) < 1 Then

    Dir[UserNum] = 0

  EndIf

  

  TurretAngle[UserNum] = TurretAngle[UserNum] + (Dir[UserNum] * TurretTurnSpeed[UserNum]) * TimeElapsed[UserNum]

  TurretAngle[UserNum] = TurretAngle[UserNum] + (AngleVel[UserNum] * TimeElapsed[UserNum])

  

  AngleInput = TurretAngle[UserNum]

  RefineAngle()

  TurretAngle[UserNum] = AngleOutput

EndSub



'======================================================================================================



Sub CheckFire

  If Mouse.IsLeftButtonDown And Clock.ElapsedMilliseconds - SinceShot > WeaponArrays[WeaponNumber[UserNum]]["ROF"] Then

    SinceShot = Clock.ElapsedMilliseconds

    IsFireing[UserNum] = "True"

    Fireship = UserNum

    Fire()

  ElseIf Clock.ElapsedMilliseconds - SinceShot > 30 Then

    IsFireing[UserNum] = "False"

  EndIf

EndSub



'======================================================================================================



Sub CheckHit

  

  For k = 1 To NumOfShips

    For j = 1 To WeaponArrays[WeaponNumber[k]]["BallCount"] 

      If Bullet[j][k] <> "" Then

        Bulletx = LDShapes.GetLeft(Bullet[j][k])

        Bullety = LDShapes.GetTop(Bullet[j][k])

        '    Distx = Math.Abs(Shipx[k] - LDShapes.GetLeft(Bullet[j][k]))*Math.Abs(Shipx[k] - LDShapes.GetLeft(Bullet[j][k]))

        '     Disty = Math.Abs(Shipy[k] - LDShapes.GetTop(Bullet[j][k]))*Math.Abs(Shipy[k] - LDShapes.GetTop(Bullet[j][k]))

        '     Dist = Math.SquareRoot(Disty+Distx)

        

        '    If Dist > 600 then

        '       Shapes.Move(Bullet[j][k],100000,100000)

        '    EndIf

        If Text.GetSubText(Level[Math.Round(Bullety/30)+1],math.Round(Bulletx/30)+1,1)= "p" Then

          Shapes.Move(Bullet[j][k],100000,100000)

          LDShapes.AnimationSet(Explosion[j][k],1)

          Shapes.ShowShape(Explosion[j][k])

          Shapes.Move(Explosion[j][k],Bulletx,Bullety-32)

          

        EndIf

        

        

        For g = 1 to NumOfShips

          If g <> k then

            If Bulletx > Shipx[g] And Bulletx < Shipx[g] + ShipWidth[g] And Bullety > Shipy[g] And Bullety < Shipy[g] + ShipHeight[g]  Then

              Shapes.Move(Bullet[j][k],100000,100000)

              LDShapes.AnimationSet(Explosion[j][k],1)

              Shapes.ShowShape(Explosion[j][k])

              Shapes.Move(Explosion[j][k],Bulletx,Bullety-32)

              If g = UserNum Then

                TankHealth[UserNum] = TankHealth[UserNum] - WeaponArrays[WeaponNumber[k]]["Damage"]

              EndIf

            EndIf

          EndIf 

        EndFor

        

        

      EndIf

    EndFor

  EndFor

EndSub



'======================================================================================================



Sub PingServer

  LDClient.SendMessage("Message")

EndSub



'======================================================================================================



Sub GetDataFromPeers

  While CanContinue <> "True"

    StaticInfo["WeaponNumber"] = WeaponNumber[UserNum]

    StaticInfo["TankNumber"] = TankNumber[UserNum]

    StaticInfo["N"] = UserNum

    StaticClientInfo = LDClient.UpdateStatic(StaticInfo)

    StaticClientArray = Array.GetAllIndices(StaticClientInfo)

    

    For r = 1 To Array.GetItemCount(StaticClientArray)

      StaticClientNum = StaticClientInfo[StaticClientArray[r]]["N"]

      If StaticClientNum <> UserNum Then

        WeaponNumber[StaticClientNum] = StaticClientInfo[StaticClientArray[r]]["WeaponNumber"]

        TankNumber[StaticClientNum] = StaticClientInfo[StaticClientArray[r]]["TankNumber"]

      EndIf

    EndFor

    CanContinue = "True"

    

    For h = 1 To Array.GetItemCount(StaticClientArray)

      If WeaponNumber[h] = "" Then

        CanContinue = "False"

      EndIf

    EndFor

  EndWhile

EndSub



'======================================================================================================



Sub DefineLevel

  LevelPath = Program.Directory + "/Levels/" + CurrentMap + ".txt"

  For ly = 1 To 67

' The following line could be harmful and has been automatically commented.

'     Level[ly] = File.ReadLine(LevelPath,ly)

  EndFor

EndSub



'======================================================================================================



Sub SetupLevel

  For Levx = 1 To Text.GetLength(Level[1])

    For Levy = 1 To 67

      If Text.GetSubText(Level[Levy],Levx,1) = "p" Then

        Shapes.Move(Shapes.AddImage(Program.Directory + "/Brick.Png"),Levx * 30 - 30,Levy * 30 - 30)

      EndIf

      If Text.GetSubText(Level[Levy],Levx,1) = "S" Then

        NumSpawnPoints = NumSpawnPoints + 1

        Spawn["y"][NumSpawnPoints] = Levy * 30 - 30

        Spawn["x"][NumSpawnPoints] = Levx * 30 - 30

      EndIf

      If LDUtilities.IsNumber(Text.GetSubText(Level[Levy],Levx,1)) Then

        NumPos = NumPos + 1

        TankInitPos[NumPos]["x"] = Levx * 30 - 30

        TankInitPos[NumPos]["y"] = Levy * 30 - 30

        

      EndIf

    EndFor

  EndFor

EndSub



'======================================================================================================



Sub CheckCollition 

  

  PointCheck[1]["x"] = 0

  PointCheck[1]["y"] = -10

  PointCheck[2]["x"] = 10

  PointCheck[2]["y"] = 0

  PointCheck[3]["x"] = 0

  PointCheck[3]["y"] = 10

  PointCheck[4]["x"] = -10

  PointCheck[4]["y"] = 0

  

  

  Offset[1] = -35

  Offset[2] = 35

  Offset[3] = 215

  Offset[4] = 145

  Offset[5] = 0

  Offset[6] = 180

  

  

  

  AngOffset[1] = 0

  AngOffset[2] = 180

  AngOffset[3] = 0

  AngOffset[4] = 180

  

  

  CanVel["Up"][UserNum] = "True"

  CanVel["Right"][UserNum] = "True"

  CanVel["Down"][UserNum] = "True"

  CanVel["Left"][UserNum] = "True"

  

  CanTurn["Right"] = "True"

  CanTurn["Left"] = "True"

  

  

  

  For l = 1 To 6

    Pointx[l] = Math.Cos(Math.GetRadians(Angle[UserNum]+(Offset[l]+90)))*((ShipHeight[UserNum]/2)-5) + (Shipx[UserNum] + (ShipWidth[UserNum]/2))-8

    Pointy[l] = Math.Sin(Math.GetRadians(Angle[UserNum]+(Offset[l]+90)))*((ShipHeight[UserNum]/2)-5) + (Shipy[UserNum] + (ShipHeight[UserNum]/2))-8

    '  Shapes.Move(PointShape[l],Pointx[l],Pointy[l])

    

    For h = 1 To 4

      If Text.GetSubText(Level[Math.Round((Pointy[l]+PointCheck[h]["y"])/30)+1],math.Round((Pointx[l]+PointCheck[h]["x"])/30)+1,1)= "p" Then

        'Order:

        'Top

        'Right

        'Bottom

        'Left

        

        If h = 1  Then

          CanVel["Up"][UserNum] = "False"

        EndIf

        If h = 2 Then

          CanVel["Right"][UserNum] = "False"

        EndIf

        If  h = 3 Then

          CanVel["Down"][UserNum] = "False"

        EndIf

        If  h = 4 Then

          CanVel["Left"][UserNum] = "False"

        EndIf

        

      EndIf

    EndFor

  EndFor

  

  For u = 1 To 4

    Checkx = (Math.Cos(Math.GetRadians(Angle[UserNum]+AngOffset[u])) * 10) + Pointx[u]

    Checky = (Math.Sin(Math.GetRadians(Angle[UserNum]+AngOffset[u])) * 10) + Pointy[u]

    

    '  Shapes.Move(AngCheckShape[u],Checkx,Checky)

    '   Shapes.Move(Text[u],Checkx+10,Checky+10)

    

    If Text.GetSubText(Level[Math.Round((Checky)/30)+1],math.Round((Checkx)/30)+1,1)= "p" Then

      If u = 3 or u = 2 Then

        CanTurn["Right"] = "False"

      EndIf

      If u = 1 or u = 4 then

        CanTurn["Left"] = "False"

      EndIf

    EndIf

  EndFor

EndSub



'======================================================================================================



Sub MoveBuggy

  TimeElapsed[UserNum] = (Clock.ElapsedMilliseconds - ElapsedMill[UserNum]) / 1000

  ElapsedMill[UserNum] = Clock.ElapsedMilliseconds

  

  ShipAccel[UserNum] = (ShipF[UserNum]/ShipMass[UserNum]) 

  StrafAccel[UserNum] = ""'(StrafF[i]/ShipMass[i]) 

  AngleAccel[UserNum] = (AngleF[UserNum]/ShipMass[UserNum]) 

  

  

  

  If ShipF[UserNum] = 0 Then

    If Velocity[UserNum] < -5 Then

      ShipAccel[UserNum] = (ShipForce[UserNum]/ShipMass[UserNum]) 

    EndIf

    If Velocity[UserNum] > 5 Then

      ShipAccel[UserNum] = (-ShipForce[UserNum]/ShipMass[UserNum]) 

    EndIf

  EndIf

  

  If Velocity[UserNum] < 5 And Velocity[UserNum] > -5 And ShipF[UserNum] = 0 Then

    Velocity[UserNum] = 0

  EndIf

  

  'If AngleF[UserNum] > 0 Then

  '' LDShapes.

  ' EndIf

  

  If AngleF[UserNum] = 0 Then

    If AngleVel[UserNum] < -10 Then

      AngleAccel[UserNum] = (ShipRotForce[UserNum]/ShipMass[UserNum]) 

    EndIf

    If Anglevel[UserNum] > 10 Then

      AngleAccel[UserNum] = (-ShipRotForce[UserNum]/ShipMass[UserNum]) 

    EndIf

  EndIf

  

  If AngleVel[UserNum] < 10 And AngleVel[UserNum] > -10 And AngleF[UserNum] = 0 Then

    AngleVel[UserNum] = 0

  EndIf

  

  Velocity[UserNum] = Velocity[UserNum] + (ShipAccel[UserNum] * TimeElapsed[UserNum])    

  StrafVelocity[UserNum] = StrafVelocity[UserNum] + (StrafAccel[UserNum] * TimeElapsed[UserNum])    

  

  If  StrafVelocity[UserNum] > Strafmaxspeed[UserNum] Then

    StrafVelocity[UserNum] = Strafmaxspeed[UserNum]

  EndIf

  

  If  StrafVelocity[UserNum] < -Strafmaxspeed[UserNum] Then

    StrafVelocity[UserNum] = -Strafmaxspeed[UserNum]

  EndIf

  

  If Velocity[UserNum] > Shipmaxspeed[UserNum] Then

    Velocity[UserNum] = Shipmaxspeed[UserNum]

  EndIf

  

  If Velocity[UserNum] < -Shipmaxspeed[UserNum] Then

    Velocity[UserNum] = -Shipmaxspeed[UserNum]

  EndIf

  

  VelocityX[UserNum] = Velocity[UserNum] * Math.Cos(Math.GetRadians(Angle[UserNum]+90)) '<--- Find the Horizontal (X) Velocity

  VelocityY[UserNum] = Velocity[UserNum] * Math.Sin(Math.GetRadians(Angle[UserNum]+90)) '<--- Find the Vertical (Y) Velocity

  

  VelocityX[UserNum] = VelocityX[UserNum]  + StrafVelocity[UserNum] * Math.Cos(Math.GetRadians(Angle[UserNum]+180)) '<--- Find the Horizontal (X) Velocity

  VelocityY[UserNum] = VelocityY[UserNum] + StrafVelocity[UserNum] * Math.Sin(Math.GetRadians(Angle[UserNum]+180)) '<--- Find the Vertical (Y) Velocity

  

  

  If CanVel["Up"][UserNum] = "False" And VelocityY[UserNum] < 0 Then

    VelocityY[UserNum] = 0

  EndIf

  If CanVel["Down"][UserNum] = "False" And VelocityY[UserNum] > 0 Then

    VelocityY[UserNum] = 0

  EndIf

  If CanVel["Left"][UserNum] = "False" And VelocityX[UserNum] < 0 Then

    VelocityX[UserNum] = 0

  EndIf

  If CanVel["Right"][UserNum] = "False" And VelocityX[UserNum] > 0 Then

    VelocityX[UserNum] = 0

  EndIf

  

  AngleVel[UserNum] = AngleVel[UserNum] + (AngleAccel[UserNum] * TimeElapsed[UserNum])

  

  If CanTurn["Right"] = "False" And Anglevel[UserNum] > 0 Then

    Anglevel[UserNum] = 0

  EndIf

  If CanTurn["Left"] = "False" And Anglevel[UserNum] < 0 Then

    Anglevel[UserNum] = 0

  EndIf

  

  If AngleVel[UserNum] > ShipRotmaxspeed[UserNum] Then

    AngleVel[UserNum] = ShipRotmaxspeed[UserNum]

  EndIf

  

  If AngleVel[UserNum] < -ShipRotmaxspeed[UserNum] Then

    AngleVel[UserNum] = -ShipRotmaxspeed[UserNum]

  EndIf

  

  Shipx[UserNum] = Shipx[UserNum] + (VelocityX[UserNum] * TimeElapsed[UserNum])

  Shipy[UserNum] = Shipy[UserNum] + (VelocityY[UserNum] * TimeElapsed[UserNum])

  Angle[UserNum] = Angle[UserNum] + (AngleVel[UserNum] * TimeElapsed[UserNum])*((Velocity[UserNum] / Shipmaxspeed[UserNum])*-1)

  WheelAngle[UserNum] = (AngleVel[UserNum]/ShipRotmaxspeed[UserNum]) * 30

  

  WheelOffset[1] = WheelAngleOffset[UserNum][1]

  WheelOffset[2] = WheelAngleOffset[UserNum][2]

  

  

  For l1 = 1 To 2

    Wheelx[UserNum][l1] = Math.Cos(Math.GetRadians(Angle[UserNum]+(WheelOffset[l1]-87)))*((ShipHeight[UserNum]/2)+5) + (Shipx[UserNum] + (ShipWidth[UserNum]/2)) + WheelXOffset[UserNum]

    Wheely[UserNum][l1] = Math.Sin(Math.GetRadians(Angle[UserNum]+(WheelOffset[l1]-87)))*((ShipHeight[UserNum]/2)+5) + (Shipy[UserNum] + (ShipHeight[UserNum]/2)) + WheelYOffset[UserNum]

  EndFor

  TurretAngle[UserNum] = Angle[UserNum]

EndSub



'======================================================================================================



Sub ClientConnect

  ClientConnected = "True"

EndSub



'======================================================================================================



Sub MessageRecieved

  LastMessageRecievedTime = Clock.ElapsedMilliseconds

EndSub



'======================================================================================================



Sub ClearSub 

EndSub


