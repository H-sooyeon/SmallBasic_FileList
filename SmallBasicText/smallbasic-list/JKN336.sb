triangles = 0
'  Create a variable called triangles to count how many triangles and reset this triangle counter to zero
GraphicsWindow.Title = "How Many Triangles?"
set = "ABCDEFGHIJKLMNOPQRSTUVWXY"
'  One letter for each crossing point or intersect of the diagram
line[1] = "ABC"
line[2] = "CDE"
line[3] = "EFG"
line[4] = "GHA"
line[5] = "AKLNOD"
line[6] = "AJYRE"
line[7] = "AIXVUF"
line[8] = "BKJXWG"
line[9] = "BLYTF"
line[10] = "BMNPQE"
line[11] = "CMLJIH"
line[12] = "CNYVG"
line[13] = "COPRSF"
line[14] = "DPYXH"
line[15] = "DQRTUG"
line[16] = "ESTVWH"
'  Array of all the 16 lines in the diagram as a composite of the intersect points
Puzzle()
'  Draw the problem we are trying to solve to help visualize the scope of the quest
Program.Delay(5000)
'  Sets the question how many triangles are there in this diagram
Labels()
Program.Delay(5000)
'  Start of solution is to label each point of intersect for all the 16 lines
TextWindow.Title = "Triangle Puzzle Counter"
For i = 1 to 25
  point[i] = Text.GetSubText(set,i,1)
  '  Run through each letter from the variable "set" and make this as 1st point of a triangle
  For j = 1 to 25
    '  Nested within 1st loop 
    point[j] = Text.GetSubText(set,j,1)
    '  Run through each letter from the variable "set" and make this as 2nd point of a triangle
    If point[i] <> point[j] then
      '  Test if the two points so far are not the same two points
      '  If they are the same then program should skip further steps and jump to end of this loop in order to continue with next letter in the sequence 
      For k = 1 To 25
        point[k] = Text.GetSubText(set,k,1)
        '  Run through each letter from the variable "set" and make this as 3rd point of a triangle
        If point[i] <> point[k] And point[j] <> point[k] Then
          '  Test if 3rd point is not the same as the first 2 points
          For l = 1 to 16
            '  Run through each of the 16 lines
            If Text.IsSubText(line[l],point[i]) And Text.IsSubText(line[l],point[j]) Then
              '  Test to see if 2 of the points are included in this line
              side1 = line[l]
              '  Found 1st valid side of a triangle with 2 of the points included in the line
              For m = 1 to 16
                '  Run through each of the lines to find 2nd side of triangle
                If Text.IsSubText(line[m],point[j]) And Text.IsSubText(line[m],point[k]) Then
                  '  Test to see if 2 of the points are included in this line
                  side2 = line[m]
                  '  Found 2nd valid side of a triangle
                  If line[l] <> line[m] then
                    '  Test that the 2 lines are not the same sides
                    For n = 1 To 16
                      '  Run through each of the lines to find 2nd side of triangle
                      If Text.IsSubText(line[n],point[i]) And Text.IsSubText(line[n],point[k]) Then
                        '  Test if 1st point and 3rd points are included in this line
                        side3 = line[n]
                        '  Found 3rd side of a triangle
                        If line[m] <> line[n] And line[l] <> line[n] Then
                          '  Test that lines are not duplicates
                          triangles = triangles+1
                          '  Count the triangles found so far
                          TextWindow.Write("No. of trangles = " + triangles)
                          '  Display number found
                          TextWindow.Write("   Triangle " + point[i] + point[j] + point[k])
                          '  Optional Display triangle found expressed as the three valid points of the triangle
                          TextWindow.WriteLine("   Lines used " + side1 + " " + side2 + " " + side3)
                          '  Optional Display the 3 lines from which the 3 points were derived
                        Else
                        EndIf
                      Else
                        side3 = 0
                      EndIf
                    EndFor ' n loop
                  Else
                  EndIf
                Else
                  side2 = 0
                EndIf
              EndFor ' m loop
            Else
              side1 = 0
            EndIf
          EndFor ' l loop
        EndIf
      EndFor ' k loop
    EndIf
  EndFor ' j loop
EndFor ' i loop
triangles = triangles/6
'  Final result but as program found each triangle 6 times it is necessary to divide count by 6 to get true value
'  For example the valid triangle ABE, AEB, BEA, BAE, EAB and EBA are all the same triangle and program will have found all 6
TextWindow.WriteLine("Final count = " + triangles)

Program.Delay(5000)
'  Program.End()

Sub Puzzle
  GraphicsWindow.DrawRectangle(10,10,400,400)
  GraphicsWindow.DrawLine(10,10,410,410)
  GraphicsWindow.DrawLine(410,10,10,410)
  GraphicsWindow.DrawLine(10,210,410,210)
  GraphicsWindow.DrawLine(210,10,210,410)
  GraphicsWindow.DrawLine(10,10,410,210)
  GraphicsWindow.DrawLine(10,10,210,410)
  GraphicsWindow.DrawLine(10,410,410,210)
  GraphicsWindow.DrawLine(10,410,210,10)
  GraphicsWindow.DrawLine(410,10,210,410)
  GraphicsWindow.DrawLine(410,10,10,210)
  GraphicsWindow.DrawLine(410,410,210,10)
  GraphicsWindow.DrawLine(410,410,10,210)
EndSub
Sub Labels
  GraphicsWindow.BrushColor = "black"
  GraphicsWindow.DrawEllipse(0,0,30,30)
  GraphicsWindow.DrawEllipse(196,0,30,30)
  GraphicsWindow.DrawEllipse(395,0,30,30)
  GraphicsWindow.DrawEllipse(395,196,30,30)
  GraphicsWindow.DrawEllipse(396,396,30,30)
  GraphicsWindow.DrawEllipse(196,396,30,30)
  GraphicsWindow.DrawEllipse(0,395,30,30)
  GraphicsWindow.DrawEllipse(0,196,30,30)
  GraphicsWindow.DrawEllipse(76,156,30,30)
  GraphicsWindow.DrawEllipse(128,128,30,30)
  GraphicsWindow.DrawEllipse(156,76,30,30)
  GraphicsWindow.DrawEllipse(196,96,30,30)
  GraphicsWindow.DrawEllipse(236,76,30,30)
  GraphicsWindow.DrawEllipse(262,128,30,30)
  GraphicsWindow.DrawEllipse(316,156,30,30)
  GraphicsWindow.DrawEllipse(296,196,30,30)
  GraphicsWindow.DrawEllipse(316,236,30,30)
  GraphicsWindow.DrawEllipse(262,262,30,30)
  GraphicsWindow.DrawEllipse(236,316,30,30)
  GraphicsWindow.DrawEllipse(196,296,30,30)
  GraphicsWindow.DrawEllipse(156,316,30,30)
  GraphicsWindow.DrawEllipse(128,262,30,30)
  GraphicsWindow.DrawEllipse(76,236,30,30)
  GraphicsWindow.DrawEllipse(96,196,30,30)
  GraphicsWindow.DrawEllipse(196,196,30,30)
  GraphicsWindow.BrushColor = "white"
  GraphicsWindow.FillEllipse(1,1,28,28)
  GraphicsWindow.FillEllipse(197,1,28,28)
  GraphicsWindow.FillEllipse(396,1,28,28)
  GraphicsWindow.FillEllipse(396,197,28,28)
  GraphicsWindow.FillEllipse(397,397,28,28)
  GraphicsWindow.FillEllipse(197,397,28,28)
  GraphicsWindow.FillEllipse(1,396,28,28)
  GraphicsWindow.FillEllipse(1,197,28,28)
  GraphicsWindow.FillEllipse(77,157,28,28)
  GraphicsWindow.FillEllipse(129,129,28,28)
  GraphicsWindow.FillEllipse(157,77,28,28)
  GraphicsWindow.FillEllipse(197,97,28,28)
  GraphicsWindow.FillEllipse(237,77,28,28)
  GraphicsWindow.FillEllipse(263,129,28,28)
  GraphicsWindow.FillEllipse(317,157,28,28)
  GraphicsWindow.FillEllipse(297,197,28,28)
  GraphicsWindow.FillEllipse(317,237,28,28)
  GraphicsWindow.FillEllipse(263,263,28,28)
  GraphicsWindow.FillEllipse(237,317,28,28)
  GraphicsWindow.FillEllipse(197,297,28,28)
  GraphicsWindow.FillEllipse(157,317,28,28)
  GraphicsWindow.FillEllipse(129,263,28,28)
  GraphicsWindow.FillEllipse(77,237,28,28)
  GraphicsWindow.FillEllipse(97,197,28,28)
  GraphicsWindow.FillEllipse(197,197,28,28)
  GraphicsWindow.BrushColor = "black"
  GraphicsWindow.DrawBoundText(10,7,20,"A")
  GraphicsWindow.DrawBoundText(206,7,20,"B")
  GraphicsWindow.DrawBoundText(405,7,20,"C")
  GraphicsWindow.DrawBoundText(405,203,20,"D")
  GraphicsWindow.DrawBoundText(406,403,20,"E")
  GraphicsWindow.DrawBoundText(206,403,20,"F")
  GraphicsWindow.DrawBoundText(10,402,20,"G")
  GraphicsWindow.DrawBoundText(10,203,20,"H")
  GraphicsWindow.DrawBoundText(87,163,20,"I")
  GraphicsWindow.DrawBoundText(139,136,20,"J")
  GraphicsWindow.DrawBoundText(165,83,20,"K")
  GraphicsWindow.DrawBoundText(206,103,20,"L")
  GraphicsWindow.DrawBoundText(245,83,20,"M")
  GraphicsWindow.DrawBoundText(271,135,20,"N")
  GraphicsWindow.DrawBoundText(325,163,20,"O")
  GraphicsWindow.DrawBoundText(306,203,20,"P")
  GraphicsWindow.DrawBoundText(325,243,20,"Q")
  GraphicsWindow.DrawBoundText(272,269,20,"R")
  GraphicsWindow.DrawBoundText(246,323,20,"S")
  GraphicsWindow.DrawBoundText(206,303,20,"T")
  GraphicsWindow.DrawBoundText(165,323,20,"U")
  GraphicsWindow.DrawBoundText(138,270,20,"V")
  GraphicsWindow.DrawBoundText(85,243,20,"W")
  GraphicsWindow.DrawBoundText(105,203,20,"X")
  GraphicsWindow.DrawBoundText(206,203,20,"Y")
EndSub
