dWidth = Desktop.Width

dHeight = Desktop.Height

wWidth = 1000

wHeight = 600

wTop = (dHeight - wHeight - 74) / 2

wLeft = (dWidth - wWidth) / 2

CurrentMenu = "MainPaint"

CurrentColor = "First"

CurrentTool = "Pencil"

xPosRedSlide = 25

xPosGreenSlide = 25

xPosBlueSlide = 25

xPrevRed = 25

xPrevGreen = 25

xPrevBlue = 25

xPrevRed2 = 230

xPrevGreen2 = 230

xPrevBlue2 = 230

RedValue = 0

GreenValue = 0

BlueValue = 0

DropDownSizeShown = "False"

DropDownTool = "None"

DdPencilSize = 1

DdBrushSize = 7

DdEraserSize = 10

DdSpraySize = 10

DdBrushLeft = 20

DdBrushTop = 70

DdEraserLeft = 19

DdEraserTop = 69

DdSprayLeft = 30

DdSprayTop = 55

DdSprayBordersZoom = 0.5

DdDotSize = 1

xColorIndicator = 138

ToolAdded = "False"

CanMoveRedSlide = "False"

CanMoveGreenSlide = "False"

CanMoveBlueSlide = "Falase"

PencilSize = 1.5

BrushSize = 6

EraserSize = 10

SpraySize = 15

SprayColors = 2

SpraySpeed = 10

SprayDotSize = 2

BrushColor = "Black"

SecondColor = GraphicsWindow.GetColorFromRGB(225, 225, 225)

ColorPickerLoaded = "False"

CpLeft = 0

CpTop = 0

CanMoveCp = "False"

CanGetPixel = "True"

xSpraySpeedIndi = 378

DdSpraySizeIndiTop = 115

DdDotSizeIndiLeft = 414

CanMoveTxtIndies = "False"

OldTxtBody = "This program was developed using Microsoft Small Basic"

OldTxtName = "Microsoft Sans Serif"

OldTxtSize = 12

OldTxtBold = "Yes"

OldTxtFontBold = "False"

OldTxtFontItalic = "False"

OldTxtSolid = "False"

OldTxtTransparent = "True"

TxtName = OldTxtName

TxtBody = OldTxtBody

TxtSize = 12

CurrentShape = "Line"

BackgroundShapes = "Solid"

PenWidthShapes = 2

xIndiPenWidthSh = 535.5

CurrentMirror = "None"

MirrorAdded = "False"

CanAddSelectLm = "False"

CanMoveIndiSelect = "False"

CanAddIndiSelect = "True"

CanClickSelectTool = "True"

CurrentPattern = "Lines"

ParticleWidth = 40

ParticleHeight = 40

xIndiPattern = 613

yIndiPattern = 83

xIndiPatternBorder = 763

xIndiPatternBorderThickness = 615

ParticleBorders = "False"

PatternWidth = dWidth

PatternHeight = dHeight

PatternBorderThickness = 1

CanResizeIndiDrawPat = "False"

DrawFullscreen = "False"

xIndiPatRandClrs = 763

PatternRandomClrs = "False"

'Window

GraphicsWindow.Width = wWidth

GraphicsWindow.Height = wHeight

GraphicsWindow.Left = wLeft

GraphicsWindow.Top = wTop

GraphicsWindow.Title = "Paint"

GraphicsWindow.BrushColor = "#FFFFFF"

GraphicsWindow.FillRectangle(0, 0, dWidth, dHeight)

GraphicsWindow.FontBold = "False"

GraphicsWindow.FontName = "Microsoft Sans Serif"

GraphicsWindow.PenWidth = 1

'Colors

ClrBasicDark = GraphicsWindow.GetColorFromRGB(50 50 50)

ClrBackDark = GraphicsWindow.GetColorFromRGB(100 100 100)

ClrBorderDark = GraphicsWindow.GetColorFromRGB(150 150 150)

ClrTextDark = GraphicsWindow.GetColorFromRGB(200 200 200)

ClrLightGray = GraphicsWindow.GetColorFromRGB(245, 245, 245)

'Main

LoadImages()

LoadMainGUI()

Mouse.HideCursor()

AddTool()

Shapes.Move(tindicator["Pencil"], GraphicsWindow.MouseX - 38, GraphicsWindow.MouseY - 38)

If GraphicsWindow.MouseY > 50 Then

  Shapes.HideShape(ToolIndicator)

Else

  Shapes.HideShape(tindicator["Pencil"])

  Mouse.ShowCursor()

EndIf

'

'Subroutines********************

Sub LoadImages

  PathResources = "j:\vb12pub\Images\"

  Load_ImgColors = ImageList.LoadImage(PathResources + "Colors.png")

  Load_ImgPencil = ImageList.LoadImage(PathResources + "Pencil.png")

  Load_ImgBrush = ImageList.LoadImage(PathResources + "Brush.png")

  Load_ImgEraser = ImageList.LoadImage(PathResources + "Eraser.png")

  Load_ImgColorPicker = ImageList.LoadImage(PathResources + "Color Picker.png")

  Load_ImgSpray = ImageList.LoadImage(PathResources + "Spray.png")

  Load_ImgCloseSm = ImageList.LoadImage(PathResources + "Close Spray Menu.png")

  Load_ImgText = ImageList.LoadImage(PathResources + "Text.png")

  Load_ImgFill = ImageList.LoadImage(PathResources + "Fill.png")

  Load_ImgShapes = ImageList.LoadImage(PathResources + "Shapes.png")

  Load_ImgMirror = ImageList.LoadImage(PathResources + "Mirror.png")

  Load_ImgHorizontal = ImageList.LoadImage(PathResources + "Horizontal.png")

  Load_ImgVertical = ImageList.LoadImage(PathResources + "Vertical.png")

  Load_ImgSelect = ImageList.LoadImage(PathResources + "Select.png")

  Load_ImgCut = ImageList.LoadImage(PathResources + "Cut.png")

  Load_ImgCopy = ImageList.LoadImage(PathResources + "Copy.png")

  Load_ImgPaste = ImageList.LoadImage(PathResources + "Paste.png")

  Load_ImgPattern = ImageList.LoadImage(PathResources + "Pattern.png")

  Load_ImgLines = ImageList.LoadImage(PathResources + "Lines.bmp")

  Load_ImgSquares = ImageList.LoadImage(PathResources + "Squares.bmp")

  Load_ImgCircles = ImageList.LoadImage(PathResources + "Circles.bmp")

  Load_ImgTriangles = ImageList.LoadImage(PathResources + "Triangles.bmp")

  Load_ImgRhombus = ImageList.LoadImage(PathResources + "Rhombus.bmp")

  Load_ImgCubes = ImageList.LoadImage(PathResources + "Cubes.bmp")

  Load_ImgSpheres = ImageList.LoadImage(PathResources + "Spheres.bmp")

  Load_ImgPyramids = ImageList.LoadImage(PathResources + "Pyramids.bmp")

  Load_ImgEllipses = ImageList.LoadImage(PathResources + "Ellipses.bmp")

  Load_ImgCrosses = ImageList.LoadImage(PathResources + "Crosses.bmp")

EndSub

'

Sub LoadMainGUI

  GraphicsWindow.PenWidth = 2

  For Times = 1 To 49

    GraphicsWindow.PenColor = GraphicsWindow.GetColorFromRGB(Times + 50, Times + 50, Times + 50)

    Shapes.AddLine(0, 0 + Times, dWidth, 0 + Times)

  EndFor

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.BrushColor = ClrTextDark

  GraphicsWindow.PenWidth = 3

  For Times = 1 To 5

    DdBorders[Times] = Shapes.AddEllipse(46, 46)

    Shapes.HideShape(DdBorders[Times])

  EndFor

  GraphicsWindow.PenColor = "Cyan"

  GraphicsWindow.BrushColor = "DarkTurquoise"

  SizeIndicator = Shapes.AddEllipse(50, 50)

  Shapes.HideShape(SizeIndicator)

  GraphicsWindow.PenWidth = 1.5

  ToolIndicator = Shapes.AddEllipse(50, 50)

  Shapes.Move(ToolIndicator, 2, 0)

  Shapes.HideShape(ToolIndicator)

  GraphicsWindow.PenWidth = 3

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.BrushColor = ClrTextDark

  For Times = 1 To 12

    RecBorders[Times] = Shapes.AddEllipse(46, 46)

    Shapes.Move(RecBorders[Times], Times * 55 - 51, 2)

    Shapes.Zoom(RecBorders[Times], 0.9, 0.9)

  EndFor

  hSeparator = Shapes.AddLine(dWidth / 2, 50, dWidth / 2, dHeight)

  Shapes.HideShape(hSeparator)

  vSeparator = Shapes.AddLine(0, dHeight / 2 - 10, dWidth, dHeight / 2 - 10)

  Shapes.HideShape(vSeparator)

  ImgColors = Shapes.AddImage(Load_ImgColors)

  Shapes.Move(ImgColors, 7, 5)

  Shapes.Zoom(ImgColors, 0.8, 0.8)

  ImgPencil = Shapes.AddImage(Load_ImgPencil)

  Shapes.Move(ImgPencil, 63, 5)

  ImgBrush = Shapes.AddImage(Load_ImgBrush)

  Shapes.Move(ImgBrush, 116, 5)

  ImgEraser = Shapes.AddImage(Load_ImgEraser)

  Shapes.Move(ImgEraser, 171, 5)

  ImgColorPicker = Shapes.AddImage(Load_ImgColorPicker)

  Shapes.Move(ImgColorPicker, 231, 10)

  ImgSpray = Shapes.AddImage(Load_ImgSpray)

  Shapes.Move(ImgSpray, 286, 9)

  ImgText = Shapes.AddImage(Load_ImgText)

  Shapes.Move(ImgText, 340, 10)

  ImgFill = Shapes.AddImage(Load_ImgFill)

  Shapes.Move(ImgFill, 387, 1)

  Shapes.Zoom(ImgFill, 0.9, 0.9)

  ImgShapes = Shapes.AddImage(Load_ImgShapes)

  Shapes.Move(ImgShapes, 442, 2)

  Shapes.Zoom(ImgShapes, 0.85, 0.85)

  ImgMirror = Shapes.AddImage(Load_ImgMirror)

  Shapes.Move(ImgMirror, 498, 1)

  ImgSelect = Shapes.AddImage(Load_ImgSelect)

  Shapes.Move(ImgSelect, 561, 9)

  ImgPattern = Shapes.AddImage(Load_ImgPattern)

  Shapes.Move(ImgPattern, 612, 5)

  Shapes.Zoom(ImgPattern, 0.7, 0.7)

  GraphicsWindow.PenWidth = 1

  GraphicsWindow.PenColor = "Black"

  GraphicsWindow.BrushColor = "White"

  tIndicator["Pencil"] = Shapes.AddImage(Load_ImgPencil)

  tIndicator["Brush"] = Shapes.AddImage(Load_ImgBrush)

  tIndicator["Eraser"] = Shapes.AddRectangle(EraserSize, EraserSize)

  tIndicator["ClrPck"] = Shapes.AddImage(Load_ImgColorPicker)

  tIndicator["Spray"] = Shapes.AddImage(Load_ImgSpray)

  tIndicator["Fill"] = Shapes.AddImage(Load_ImgFill)

EndSub

'

Sub AddTool

  RemoveAllIndicatorIcons()

  xCurrentMousePos = GraphicsWindow.MouseX

  yCurrentMousePos = GraphicsWindow.MouseY

  If CurrentTool = "Select" Then

  Else

    CanClickSelectTool = "True"

  EndIf

  If CurrentTool = "Pencil" Then

    Shapes.ShowShape(tindicator["Pencil"])

  ElseIf CurrentTool = "Brush" Then

    Shapes.ShowShape(tindicator["Brush"])

  ElseIf CurrentTool = "Eraser" Then

    If EraserSize = 10 Then

      Controls.SetSize(tindicator["Eraser"], 10, 10)

    ElseIf EraserSize = 15 Then

      Controls.SetSize(tindicator["Eraser"], 15, 15)

    ElseIf EraserSize = 20 Then

      Controls.SetSize(tindicator["Eraser"], 20, 20)

    ElseIf EraserSize = 25 Then

      Controls.SetSize(tindicator["Eraser"], 25, 25)

    ElseIf EraserSize = 30 Then

      Controls.SetSize(tindicator["Eraser"], 30, 30)

    EndIf

    Shapes.ShowShape(tindicator["Eraser"])

  ElseIf CurrentTool = "ColorPicker" Then

    Shapes.ShowShape(tindicator["ClrPck"])

  ElseIf CurrentTool = "Spray" Then

    Shapes.ShowShape(tIndicator["Spray"])

  ElseIf CurrentTool = "Text" Then

    Mouse.ShowCursor()

  ElseIf CurrentTool = "Fill" Then

    Shapes.ShowShape(tIndicator["Fill"])

  ElseIf CurrentTool = "Shapes" Then

    Mouse.ShowCursor()

  EndIf

EndSub

'

Sub RemoveAllIndicatorIcons

  fx=ldtext.Split ("Pencil Brush Eraser ClrPck Spray Fill"," ")

  For f=1 To 8

    Shapes.HideShape  (tIndicator [fx[f]])

  endfor

EndSub

'

Sub AddIndicatorIcon

  xCurrentMousePos = GraphicsWindow.MouseX

  yCurrentMousePos = GraphicsWindow.MouseY

  If CurrentTool = "Text" Or CurrentTool = "Shapes" Or CurrentTool = "Mirror" Or CurrentTool = "Select" Or CurrentTool = "Pattern" Then

  Else

    Mouse.HideCursor()

  EndIf

  If CurrentTool = "Pencil" Then

    Shapes.Move(tIndicator["Pencil"], xCurrentMousePos - 2, yCurrentMousePos - 38)

    Shapes.ShowShape(tindicator["Pencil"])

  ElseIf CurrentTool = "Brush" Then

    Shapes.Move(tindicator["Brush"], xCurrentMousePos - 3, yCurrentMousePos - 33)

    Shapes.ShowShape(tindicator["Brush"])

  ElseIf CurrentTool = "Eraser" Then

    Shapes.Move(tindicator["Eraser"], xCurrentMousePos - (EraserSize / 2), yCurrentMousePos - (EraserSize / 2))

    Shapes.ShowShape(tindicator["Eraser"])

  ElseIf CurrentTool = "ColorPicker" Then

    Shapes.Move(tindicator["ClrPck"], xCurrentMousePos - 32, yCurrentMousePos - 32)

    Shapes.ShowShape(tindicator["ClrPck"])

    If ColorPickerLoaded = "False" Then

      LoadColorPicker()

      ColorPickerLoaded = "True"

    EndIf

  ElseIf CurrentTool = "Spray" Then

    Shapes.Move(tIndicator["Spray"], xCurrentMousePos - 20, yCurrentMousePos - 20)

    Shapes.ShowShape(tIndicator["Spray"])

  ElseIf CurrentTool = "Fill" Then

    Shapes.Move(tIndicator["Fill"], xCurrentMousePos - 20, yCurrentMousePos - 20)

    Shapes.ShowShape(tIndicator["Fill"])

  EndIf

EndSub

'

Sub ChooseColor

  If Mouse.IsLeftButtonDown = "True" Then

    GraphicsWindow.BrushColor = BrushColor

    GraphicsWindow.PenColor = BrushColor

  ElseIf Mouse.IsRightButtonDown = "True" Then

    GraphicsWindow.BrushColor = SecondColor

    GraphicsWindow.PenColor = SecondColor

  EndIf

EndSub

'

Sub Draw

  If yMove > 0 And yMove < 50 Then

    RemoveAllIndicatorIcons()

    Mouse.ShowCursor()

  Else

    AddIndicatorIcon()

    If CanDraw = "True" Then

      If CurrentTool = "Pencil" Then

        ChooseColor()

        GraphicsWindow.PenWidth = PencilSize

        GraphicsWindow.DrawLine(xMove, yMove, xMoveNew, yMoveNew)

        If MirrorAdded = "True" Then

          If CurrentMirror = "Horizontal" Then

            If xDown < (dWidth / 2) Then

              GraphicsWindow.DrawLine(dWidth - xMove, yMove, dWidth - xMoveNew, yMoveNew)

            ElseIf xDown > (dWidth / 2) Then

              xPosPencil = xMove - (dWidth / 2)

              xPosPencil2 = xMoveNew - (dWidth / 2)

              GraphicsWindow.DrawLine((dWidth / 2) - xPosPencil, yMove, (dWidth / 2) - xPosPencil2, yMoveNew)

            EndIf

          ElseIf CurrentMirror = "Vertical" Then

            xPosVSeparator = dHeight / 2 - 10

            If yDown < xPosVSeparator Then

              GraphicsWindow.DrawLine(xMove, dHeight - yMove - 20, xMoveNew, dHeight - yMoveNew - 20)

            Else

              yPosPencil = yMove - (dHeight / 2)

              yPosPencil2 = yMoveNew - (dHeight / 2)

              GraphicsWindow.DrawLine(xMove, (dHeight / 2) - yPosPencil - 20, xMoveNew, (dHeight / 2) - yPosPencil2 - 20)

            EndIf

          EndIf

        EndIf

      ElseIf CurrentTool = "Brush" Then

        ChooseColor()

        GraphicsWindow.PenWidth = BrushSize

        GraphicsWindow.FillEllipse(xMove - (BrushSize / 2), yMove - (BrushSize / 2), BrushSize, BrushSize)

        GraphicsWindow.DrawLine(xMove, yMove, xMoveNew, yMoveNew)

        If MirrorAdded = "True" Then

          If CurrentMirror = "Horizontal" Then

            If xDown < (dWidth / 2) Then

              GraphicsWindow.FillEllipse(dWidth - xMove - (BrushSize / 2), yMove - (BrushSize / 2), BrushSize, BrushSize)

              GraphicsWindow.DrawLine(dWidth - xMove, yMove, dWidth - xMoveNew, yMoveNew)

            ElseIf xDown > (dWidth / 2) Then

              xPosBrush = xMove - (dWidth / 2)

              xPosBrush2 = xMoveNew - (dWidth / 2)

              GraphicsWindow.FillEllipse(dWidth - xMove - (BrushSize / 2), yMove - (BrushSize / 2), BrushSize, BrushSize)

              GraphicsWindow.DrawLine((dWidth / 2) - xPosBrush, yMove, (dWidth / 2) - xPosBrush2, yMoveNew)

            EndIf

          ElseIf CurrentMirror = "Vertical" Then

            xPosVSeparator = dHeight / 2 - 10

            yPosBrush = yMove - (dHeight / 2)

            yPosBrush2 = yMoveNew - (dHeight / 2)

            If yDown < xPosVSeparator Then

              GraphicsWindow.FillEllipse(xMove - (BrushSize / 2), dHeight - 20 - yMove - (BrushSize / 2), BrushSize, BrushSize)

              GraphicsWindow.DrawLine(xMove, (dHeight / 2) - yPosbrush - 20, xMoveNew, (dHeight / 2) - yPosBrush2 - 20)

            Else

              GraphicsWindow.FillEllipse(xMove - (BrushSize / 2), (dHeight / 2) - yPosBrush - 20 - (BrushSize / 2), BrushSize, BrushSize)

              GraphicsWindow.DrawLine(xMove, (dHeight / 2) - yPosBrush - 20, xMoveNew, (dHeight / 2) - yPosBrush2 - 20)

            EndIf

          EndIf

        EndIf

      ElseIf CurrentTool = "Eraser" Then

        If Mouse.IsLeftButtonDown = "True" Then

          GraphicsWindow.PenColor = "White"

          GraphicsWindow.BrushColor = "White"

        ElseIf Mouse.IsRightButtonDown = "True" Then

          GraphicsWindow.PenColor = BrushColor

          GraphicsWindow.BrushColor = BrushColor

        EndIf

        GraphicsWindow.PenWidth = (EraserSize * 100) / 80

        GraphicsWindow.FillRectangle(xMove - (EraserSize / 2), yMove - (EraserSize / 2), EraserSize, EraserSize)

        GraphicsWindow.DrawLine(xMove, yMove, xMoveNew, yMoveNew)

        If MirrorAdded = "True" Then

          If CurrentMirror = "Horizontal" Then

            If xDown < (dWidth / 2) Then

              GraphicsWindow.FillRectangle(dWidth - xMove - (EraserSize / 2), yMove - (EraserSize / 2), EraserSize, EraserSize)

              GraphicsWindow.DrawLine(dWidth - xMove, yMove, dWidth - xMoveNew, yMoveNew)

            ElseIf xDown > (dWidth / 2) Then

              xPosEraser = xMove - (dWidth / 2)

              xPosEraser2 = xMoveNew - (dWidth / 2)

              GraphicsWindow.FillRectangle((dWidth / 2) - xPosEraser - (EraserSize / 2), yMove - (EraserSize / 2), EraserSize, EraserSize)

              GraphicsWindow.DrawLine((dWidth / 2) - xPosEraser, yMove, (dWidth / 2) - xPosEraser2, yMoveNew)

            EndIf

          ElseIf CurrentMirror = "Vertical" Then

            xPosVSeparator = dHeight / 2 - 10

            yPosEraser = yMove - (dHeight / 2)

            yPosEraser2 = yMoveNew - (dHeight / 2)

            If yDown < xPosVSeparator Then

              GraphicsWindow.FillRectangle(xMove - (EraserSize / 2), dHeight - 20 - yMove - (EraserSize / 2), EraserSize, EraserSize)

              GraphicsWindow.DrawLine(xMove, dHeight - 20 - yMove, xMoveNew, dHeight - 20 - yMoveNew)

            Else

              GraphicsWindow.FillRectangle(xMove - (EraserSize / 2), (dHeight / 2) - yPosEraser - 20 - (EraserSize / 2), EraserSize, EraserSize)

              GraphicsWindow.DrawLine(xMove, (dHeight / 2) - yPosEraser - 20, xMoveNew, (dHeight / 2) - yPosEraser2 - 20)

            EndIf

          EndIf

        EndIf

      ElseIf CurrentTool = "Fill" Then

        ChooseColor()

        GraphicsWindow.FillRectangle(0, 0, dWidth, dHeight)

      EndIf

    EndIf

  EndIf

EndSub

'

Sub RemoveAllSubMenus

  If CurrentMenu = "TextMenu" Then

    TxtBody = Controls.GetTextBoxText(TmShape[4])

    TxtName = Controls.GetTextBoxText(TmShape[9])

    TxtSize = Controls.GetTextBoxText(TmShape[13])

    OldTxtBody = TxtBody

    OldTxtName = TxtName

    OldTxtSize = TxtSize

  ElseIf CurrentMenu = "PatternsMenu" Then

    ClosePatternMenu()

  EndIf

  For Times = 1 To 5

    Shapes.HideShape(DdBorders[Times])

    Shapes.Remove(PencilSizes[Times])

    Shapes.Remove(BrushSizes[Times])

    Shapes.Remove(EraserSizes[Times])

  EndFor

  Shapes.HideShape(SizeIndicator)

  

  CloseColorPicker()

  CloseSprayMenu()

  CloseTextMenu()

  CloseShapesMenu()

  CloseMirrorMenu()

  AddTool()

  DropDownTool = "None"

  CurrentMenu = "MainPaint"

EndSub

'

Sub ShowDropDown

  RemoveAllIndicatorIcons()

  GraphicsWindow.PenWidth = 0

  For Times = 1 To 5

    Shapes.Move(DdBorders[Times], dDownPosX + 1, Times * 47 + 3)

    Shapes.ShowShape(DdBorders[Times])

  EndFor

  If CurrentColor = "First" Then

    GraphicsWindow.PenColor = BrushColor

    GraphicsWindow.BrushColor = BrushColor

  Else

    GraphicsWindow.PenColor = SecondColor

    GraphicsWindow.BrushColor = SecondColor

  EndIf

  If DropDownTool = "Pencil" Then

    For Times = 1 To 5

      PencilSizes[Times] = Shapes.AddRectangle(DdPencilSize, DdPencilSize)

      Shapes.Move(PencilSizes[Times], dDownPosX + 22, Times * 47 + 25)

      DdPencilSize = DdPencilSize + 1

    EndFor

    DdPencilSize = 1

  ElseIf DropDownTool = "Brush" Then

    For Times = 1 To 5

      BrushSizes[Times] = Shapes.AddEllipse(DdBrushSize, DdBrushSize)

      Shapes.Move(BrushSizes[Times], dDownPosX + DdBrushLeft, DdBrushTop)

      DdBrushLeft = DdBrushLeft - 2

      DdBrushTop = DdBrushTop + 45

      DdBrushSize = DdBrushSize + 4

    EndFor

    DdBrushSize = 7

    DdBrushLeft = 20

    DdBrushTop = 70

  ElseIf DropDownTool = "Eraser" Then

    GraphicsWindow.PenColor = "Black"

    GraphicsWindow.BrushColor = "White"

    GraphicsWindow.PenWidth = 1

    For Times = 1 To 5

      EraserSizes[Times] = Shapes.AddRectangle(DdEraserSize, DdEraserSize)

      Shapes.Move(EraserSizes[Times], dDownPosX + DdEraserLeft, DdEraserTop)

      DdEraserSize = DdEraserSize + 5

      DdEraserTop = DdEraserTop + 44

      DdEraserLeft = DdEraserLeft - 2

    EndFor

    GraphicsWindow.PenWidth = 0

    Shapes.Move(EraserSizes[4], dDownPosX + DdEraserLeft + 3, DdEraserTop - 88)

    Shapes.Move(EraserSizes[5], dDownPosX + DdEraserLeft, DdEraserTop - 44)

    DdEraserTop = 69

    DdEraserSize = 10

    DdEraserLeft = 19

  ElseIf DropDownTool = "Spray" Then

    LoadSprayMenu()

  EndIf

  Shapes.Move(SizeIndicator, dDownPosX - 1.15, 48)

  Shapes.ShowShape(SizeIndicator)

  CurrentMenu = "DropDownSize"

EndSub

'





'LoadColorPicker

Sub LoadColorPicker

  ColorPickerLoaded = "True"

  PreviousTool = CurrentTool

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.BrushColor = ClrBasicDark

  CpShape[1] = Shapes.AddRectangle(130, 105)

  GraphicsWindow.BrushColor = ClrTextDark

  CpShape[2] = Shapes.AddText("Hex:")

  GraphicsWindow.SetPixel(0, 0, BrushColor)

  PixelPicked = GraphicsWindow.GetPixel(0, 0)

  GraphicsWindow.BrushColor = "SandyBrown"

  CpShape[3] = Shapes.AddText(PixelPicked)

  GraphicsWindow.BrushColor = BrushColor

  CpShape[4] = Shapes.AddRectangle(110, 60)

  CpShape[5] = Shapes.AddImage(Load_ImgCloseSm)

  MoveColorPicker()

EndSub



'CloseColorPicker

Sub CloseColorPicker

  For Times = 1 To Array.GetItemCount(CpShape)

    Shapes.Remove(CpShape[Times])

  EndFor

  If PreviousTool = "" Then

  Else

    CurrentTool = PreviousTool

    PreviousTool = ""

  EndIf

  AddTool()

  CpLeft = 0

  CpTop = 0

  ColorPickerLoaded = "False"

  CurrentMenu = "MainPaint"

EndSub



'MoveColorPicker

Sub MoveColorPicker

  Shapes.Move(CpShape[1], CpLeft, CpTop + 50)

  Shapes.Move(CpShape[2], CpLeft + 10, CpTop + 60)

  Shapes.Move(CpShape[3], CpLeft + 40, CpTop + 61)

  Shapes.Move(CpShape[4], CpLeft + 10, CpTop + 85)

  Shapes.Move(CpShape[5], CpLeft + 99, CpTop + 49)

EndSub



'LoadSprayMenu

Sub LoadSprayMenu

  For Times = 1 To 5

    Shapes.HideShape(DdBorders[Times])

  EndFor

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.BrushColor = ClrBasicDark

  GraphicsWindow.PenWidth = 1

  SmShape[1] = Shapes.AddRectangle(90, 290)

  Shapes.Move(SmShape[1], dDownPosX - 10, 50)

  GraphicsWindow.BrushColor = ClrBasicDark

  SmShape[2] = Shapes.AddRectangle(210, 290)

  Shapes.Move(SmShape[2], dDownPosX + 79, 50)

  GraphicsWindow.PenColor = "DarkTurquoise"

  GraphicsWindow.BrushColor = "Cyan"

  SmShape[20] = Shapes.AddEllipse(34, 34)

  Shapes.Move(SmShape[20], DdDotSizeIndiLeft, 218)

  SmShape[21] = Shapes.AddRectangle(84, 29)

  SmShape[22] = Shapes.AddRectangle(84, 29)

  Shapes.Move(SmShape[21], xSpraySpeedIndi, 298)

  For Times = 1 To 5

    GraphicsWindow.PenColor = "Black"

    GraphicsWindow.BrushColor = ClrBackDark

    SmShape[3][Times] = Shapes.AddEllipse(50, 50)

    Shapes.Move(SmShape[3][Times], dDownPosX + 10, Times * 50 + 15)

    GraphicsWindow.BrushColor = ClrBackDark

    SmShape[4][Times] = Shapes.AddEllipse(30, 30)

    Shapes.Move(SmShape[4][Times], 55 + dDownPosX + 190 * Times / 5, 220)

  EndFor

  GraphicsWindow.PenWidth = 3

  GraphicsWindow.PenColor = "DarkTurquoise"

  GraphicsWindow.BrushColor = "Cyan"

  SmShape[23] = Shapes.AddEllipse(50, 50)

  Shapes.Move(SmShape[23], dDownPosX + 10, DdSpraySizeIndiTop)

  GraphicsWindow.PenWidth = 1

  For Times = 1 To 5

    GraphicsWindow.PenColor = "Black"

    If CurrentColor = "First" Then

      GraphicsWindow.PenColor = BrushColor

      GraphicsWindow.BrushColor = BrushColor

    Else

      GraphicsWindow.PenColor = SecondColor

      GraphicsWindow.BrushColor = SecondColor

    EndIf

    SmShape[19][Times] = Shapes.AddEllipse(DdDotSize, DdDotSize)

    Shapes.Move(SmShape[19][Times], 68 + dDownPosX + 190 * Times / 5, 233)

    SmShape[5][Times] = Shapes.AddEllipse(DdSpraySize, DdSpraySize)

    Shapes.Move(SmShape[5][Times], dDownPosX + DdSprayLeft, DdSprayTop + 30)

    DdSpraySize = DdSpraySize + 8

    DdSprayBordersZoom = DdSprayBordersZoom + 0.1

    DdSprayLeft = DdSprayLeft - 4

    DdSprayTop = DdSprayTop + 46

    DdDotSize = DdDotSize + 1

    SmShape[24][Times] = Controls.AddButton("", dDownPosX + 10, Times * 50 + 15)

    Controls.SetSize(SmShape[24][Times], 50, 50)

    Shapes.SetOpacity(SmShape[24][Times], 0)

    SmShape[25][Times] = Controls.AddButton("", 55 + dDownPosX + 190 * Times / 5, 220)

    Controls.SetSize(SmShape[25][Times], 30, 30)

    Shapes.SetOpacity(SmShape[25][Times], 0)

  EndFor

  DdSpraySize = 10

  DdSprayLeft = 30

  DdSprayTop = 55

  DdDotSize = 1

  GraphicsWindow.BrushColor = ClrTextDark

  SmShape[6] = Shapes.AddText("Amount of colors to use:")

  SmShape[7] = Shapes.AddText("Size of dots:")

  SmShape[8] = Shapes.AddText("Spraying speed:")

  Shapes.Move(SmShape[6], dDownPosX + 90, 60)

  Shapes.Move(SmShape[7], dDownPosX + 90, 190)

  Shapes.Move(SmShape[8], dDownPosX + 90, 270)

  GraphicsWindow.BrushColor = "Black"

  SmShape[9] = Controls.AddButton("One", dDownPosX + 100, 100)

  SmShape[10] = Controls.AddButton("Two", dDownPosX + 100, 135)

  SmShape[11] = Controls.AddButton("Normal", dDownPosX + 95, 300)

  SmShape[12] = Controls.AddButton("Fast", dDownPosX + 190, 300)

  For Times = 9 To 12

    Controls.SetSize(SmShape[Times], 80, 25)

  EndFor

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.PenWidth = 2

  SmShape[13] = Shapes.AddRectangle(155, 1)

  SmShape[14] = Shapes.AddRectangle(185, 1)

  SmShape[15] = Shapes.AddRectangle(185, 1)

  Shapes.Move(SmShape[13], dDownPosX + 90, 80)

  Shapes.Move(SmShape[14], dDownPosX + 90, 210)

  Shapes.Move(SmShape[15], dDownPosX + 90, 290)

  GraphicsWindow.PenWidth = 1

  GraphicsWindow.BrushColor = SecondColor

  GraphicsWindow.PenColor = ClrBorderDark

  SmShape[17] = Shapes.AddRectangle(60, 60)

  Shapes.Move(SmShape[17], dDownPosX + 215, 115)

  GraphicsWindow.BrushColor = BrushColor

  SmShape[16] = Shapes.AddRectangle(60, 60)

  Shapes.Move(SmShape[16], dDownPosX + 195, 100)

  If SprayColors = 1 Then

    Shapes.HideShape(SmShape[17])

    Shapes.Move(SmShape[22], dDownPosX + 98, 98)

  Else

    Shapes.ShowShape(SmShape[17])

    Shapes.Move(SmShape[22], dDownPosX + 98, 133)

  EndIf

  SmShape[18] = Shapes.AddImage(Load_ImgCloseSm)

  Shapes.Move(SmShape[18], dDownPosX + 258, 49)

  CurrentMenu = "SprayMenu"

EndSub



'CloseSprayMenu

Sub CloseSprayMenu

  For Times = 1 To Array.GetItemCount(SmShape)

    Shapes.Remove(SmShape[Times])

  EndFor

  For Loop = 3 To 5

    For Times = 1 To 5

      Shapes.Remove(SmShape[Loop][Times])

    EndFor

  EndFor

  For Times = 1 To 5

    Shapes.Remove(SmShape[19][Times])

    Controls.Remove(SmShape[24][Times])

    Controls.Remove(SmShape[25][Times])

  EndFor

  CurrentMenu = "MainPaint"

EndSub



'LoadTextMenu

Sub LoadTextMenu

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.BrushColor = ClrBasicDark

  TmShape[1] = Shapes.AddRectangle(300, 460)

  Shapes.Move(TmShape[1], dDownPosX, 50)

  GraphicsWindow.BrushColor = ClrTextDark

  TmShape[2] = Shapes.AddText("Text to draw:")

  Shapes.Move(TmShape[2], dDownPosX + 10, 60)

  TmShape[3] = Shapes.AddRectangle(250, 1)

  Shapes.Move(TmShape[3], dDownPosX + 10, 75)

  GraphicsWindow.BrushColor = "Black"

  TmShape[4] = Controls.AddMultiLineTextBox(dDownPosX + 10, 85)

  Controls.SetSize(TmShape[4], 280, 150)

  Controls.SetTextBoxText(TmShape[4], OldTxtBody)

  TmShape[5] = Controls.AddButton("Clear", dDownPosX + 10, 240)

  Controls.SetSize(TmShape[5], 100, 23)

  TmShape[25] = Controls.AddButton("Font", dDownPosX + 110, 240)

  Controls.SetSize(TmShape[25], 50, 23)

  GraphicsWindow.BrushColor = ClrTextDark

  TmShape[6] = Shapes.AddText("Font name:")

  Shapes.Move(TmShape[6], dDownPosX + 10, 270)

  TmShape[7] = Shapes.AddRectangle(280, 1)

  Shapes.Move(TmShape[7], dDownPosX + 10, 285)

  GraphicsWindow.BrushColor = "Black"

  TmShape[9] = Controls.AddTextBox(dDownPosX + 10, 295)

  Controls.SetSize(TmShape[9], 280, 20)

  Controls.SetTextBoxText(TmShape[9], OldTxtName)

  GraphicsWindow.BrushColor = ClrTextDark

  TmShape[10] = Shapes.AddText("Font size:")

  Shapes.Move(TmShape[10], dDownPosX + 10, 330)

  TmShape[11] = Shapes.AddRectangle(280, 1)

  Shapes.Move(TmShape[11], dDownPosX + 10, 345)

  GraphicsWindow.BrushColor = "Black"

  TmShape[13] = Controls.AddTextBox(dDownPosX + 10, 355)

  Controls.SetSize(TmShape[13], 280, 20)

  Controls.SetTextBoxText(TmShape[13], OldTxtSize)

  TmShape[15] = Shapes.AddImage(Load_ImgCloseSm)

  Shapes.Move(TmShape[15], dDownPosX + 269, 49)

  xCloseTm = Shapes.GetLeft(TmShape[15])

  yCloseTm = Shapes.GetTop(TmShape[15])

  GraphicsWindow.BrushColor = ClrTextDark

  TmShape[16] = Shapes.AddText("Font style:")

  Shapes.Move(TmShape[16], dDownPosX + 10, 390)

  TmShape[17] = Shapes.AddRectangle(280, 1)

  Shapes.Move(TmShape[17], dDownPosX + 10, 405)

  GraphicsWindow.PenColor = "DarkTurquoise"

  GraphicsWindow.BrushColor = "Cyan"

  TmShape[21] = Shapes.AddRectangle(139, 27)

  Shapes.Move(TmShape[21], dDownPosX + 8, 413)

  TmShape[22] = Shapes.AddRectangle(139, 27)

  Shapes.Move(TmShape[22], dDownPosX + 153, 413)

  TmShape[23] = Shapes.AddRectangle(139, 27)

  Shapes.Move(TmShape[23], dDownPosX + 8, 473)

  TmShape[24] = Shapes.AddRectangle(139, 27)

  Shapes.Move(TmShape[24], dDownPosX + 153, 473)

  ConfigureOldTxtFontStyle()

  ConfigureTmBackground()

  GraphicsWindow.BrushColor = "Black"

  TmShape[19] = Controls.AddButton("Bold", dDownPosX + 10, 415)

  Controls.SetSize(TmShape[19], 135, 23)

  TmShape[20] = Controls.AddButton("Italic", dDownPosX + 155, 415)

  Controls.SetSize(TmShape[20], 135, 23)

  GraphicsWindow.BrushColor = ClrTextDark

  TmShape[8] = Shapes.AddText("Background:")

  Shapes.Move(TmShape[8], dDownPosX + 10, 450)

  GraphicsWindow.PenColor = ClrBorderDark

  TmShape[12] = Shapes.AddRectangle(280, 1)

  Shapes.Move(TmShape[12], dDownPosX + 10, 465)

  GraphicsWindow.BrushColor = "Black"

  TmShape[18] = Controls.AddButton("Solid", dDownPosX + 10, 475)

  Controls.SetSize(TmShape[18], 135, 23)

  TmShape[14] = Controls.AddButton("Transparent", dDownPosX + 155, 475)

  Controls.SetSize(TmShape[14], 135, 23)

  CurrentMenu = "TextMenu"

EndSub



'CloseTextMenu

Sub CloseTextMenu

  For Times = 1 To Array.GetItemCount(TmShape)

    Shapes.Remove(TmShape[Times])

  EndFor

EndSub



'ConfigureOldTxtFontStyle

Sub ConfigureOldTxtFontStyle

  If OldTxtFontBold = "False" And OldTxtFontItalic = "False" Then

    OldTxtFontStyle = "None"

    Shapes.HideShape(TmShape[21])

    Shapes.HideShape(TmShape[22])

  ElseIf OldTxtFontBold = "True" And OldTxtFontItalic = "True" Then

    OldTxtFontStyle = "Bold, Italic"

    Shapes.ShowShape(TmShape[21])

    Shapes.ShowShape(TmShape[22])

  ElseIf OldTxtFontBold = "True" And OldTxtFontItalic = "False" Then

    OldTxtFontStyle = "Bold"

    Shapes.ShowShape(TmShape[21])

    Shapes.HideShape(TmShape[22])

  Else

    OldTxtFontStyle = "Italic"

    Shapes.HideShape(TmShape[21])

    Shapes.ShowShape(TmShape[22])

  EndIf

EndSub



'ConfigureTmBackground

Sub ConfigureTmBackground

  If OldTxtSolid = "True" Then

    Shapes.ShowShape(TmShape[23])

  Else

    Shapes.HideShape(TmShape[23])

  EndIf

  If OldTxtTransparent = "True" Then

    Shapes.ShowShape(TmShape[24])

  Else

    Shapes.HideShape(TmShape[24])

  EndIf

EndSub



'LoadShapesMenu

Sub LoadShapesMenu

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.BrushColor = ClrBasicDark

  ShMShape[1] = Shapes.AddRectangle(230, 360)

  Shapes.Move(ShMShape[1], dDownPosX, 50)

  GraphicsWindow.BrushColor = ClrTextDark

  ShMShape[2] = Shapes.AddText("Shape:")

  Shapes.Move(ShMShape[2], dDownPosX + 10, 60)

  ShMShape[3] = Shapes.AddRectangle(180, 1)

  Shapes.Move(ShMShape[3], dDownPosX + 10, 75)

  GraphicsWindow.PenColor = "DarkTurquoise"

  GraphicsWindow.BrushColor = "Cyan"

  ShMShape[12] = Shapes.AddRectangle(104, 84)

  GraphicsWindow.PenColor = "Black"

  GraphicsWindow.BrushColor = ClrBackDark

  ShMShape[4] = Shapes.AddRectangle(100, 80)

  Shapes.Move(ShMShape[4], dDownPosX + 10, 85)

  ShMShape[5] = Shapes.AddRectangle(100, 80)

  Shapes.Move(ShMShape[5], dDownPosX + 120, 85)

  ShMShape[6] = Shapes.AddRectangle(100, 80)

  Shapes.Move(ShMShape[6], dDownPosX + 10, 175)

  ShMShape[7] = Shapes.AddRectangle(100, 80)

  Shapes.Move(ShMShape[7], dDownPosX + 120, 175)

  GraphicsWindow.PenColor = BrushColor

  ShMShape[8] = Shapes.AddLine(dDownPosX + 20, 95, dDownPosX + 100, 155)

  ShMShape[9] = Shapes.AddRectangle(60, 60)

  Shapes.Move(ShMShape[9], dDownPosX + 140, 95)

  ShMShape[10] = Shapes.AddEllipse(60, 60)

  Shapes.Move(ShMShape[10], dDownPosX + 30, 185)

  ShMShape[11] = Shapes.AddTriangle(dDownPosX + 170, 185, dDownPosX + 140, 245, dDownPosX + 200, 245)

  GraphicsWindow.BrushColor = ClrTextDark

  ShMShape[13] = Shapes.AddText("Background:")

  Shapes.Move(ShMShape[13], dDownPosX + 10, 270)

  GraphicsWindow.PenColor = ClrBorderDark

  ShMShape[14] = Shapes.AddRectangle(210, 1)

  Shapes.Move(ShMShape[14], dDownPosX + 10, 285)

  GraphicsWindow.PenColor = "DarkTurquoise"

  GraphicsWindow.BrushColor = "Cyan"

  ShMShape[17] = Shapes.AddRectangle(104, 27)

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.BrushColor = "Black"

  ShMShape[15] = Controls.AddButton("Solid", dDownPosX + 10, 295)

  Controls.SetSize(ShMShape[15], 100, 23)

  ShMShape[16] = Controls.AddButton("Transparent", dDownPosX + 120, 295)

  Controls.SetSize(ShMShape[16], 100, 23)

  GraphicsWindow.BrushColor = ClrTextDark

  ShMShape[18] = Shapes.AddText("Border thickness:")

  Shapes.Move(ShMShape[18], dDownPosX + 10, 335)

  ShMShape[19] = Shapes.AddRectangle(210, 1)

  Shapes.Move(ShMShape[19], dDownPosX + 10, 350)

  GraphicsWindow.PenColor = "DarkTurquoise"

  GraphicsWindow.BrushColor = "Cyan"

  ShMShape[22] = Shapes.AddEllipse(38, 38)

  Shapes.Move(ShMShape[22], xIndiPenWidthSh, 358.5)

  For Times = 1 To 5

    GraphicsWindow.PenColor = "Black"

    GraphicsWindow.BrushColor = ClrBackDark

    GraphicsWindow.PenWidth = 1

    ShMShape[20][Times] = Shapes.AddEllipse(35, 35)

    Shapes.Move(ShMShape[20][Times], dDownPosX + 42 * Times - 29, 360)

    GraphicsWindow.PenWidth = Times - 1

    GraphicsWindow.PenColor = BrushColor

    ShMShape[21][Times] = Shapes.AddLine(0, 0, 20, 0)

    Shapes.Move(ShMShape[21][Times], dDownPosX + 42 * Times - 22, 377)

    ShMShape[23][Times] = Controls.AddButton("", dDownPosX + 42 * Times - 29, 360)

    Controls.SetSize(ShMShape[23][Times], 35, 35)

    Shapes.SetOpacity(ShMShape[23][Times], 0)

  EndFor

  ShMShape[0] = Shapes.AddImage(Load_ImgCloseSm)

  Shapes.Move(ShMShape[0], dDownPosX + 199, 49)

  UpdateShapesDialog()

  CurrentMenu = "ShapesMenu"

EndSub



'CloseShapesMenu

Sub CloseShapesMenu

  For Times = 0 To Array.GetItemCount(ShMShape)

    Shapes.Remove(ShMShape[Times])

  EndFor

  For Times = 1 To 5

    Shapes.Remove(ShMShape[20][Times])

    Shapes.Remove(ShMShape[21][Times])

    Controls.Remove(ShMShape[23][Times])

  EndFor

  GraphicsWindow.PenWidth = 1

EndSub



'UpdateShapesDialog

Sub UpdateShapesDialog

  For Times = 8 To 11

    Shapes.Remove(ShMShape[Times])

  EndFor

  If CurrentShape = "Line" Then

    Shapes.Move(ShMShape[12], dDownPosX + 8, 83)

  ElseIf CurrentShape = "Rectangle" Then

    Shapes.Move(ShMShape[12], dDownPosX + 118, 83)

  ElseIf CurrentShape = "Ellipse" Then

    Shapes.Move(ShMShape[12], dDownPosX + 8, 173)

  ElseIf CurrentShape = "Triangle" Then

    Shapes.Move(ShMShape[12], dDownPosX + 118, 173)

  EndIf

  If BackgroundShapes = "Solid" Then

    GraphicsWindow.BrushColor = SecondColor

  ElseIf BackgroundShapes = "Transparent" Then

    GraphicsWindow.BrushColor = ClrBackDark

  EndIf

  GraphicsWindow.PenWidth = PenWidthShapes + 1

  ShMShape[8] = Shapes.AddLine(dDownPosX + 20, 95, dDownPosX + 100, 155)

  GraphicsWindow.PenWidth = PenWidthShapes

  ShMShape[9] = Shapes.AddRectangle(60, 60)

  Shapes.Move(ShMShape[9], dDownPosX + 140, 95)

  ShMShape[10] = Shapes.AddEllipse(60, 60)

  Shapes.Move(ShMShape[10], dDownPosX + 30, 185)

  ShMShape[11] = Shapes.AddTriangle(dDownPosX + 170, 185, dDownPosX + 140, 245, dDownPosX + 200, 245)

  GraphicsWindow.BrushColor = ClrTextDark

  If BackgroundShapes = "Solid" Then

    Shapes.Move(ShMShape[17], dDownPosX + 8, 293)

  ElseIf BackgroundShapes = "Transparent" Then

    Shapes.Move(ShMShape[17], dDownPosX + 118, 293)

  EndIf

EndSub



'LoadMirrorMenu

Sub LoadMirrorMenu

  GraphicsWindow.PenColor = ClrBorderDark

  GraphicsWindow.BrushColor = ClrBasicDark

  MmShape[1] = Shapes.AddRectangle(210, 180)

  Shapes.Move(MmShape[1], dDownPosX, 50)

  GraphicsWindow.PenColor = "DarkTurquoise"

  GraphicsWindow.BrushColor = "Cyan"

  MmShape[4] = Shapes.AddRectangle(94, 94)

  If CurrentMirror = "Horizontal" Then

    Shapes.Move(MmShape[4], dDownPosX + 8, 83)

  ElseIf CurrentMirror = "Vertical" Then

    Shapes.Move(MmShape[4], dDownPosX + 108, 83)

  Else

    Shapes.HideShape(MmShape[4])

  EndIf

  GraphicsWindow.PenColor = "Black"

  GraphicsWindow.BrushColor = ClrBackDark

  MmShape[2] = Shapes.AddRectangle(90, 90)

  Shapes.Move(MmShape[2], dDownPosX + 10, 85)

  MmShape[3] = Shapes.AddRectangle(90, 90)

  Shapes.Move(MmShape[3], dDownPosX + 110, 85)

  GraphicsWindow.PenColor = ClrBorderDark

  MmShape[7] = Shapes.AddImage(Load_ImgHorizontal)

  Shapes.Move(MmShape[7], dDownPosX + 25, 100)

  MmShape[8] = Shapes.AddImage(Load_ImgVertical)

  Shapes.Move(MmShape[8], dDownPosX + 125, 100)

  MmShape[5] = Controls.AddButton("", dDownPosX + 10, 90)

  Controls.SetSize(MmShape[5], 90, 90)

  Shapes.SetOpacity(MmShape[5], 0)

  MmShape[6] = Controls.AddButton("", dDownPosX + 110, 90)

  Controls.SetSize(MmShape[6], 90, 90)

  Shapes.SetOpacity(MmShape[6], 0)

  GraphicsWindow.BrushColor = "Black"

  MmShape[9] = Controls.AddButton("Remove all mirrors", dDownPosX + 10, 190)

  Controls.SetSize(MmShape[9], 190, 23)

  GraphicsWindow.BrushColor = ClrTextDark

  MmShape[10] = Shapes.AddText("Mirror type:")

  Shapes.Move(MmShape[10], dDownPosX + 10, 60)

  MmShape[11] = Shapes.AddRectangle(160, 1)

  Shapes.Move(MmShape[11], dDownPosX + 10, 75)

  MmShape[12] = Shapes.AddImage(Load_ImgCloseSm)

  Shapes.Move(MmShape[12], dDownPosX + 179, 49)

  CurrentMenu = "MirrorMenu"

EndSub



'CloseMirrorMenu

Sub CloseMirrorMenu

  For Times = 1 To Array.GetItemCount(MmShape)

    Shapes.Remove(MmShape[Times])

  EndFor

  CurrentMenu = "MainPaint"

EndSub



'AddHorizontalMirror

Sub AddHorizontalMirror

  CloseMirrorMenu()

  RemoveMirrors()

  CurrentMirror = "Horizontal"

  Shapes.ShowShape(hSeparator)

  MirrorAdded = "True"

EndSub



'AddVerticalMirror

Sub AddVerticalMirror

  CloseMirrorMenu()

  RemoveMirrors()

  CurrentMirror = "Vertical"

  Shapes.ShowShape(vSeparator)

  MirrorAdded = "True"

EndSub



'RemoveMirrors

Sub RemoveMirrors

  CloseMirrorMenu()

  Shapes.HideShape(hSeparator)

  Shapes.HideShape(vSeparator)

  CurrentMirror = "None"

  MirrorAdded = "False"

EndSub




